export type Scalars = {
    ARN: any,
    Boolean: boolean,
    Date: any,
    DateTime: any,
    Decimal: any,
    Float: number,
    FormattedString: any,
    HTML: any,
    ID: string,
    Int: number,
    JSON: any,
    Money: any,
    StorefrontID: any,
    String: string,
    URL: any,
    UnsignedInt64: any,
    UtcOffset: any,
}


/** A checkout that was abandoned by the customer. */
export interface AbandonedCheckout {
    /** The URL for the buyer to recover their checkout. */
    abandonedCheckoutUrl: Scalars['URL']
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The number of products in the checkout. */
    lineItemsQuantity: Scalars['Int']
    /**
     * The sum of all items in the checkout, including discounts, shipping, taxes, and tips.
     * 
     */
    totalPriceSet: MoneyBag
    __typename: 'AbandonedCheckout'
}


/** A browse, cart, or checkout that was abandoned by a customer. */
export interface Abandonment {
    /** The abandonment payload for the abandoned checkout. */
    abandonedCheckoutPayload?: AbandonedCheckout
    /** The abandonment type. */
    abandonmentType: AbandonmentAbandonmentType
    /** The app associated with an abandoned checkout. */
    app: App
    /** Permalink to the cart page. */
    cartUrl?: Scalars['URL']
    /** The date and time when the abandonment was created. */
    createdAt: Scalars['DateTime']
    /** The customer who abandoned this event. */
    customer: Customer
    /** Whether the customer has completed an order since this checkout has been abandoned. */
    customerHasNoOrderSinceAbandonment: Scalars['Boolean']
    /** The number of days since the last abandonment email was sent to the customer. */
    daysSinceLastAbandonmentEmail: Scalars['Int']
    /** When the email was sent, if that is the case. */
    emailSentAt?: Scalars['DateTime']
    /** The email state (e.g., sent or not sent). */
    emailState?: AbandonmentEmailState
    /** The number of hours since the customer has last abandoned a checkout. */
    hoursSinceLastAbandonedCheckout?: Scalars['Float']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Whether the products in abandonment are available. */
    inventoryAvailable: Scalars['Boolean']
    /** Whether the abandonment event comes from the Online Store sales channel. */
    isFromOnlineStore: Scalars['Boolean']
    /** Whether the abandonment event comes from the Shop app sales channel. */
    isFromShopApp: Scalars['Boolean']
    /** Whether the abandonment event comes from Shop Pay. */
    isFromShopPay: Scalars['Boolean']
    /** Whether the customer did not complete another most significant step since this abandonment. */
    isMostSignificantAbandonment: Scalars['Boolean']
    /** The date for the latest browse abandonment. */
    lastBrowseAbandonmentDate: Scalars['DateTime']
    /** The date for the latest cart abandonment. */
    lastCartAbandonmentDate: Scalars['DateTime']
    /** The date for the latest checkout abandonment. */
    lastCheckoutAbandonmentDate: Scalars['DateTime']
    /** The most recent step type. */
    mostRecentStep: AbandonmentAbandonmentType
    /** The products added to the cart during the customer abandoned visit. */
    productsAddedToCart: CustomerVisitProductInfoConnection
    /** The products viewed during the customer abandoned visit. */
    productsViewed: CustomerVisitProductInfoConnection
    /** The date and time when the visit started. */
    visitStartedAt?: Scalars['DateTime']
    __typename: 'Abandonment'
}


/** Specifies the abandonment type. */
export type AbandonmentAbandonmentType = 'BROWSE' | 'CART' | 'CHECKOUT'


/** Specifies the delivery state of a marketing activity. */
export type AbandonmentDeliveryState = 'NOT_SENT' | 'SENT' | 'SCHEDULED'


/** Specifies the email state. */
export type AbandonmentEmailState = 'NOT_SENT' | 'SENT' | 'SCHEDULED'


/** Return type for `abandonmentEmailStateUpdate` mutation. */
export interface AbandonmentEmailStateUpdatePayload {
    /** The updated abandonment. */
    abandonment?: Abandonment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: AbandonmentEmailStateUpdateUserError[]
    __typename: 'AbandonmentEmailStateUpdatePayload'
}


/** An error that occurs during the execution of `AbandonmentEmailStateUpdate`. */
export interface AbandonmentEmailStateUpdateUserError {
    /** The error code. */
    code?: AbandonmentEmailStateUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'AbandonmentEmailStateUpdateUserError'
}


/** Possible error codes that can be returned by `AbandonmentEmailStateUpdateUserError`. */
export type AbandonmentEmailStateUpdateUserErrorCode = 'ABANDONMENT_NOT_FOUND'


/** Return type for `abandonmentUpdateActivitiesDeliveryStatuses` mutation. */
export interface AbandonmentUpdateActivitiesDeliveryStatusesPayload {
    /** The updated abandonment. */
    abandonment?: Abandonment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: AbandonmentUpdateActivitiesDeliveryStatusesUserError[]
    __typename: 'AbandonmentUpdateActivitiesDeliveryStatusesPayload'
}


/** An error that occurs during the execution of `AbandonmentUpdateActivitiesDeliveryStatuses`. */
export interface AbandonmentUpdateActivitiesDeliveryStatusesUserError {
    /** The error code. */
    code?: AbandonmentUpdateActivitiesDeliveryStatusesUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'AbandonmentUpdateActivitiesDeliveryStatusesUserError'
}


/** Possible error codes that can be returned by `AbandonmentUpdateActivitiesDeliveryStatusesUserError`. */
export type AbandonmentUpdateActivitiesDeliveryStatusesUserErrorCode = 'ABANDONMENT_NOT_FOUND' | 'MARKETING_ACTIVITY_NOT_FOUND' | 'DELIVERY_STATUS_INFO_NOT_FOUND'


/**
 * The permission required to access a Shopify Admin API or Storefront API resource for a shop. Merchants grant access scopes that are requested by applications.
 * 
 */
export interface AccessScope {
    /** A description of the actions that the access scope allows an app to perform. */
    description: Scalars['String']
    /**
     * A readable string that represents the access scope. The string usually follows the format `{action}_{resource}`. `{action}` is `read` or `write`, and `{resource}` is the resource that the action can be performed on. `{action}` and `{resource}` are separated by an underscore. For example, `read_orders` or `write_products`.
     * 
     */
    handle: Scalars['String']
    __typename: 'AccessScope'
}


/** Represents an operation publishing all products to a publication. */
export interface AddAllProductsOperation {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: Scalars['Int']
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCount
    /** The status of this operation. */
    status: ResourceOperationStatus
    __typename: 'AddAllProductsOperation'
}


/** The additional fees that have been applied to the order. */
export interface AdditionalFee {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the additional fee. */
    name: Scalars['String']
    /** The price of the additional fee. */
    price: MoneyBag
    /** A list of taxes charged on the additional fee. */
    taxLines: TaxLine[]
    __typename: 'AdditionalFee'
}


/** A sale associated with an additional fee charge. */
export interface AdditionalFeeSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The additional fees for the associated sale. */
    additionalFee: SaleAdditionalFee
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'AdditionalFeeSale'
}


/** A sale associated with an order price adjustment. */
export interface AdjustmentSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'AdjustmentSale'
}


/** Targets all items the cart for a specified discount. */
export interface AllDiscountItems {
    /** Whether all items are eligible for the discount. This value always returns `true`. */
    allItems: Scalars['Boolean']
    __typename: 'AllDiscountItems'
}


/**
 * A version of the API, as defined by [Shopify API versioning](https://shopify.dev/api/usage/versioning).
 * Versions are commonly referred to by their handle (for example, `2021-10`).
 * 
 */
export interface ApiVersion {
    /** The human-readable name of the version. */
    displayName: Scalars['String']
    /** The unique identifier of an ApiVersion. All supported API versions have a date-based (YYYY-MM) or `unstable` handle. */
    handle: Scalars['String']
    /** Whether the version is actively supported by Shopify. Supported API versions are guaranteed to be stable. Unsupported API versions include unstable, release candidate, and end-of-life versions that are marked as unsupported. For more information, refer to [Versioning](https://shopify.dev/api/usage/versioning). */
    supported: Scalars['Boolean']
    __typename: 'ApiVersion'
}


/** A Shopify application. */
export interface App {
    /** A unique application API identifier. */
    apiKey: Scalars['String']
    /** App store page URL of the app. */
    appStoreAppUrl?: Scalars['URL']
    /** App store page URL of the developer who created the app. */
    appStoreDeveloperUrl?: Scalars['URL']
    /** The access scopes available to the app. */
    availableAccessScopes: AccessScope[]
    /** Banner image for the app. */
    banner: Image
    /** Description of the app. */
    description?: Scalars['String']
    /** The name of the app developer. */
    developerName?: Scalars['String']
    /** The type of app developer. */
    developerType: AppDeveloperType
    /**
     * @deprecated Use `appStoreDeveloperUrl` instead.
     * Website of the developer who created the app.
     */
    developerUrl: Scalars['URL']
    /** Whether the app uses the Embedded App SDK. */
    embedded: Scalars['Boolean']
    /** Requirements that must be met before the app can be installed. */
    failedRequirements: FailedRequirement[]
    /** A list of app features that are shown in the Shopify App Store listing. */
    features: Scalars['String'][]
    /** Feedback from this app about the store. */
    feedback?: AppFeedback
    /** Handle of the app. */
    handle?: Scalars['String']
    /** Icon that represents the app. */
    icon: Image
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Webpage where you can install the app. */
    installUrl?: Scalars['URL']
    /**
     * Corresponding AppInstallation for this shop and App.
     * Returns null if the App is not installed.
     * 
     */
    installation?: AppInstallation
    /**
     * Whether the app is the [post purchase](https://shopify.dev/apps/checkout/post-purchase) app in use.
     * 
     */
    isPostPurchaseAppInUse: Scalars['Boolean']
    /**
     * @deprecated Use AppInstallation.launchUrl instead
     * Webpage that the app starts in.
     */
    launchUrl: Scalars['URL']
    /**
     * @deprecated Use AppInstallation.navigationItems instead
     * Menu items for the app, which also appear as submenu items in left navigation sidebar in the Shopify admin.
     * 
     */
    navigationItems: NavigationItem[]
    /** Whether the app was previously installed on the current shop. */
    previouslyInstalled: Scalars['Boolean']
    /** Detailed information about the app pricing. */
    pricingDetails?: Scalars['String']
    /** Summary of the app pricing details. */
    pricingDetailsSummary: Scalars['String']
    /** Link to app privacy policy. */
    privacyPolicyUrl?: Scalars['URL']
    /** The public category for the app. */
    publicCategory: AppPublicCategory
    /** Whether the app is published to the Shopify App Store. */
    published: Scalars['Boolean']
    /** The access scopes requested by the app. */
    requestedAccessScopes: AccessScope[]
    /** Screenshots of the app. */
    screenshots: Image[]
    /** Whether the app was developed by Shopify. */
    shopifyDeveloped: Scalars['Boolean']
    /** Name of the app. */
    title: Scalars['String']
    /**
     * Message that appears when the app is uninstalled. For example:
     * By removing this app, you will no longer be able to publish products to MySocialSite or view this app in your Shopify admin. You can re-enable this channel at any time.
     * 
     */
    uninstallMessage: Scalars['String']
    /**
     * @deprecated Use AppInstallation.uninstallUrl instead
     * Webpage where you can uninstall the app.
     */
    uninstallUrl?: Scalars['URL']
    /** The webhook API version for the app. */
    webhookApiVersion: Scalars['String']
    __typename: 'App'
}


/**
 * A catalog that defines the publication associated with an app.
 * 
 */
export interface AppCatalog {
    /** The apps associated with the catalog. */
    apps: AppConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Most recent catalog operations. */
    operations: ResourceOperation[]
    /** The price list associated with the catalog. */
    priceList?: PriceList
    /** A group of products and collections that's published to a catalog. */
    publication?: Publication
    /** The status of the catalog. */
    status: CatalogStatus
    /** The name of the catalog. */
    title: Scalars['String']
    __typename: 'AppCatalog'
}


/**
 * An auto-generated type for paginating through multiple Apps.
 * 
 */
export interface AppConnection {
    /** A list of edges. */
    edges: AppEdge[]
    /** A list of the nodes contained in AppEdge. */
    nodes: App[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppConnection'
}


/** App credits can be applied by the merchant towards future app purchases, subscriptions, or usage records in Shopify. */
export interface AppCredit {
    /** The amount that can be used towards future app purchases in Shopify. */
    amount: MoneyV2
    /** The date and time when the app credit was created. */
    createdAt: Scalars['DateTime']
    /** The description of the app credit. */
    description: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Whether the app credit is a test transaction. */
    test: Scalars['Boolean']
    __typename: 'AppCredit'
}


/**
 * An auto-generated type for paginating through multiple AppCredits.
 * 
 */
export interface AppCreditConnection {
    /** A list of edges. */
    edges: AppCreditEdge[]
    /** A list of the nodes contained in AppCreditEdge. */
    nodes: AppCredit[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppCreditConnection'
}


/**
 * An auto-generated type which holds one AppCredit and a cursor during pagination.
 * 
 */
export interface AppCreditEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppCreditEdge. */
    node: AppCredit
    __typename: 'AppCreditEdge'
}


/** Possible types of app developer. */
export type AppDeveloperType = 'SHOPIFY' | 'PARTNER' | 'MERCHANT' | 'UNKNOWN'


/** A script that defines a discount type. */
export interface AppDiscountType {
    /** The app providing the app discount type. */
    app: App
    /** The App Bridge details for discount type configuration. */
    appBridge: FunctionsAppBridge
    /** The client ID of the app providing the app discount type. */
    appKey: Scalars['String']
    /** A description of the app discount type. */
    description?: Scalars['String']
    /** The class of the app discount type. */
    discountClass: DiscountClass
    /** The ID of the function providing the app discount type. */
    functionId: Scalars['String']
    /** The target type of the app discount type. Possible values: `SHIPPING_LINE` and `LINE_ITEM`. */
    targetType: DiscountApplicationTargetType
    /** The title of the app discount type. */
    title: Scalars['String']
    __typename: 'AppDiscountType'
}


/**
 * An auto-generated type which holds one App and a cursor during pagination.
 * 
 */
export interface AppEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppEdge. */
    node: App
    __typename: 'AppEdge'
}


/**
 * Reports the status of shops and their resources and displays this information
 * within Shopify admin. AppFeedback is used to notify merchants about steps they need to take
 * to set up an app on their store.
 * 
 */
export interface AppFeedback {
    /** The application associated to the feedback. */
    app: App
    /** A link to where merchants can resolve errors. */
    link?: Link
    /** The feedback message presented to the merchant. */
    messages: UserError[]
    __typename: 'AppFeedback'
}


/** Represents an installed application on a shop. */
export interface AppInstallation {
    /** The access scopes granted to the application by a merchant during installation. */
    accessScopes: AccessScope[]
    /** The active application subscriptions billed to the shop on a recurring basis. */
    activeSubscriptions: AppSubscription[]
    /** All subscriptions created for a shop. */
    allSubscriptions: AppSubscriptionConnection
    /** Application which is installed. */
    app: App
    /**
     * @deprecated Use `publication` instead.
     * Channel associated with the installed application.
     */
    channel?: Channel
    /** Credits that can be used towards future app purchases. */
    credits: AppCreditConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The URL to launch the application. */
    launchUrl: Scalars['URL']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** One-time purchases to a shop. */
    oneTimePurchases: AppPurchaseOneTimeConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The publication associated with the installed application. */
    publication?: Publication
    /** The records that track the externally-captured revenue for the app. The records are used for revenue attribution purposes. */
    revenueAttributionRecords: AppRevenueAttributionRecordConnection
    /**
     * @deprecated Use `activeSubscriptions` instead.
     * Subscriptions charge to a shop on a recurring basis.
     */
    subscriptions: AppSubscription[]
    /** The URL to uninstall the application. */
    uninstallUrl?: Scalars['URL']
    __typename: 'AppInstallation'
}


/**
 * The possible categories of an app installation, based on their purpose
 * or the environment they can run in.
 * 
 */
export type AppInstallationCategory = 'CHANNEL' | 'POS_EMBEDDED'


/**
 * An auto-generated type for paginating through multiple AppInstallations.
 * 
 */
export interface AppInstallationConnection {
    /** A list of edges. */
    edges: AppInstallationEdge[]
    /** A list of the nodes contained in AppInstallationEdge. */
    nodes: AppInstallation[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppInstallationConnection'
}


/**
 * An auto-generated type which holds one AppInstallation and a cursor during pagination.
 * 
 */
export interface AppInstallationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppInstallationEdge. */
    node: AppInstallation
    __typename: 'AppInstallationEdge'
}


/** The levels of privacy of an app installation. */
export type AppInstallationPrivacy = 'PUBLIC' | 'PRIVATE'


/** The set of valid sort keys for the AppInstallation query. */
export type AppInstallationSortKeys = 'INSTALLED_AT' | 'APP_TITLE' | 'ID' | 'RELEVANCE'


/** The app plan that the merchant is subscribed to. */
export interface AppPlanV2 {
    /** The plan billed to a shop on a recurring basis. */
    pricingDetails: AppPricingDetails
    __typename: 'AppPlanV2'
}


/**
 * The information about the price that's charged to a shop every plan period.
 * The concrete type can be `AppRecurringPricing` for recurring billing or `AppUsagePricing` for usage-based billing.
 * 
 */
export type AppPricingDetails = (AppRecurringPricing | AppUsagePricing) & { __isUnion?: true }


/** The frequency at which the shop is billed for an app subscription. */
export type AppPricingInterval = 'ANNUAL' | 'EVERY_30_DAYS'


/** The public-facing category for an app. */
export type AppPublicCategory = 'PRIVATE' | 'PUBLIC' | 'CUSTOM' | 'OTHER'


/** Services and features purchased once by the store. */
export type AppPurchase = (AppPurchaseOneTime) & { __isUnion?: true }


/** Services and features purchased once by a store. */
export interface AppPurchaseOneTime {
    /** The date and time when the app purchase occurred. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the app purchase. */
    name: Scalars['String']
    /** The amount to be charged to the store for the app purchase. */
    price: MoneyV2
    /** The status of the app purchase. */
    status: AppPurchaseStatus
    /** Whether the app purchase is a test transaction. */
    test: Scalars['Boolean']
    __typename: 'AppPurchaseOneTime'
}


/**
 * An auto-generated type for paginating through multiple AppPurchaseOneTimes.
 * 
 */
export interface AppPurchaseOneTimeConnection {
    /** A list of edges. */
    edges: AppPurchaseOneTimeEdge[]
    /** A list of the nodes contained in AppPurchaseOneTimeEdge. */
    nodes: AppPurchaseOneTime[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppPurchaseOneTimeConnection'
}


/** Return type for `appPurchaseOneTimeCreate` mutation. */
export interface AppPurchaseOneTimeCreatePayload {
    /** The newly created app one-time purchase. */
    appPurchaseOneTime?: AppPurchaseOneTime
    /**
     * The URL that the merchant can access to approve or decline the newly created app one-time purchase.
     * 
     * If the merchant declines, then the merchant is redirected to the app and receives a notification message stating that the charge was declined.
     * If the merchant approves and they're successfully invoiced, then the state of the charge changes from `pending` to `active`.
     * 
     * You get paid after the charge is activated.
     * 
     */
    confirmationUrl?: Scalars['URL']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'AppPurchaseOneTimeCreatePayload'
}


/**
 * An auto-generated type which holds one AppPurchaseOneTime and a cursor during pagination.
 * 
 */
export interface AppPurchaseOneTimeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppPurchaseOneTimeEdge. */
    node: AppPurchaseOneTime
    __typename: 'AppPurchaseOneTimeEdge'
}


/**
 * The approval status of the app purchase.
 * 
 * The merchant is charged for the purchase immediately after approval, and the status changes to `active`.
 * If the payment fails, then the app purchase remains `pending`.
 * 
 * Purchases start as `pending` and can change to: `active`, `declined`, `expired`. After a purchase changes, it
 * remains in that final state.
 * 
 */
export type AppPurchaseStatus = 'ACCEPTED' | 'ACTIVE' | 'DECLINED' | 'EXPIRED' | 'PENDING'


/**
 * The pricing information about a subscription app.
 * The object contains an interval (the frequency at which the shop is billed for an app subscription) and
 * a price (the amount to be charged to the subscribing shop at each interval).
 * 
 */
export interface AppRecurringPricing {
    /** The discount applied to the subscription for a given number of billing intervals. */
    discount?: AppSubscriptionDiscount
    /** The frequency at which the subscribing shop is billed for an app subscription. */
    interval: AppPricingInterval
    /** The amount and currency to be charged to the subscribing shop every billing interval. */
    price: MoneyV2
    __typename: 'AppRecurringPricing'
}


/** Represents app revenue that was captured externally by the partner. */
export interface AppRevenueAttributionRecord {
    /** The financial amount captured in this attribution. */
    amount: MoneyV2
    /** The timestamp when the financial amount was captured. */
    capturedAt: Scalars['DateTime']
    /** The timestamp at which this revenue attribution was issued. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * The unique value submitted during the creation of the app revenue attribution record.
     * For more information, refer to
     * [Idempotent requests](https://shopify.dev/api/usage/idempotent-requests).
     * 
     */
    idempotencyKey: Scalars['String']
    /** Indicates whether this is a test submission. */
    test: Scalars['Boolean']
    /** The type of revenue attribution. */
    type: AppRevenueAttributionType
    __typename: 'AppRevenueAttributionRecord'
}


/**
 * An auto-generated type for paginating through multiple AppRevenueAttributionRecords.
 * 
 */
export interface AppRevenueAttributionRecordConnection {
    /** A list of edges. */
    edges: AppRevenueAttributionRecordEdge[]
    /** A list of the nodes contained in AppRevenueAttributionRecordEdge. */
    nodes: AppRevenueAttributionRecord[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppRevenueAttributionRecordConnection'
}


/** Return type for `appRevenueAttributionRecordCreate` mutation. */
export interface AppRevenueAttributionRecordCreatePayload {
    /** The created app revenue attribution record. */
    appRevenueAttributionRecord?: AppRevenueAttributionRecord
    /** The list of errors that occurred from executing the mutation. */
    userErrors: AppRevenueAttributionRecordCreateUserError[]
    __typename: 'AppRevenueAttributionRecordCreatePayload'
}


/** An error that occurs during the execution of `AppRevenueAttributionRecordCreate`. */
export interface AppRevenueAttributionRecordCreateUserError {
    /** The error code. */
    code?: AppRevenueAttributionRecordCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'AppRevenueAttributionRecordCreateUserError'
}


/** Possible error codes that can be returned by `AppRevenueAttributionRecordCreateUserError`. */
export type AppRevenueAttributionRecordCreateUserErrorCode = 'INVALID' | 'TAKEN'


/** Return type for `appRevenueAttributionRecordDelete` mutation. */
export interface AppRevenueAttributionRecordDeletePayload {
    /** The ID of the revenue attribution that was deleted, if one was. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: AppRevenueAttributionRecordDeleteUserError[]
    __typename: 'AppRevenueAttributionRecordDeletePayload'
}


/** An error that occurs during the execution of `AppRevenueAttributionRecordDelete`. */
export interface AppRevenueAttributionRecordDeleteUserError {
    /** The error code. */
    code?: AppRevenueAttributionRecordDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'AppRevenueAttributionRecordDeleteUserError'
}


/** Possible error codes that can be returned by `AppRevenueAttributionRecordDeleteUserError`. */
export type AppRevenueAttributionRecordDeleteUserErrorCode = 'INVALID'


/**
 * An auto-generated type which holds one AppRevenueAttributionRecord and a cursor during pagination.
 * 
 */
export interface AppRevenueAttributionRecordEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppRevenueAttributionRecordEdge. */
    node: AppRevenueAttributionRecord
    __typename: 'AppRevenueAttributionRecordEdge'
}


/** The set of valid sort keys for the AppRevenueAttributionRecord query. */
export type AppRevenueAttributionRecordSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** Represents the billing types of revenue attribution. */
export type AppRevenueAttributionType = 'APPLICATION_PURCHASE' | 'APPLICATION_SUBSCRIPTION' | 'APPLICATION_USAGE' | 'OTHER'


/** Provides users access to services and/or features for a duration of time. */
export interface AppSubscription {
    /** The date and time when the app subscription was created. */
    createdAt: Scalars['DateTime']
    /** The date and time when the current app subscription period ends. Returns `null` if the subscription isn't active. */
    currentPeriodEnd?: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The plans attached to the app subscription. */
    lineItems: AppSubscriptionLineItem[]
    /** The name of the app subscription. */
    name: Scalars['String']
    /** The URL that the merchant is redirected to after approving the app subscription. */
    returnUrl: Scalars['URL']
    /** The status of the app subscription. */
    status: AppSubscriptionStatus
    /** Specifies whether the app subscription is a test transaction. */
    test: Scalars['Boolean']
    /** The number of free trial days, starting at the subscription's creation date, by which billing is delayed. */
    trialDays: Scalars['Int']
    __typename: 'AppSubscription'
}


/** Return type for `appSubscriptionCancel` mutation. */
export interface AppSubscriptionCancelPayload {
    /** The cancelled app subscription. */
    appSubscription?: AppSubscription
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'AppSubscriptionCancelPayload'
}


/**
 * An auto-generated type for paginating through multiple AppSubscriptions.
 * 
 */
export interface AppSubscriptionConnection {
    /** A list of edges. */
    edges: AppSubscriptionEdge[]
    /** A list of the nodes contained in AppSubscriptionEdge. */
    nodes: AppSubscription[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppSubscriptionConnection'
}


/** Return type for `appSubscriptionCreate` mutation. */
export interface AppSubscriptionCreatePayload {
    /** The newly-created app subscription. */
    appSubscription?: AppSubscription
    /** The URL pointing to the page where the merchant approves or declines the charges for an app subscription. */
    confirmationUrl?: Scalars['URL']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'AppSubscriptionCreatePayload'
}


/** Discount applied to the recurring pricing portion of a subscription. */
export interface AppSubscriptionDiscount {
    /**
     * The total number of billing intervals to which the discount will be applied.
     * The discount will be applied to an indefinite number of billing intervals if this value is blank.
     * 
     */
    durationLimitInIntervals?: Scalars['Int']
    /** The price of the subscription after the discount is applied. */
    priceAfterDiscount: MoneyV2
    /** The remaining number of billing intervals to which the discount will be applied. */
    remainingDurationInIntervals?: Scalars['Int']
    /** The value of the discount applied every billing interval. */
    value: AppSubscriptionDiscountValue
    __typename: 'AppSubscriptionDiscount'
}


/** The fixed amount value of a discount. */
export interface AppSubscriptionDiscountAmount {
    /** The fixed amount value of a discount. */
    amount: MoneyV2
    __typename: 'AppSubscriptionDiscountAmount'
}


/** The percentage value of a discount. */
export interface AppSubscriptionDiscountPercentage {
    /** The percentage value of a discount. */
    percentage: Scalars['Float']
    __typename: 'AppSubscriptionDiscountPercentage'
}


/** The value of the discount. */
export type AppSubscriptionDiscountValue = (AppSubscriptionDiscountAmount | AppSubscriptionDiscountPercentage) & { __isUnion?: true }


/**
 * An auto-generated type which holds one AppSubscription and a cursor during pagination.
 * 
 */
export interface AppSubscriptionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppSubscriptionEdge. */
    node: AppSubscription
    __typename: 'AppSubscriptionEdge'
}


/** The plan attached to an app subscription. */
export interface AppSubscriptionLineItem {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The pricing model for the app subscription. */
    plan: AppPlanV2
    /** A list of the store's usage records for a usage pricing plan. */
    usageRecords: AppUsageRecordConnection
    __typename: 'AppSubscriptionLineItem'
}


/** Return type for `appSubscriptionLineItemUpdate` mutation. */
export interface AppSubscriptionLineItemUpdatePayload {
    /** The updated app subscription. */
    appSubscription?: AppSubscription
    /** The URL where the merchant approves or declines the updated app subscription line item. */
    confirmationUrl?: Scalars['URL']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'AppSubscriptionLineItemUpdatePayload'
}


/** The replacement behavior when creating an app subscription for a merchant with an already existing app subscription. */
export type AppSubscriptionReplacementBehavior = 'APPLY_IMMEDIATELY' | 'APPLY_ON_NEXT_BILLING_CYCLE' | 'STANDARD'


/** The set of valid sort keys for the AppSubscription query. */
export type AppSubscriptionSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** The status of the app subscription. */
export type AppSubscriptionStatus = 'PENDING' | 'ACCEPTED' | 'ACTIVE' | 'DECLINED' | 'EXPIRED' | 'FROZEN' | 'CANCELLED'


/** Return type for `appSubscriptionTrialExtend` mutation. */
export interface AppSubscriptionTrialExtendPayload {
    /** The app subscription that had its trial extended. */
    appSubscription?: AppSubscription
    /** The list of errors that occurred from executing the mutation. */
    userErrors: AppSubscriptionTrialExtendUserError[]
    __typename: 'AppSubscriptionTrialExtendPayload'
}


/** An error that occurs during the execution of `AppSubscriptionTrialExtend`. */
export interface AppSubscriptionTrialExtendUserError {
    /** The error code. */
    code?: AppSubscriptionTrialExtendUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'AppSubscriptionTrialExtendUserError'
}


/** Possible error codes that can be returned by `AppSubscriptionTrialExtendUserError`. */
export type AppSubscriptionTrialExtendUserErrorCode = 'SUBSCRIPTION_NOT_FOUND' | 'TRIAL_NOT_ACTIVE' | 'SUBSCRIPTION_NOT_ACTIVE'


/** The set of valid sort keys for the AppTransaction query. */
export type AppTransactionSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/**
 * Defines a usage pricing model for the app subscription.
 * These charges are variable based on how much the merchant uses the app.
 * 
 */
export interface AppUsagePricing {
    /** The total usage records for interval. */
    balanceUsed: MoneyV2
    /**
     * The capped amount prevents the merchant from being charged for any usage over that amount during a billing period.
     * This prevents billing from exceeding a maximum threshold over the duration of the billing period.
     * For the merchant to continue using the app after exceeding a capped amount, they would need to agree to a new usage charge.
     * 
     */
    cappedAmount: MoneyV2
    /** The frequency with which the app usage records are billed. */
    interval: AppPricingInterval
    /**
     * The terms and conditions for app usage pricing.
     * Must be present in order to create usage charges.
     * The terms are presented to the merchant when they approve an app's usage charges.
     * 
     */
    terms: Scalars['String']
    __typename: 'AppUsagePricing'
}


/** Store usage for app subscriptions with usage pricing. */
export interface AppUsageRecord {
    /** The date and time when the usage record was created. */
    createdAt: Scalars['DateTime']
    /** The description of the app usage record. */
    description: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * A unique key generated by the client to avoid duplicate charges.
     * 
     */
    idempotencyKey?: Scalars['String']
    /** The price of the usage record. */
    price: MoneyV2
    /** Defines the usage pricing plan the merchant is subscribed to. */
    subscriptionLineItem: AppSubscriptionLineItem
    __typename: 'AppUsageRecord'
}


/**
 * An auto-generated type for paginating through multiple AppUsageRecords.
 * 
 */
export interface AppUsageRecordConnection {
    /** A list of edges. */
    edges: AppUsageRecordEdge[]
    /** A list of the nodes contained in AppUsageRecordEdge. */
    nodes: AppUsageRecord[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'AppUsageRecordConnection'
}


/** Return type for `appUsageRecordCreate` mutation. */
export interface AppUsageRecordCreatePayload {
    /** The newly created app usage record. */
    appUsageRecord?: AppUsageRecord
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'AppUsageRecordCreatePayload'
}


/**
 * An auto-generated type which holds one AppUsageRecord and a cursor during pagination.
 * 
 */
export interface AppUsageRecordEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of AppUsageRecordEdge. */
    node: AppUsageRecord
    __typename: 'AppUsageRecordEdge'
}


/** The set of valid sort keys for the AppUsageRecord query. */
export type AppUsageRecordSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** Represents a generic custom attribute. */
export interface Attribute {
    /** Key or name of the attribute. */
    key: Scalars['String']
    /** Value of the attribute. */
    value?: Scalars['String']
    __typename: 'Attribute'
}


/**
 * Automatic discount applications capture the intentions of a discount that was automatically applied.
 * 
 */
export interface AutomaticDiscountApplication {
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index: Scalars['Int']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The title of the discount application. */
    title: Scalars['String']
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'AutomaticDiscountApplication'
}


/** The set of valid sort keys for the AutomaticDiscount query. */
export type AutomaticDiscountSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/**
 * Represents an object containing all information for channels available to a shop.
 * 
 */
export interface AvailableChannelDefinitionsByChannel {
    /** The channel definitions for channels installed on a shop. */
    channelDefinitions: ChannelDefinition[]
    /** The name of the channel. */
    channelName: Scalars['String']
    __typename: 'AvailableChannelDefinitionsByChannel'
}


/** The possible types for a badge. */
export type BadgeType = 'DEFAULT' | 'SUCCESS' | 'ATTENTION' | 'WARNING' | 'INFO'


/**
 * Basic events chronicle resource activities such as the creation of an article, the fulfillment of an order, or
 * the addition of a product.
 * 
 */
export interface BasicEvent {
    /** The name of the app that created the event. */
    appTitle?: Scalars['String']
    /** Whether the event was created by an app. */
    attributeToApp: Scalars['Boolean']
    /** Whether the event was caused by an admin user. */
    attributeToUser: Scalars['Boolean']
    /** The date and time when the event was created. */
    createdAt: Scalars['DateTime']
    /** Whether the event is critical. */
    criticalAlert: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Human readable text that describes the event. */
    message: Scalars['FormattedString']
    __typename: 'BasicEvent'
}


/** Represents an error that happens during the execution of a billing attempt mutation. */
export interface BillingAttemptUserError {
    /** The error code. */
    code?: BillingAttemptUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'BillingAttemptUserError'
}


/** Possible error codes that can be returned by `BillingAttemptUserError`. */
export type BillingAttemptUserErrorCode = 'INVALID' | 'BLANK' | 'CONTRACT_NOT_FOUND' | 'ORIGIN_TIME_BEFORE_CONTRACT_CREATION' | 'UPCOMING_CYCLE_LIMIT_EXCEEDED' | 'CYCLE_INDEX_OUT_OF_RANGE' | 'CYCLE_START_DATE_OUT_OF_RANGE' | 'ORIGIN_TIME_OUT_OF_RANGE'


/** Possible error codes that can be returned by `BulkMutationUserError`. */
export type BulkMutationErrorCode = 'OPERATION_IN_PROGRESS' | 'INVALID_MUTATION' | 'INVALID_STAGED_UPLOAD_FILE' | 'NO_SUCH_FILE' | 'INTERNAL_FILE_SERVER_ERROR'


/** Represents an error that happens during execution of a bulk mutation. */
export interface BulkMutationUserError {
    /** The error code. */
    code?: BulkMutationErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'BulkMutationUserError'
}


/**
 * An asynchronous long-running operation to fetch data in bulk or to bulk import data.
 * 
 * Bulk operations are created using the `bulkOperationRunQuery` or `bulkOperationRunMutation` mutation. After
 * they are created, clients should poll the `status` field for updates. When `COMPLETED`, the `url` field contains
 * a link to the data in [JSONL](http://jsonlines.org/) format.
 * 
 * Refer to the [bulk operations guide](https://shopify.dev/api/usage/bulk-operations/imports) for more details.
 * 
 */
export interface BulkOperation {
    /** When the bulk operation was successfully completed. */
    completedAt?: Scalars['DateTime']
    /** When the bulk operation was created. */
    createdAt: Scalars['DateTime']
    /** Error code for failed operations. */
    errorCode?: BulkOperationErrorCode
    /** File size in bytes of the file in the `url` field. */
    fileSize?: Scalars['UnsignedInt64']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * A running count of all the objects processed.
     * For example, when fetching all the products and their variants, this field counts both products and variants.
     * This field can be used to track operation progress.
     * 
     */
    objectCount: Scalars['UnsignedInt64']
    /**
     * The URL that points to the partial or incomplete response data (in [JSONL](http://jsonlines.org/) format) that was returned by a failed operation.
     * The URL expires 7 days after the operation fails. Returns `null` when there's no data available.
     * 
     */
    partialDataUrl?: Scalars['URL']
    /** GraphQL query document specified in `bulkOperationRunQuery`. */
    query: Scalars['String']
    /**
     * A running count of all the objects that are processed at the root of the query.
     * For example, when fetching all the products and their variants, this field only counts products.
     * This field can be used to track operation progress.
     * 
     */
    rootObjectCount: Scalars['UnsignedInt64']
    /** Status of the bulk operation. */
    status: BulkOperationStatus
    /** The bulk operation's type. */
    type: BulkOperationType
    /**
     * The URL that points to the response data in [JSONL](http://jsonlines.org/) format.
     * The URL expires 7 days after the operation completes.
     * 
     */
    url?: Scalars['URL']
    __typename: 'BulkOperation'
}


/** Return type for `bulkOperationCancel` mutation. */
export interface BulkOperationCancelPayload {
    /** The bulk operation to be canceled. */
    bulkOperation?: BulkOperation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'BulkOperationCancelPayload'
}


/** Error codes for failed bulk operations. */
export type BulkOperationErrorCode = 'ACCESS_DENIED' | 'INTERNAL_SERVER_ERROR' | 'TIMEOUT'


/** Return type for `bulkOperationRunMutation` mutation. */
export interface BulkOperationRunMutationPayload {
    /** The newly created bulk operation. */
    bulkOperation?: BulkOperation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BulkMutationUserError[]
    __typename: 'BulkOperationRunMutationPayload'
}


/** Return type for `bulkOperationRunQuery` mutation. */
export interface BulkOperationRunQueryPayload {
    /** The newly created bulk operation. */
    bulkOperation?: BulkOperation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'BulkOperationRunQueryPayload'
}


/** The valid values for the status of a bulk operation. */
export type BulkOperationStatus = 'CANCELED' | 'CANCELING' | 'COMPLETED' | 'CREATED' | 'EXPIRED' | 'FAILED' | 'RUNNING'


/** The valid values for the bulk operation's type. */
export type BulkOperationType = 'QUERY' | 'MUTATION'


/** Return type for `bulkProductResourceFeedbackCreate` mutation. */
export interface BulkProductResourceFeedbackCreatePayload {
    /** The feedback that is created. */
    feedback?: ProductResourceFeedback[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BulkProductResourceFeedbackCreateUserError[]
    __typename: 'BulkProductResourceFeedbackCreatePayload'
}


/** An error that occurs during the execution of `BulkProductResourceFeedbackCreate`. */
export interface BulkProductResourceFeedbackCreateUserError {
    /** The error code. */
    code?: BulkProductResourceFeedbackCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'BulkProductResourceFeedbackCreateUserError'
}


/** Possible error codes that can be returned by `BulkProductResourceFeedbackCreateUserError`. */
export type BulkProductResourceFeedbackCreateUserErrorCode = 'MAXIMUM_FEEDBACK_LIMIT_EXCEEDED' | 'OUTDATED_FEEDBACK' | 'PRODUCT_NOT_FOUND' | 'INVALID' | 'BLANK' | 'PRESENT' | 'LESS_THAN_OR_EQUAL_TO'


/**
 * Represents the Bundles feature configuration for the shop.
 * 
 */
export interface BundlesFeature {
    /** Whether a shop is configured properly to sell bundles. */
    eligibleForBundles: Scalars['Boolean']
    /** The reason why a shop is not eligible for bundles. */
    ineligibilityReason?: Scalars['String']
    /** Whether a shop has any fixed bundle products or has a cartTransform function installed. */
    sellsBundles: Scalars['Boolean']
    __typename: 'BundlesFeature'
}


/** Possible error codes that can be returned by `BusinessCustomerUserError`. */
export type BusinessCustomerErrorCode = 'INTERNAL_ERROR' | 'RESOURCE_NOT_FOUND' | 'FAILED_TO_DELETE' | 'REQUIRED' | 'NO_INPUT' | 'INVALID_INPUT' | 'UNEXPECTED_TYPE' | 'TOO_LONG' | 'LIMIT_REACHED' | 'INVALID' | 'BLANK' | 'TAKEN'


/** An error that happens during the execution of a business customer mutation. */
export interface BusinessCustomerUserError {
    /** The error code. */
    code?: BusinessCustomerErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'BusinessCustomerUserError'
}


/** Settings describing the behavior of checkout for a B2B buyer. */
export interface BuyerExperienceConfiguration {
    /** Whether to checkout to draft order for merchant review. */
    checkoutToDraft: Scalars['Boolean']
    /** Whether to allow customers to use editable shipping addresses. */
    editableShippingAddress: Scalars['Boolean']
    /**
     * Whether a buyer must pay at checkout or they can also choose to pay
     * later using net terms.
     * 
     */
    payNowOnly: Scalars['Boolean']
    /** Represents the merchant configured payment terms. */
    paymentTermsTemplate?: PaymentTermsTemplate
    __typename: 'BuyerExperienceConfiguration'
}


/**
 * A discount that is automatically applied to an order that is being edited.
 * 
 */
export interface CalculatedAutomaticDiscountApplication {
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /** The level at which the discount was applied. */
    appliedTo: DiscountApplicationLevel
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'CalculatedAutomaticDiscountApplication'
}


/**
 * An amount discounting the line that has been allocated by an associated discount application.
 * 
 */
export interface CalculatedDiscountAllocation {
    /** The money amount that's allocated by the discount application in shop and presentment currencies. */
    allocatedAmountSet: MoneyBag
    /** The discount that the allocated amount originated from. */
    discountApplication: CalculatedDiscountApplication
    __typename: 'CalculatedDiscountAllocation'
}


/**
 * A [discount application](https://shopify.dev/api/admin-graphql/latest/interfaces/discountapplication) involved in order editing that might be newly added or have new changes applied.
 * 
 */
export type CalculatedDiscountApplication = (CalculatedAutomaticDiscountApplication | CalculatedDiscountCodeApplication | CalculatedManualDiscountApplication | CalculatedScriptDiscountApplication) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple CalculatedDiscountApplications.
 * 
 */
export interface CalculatedDiscountApplicationConnection {
    /** A list of edges. */
    edges: CalculatedDiscountApplicationEdge[]
    /** A list of the nodes contained in CalculatedDiscountApplicationEdge. */
    nodes: CalculatedDiscountApplication[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CalculatedDiscountApplicationConnection'
}


/**
 * An auto-generated type which holds one CalculatedDiscountApplication and a cursor during pagination.
 * 
 */
export interface CalculatedDiscountApplicationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CalculatedDiscountApplicationEdge. */
    node: CalculatedDiscountApplication
    __typename: 'CalculatedDiscountApplicationEdge'
}


/**
 * A discount code that is applied to an order that is being edited.
 * 
 */
export interface CalculatedDiscountCodeApplication {
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /** The level at which the discount was applied. */
    appliedTo: DiscountApplicationLevel
    /** The string identifying the discount code that was used at the time of application. */
    code: Scalars['String']
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'CalculatedDiscountCodeApplication'
}


/** The computed properties for a draft order. */
export interface CalculatedDraftOrder {
    /** Order-level discount applied to the draft order. */
    appliedDiscount?: DraftOrderAppliedDiscount
    /** The available shipping rates for the draft order. Requires a customer with a valid shipping address and at least one line item. */
    availableShippingRates: ShippingRate[]
    /** Whether the billing address matches the shipping address. */
    billingAddressMatchesShippingAddress: Scalars['Boolean']
    /** The currency of the store for this draft order. */
    currencyCode: CurrencyCode
    /** Customer who will be sent an invoice for the draft order, if there is one. */
    customer?: Customer
    /** Line items in the draft order with their computed properties. */
    lineItems: CalculatedDraftOrderLineItem[]
    /** A subtotal of the line items and corresponding discounts. The subtotal doesn't include shipping charges, shipping discounts, taxes, or order discounts. */
    lineItemsSubtotalPrice: MoneyBag
    /** The name of the selected market. */
    marketName: Scalars['String']
    /** The selected market region country code for the draft order. */
    marketRegionCountryCode: CountryCode
    /** Phone number assigned to draft order. */
    phone?: Scalars['String']
    /** The payment currency of the customer for this draft order. */
    presentmentCurrencyCode: CurrencyCode
    /** The purchasing entity for the draft order. */
    purchasingEntity?: PurchasingEntity
    /** Line item that contains the shipping costs. */
    shippingLine?: ShippingLine
    /**
     * Subtotal of the line items and their discounts (does not contain shipping charges or shipping discounts, or taxes).
     * 
     */
    subtotalPrice: Scalars['Money']
    /** Subtotal of the line items and their discounts (does not contain shipping charges or shipping discounts, or taxes). */
    subtotalPriceSet: MoneyBag
    /** Total amount of taxes charged for each line item and shipping line. */
    taxLines: TaxLine[]
    /** Total discounts for this draft order. */
    totalDiscountsSet: MoneyBag
    /** Total price of line items for this draft order. */
    totalLineItemsPriceSet: MoneyBag
    /** Total amount of the draft order (includes taxes, shipping charges, and discounts). */
    totalPrice: Scalars['Money']
    /** Total amount of the draft order(includes taxes, shipping charges, and discounts). */
    totalPriceSet: MoneyBag
    /** Total shipping charge for the draft order. */
    totalShippingPrice: Scalars['Money']
    /** Total shipping charge for the draft order. */
    totalShippingPriceSet: MoneyBag
    /** Total amount of taxes for the draft order. */
    totalTax: Scalars['Money']
    /** Total amount of taxes for the draft order. */
    totalTaxSet: MoneyBag
    __typename: 'CalculatedDraftOrder'
}


/** The computed line items for a draft order. */
export interface CalculatedDraftOrderLineItem {
    /** The discount applied to the line item. */
    appliedDiscount?: DraftOrderAppliedDiscount
    /** Whether the line item is a custom line item (`true`) or a product variant line item (`false`). */
    custom: Scalars['Boolean']
    /** A list of attributes that represent custom features or special requests. */
    customAttributes: Attribute[]
    /** Additional information (metafields) about the line item with the associated types. */
    customAttributesV2: TypedAttribute[]
    /** Total price with discounts applied. */
    discountedTotal: MoneyV2
    /** The total price with discounts applied. */
    discountedTotalSet: MoneyBag
    /** The unit price with discounts applied. */
    discountedUnitPrice: MoneyV2
    /** Unit price with discounts applied. */
    discountedUnitPriceSet: MoneyBag
    /**
     * Name of the service provider who fulfilled the order.
     * 
     * Valid values are either **manual** or the name of the provider.
     * For example, **amazon**, **shipwire**.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentService
    /** The image associated with the draft order line item. */
    image?: Image
    /** Whether the line item represents the purchase of a gift card. */
    isGiftCard: Scalars['Boolean']
    /** The name of the product. */
    name: Scalars['String']
    /**
     * The total price (without discounts) of the line item, based on the original unit price of the variant x quantity.
     * 
     */
    originalTotal: MoneyV2
    /** The total price (without discounts) of the line item, based on the original unit price of the variant x quantity. */
    originalTotalSet: MoneyBag
    /** The variant price without any discounts applied. */
    originalUnitPrice: MoneyV2
    /** The variant price without any discounts applied. */
    originalUnitPriceSet: MoneyBag
    /** The product associated with the draft order line item. */
    product?: Product
    /** The number of variant items requested in the draft order. */
    quantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /** The SKU number of the product variant. */
    sku?: Scalars['String']
    /** Whether the variant is taxable. */
    taxable: Scalars['Boolean']
    /** The title of the product or variant. This field only applies to custom line items. */
    title: Scalars['String']
    /** The total value of the discount. */
    totalDiscount: MoneyV2
    /** The total value of the discount. */
    totalDiscountSet: MoneyBag
    /** The variant associated with the draft order line item. */
    variant?: ProductVariant
    /** The name of the variant. */
    variantTitle?: Scalars['String']
    /** The name of the vendor who created the product variant. */
    vendor?: Scalars['String']
    /** The weight unit and value for a draft order line item. */
    weight?: Weight
    __typename: 'CalculatedDraftOrderLineItem'
}


/**
 * A line item involved in order editing that may be newly added or have new changes applied.
 * 
 */
export interface CalculatedLineItem {
    /** The discounts that have been allocated onto the line item by discount applications. */
    calculatedDiscountAllocations: CalculatedDiscountAllocation[]
    /** A list of attributes that represent custom features or special requests. */
    customAttributes: Attribute[]
    /**
     * @deprecated Use `calculatedDiscountAllocations` instead.
     * The discounts that have been allocated onto the line item by discount applications.
     */
    discountAllocations: DiscountAllocation[]
    /** The price of a single quantity of the line item with line item discounts applied, in shop and presentment currencies. Discounts applied to the entire order aren't included in this price. */
    discountedUnitPriceSet: MoneyBag
    /** The total number of items that can be edited. */
    editableQuantity: Scalars['Int']
    /** The editable quantity prior to any changes made in the current edit. */
    editableQuantityBeforeChanges: Scalars['Int']
    /** The total price of editable lines in shop and presentment currencies. */
    editableSubtotalSet: MoneyBag
    /** Whether the calculated line item has a staged discount. */
    hasStagedLineItemDiscount: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image object associated to the line item's variant. */
    image?: Image
    /** The variant unit price in shop and presentment currencies, without any discounts applied. */
    originalUnitPriceSet: MoneyBag
    /** The total number of items. */
    quantity: Scalars['Int']
    /** Whether the line item can be restocked or not. */
    restockable: Scalars['Boolean']
    /** Whether the changes on the line item will result in a restock. */
    restocking: Scalars['Boolean']
    /** The variant SKU number. */
    sku?: Scalars['String']
    /** A list of changes that affect this line item. */
    stagedChanges: OrderStagedChange[]
    /** The title of the product. */
    title: Scalars['String']
    /** The total price of uneditable lines in shop and presentment currencies. */
    uneditableSubtotalSet: MoneyBag
    /**
     * The product variant associated with this line item. The value is null for custom line items and items where
     * the variant has been deleted.
     * 
     */
    variant?: ProductVariant
    /** The title of the variant. */
    variantTitle?: Scalars['String']
    __typename: 'CalculatedLineItem'
}


/**
 * An auto-generated type for paginating through multiple CalculatedLineItems.
 * 
 */
export interface CalculatedLineItemConnection {
    /** A list of edges. */
    edges: CalculatedLineItemEdge[]
    /** A list of the nodes contained in CalculatedLineItemEdge. */
    nodes: CalculatedLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CalculatedLineItemConnection'
}


/**
 * An auto-generated type which holds one CalculatedLineItem and a cursor during pagination.
 * 
 */
export interface CalculatedLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CalculatedLineItemEdge. */
    node: CalculatedLineItem
    __typename: 'CalculatedLineItemEdge'
}


/**
 * Represents a discount that was manually created for an order that is being edited.
 * 
 */
export interface CalculatedManualDiscountApplication {
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /** The level at which the discount was applied. */
    appliedTo: DiscountApplicationLevel
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'CalculatedManualDiscountApplication'
}


/**
 * An order with edits applied but not saved.
 * 
 */
export interface CalculatedOrder {
    /**
     * Returns only the new discount applications being added to the order in the current edit.
     * 
     */
    addedDiscountApplications: CalculatedDiscountApplicationConnection
    /**
     * Returns only the new line items being added to the order during the current edit.
     * 
     */
    addedLineItems: CalculatedLineItemConnection
    /** Amount of the order-level discount (does not contain any line item discounts) in shop and presentment currencies. */
    cartDiscountAmountSet?: MoneyBag
    /** Whether the changes have been applied and saved to the order. */
    committed: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * Returns all items on the order that existed before starting the edit.
     * Will include any changes that have been made.
     * Will not include line items added during the current edit.
     * 
     */
    lineItems: CalculatedLineItemConnection
    /** The HTML of the customer notification for the order edit. */
    notificationPreviewHtml?: Scalars['HTML']
    /** The customer notification title. */
    notificationPreviewTitle: Scalars['String']
    /**
     * @deprecated Use `originalOrder` instead.
     * The order without any changes applied.
     */
    order: Order
    /**
     * The order without any changes applied.
     * 
     */
    originalOrder: Order
    /**
     * List of changes made to the order during the current edit.
     * 
     */
    stagedChanges: OrderStagedChangeConnection
    /** The sum of the quantities for the line items that contribute to the order's subtotal. */
    subtotalLineItemsQuantity: Scalars['Int']
    /** The subtotal of the line items, in shop and presentment currencies, after all the discounts are applied.  The subtotal does not include shipping.  The subtotal includes taxes for taxes-included orders and excludes taxes for taxes-excluded orders. */
    subtotalPriceSet?: MoneyBag
    /** Taxes charged for the line item. */
    taxLines: TaxLine[]
    /** Total price of the order less the total amount received from the customer in shop and presentment currencies. */
    totalOutstandingSet: MoneyBag
    /** Total amount of the order (includes taxes and discounts) in shop and presentment currencies. */
    totalPriceSet: MoneyBag
    __typename: 'CalculatedOrder'
}


/**
 * A discount created by a Shopify script for an order that is being edited.
 * 
 */
export interface CalculatedScriptDiscountApplication {
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /** The level at which the discount was applied. */
    appliedTo: DiscountApplicationLevel
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'CalculatedScriptDiscountApplication'
}


/** Card payment details related to a transaction. */
export interface CardPaymentDetails {
    /** The response code from the address verification system (AVS). The code is always a single letter. */
    avsResultCode?: Scalars['String']
    /** The issuer identification number (IIN), formerly known as bank identification number (BIN) of the customer's credit card. This is made up of the first few digits of the credit card number. */
    bin?: Scalars['String']
    /** The name of the company that issued the customer's credit card. */
    company?: Scalars['String']
    /** The response code from the credit card company indicating whether the customer entered the card security code, or card verification value, correctly. The code is a single letter or empty string. */
    cvvResultCode?: Scalars['String']
    /** The month in which the used credit card expires. */
    expirationMonth?: Scalars['Int']
    /** The year in which the used credit card expires. */
    expirationYear?: Scalars['Int']
    /** The holder of the credit card. */
    name?: Scalars['String']
    /** The customer's credit card number, with most of the leading digits redacted. */
    number?: Scalars['String']
    /** Digital wallet used for the payment. */
    wallet?: DigitalWallet
    __typename: 'CardPaymentDetails'
}


/**
 * A Cart Transform Function to create [Customized Bundles.](https://shopify.dev/docs/apps/selling-strategies/bundles/add-a-customized-bundle).
 * 
 */
export interface CartTransform {
    /** The ID for the Cart Transform function. */
    functionId: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    __typename: 'CartTransform'
}


/**
 * An auto-generated type for paginating through multiple CartTransforms.
 * 
 */
export interface CartTransformConnection {
    /** A list of edges. */
    edges: CartTransformEdge[]
    /** A list of the nodes contained in CartTransformEdge. */
    nodes: CartTransform[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CartTransformConnection'
}


/** Return type for `cartTransformCreate` mutation. */
export interface CartTransformCreatePayload {
    /** The newly created cart transform function. */
    cartTransform?: CartTransform
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CartTransformCreateUserError[]
    __typename: 'CartTransformCreatePayload'
}


/** An error that occurs during the execution of `CartTransformCreate`. */
export interface CartTransformCreateUserError {
    /** The error code. */
    code?: CartTransformCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CartTransformCreateUserError'
}


/** Possible error codes that can be returned by `CartTransformCreateUserError`. */
export type CartTransformCreateUserErrorCode = 'INPUT_INVALID' | 'FUNCTION_NOT_FOUND' | 'FUNCTION_ALREADY_REGISTERED' | 'FUNCTION_DOES_NOT_IMPLEMENT'


/** Return type for `cartTransformDelete` mutation. */
export interface CartTransformDeletePayload {
    /** The globally-unique ID for the deleted cart transform. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CartTransformDeleteUserError[]
    __typename: 'CartTransformDeletePayload'
}


/** An error that occurs during the execution of `CartTransformDelete`. */
export interface CartTransformDeleteUserError {
    /** The error code. */
    code?: CartTransformDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CartTransformDeleteUserError'
}


/** Possible error codes that can be returned by `CartTransformDeleteUserError`. */
export type CartTransformDeleteUserErrorCode = 'NOT_FOUND' | 'UNAUTHORIZED_APP_SCOPE'


/**
 * An auto-generated type which holds one CartTransform and a cursor during pagination.
 * 
 */
export interface CartTransformEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CartTransformEdge. */
    node: CartTransform
    __typename: 'CartTransformEdge'
}


/**
 * A list of products with publishing and pricing information.
 * A catalog can be associated with a specific context, such as a [`Market`](https://shopify.dev/api/admin-graphql/current/objects/market), [`CompanyLocation`](https://shopify.dev/api/admin-graphql/current/objects/companylocation), or [`App`](https://shopify.dev/api/admin-graphql/current/objects/app).
 * 
 */
export type Catalog = (AppCatalog | CompanyLocationCatalog | MarketCatalog) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple Catalogs.
 * 
 */
export interface CatalogConnection {
    /** A list of edges. */
    edges: CatalogEdge[]
    /** A list of the nodes contained in CatalogEdge. */
    nodes: Catalog[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The total count of Catalogs. */
    totalCount: Scalars['UnsignedInt64']
    __typename: 'CatalogConnection'
}


/** Return type for `catalogContextUpdate` mutation. */
export interface CatalogContextUpdatePayload {
    /** The updated catalog. */
    catalog?: Catalog
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CatalogUserError[]
    __typename: 'CatalogContextUpdatePayload'
}


/** Return type for `catalogCreate` mutation. */
export interface CatalogCreatePayload {
    /** The newly created catalog. */
    catalog?: Catalog
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CatalogUserError[]
    __typename: 'CatalogCreatePayload'
}


/** A catalog csv operation represents a CSV file import. */
export interface CatalogCsvOperation {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: Scalars['Int']
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCount
    /** The status of this operation. */
    status: ResourceOperationStatus
    __typename: 'CatalogCsvOperation'
}


/** Return type for `catalogDelete` mutation. */
export interface CatalogDeletePayload {
    /** The ID of the deleted catalog. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CatalogUserError[]
    __typename: 'CatalogDeletePayload'
}


/**
 * An auto-generated type which holds one Catalog and a cursor during pagination.
 * 
 */
export interface CatalogEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CatalogEdge. */
    node: Catalog
    __typename: 'CatalogEdge'
}


/** The set of valid sort keys for the Catalog query. */
export type CatalogSortKeys = 'TITLE' | 'ID' | 'RELEVANCE'


/**
 * The state of a catalog.
 * 
 */
export type CatalogStatus = 'ACTIVE' | 'ARCHIVED' | 'DRAFT'


/**
 * The associated catalog's type.
 * 
 */
export type CatalogType = 'NONE' | 'APP' | 'COMPANY_LOCATION' | 'MARKET'


/** Return type for `catalogUpdate` mutation. */
export interface CatalogUpdatePayload {
    /** The updated catalog. */
    catalog?: Catalog
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CatalogUserError[]
    __typename: 'CatalogUpdatePayload'
}


/**
 * Defines errors encountered while managing a catalog.
 * 
 */
export interface CatalogUserError {
    /** The error code. */
    code?: CatalogUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CatalogUserError'
}


/** Possible error codes that can be returned by `CatalogUserError`. */
export type CatalogUserErrorCode = 'APP_CATALOG_PRICE_LIST_ASSIGNMENT' | 'CATALOG_FAILED_TO_SAVE' | 'CATALOG_NOT_FOUND' | 'PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' | 'CANNOT_ADD_MORE_THAN_ONE_MARKET' | 'COMPANY_LOCATION_CATALOG_STATUS_PLAN' | 'CONTEXT_ALREADY_ASSIGNED_TO_CATALOG' | 'CONTEXT_CATALOG_LIMIT_REACHED' | 'COMPANY_LOCATION_NOT_FOUND' | 'CONTEXT_DRIVER_MISMATCH' | 'COUNTRY_PRICE_LIST_ASSIGNMENT' | 'INVALID_CATALOG_CONTEXT_TYPE' | 'MARKET_CATALOG_STATUS' | 'MARKET_NOT_FOUND' | 'MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH' | 'MARKET_TAKEN' | 'MUST_PROVIDE_EXACTLY_ONE_CONTEXT_TYPE' | 'PRICE_LIST_FAILED_TO_SAVE' | 'PRICE_LIST_NOT_FOUND' | 'PRICE_LIST_LOCKED' | 'PUBLICATION_NOT_FOUND' | 'REQUIRES_CONTEXTS_TO_ADD_OR_REMOVE' | 'UNSUPPORTED_CATALOG_ACTION' | 'CANNOT_CREATE_APP_CATALOG' | 'CANNOT_MODIFY_APP_CATALOG' | 'CANNOT_DELETE_APP_CATALOG' | 'CANNOT_CREATE_MARKET_CATALOG' | 'CANNOT_MODIFY_MARKET_CATALOG' | 'CANNOT_DELETE_MARKET_CATALOG' | 'INVALID' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'BLANK'


/**
 * A channel represents an app where you sell a group of products and collections.
 * A channel can be a platform or marketplace such as Facebook or Pinterest, an online store, or POS.
 * 
 */
export interface Channel {
    /** The underlying app used by the channel. */
    app: App
    /** The collection publications for the list of collections published to the channel. */
    collectionPublicationsV3: ResourcePublicationConnection
    /** The list of collections published to the channel. */
    collections: CollectionConnection
    /**
     * @deprecated Use `id` instead.
     * The unique identifier for the channel.
     */
    handle: Scalars['String']
    /** Whether the collection is available to the channel. */
    hasCollection: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the channel. */
    name: Scalars['String']
    /**
     * @deprecated Use [AppInstallation.navigationItems](           https://shopify.dev/api/admin-graphql/current/objects/AppInstallation#field-appinstallation-navigationitems) instead.
     * The menu items for the channel, which also appear as submenu items in the left navigation sidebar in the Shopify admin.
     * 
     */
    navigationItems: NavigationItem[]
    /**
     * @deprecated Use [AppInstallation.launchUrl](           https://shopify.dev/api/admin-graphql/current/objects/AppInstallation#field-appinstallation-launchurl) instead.
     * Home page for the channel.
     */
    overviewPath?: Scalars['URL']
    /**
     * @deprecated Use `productPublicationsV3` instead.
     * The product publications for the products published to the channel.
     */
    productPublications: ProductPublicationConnection
    /** The product publications for the list of products published to the channel. */
    productPublicationsV3: ResourcePublicationConnection
    /** The list of products published to the channel. */
    products: ProductConnection
    /** Whether the channel supports future publishing. */
    supportsFuturePublishing: Scalars['Boolean']
    __typename: 'Channel'
}


/**
 * An auto-generated type for paginating through multiple Channels.
 * 
 */
export interface ChannelConnection {
    /** A list of edges. */
    edges: ChannelEdge[]
    /** A list of the nodes contained in ChannelEdge. */
    nodes: Channel[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ChannelConnection'
}


/**
 * A channel definition represents channels surfaces on the platform.
 * A channel definition can be a platform or a subsegment of it such as Facebook Home, Instagram Live, Instagram Shops, or WhatsApp chat.
 * 
 */
export interface ChannelDefinition {
    /** Name of the channel that this sub channel belongs to. */
    channelName: Scalars['String']
    /** Unique string used as a public identifier for the channel definition. */
    handle: Scalars['String']
    /** The unique ID for the channel definition. */
    id: Scalars['ID']
    /** Whether this channel definition represents a marketplace. */
    isMarketplace: Scalars['Boolean']
    /** Name of the sub channel (e.g. Online Store, Instagram Shopping, TikTok Live). */
    subChannelName: Scalars['String']
    /** Icon displayed when showing the channel in admin. */
    svgIcon?: Scalars['String']
    __typename: 'ChannelDefinition'
}


/**
 * An auto-generated type which holds one Channel and a cursor during pagination.
 * 
 */
export interface ChannelEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ChannelEdge. */
    node: Channel
    __typename: 'ChannelEdge'
}


/**
 * Contains the information for a given sales channel.
 * 
 */
export interface ChannelInformation {
    /** The app associated with the channel. */
    app: App
    /** The channel definition associated with the channel. */
    channelDefinition?: ChannelDefinition
    /** The unique ID for the channel. */
    channelId: Scalars['ID']
    /** A globally-unique ID. */
    id: Scalars['ID']
    __typename: 'ChannelInformation'
}


/** A checkout profile defines the branding settings and the UI extensions for a store's checkout. A checkout profile could be published or draft. A store might have at most one published checkout profile, which is used to render their live checkout. The store could also have multiple draft profiles that were created, previewed, and published using the admin checkout editor. */
export interface CheckoutProfile {
    /** The date and time when the checkout profile was created. */
    createdAt: Scalars['DateTime']
    /** The date and time when the checkout profile was last edited. */
    editedAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Whether the checkout profile is published or not. */
    isPublished: Scalars['Boolean']
    /** The profile name. */
    name: Scalars['String']
    /** The date and time when the checkout profile was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'CheckoutProfile'
}


/**
 * An auto-generated type for paginating through multiple CheckoutProfiles.
 * 
 */
export interface CheckoutProfileConnection {
    /** A list of edges. */
    edges: CheckoutProfileEdge[]
    /** A list of the nodes contained in CheckoutProfileEdge. */
    nodes: CheckoutProfile[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CheckoutProfileConnection'
}


/**
 * An auto-generated type which holds one CheckoutProfile and a cursor during pagination.
 * 
 */
export interface CheckoutProfileEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CheckoutProfileEdge. */
    node: CheckoutProfile
    __typename: 'CheckoutProfileEdge'
}


/** The set of valid sort keys for the CheckoutProfile query. */
export type CheckoutProfileSortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'EDITED_AT' | 'IS_PUBLISHED' | 'ID' | 'RELEVANCE'


/** The set of valid sort keys for the CodeDiscount query. */
export type CodeDiscountSortKeys = 'STARTS_AT' | 'ENDS_AT' | 'TITLE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/**
 * Represents a group of products that can be displayed in online stores and other sales channels in categories, which makes it easy for customers to find them. For example, an athletics store might create different collections for running attire, shoes, and accessories.
 * 
 * Collections can be defined by conditions, such as whether they match certain product tags. These are called smart or automated collections.
 * 
 * Collections can also be created for a custom group of products. These are called custom or manual collections.
 * 
 */
export interface Collection {
    /** The number of publications a resource is published to without feedback errors. */
    availablePublicationCount: Scalars['Int']
    /**
     * A single-line, text-only description of the collection, stripped of any HTML tags and formatting that were included in the description.
     * 
     */
    description: Scalars['String']
    /**
     * The description of the collection, including any HTML tags and formatting. This content is typically displayed to customers, such as on an online store, depending on the theme.
     * 
     */
    descriptionHtml: Scalars['HTML']
    /** Information about the collection that's provided through resource feedback. */
    feedback?: ResourceFeedback
    /**
     * A unique string that identifies the collection. If a handle isn't specified when a collection is created, it's automatically generated from the collection's original title, and typically includes words from the title separated by hyphens. For example, a collection that was created with the title `Summer Catalog 2022` might have the handle `summer-catalog-2022`.
     * 
     * If the title is changed, the handle doesn't automatically change.
     * 
     * The handle can be used in themes by the Liquid templating language to refer to the collection, but using the ID is preferred because it never changes.
     * 
     */
    handle: Scalars['String']
    /** Whether the collection includes the specified product. */
    hasProduct: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image associated with the collection. */
    image?: Image
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The products that are included in the collection. */
    products: ProductConnection
    /** The number of products in the collection. */
    productsCount: Scalars['Int']
    /** The number of publications a resource is published on. */
    publicationCount: Scalars['Int']
    /**
     * @deprecated Use `resourcePublications` instead.
     * The channels where the collection is published.
     */
    publications: CollectionPublicationConnection
    /**
     * @deprecated Use `publishedOnPublication` instead.
     * Check to see whether the resource is published to a given channel.
     */
    publishedOnChannel: Scalars['Boolean']
    /**
     * @deprecated Use `publishedOnCurrentPublication` instead.
     * Check to see whether the resource is published to the calling app's channel.
     */
    publishedOnCurrentChannel: Scalars['Boolean']
    /** Check to see whether the resource is published to the calling app's publication. */
    publishedOnCurrentPublication: Scalars['Boolean']
    /** Check to see whether the resource is published to a given publication. */
    publishedOnPublication: Scalars['Boolean']
    /** The list of resources that are published to a publication. */
    resourcePublications: ResourcePublicationConnection
    /** The list of resources that are either published or staged to be published to a publication. */
    resourcePublicationsV2: ResourcePublicationV2Connection
    /**
     * For a smart (automated) collection, specifies the rules that determine whether a product is included.
     * 
     */
    ruleSet?: CollectionRuleSet
    /**
     * If the default SEO fields for page title and description have been modified, contains the modified information.
     * 
     */
    seo: SEO
    /**
     * The order in which the products in the collection are displayed by default in the Shopify admin and in sales channels, such as an online store.
     * 
     */
    sortOrder: CollectionSortOrder
    /**
     * @deprecated Use `id` instead.
     * The Storefront GraphQL API ID of the `Collection`.
     * 
     * As of the `2022-04` version release, the Storefront GraphQL API will no longer return Base64 encoded IDs to match the behavior of the Admin GraphQL API. Therefore, you can safely use the `id` field's value instead.
     * 
     */
    storefrontId: Scalars['StorefrontID']
    /**
     * The suffix of the Liquid template being used to show the collection in an online store. For example, if the value is `custom`, then the collection is using the `collection.custom.liquid` template. If the value is `null`, then the collection is using the default `collection.liquid` template.
     * 
     */
    templateSuffix?: Scalars['String']
    /**
     * The name of the collection. It's displayed in the Shopify admin and is typically displayed in sales channels, such as an online store.
     * 
     */
    title: Scalars['String']
    /** The translations associated with the resource. */
    translations: Translation[]
    /**
     * @deprecated Use `unpublishedPublications` instead.
     * The list of channels that the resource is not published to.
     */
    unpublishedChannels: ChannelConnection
    /** The list of publications that the resource is not published to. */
    unpublishedPublications: PublicationConnection
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the collection was last modified.
     * 
     */
    updatedAt: Scalars['DateTime']
    __typename: 'Collection'
}


/** Return type for `collectionAddProducts` mutation. */
export interface CollectionAddProductsPayload {
    /** The updated collection. Returns `null` if an error is raised. */
    collection?: Collection
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionAddProductsPayload'
}


/** Return type for `collectionAddProductsV2` mutation. */
export interface CollectionAddProductsV2Payload {
    /** The asynchronous job adding the products. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CollectionAddProductsV2UserError[]
    __typename: 'CollectionAddProductsV2Payload'
}


/** An error that occurs during the execution of `CollectionAddProductsV2`. */
export interface CollectionAddProductsV2UserError {
    /** The error code. */
    code?: CollectionAddProductsV2UserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CollectionAddProductsV2UserError'
}


/** Possible error codes that can be returned by `CollectionAddProductsV2UserError`. */
export type CollectionAddProductsV2UserErrorCode = 'CANT_ADD_TO_SMART_COLLECTION' | 'COLLECTION_DOES_NOT_EXIST'


/**
 * An auto-generated type for paginating through multiple Collections.
 * 
 */
export interface CollectionConnection {
    /** A list of edges. */
    edges: CollectionEdge[]
    /** A list of the nodes contained in CollectionEdge. */
    nodes: Collection[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CollectionConnection'
}


/** Return type for `collectionCreate` mutation. */
export interface CollectionCreatePayload {
    /** The collection that has been created. */
    collection?: Collection
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionCreatePayload'
}


/** Return type for `collectionDelete` mutation. */
export interface CollectionDeletePayload {
    /** The ID of the collection that was deleted. Returns `null` if the collection doesn't exist. */
    deletedCollectionId?: Scalars['ID']
    /** The shop associated with the collection. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionDeletePayload'
}


/**
 * An auto-generated type which holds one Collection and a cursor during pagination.
 * 
 */
export interface CollectionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CollectionEdge. */
    node: Collection
    __typename: 'CollectionEdge'
}


/** Represents the publications where a collection is published. */
export interface CollectionPublication {
    /**
     * @deprecated Use `publication` instead.
     * The channel where the collection will be published.
     */
    channel: Channel
    /** The collection to be published on the publication. */
    collection: Collection
    /** Whether the publication is published or not. */
    isPublished: Scalars['Boolean']
    /** The publication where the collection will be published. */
    publication: Publication
    /** The date that the publication was or is going to be published. */
    publishDate: Scalars['DateTime']
    __typename: 'CollectionPublication'
}


/**
 * An auto-generated type for paginating through multiple CollectionPublications.
 * 
 */
export interface CollectionPublicationConnection {
    /** A list of edges. */
    edges: CollectionPublicationEdge[]
    /** A list of the nodes contained in CollectionPublicationEdge. */
    nodes: CollectionPublication[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CollectionPublicationConnection'
}


/**
 * An auto-generated type which holds one CollectionPublication and a cursor during pagination.
 * 
 */
export interface CollectionPublicationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CollectionPublicationEdge. */
    node: CollectionPublication
    __typename: 'CollectionPublicationEdge'
}


/** Return type for `collectionPublish` mutation. */
export interface CollectionPublishPayload {
    /** The published collection. */
    collection?: Collection
    /** The channels where the collection has been published. */
    collectionPublications?: CollectionPublication[]
    /** The shop associated with the collection. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionPublishPayload'
}


/** Return type for `collectionRemoveProducts` mutation. */
export interface CollectionRemoveProductsPayload {
    /** The asynchronous job removing the products. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionRemoveProductsPayload'
}


/** Return type for `collectionReorderProducts` mutation. */
export interface CollectionReorderProductsPayload {
    /** The asynchronous job reordering the products. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionReorderProductsPayload'
}


/** Represents at rule that's used to assign products to a collection. */
export interface CollectionRule {
    /** The attribute that the rule focuses on. For example, `title` or `product_type`. */
    column: CollectionRuleColumn
    /** The value that the operator is applied to. For example, `Hats`. */
    condition: Scalars['String']
    /** The value that the operator is applied to. */
    conditionObject?: CollectionRuleConditionObject
    /**
     * The type of operator that the rule is based on. For example, `equals`, `contains`, or `not_equals`.
     * 
     */
    relation: CollectionRuleRelation
    __typename: 'CollectionRule'
}


/** Specifies the attribute of a product being used to populate the smart collection. */
export type CollectionRuleColumn = 'TAG' | 'TITLE' | 'TYPE' | 'PRODUCT_TAXONOMY_NODE_ID' | 'VENDOR' | 'VARIANT_PRICE' | 'IS_PRICE_REDUCED' | 'VARIANT_COMPARE_AT_PRICE' | 'VARIANT_WEIGHT' | 'VARIANT_INVENTORY' | 'VARIANT_TITLE' | 'PRODUCT_METAFIELD_DEFINITION' | 'VARIANT_METAFIELD_DEFINITION'


/** Specifies object for the condition of the rule. */
export type CollectionRuleConditionObject = (CollectionRuleMetafieldCondition | CollectionRuleProductCategoryCondition | CollectionRuleTextCondition) & { __isUnion?: true }


/** This object defines all columns and allowed relations that can be used in rules for smart collections to automatically include the matching products. */
export interface CollectionRuleConditions {
    /** Allowed relations of the rule. */
    allowedRelations: CollectionRuleRelation[]
    /** Most commonly used relation for this rule. */
    defaultRelation: CollectionRuleRelation
    /** Additional attributes defining the rule. */
    ruleObject?: CollectionRuleConditionsRuleObject
    /** Type of the rule. */
    ruleType: CollectionRuleColumn
    __typename: 'CollectionRuleConditions'
}


/** Specifies object with additional rule attributes. */
export type CollectionRuleConditionsRuleObject = (CollectionRuleMetafieldCondition) & { __isUnion?: true }


/** Identifies a metafield definition used as a rule for the smart collection. */
export interface CollectionRuleMetafieldCondition {
    /** The metafield definition associated with the condition. */
    metafieldDefinition: MetafieldDefinition
    __typename: 'CollectionRuleMetafieldCondition'
}


/** Specifies the condition for a Product Category field. */
export interface CollectionRuleProductCategoryCondition {
    /** The value of the condition. */
    value: ProductTaxonomyNode
    __typename: 'CollectionRuleProductCategoryCondition'
}


/** Specifies the relationship between the `column` and the `condition`. */
export type CollectionRuleRelation = 'CONTAINS' | 'ENDS_WITH' | 'EQUALS' | 'GREATER_THAN' | 'IS_NOT_SET' | 'IS_SET' | 'LESS_THAN' | 'NOT_CONTAINS' | 'NOT_EQUALS' | 'STARTS_WITH'


/** The set of rules that are used to determine which products are included in the collection. */
export interface CollectionRuleSet {
    /**
     * Whether products must match any or all of the rules to be included in the collection.
     * If true, then products must match at least one of the rules to be included in the collection.
     * If false, then products must match all of the rules to be included in the collection.
     * 
     */
    appliedDisjunctively: Scalars['Boolean']
    /** The rules used to assign products to the collection. */
    rules: CollectionRule[]
    __typename: 'CollectionRuleSet'
}


/** Specifies the condition for a text field. */
export interface CollectionRuleTextCondition {
    /** The value of the condition. */
    value: Scalars['String']
    __typename: 'CollectionRuleTextCondition'
}


/** The set of valid sort keys for the Collection query. */
export type CollectionSortKeys = 'TITLE' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/** Specifies the sort order for the products in the collection. */
export type CollectionSortOrder = 'ALPHA_ASC' | 'ALPHA_DESC' | 'BEST_SELLING' | 'CREATED' | 'CREATED_DESC' | 'MANUAL' | 'PRICE_ASC' | 'PRICE_DESC'


/** Return type for `collectionUnpublish` mutation. */
export interface CollectionUnpublishPayload {
    /** The collection that has been unpublished. */
    collection?: Collection
    /** The shop associated with the collection. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionUnpublishPayload'
}


/** Return type for `collectionUpdate` mutation. */
export interface CollectionUpdatePayload {
    /** The updated collection. */
    collection?: Collection
    /** The asynchronous job updating the products based on the new rule set. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CollectionUpdatePayload'
}


/**
 * Comment events are generated by staff members of a shop.
 * They are created when a staff member adds a comment to the timeline of an order, draft order, customer, or transfer.
 * 
 */
export interface CommentEvent {
    /** The name of the app that created the event. */
    appTitle?: Scalars['String']
    /** The attachments associated with the comment event. */
    attachments: CommentEventAttachment[]
    /** Whether the event was created by an app. */
    attributeToApp: Scalars['Boolean']
    /** Whether the event was caused by an admin user. */
    attributeToUser: Scalars['Boolean']
    /** The name of the user that authored the comment event. */
    author: StaffMember
    /** Whether the comment event can be deleted. If true, then the comment event can be deleted. */
    canDelete: Scalars['Boolean']
    /** Whether the comment event can be edited. If true, then the comment event can be edited. */
    canEdit: Scalars['Boolean']
    /** The date and time when the event was created. */
    createdAt: Scalars['DateTime']
    /** Whether the event is critical. */
    criticalAlert: Scalars['Boolean']
    /** Whether the comment event has been edited. If true, then the comment event has been edited. */
    edited: Scalars['Boolean']
    /** The object reference associated with the comment event. For example, a product or discount). */
    embed?: CommentEventEmbed
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Human readable text that describes the event. */
    message: Scalars['FormattedString']
    /** The raw body of the comment event. */
    rawMessage: Scalars['String']
    /** The parent subject to which the comment event belongs. */
    subject: CommentEventSubject
    __typename: 'CommentEvent'
}


/** A file attachment associated to a comment event. */
export interface CommentEventAttachment {
    /** The file extension of the comment event attachment, indicating the file format. */
    fileExtension?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image attached to the comment event. */
    image?: Image
    /** The filename of the comment event attachment. */
    name: Scalars['String']
    /** The size of the attachment. */
    size: Scalars['Int']
    /** The URL of the attachment. */
    url: Scalars['URL']
    __typename: 'CommentEventAttachment'
}


/** The main embed of a comment event. */
export type CommentEventEmbed = (Customer | DraftOrder | Order | Product | ProductVariant) & { __isUnion?: true }


/** The subject line of a comment event. */
export type CommentEventSubject = (Company | CompanyLocation | Customer | DraftOrder | Order | PriceRule) & { __isUnion?: true }


/** Return type for `companiesDelete` mutation. */
export interface CompaniesDeletePayload {
    /** A list of IDs of the deleted companies. */
    deletedCompanyIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompaniesDeletePayload'
}


/** Represents information about a company which is also a customer of the shop. */
export interface Company {
    /** The number of contacts that belong to the company. */
    contactCount: Scalars['Int']
    /** The list of roles for the company contacts. */
    contactRoles: CompanyContactRoleConnection
    /** The list of contacts in the company. */
    contacts: CompanyContactConnection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company was created in Shopify. */
    createdAt: Scalars['DateTime']
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company became the customer. */
    customerSince: Scalars['DateTime']
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** The role proposed by default for a contact at the company. */
    defaultRole?: CompanyContactRole
    /** The list of the company's draft orders. */
    draftOrders: DraftOrderConnection
    /** The paginated list of events associated with the host subject. */
    events: EventConnection
    /** A unique externally-supplied ID for the company. */
    externalId?: Scalars['String']
    /** Whether the merchant added a timeline comment to the company. */
    hasTimelineComment: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The lifetime duration of the company, since it became a customer of the shop. Examples: `2 days`, `3 months`, `1 year`. */
    lifetimeDuration: Scalars['String']
    /** The number of locations that belong to the company. */
    locationCount: Scalars['Int']
    /** The list of locations in the company. */
    locations: CompanyLocationConnection
    /** The main contact for the company. */
    mainContact?: CompanyContact
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The name of the company. */
    name: Scalars['String']
    /** A note about the company. */
    note?: Scalars['String']
    /** The total number of orders placed for this company, across all its locations. */
    orderCount: Scalars['Int']
    /** The list of the company's orders. */
    orders: OrderConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The total amount spent by this company, across all its locations. */
    totalSpent: MoneyV2
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company was last modified. */
    updatedAt: Scalars['DateTime']
    __typename: 'Company'
}


/** Represents a billing or shipping address for a company location. */
export interface CompanyAddress {
    /** The first line of the address. Typically the street address or PO Box number. */
    address1: Scalars['String']
    /** The second line of the address. Typically the number of the apartment, suite, or unit. */
    address2?: Scalars['String']
    /** The name of the city, district, village, or town. */
    city?: Scalars['String']
    /** The name of the company. */
    companyName: Scalars['String']
    /** The name of the country. */
    country?: Scalars['String']
    /**
     * The two-letter code for the country of the address.
     * For example, US.
     * 
     */
    countryCode: CountryCode
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company address was created.
     * 
     */
    createdAt: Scalars['DateTime']
    /** The formatted version of the address. */
    formattedAddress: Scalars['String'][]
    /** A comma-separated list of the values for city, province, and country. */
    formattedArea?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * A unique phone number for the customer.
     * Formatted using E.164 standard. For example, _+16135551111_.
     * 
     */
    phone?: Scalars['String']
    /** The region of the address, such as the province, state, or district. */
    province?: Scalars['String']
    /** The identity of the recipient e.g. 'Receiving Department'. */
    recipient?: Scalars['String']
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company address was last updated.
     * 
     */
    updatedAt: Scalars['DateTime']
    /** The zip or postal code of the address. */
    zip?: Scalars['String']
    /**
     * The two-letter code for the region.
     * For example, ON.
     * 
     */
    zoneCode?: Scalars['String']
    __typename: 'CompanyAddress'
}


/** Return type for `companyAddressDelete` mutation. */
export interface CompanyAddressDeletePayload {
    /** The ID of the deleted address. */
    deletedAddressId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyAddressDeletePayload'
}


/** The valid values for the address type of a company. */
export type CompanyAddressType = 'BILLING' | 'SHIPPING'


/** Return type for `companyAssignCustomerAsContact` mutation. */
export interface CompanyAssignCustomerAsContactPayload {
    /** The created company contact. */
    companyContact?: CompanyContact
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyAssignCustomerAsContactPayload'
}


/** Return type for `companyAssignMainContact` mutation. */
export interface CompanyAssignMainContactPayload {
    /** The company for which the main contact is assigned. */
    company?: Company
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyAssignMainContactPayload'
}


/**
 * An auto-generated type for paginating through multiple Companies.
 * 
 */
export interface CompanyConnection {
    /** A list of edges. */
    edges: CompanyEdge[]
    /** A list of the nodes contained in CompanyEdge. */
    nodes: Company[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CompanyConnection'
}


/** A person that acts on behalf of company associated to [a customer](https://shopify.dev/api/admin-graphql/latest/objects/customer). */
export interface CompanyContact {
    /** The company to which the contact belongs. */
    company: Company
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company contact was created at Shopify. */
    createdAt: Scalars['DateTime']
    /** The customer associated to this contact. */
    customer: Customer
    /** The list of draft orders for the company contact. */
    draftOrders: DraftOrderConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Whether the contact is the main contact of the company. */
    isMainContact: Scalars['Boolean']
    /** The lifetime duration of the company contact, since its creation date on Shopify. Examples: `1 year`, `2 months`, `3 days`. */
    lifetimeDuration: Scalars['String']
    /** The company contact's locale (language). */
    locale?: Scalars['String']
    /** The list of orders for the company contact. */
    orders: OrderConnection
    /** The list of roles assigned to this company contact. */
    roleAssignments: CompanyContactRoleAssignmentConnection
    /** The company contact's job title. */
    title?: Scalars['String']
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company contact was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'CompanyContact'
}


/** Return type for `companyContactAssignRole` mutation. */
export interface CompanyContactAssignRolePayload {
    /** The company contact role assignment. */
    companyContactRoleAssignment?: CompanyContactRoleAssignment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactAssignRolePayload'
}


/** Return type for `companyContactAssignRoles` mutation. */
export interface CompanyContactAssignRolesPayload {
    /** A list of newly created assignments of company contacts to a company location. */
    roleAssignments?: CompanyContactRoleAssignment[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactAssignRolesPayload'
}


/**
 * An auto-generated type for paginating through multiple CompanyContacts.
 * 
 */
export interface CompanyContactConnection {
    /** A list of edges. */
    edges: CompanyContactEdge[]
    /** A list of the nodes contained in CompanyContactEdge. */
    nodes: CompanyContact[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CompanyContactConnection'
}


/** Return type for `companyContactCreate` mutation. */
export interface CompanyContactCreatePayload {
    /** The created company contact. */
    companyContact?: CompanyContact
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactCreatePayload'
}


/** Return type for `companyContactDelete` mutation. */
export interface CompanyContactDeletePayload {
    /** The ID of the deleted company contact. */
    deletedCompanyContactId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactDeletePayload'
}


/**
 * An auto-generated type which holds one CompanyContact and a cursor during pagination.
 * 
 */
export interface CompanyContactEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CompanyContactEdge. */
    node: CompanyContact
    __typename: 'CompanyContactEdge'
}


/** Return type for `companyContactRemoveFromCompany` mutation. */
export interface CompanyContactRemoveFromCompanyPayload {
    /** The ID of the removed company contact. */
    removedCompanyContactId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactRemoveFromCompanyPayload'
}


/** Return type for `companyContactRevokeRole` mutation. */
export interface CompanyContactRevokeRolePayload {
    /** The role assignment that was revoked. */
    revokedCompanyContactRoleAssignmentId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactRevokeRolePayload'
}


/** Return type for `companyContactRevokeRoles` mutation. */
export interface CompanyContactRevokeRolesPayload {
    /** A list of role assignment IDs that were removed from the company contact. */
    revokedRoleAssignmentIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactRevokeRolesPayload'
}


/** The role for a [company contact](https://shopify.dev/api/admin-graphql/latest/objects/companycontact). */
export interface CompanyContactRole {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * The name of a role.
     * For example, `admin` or `buyer`.
     * 
     */
    name: Scalars['String']
    /** A note for the role. */
    note?: Scalars['String']
    __typename: 'CompanyContactRole'
}


/** The CompanyContactRoleAssignment describes the company and location associated to a company contact's role. */
export interface CompanyContactRoleAssignment {
    /** The company this role assignment belongs to. */
    company: Company
    /** The company contact for whom this role is assigned. */
    companyContact: CompanyContact
    /** The company location to which the role is assigned. */
    companyLocation: CompanyLocation
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the assignment record was created. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The role that is assigned to the company contact. */
    role: CompanyContactRole
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the assignment record was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'CompanyContactRoleAssignment'
}


/**
 * An auto-generated type for paginating through multiple CompanyContactRoleAssignments.
 * 
 */
export interface CompanyContactRoleAssignmentConnection {
    /** A list of edges. */
    edges: CompanyContactRoleAssignmentEdge[]
    /** A list of the nodes contained in CompanyContactRoleAssignmentEdge. */
    nodes: CompanyContactRoleAssignment[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CompanyContactRoleAssignmentConnection'
}


/**
 * An auto-generated type which holds one CompanyContactRoleAssignment and a cursor during pagination.
 * 
 */
export interface CompanyContactRoleAssignmentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CompanyContactRoleAssignmentEdge. */
    node: CompanyContactRoleAssignment
    __typename: 'CompanyContactRoleAssignmentEdge'
}


/** The set of valid sort keys for the CompanyContactRoleAssignment query. */
export type CompanyContactRoleAssignmentSortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'LOCATION_NAME' | 'ID' | 'RELEVANCE'


/**
 * An auto-generated type for paginating through multiple CompanyContactRoles.
 * 
 */
export interface CompanyContactRoleConnection {
    /** A list of edges. */
    edges: CompanyContactRoleEdge[]
    /** A list of the nodes contained in CompanyContactRoleEdge. */
    nodes: CompanyContactRole[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CompanyContactRoleConnection'
}


/**
 * An auto-generated type which holds one CompanyContactRole and a cursor during pagination.
 * 
 */
export interface CompanyContactRoleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CompanyContactRoleEdge. */
    node: CompanyContactRole
    __typename: 'CompanyContactRoleEdge'
}


/** The set of valid sort keys for the CompanyContactRole query. */
export type CompanyContactRoleSortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/** Return type for `companyContactSendWelcomeEmail` mutation. */
export interface CompanyContactSendWelcomeEmailPayload {
    /** The company contact to whom a welcome email was sent. */
    companyContact?: CompanyContact
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactSendWelcomeEmailPayload'
}


/** The set of valid sort keys for the CompanyContact query. */
export type CompanyContactSortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'TITLE' | 'COMPANY_ID' | 'NAME' | 'EMAIL' | 'NAME_EMAIL' | 'ID' | 'RELEVANCE'


/** Return type for `companyContactUpdate` mutation. */
export interface CompanyContactUpdatePayload {
    /** The updated company contact. */
    companyContact?: CompanyContact
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactUpdatePayload'
}


/** Return type for `companyContactsDelete` mutation. */
export interface CompanyContactsDeletePayload {
    /** The list of IDs of the deleted company contacts. */
    deletedCompanyContactIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyContactsDeletePayload'
}


/** Return type for `companyCreate` mutation. */
export interface CompanyCreatePayload {
    /** The created company. */
    company?: Company
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyCreatePayload'
}


/** Return type for `companyDelete` mutation. */
export interface CompanyDeletePayload {
    /** The ID of the deleted company. */
    deletedCompanyId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyDeletePayload'
}


/**
 * An auto-generated type which holds one Company and a cursor during pagination.
 * 
 */
export interface CompanyEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CompanyEdge. */
    node: Company
    __typename: 'CompanyEdge'
}


/** A location or branch of a [company that's a customer](https://shopify.dev/api/admin-graphql/latest/objects/company) of the shop. Configuration of B2B relationship, for example prices lists and checkout settings, may be done for a location. */
export interface CompanyLocation {
    /** The address used as billing address for the location. */
    billingAddress?: CompanyAddress
    /** The configuration for the buyer's B2B checkout. */
    buyerExperienceConfiguration?: BuyerExperienceConfiguration
    /** The list of catalogs associated with the company location. */
    catalogs: CatalogConnection
    /** The company that the company location belongs to. */
    company: Company
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company location was created in Shopify. */
    createdAt: Scalars['DateTime']
    /** The location's currency based on the shipping address. If the shipping address is empty, then the value is the shop's primary market. */
    currency: CurrencyCode
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** The list of draft orders for the company location. */
    draftOrders: DraftOrderConnection
    /** The paginated list of events associated with the host subject. */
    events: EventConnection
    /** A unique externally-supplied ID for the company location. */
    externalId?: Scalars['String']
    /** Whether the merchant added a timeline comment to the company location. */
    hasTimelineComment: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Whether the company location is assigned a specific catalog. */
    inCatalog: Scalars['Boolean']
    /** The preferred locale of the company location. */
    locale?: Scalars['String']
    /** The market that includes the location's shipping address. If the shipping address is empty, then the value is the shop's primary market. */
    market: Market
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The name of the company location. */
    name: Scalars['String']
    /** A note about the company location. */
    note?: Scalars['String']
    /** The total number of orders placed for the location. */
    orderCount: Scalars['Int']
    /** The list of orders for the company location. */
    orders: OrderConnection
    /** The phone number of the company location. */
    phone?: Scalars['String']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The list of roles assigned to the company location. */
    roleAssignments: CompanyContactRoleAssignmentConnection
    /** The address used as shipping address for the location. */
    shippingAddress?: CompanyAddress
    /** The list of tax exemptions applied to the location. */
    taxExemptions: TaxExemption[]
    /** The tax registration ID for the company location. */
    taxRegistrationId?: Scalars['String']
    /** The total amount spent by the location. */
    totalSpent: MoneyV2
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company location was last modified. */
    updatedAt: Scalars['DateTime']
    __typename: 'CompanyLocation'
}


/** Return type for `companyLocationAssignAddress` mutation. */
export interface CompanyLocationAssignAddressPayload {
    /** The list of updated addresses on the company location. */
    addresses?: CompanyAddress[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationAssignAddressPayload'
}


/** Return type for `companyLocationAssignRoles` mutation. */
export interface CompanyLocationAssignRolesPayload {
    /** A list of newly created assignments of company contacts to a company location. */
    roleAssignments?: CompanyContactRoleAssignment[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationAssignRolesPayload'
}


/** Return type for `companyLocationAssignTaxExemptions` mutation. */
export interface CompanyLocationAssignTaxExemptionsPayload {
    /** The updated company location. */
    companyLocation?: CompanyLocation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationAssignTaxExemptionsPayload'
}


/**
 * A list of products with publishing and pricing information associated with company locations.
 * 
 */
export interface CompanyLocationCatalog {
    /** The company locations associated with the catalog. */
    companyLocations: CompanyLocationConnection
    /** The number of company locations associated with the catalog. */
    companyLocationsCount: Scalars['Int']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Most recent catalog operations. */
    operations: ResourceOperation[]
    /** The price list associated with the catalog. */
    priceList?: PriceList
    /** A group of products and collections that's published to a catalog. */
    publication?: Publication
    /** The status of the catalog. */
    status: CatalogStatus
    /** The name of the catalog. */
    title: Scalars['String']
    __typename: 'CompanyLocationCatalog'
}


/**
 * An auto-generated type for paginating through multiple CompanyLocations.
 * 
 */
export interface CompanyLocationConnection {
    /** A list of edges. */
    edges: CompanyLocationEdge[]
    /** A list of the nodes contained in CompanyLocationEdge. */
    nodes: CompanyLocation[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CompanyLocationConnection'
}


/** Return type for `companyLocationCreate` mutation. */
export interface CompanyLocationCreatePayload {
    /** The created company location. */
    companyLocation?: CompanyLocation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationCreatePayload'
}


/** Return type for `companyLocationCreateTaxRegistration` mutation. */
export interface CompanyLocationCreateTaxRegistrationPayload {
    /** The company location with the created tax registration. */
    companyLocation?: CompanyLocation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationCreateTaxRegistrationPayload'
}


/** Return type for `companyLocationDelete` mutation. */
export interface CompanyLocationDeletePayload {
    /** The ID of the deleted company location. */
    deletedCompanyLocationId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationDeletePayload'
}


/**
 * An auto-generated type which holds one CompanyLocation and a cursor during pagination.
 * 
 */
export interface CompanyLocationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CompanyLocationEdge. */
    node: CompanyLocation
    __typename: 'CompanyLocationEdge'
}


/** Return type for `companyLocationRevokeRoles` mutation. */
export interface CompanyLocationRevokeRolesPayload {
    /** A list of role assignment IDs that were removed from the company location. */
    revokedRoleAssignmentIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationRevokeRolesPayload'
}


/** Return type for `companyLocationRevokeTaxExemptions` mutation. */
export interface CompanyLocationRevokeTaxExemptionsPayload {
    /** The updated company location. */
    companyLocation?: CompanyLocation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationRevokeTaxExemptionsPayload'
}


/** Return type for `companyLocationRevokeTaxRegistration` mutation. */
export interface CompanyLocationRevokeTaxRegistrationPayload {
    /** The updated company location. */
    companyLocation?: CompanyLocation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationRevokeTaxRegistrationPayload'
}


/** The set of valid sort keys for the CompanyLocation query. */
export type CompanyLocationSortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'NAME' | 'COMPANY_ID' | 'COMPANY_AND_LOCATION_NAME' | 'ID' | 'RELEVANCE'


/** Return type for `companyLocationUpdate` mutation. */
export interface CompanyLocationUpdatePayload {
    /** The updated company location. */
    companyLocation?: CompanyLocation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationUpdatePayload'
}


/** Return type for `companyLocationsDelete` mutation. */
export interface CompanyLocationsDeletePayload {
    /** A list of IDs of the deleted company locations. */
    deletedCompanyLocationIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyLocationsDeletePayload'
}


/** Return type for `companyRevokeMainContact` mutation. */
export interface CompanyRevokeMainContactPayload {
    /** The company from which the main contact is revoked. */
    company?: Company
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyRevokeMainContactPayload'
}


/** The set of valid sort keys for the Company query. */
export type CompanySortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'SINCE_DATE' | 'NAME' | 'ORDER_COUNT' | 'TOTAL_SPENT' | 'ID' | 'RELEVANCE'


/** Return type for `companyUpdate` mutation. */
export interface CompanyUpdatePayload {
    /** The updated company. */
    company?: Company
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BusinessCustomerUserError[]
    __typename: 'CompanyUpdatePayload'
}


/** The list of all the countries from the combined shipping zones for the shop. */
export interface CountriesInShippingZones {
    /** The list of all the countries from all the combined shipping zones. */
    countryCodes: CountryCode[]
    /** Whether 'Rest of World' has been defined in any of the shipping zones. */
    includeRestOfWorld: Scalars['Boolean']
    __typename: 'CountriesInShippingZones'
}


/**
 * The code designating a country/region, which generally follows ISO 3166-1 alpha-2 guidelines.
 * If a territory doesn't have a country code value in the `CountryCode` enum, then it might be considered a subdivision
 * of another country. For example, the territories associated with Spain are represented by the country code `ES`,
 * and the territories associated with the United States of America are represented by the country code `US`.
 * 
 */
export type CountryCode = 'AF' | 'AX' | 'AL' | 'DZ' | 'AD' | 'AO' | 'AI' | 'AG' | 'AR' | 'AM' | 'AW' | 'AC' | 'AU' | 'AT' | 'AZ' | 'BS' | 'BH' | 'BD' | 'BB' | 'BY' | 'BE' | 'BZ' | 'BJ' | 'BM' | 'BT' | 'BO' | 'BA' | 'BW' | 'BV' | 'BR' | 'IO' | 'BN' | 'BG' | 'BF' | 'BI' | 'KH' | 'CA' | 'CV' | 'BQ' | 'KY' | 'CF' | 'TD' | 'CL' | 'CN' | 'CX' | 'CC' | 'CO' | 'KM' | 'CG' | 'CD' | 'CK' | 'CR' | 'HR' | 'CU' | 'CW' | 'CY' | 'CZ' | 'CI' | 'DK' | 'DJ' | 'DM' | 'DO' | 'EC' | 'EG' | 'SV' | 'GQ' | 'ER' | 'EE' | 'SZ' | 'ET' | 'FK' | 'FO' | 'FJ' | 'FI' | 'FR' | 'GF' | 'PF' | 'TF' | 'GA' | 'GM' | 'GE' | 'DE' | 'GH' | 'GI' | 'GR' | 'GL' | 'GD' | 'GP' | 'GT' | 'GG' | 'GN' | 'GW' | 'GY' | 'HT' | 'HM' | 'VA' | 'HN' | 'HK' | 'HU' | 'IS' | 'IN' | 'ID' | 'IR' | 'IQ' | 'IE' | 'IM' | 'IL' | 'IT' | 'JM' | 'JP' | 'JE' | 'JO' | 'KZ' | 'KE' | 'KI' | 'KP' | 'XK' | 'KW' | 'KG' | 'LA' | 'LV' | 'LB' | 'LS' | 'LR' | 'LY' | 'LI' | 'LT' | 'LU' | 'MO' | 'MG' | 'MW' | 'MY' | 'MV' | 'ML' | 'MT' | 'MQ' | 'MR' | 'MU' | 'YT' | 'MX' | 'MD' | 'MC' | 'MN' | 'ME' | 'MS' | 'MA' | 'MZ' | 'MM' | 'NA' | 'NR' | 'NP' | 'NL' | 'AN' | 'NC' | 'NZ' | 'NI' | 'NE' | 'NG' | 'NU' | 'NF' | 'MK' | 'NO' | 'OM' | 'PK' | 'PS' | 'PA' | 'PG' | 'PY' | 'PE' | 'PH' | 'PN' | 'PL' | 'PT' | 'QA' | 'CM' | 'RE' | 'RO' | 'RU' | 'RW' | 'BL' | 'SH' | 'KN' | 'LC' | 'MF' | 'PM' | 'WS' | 'SM' | 'ST' | 'SA' | 'SN' | 'RS' | 'SC' | 'SL' | 'SG' | 'SX' | 'SK' | 'SI' | 'SB' | 'SO' | 'ZA' | 'GS' | 'KR' | 'SS' | 'ES' | 'LK' | 'VC' | 'SD' | 'SR' | 'SJ' | 'SE' | 'CH' | 'SY' | 'TW' | 'TJ' | 'TZ' | 'TH' | 'TL' | 'TG' | 'TK' | 'TO' | 'TT' | 'TA' | 'TN' | 'TR' | 'TM' | 'TC' | 'TV' | 'UG' | 'UA' | 'AE' | 'GB' | 'US' | 'UM' | 'UY' | 'UZ' | 'VU' | 'VE' | 'VN' | 'VG' | 'WF' | 'EH' | 'YE' | 'ZM' | 'ZW' | 'ZZ'


/**
 * The country-specific harmonized system code and ISO country code for an inventory item.
 * 
 */
export interface CountryHarmonizedSystemCode {
    /** The ISO 3166-1 alpha-2 country code for the country that issued the specified harmonized system code. */
    countryCode: CountryCode
    /** The country-specific harmonized system code. These are usually longer than 6 digits. */
    harmonizedSystemCode: Scalars['String']
    __typename: 'CountryHarmonizedSystemCode'
}


/**
 * An auto-generated type for paginating through multiple CountryHarmonizedSystemCodes.
 * 
 */
export interface CountryHarmonizedSystemCodeConnection {
    /** A list of edges. */
    edges: CountryHarmonizedSystemCodeEdge[]
    /** A list of the nodes contained in CountryHarmonizedSystemCodeEdge. */
    nodes: CountryHarmonizedSystemCode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CountryHarmonizedSystemCodeConnection'
}


/**
 * An auto-generated type which holds one CountryHarmonizedSystemCode and a cursor during pagination.
 * 
 */
export interface CountryHarmonizedSystemCodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CountryHarmonizedSystemCodeEdge. */
    node: CountryHarmonizedSystemCode
    __typename: 'CountryHarmonizedSystemCodeEdge'
}


/** The part of the image that should remain after cropping. */
export type CropRegion = 'CENTER' | 'TOP' | 'BOTTOM' | 'LEFT' | 'RIGHT'


/**
 * The three-letter currency codes that represent the world currencies used in stores. These include standard ISO 4217 codes, legacy codes,
 * and non-standard codes.
 * 
 */
export type CurrencyCode = 'USD' | 'EUR' | 'GBP' | 'CAD' | 'AFN' | 'ALL' | 'DZD' | 'AOA' | 'ARS' | 'AMD' | 'AWG' | 'AUD' | 'BBD' | 'AZN' | 'BDT' | 'BSD' | 'BHD' | 'BIF' | 'BZD' | 'BMD' | 'BTN' | 'BAM' | 'BRL' | 'BOB' | 'BWP' | 'BND' | 'BGN' | 'MMK' | 'KHR' | 'CVE' | 'KYD' | 'XAF' | 'CLP' | 'CNY' | 'COP' | 'KMF' | 'CDF' | 'CRC' | 'HRK' | 'CZK' | 'DKK' | 'DOP' | 'XCD' | 'EGP' | 'ETB' | 'XPF' | 'FJD' | 'GMD' | 'GHS' | 'GTQ' | 'GYD' | 'GEL' | 'HTG' | 'HNL' | 'HKD' | 'HUF' | 'ISK' | 'INR' | 'IDR' | 'ILS' | 'IQD' | 'JMD' | 'JPY' | 'JEP' | 'JOD' | 'KZT' | 'KES' | 'KWD' | 'KGS' | 'LAK' | 'LVL' | 'LBP' | 'LSL' | 'LRD' | 'LTL' | 'MGA' | 'MKD' | 'MOP' | 'MWK' | 'MVR' | 'MXN' | 'MYR' | 'MUR' | 'MDL' | 'MAD' | 'MNT' | 'MZN' | 'NAD' | 'NPR' | 'ANG' | 'NZD' | 'NIO' | 'NGN' | 'NOK' | 'OMR' | 'PAB' | 'PKR' | 'PGK' | 'PYG' | 'PEN' | 'PHP' | 'PLN' | 'QAR' | 'RON' | 'RUB' | 'RWF' | 'WST' | 'SAR' | 'RSD' | 'SCR' | 'SGD' | 'SDG' | 'SYP' | 'ZAR' | 'KRW' | 'SSP' | 'SBD' | 'LKR' | 'SRD' | 'SZL' | 'SEK' | 'CHF' | 'TWD' | 'THB' | 'TZS' | 'TTD' | 'TND' | 'TRY' | 'TMT' | 'UGX' | 'UAH' | 'AED' | 'UYU' | 'UZS' | 'VUV' | 'VND' | 'XOF' | 'YER' | 'ZMW' | 'BYN' | 'BYR' | 'DJF' | 'ERN' | 'FKP' | 'GIP' | 'GNF' | 'IRR' | 'KID' | 'LYD' | 'MRU' | 'SLL' | 'SHP' | 'SOS' | 'STD' | 'STN' | 'TJS' | 'TOP' | 'VED' | 'VEF' | 'VES' | 'XXX'


/** Currency formats configured for the merchant. These formats are available to use within Liquid. */
export interface CurrencyFormats {
    /** Money without currency in HTML. */
    moneyFormat: Scalars['FormattedString']
    /** Money without currency in emails. */
    moneyInEmailsFormat: Scalars['String']
    /** Money with currency in HTML. */
    moneyWithCurrencyFormat: Scalars['FormattedString']
    /** Money with currency in emails. */
    moneyWithCurrencyInEmailsFormat: Scalars['String']
    __typename: 'CurrencyFormats'
}


/** A setting for a presentment currency. */
export interface CurrencySetting {
    /** The currency's ISO code. */
    currencyCode: CurrencyCode
    /** The full name of the currency. */
    currencyName: Scalars['String']
    /** Whether the currency is enabled or not. An enabled currency setting is visible to buyers and allows orders to be generated with that currency as presentment. */
    enabled: Scalars['Boolean']
    /** The date and time when the active exchange rate for the currency was last modified. It can be the automatic rate's creation date, or the manual rate's last updated at date if active. */
    rateUpdatedAt?: Scalars['DateTime']
    __typename: 'CurrencySetting'
}


/**
 * An auto-generated type for paginating through multiple CurrencySettings.
 * 
 */
export interface CurrencySettingConnection {
    /** A list of edges. */
    edges: CurrencySettingEdge[]
    /** A list of the nodes contained in CurrencySettingEdge. */
    nodes: CurrencySetting[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CurrencySettingConnection'
}


/**
 * An auto-generated type which holds one CurrencySetting and a cursor during pagination.
 * 
 */
export interface CurrencySettingEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CurrencySettingEdge. */
    node: CurrencySetting
    __typename: 'CurrencySettingEdge'
}


/**
 * Represents information about a customer of the shop, such as the customer's contact details, their order
 * history, and whether they've agreed to receive marketing material by email.
 * 
 * **Caution:** Only use this data if it's required for your app's functionality. Shopify will restrict [access to scopes](https://shopify.dev/api/usage/access-scopes) for apps that don't have a legitimate use for the associated data.
 * 
 */
export interface Customer {
    /**
     * @deprecated Use `emailMarketingConsent` instead.
     * Whether the customer has agreed to receive marketing material.
     */
    acceptsMarketing: Scalars['Boolean']
    /**
     * @deprecated Use `emailMarketingConsent` instead.
     * The date and time when the customer consented or objected to receiving marketing material by email.
     * 
     */
    acceptsMarketingUpdatedAt: Scalars['DateTime']
    /** A list of addresses associated with the customer. */
    addresses: MailingAddress[]
    /** The total amount that the customer has spent on orders in their lifetime. */
    amountSpent: MoneyV2
    /**
     * @deprecated Use `averageOrderAmountV2` instead.
     * The average amount that the customer spent per order.
     */
    averageOrderAmount?: Scalars['Money']
    /** The average amount that the customer spent per order. */
    averageOrderAmountV2?: MoneyV2
    /**
     * Whether the merchant can delete the customer from their store.
     * 
     * A customer can be deleted from a store only if they have not yet made an order. After a customer makes an
     * order, they can't be deleted from a store.
     * 
     */
    canDelete: Scalars['Boolean']
    /** A list of the customer's company contact profiles. */
    companyContactProfiles: CompanyContact[]
    /** The date and time when the customer was added to the store. */
    createdAt: Scalars['DateTime']
    /** The default address associated with the customer. */
    defaultAddress?: MailingAddress
    /**
     * The full name of the customer, based on the values for first_name and last_name. If the first_name and
     * last_name are not available, then this falls back to the customer's email address, and if that is not available, the customer's phone number.
     * 
     */
    displayName: Scalars['String']
    /** The customer's email address. */
    email?: Scalars['String']
    /**
     * The current email marketing state for the customer.
     * If the customer doesn't have an email address, then this property is `null`.
     * 
     */
    emailMarketingConsent?: CustomerEmailMarketingConsentState
    /** A list of events associated with the customer. */
    events: EventConnection
    /** The customer's first name. */
    firstName?: Scalars['String']
    /**
     * @deprecated To query for comments on the timeline, use the events connection and a `query` argument containing `verb:comment`, or look for a `CommentEvent` in the `__typename` of events.
     * Whether the merchant has added timeline comments about the customer on the customer's page.
     */
    hasTimelineComment: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image associated with the customer. */
    image: Image
    /** The customer's last name. */
    lastName?: Scalars['String']
    /** The customer's last order. */
    lastOrder?: Order
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /**
     * The amount of time since the customer was first added to the store.
     * 
     * Example: 'about 12 years'.
     * 
     */
    lifetimeDuration: Scalars['String']
    /** The customer's locale. */
    locale: Scalars['String']
    /** The market that includes the customer’s default address. */
    market?: Market
    /**
     * @deprecated Use `emailMarketingConsent` instead.
     * The marketing subscription opt-in level, as described by the M3AAWG best practices guidelines, that the
     * customer gave when they consented to receive marketing material by email.
     * 
     * If the customer does not accept email marketing, then this property is `null`.
     * 
     */
    marketingOptInLevel?: CustomerMarketingOptInLevel
    /** Whether the customer can be merged with another customer. */
    mergeable: CustomerMergeable
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** A unique identifier for the customer that's used with Multipass login. */
    multipassIdentifier?: Scalars['String']
    /** A note about the customer. */
    note?: Scalars['String']
    /** The number of orders that the customer has made at the store in their lifetime. */
    numberOfOrders: Scalars['UnsignedInt64']
    /** A list of the customer's orders. */
    orders: OrderConnection
    /** A list of the customer's payment methods. */
    paymentMethods: CustomerPaymentMethodConnection
    /** The customer's phone number. */
    phone?: Scalars['String']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** Possible subscriber states of a customer defined by their subscription contracts. */
    productSubscriberStatus: CustomerProductSubscriberStatus
    /**
     * The current SMS marketing state for the customer's phone number.
     * 
     * If the customer does not have a phone number, then this property is `null`.
     * 
     */
    smsMarketingConsent?: CustomerSmsMarketingConsentState
    /** The state of the customer's account with the shop. */
    state: CustomerState
    /** The statistics for a given customer. */
    statistics: CustomerStatistics
    /** A list of the customer's subscription contracts. */
    subscriptionContracts: SubscriptionContractConnection
    /** A comma separated list of tags that have been added to the customer. */
    tags: Scalars['String'][]
    /** Whether the customer is exempt from being charged taxes on their orders. */
    taxExempt: Scalars['Boolean']
    /** The list of tax exemptions applied to the customer. */
    taxExemptions: TaxExemption[]
    /** The URL to unsubscribe the customer from the mailing list. */
    unsubscribeUrl: Scalars['URL']
    /** The date and time when the customer was last updated. */
    updatedAt: Scalars['DateTime']
    /**
     * Whether the email address is formatted correctly.
     * 
     * Returns `true` when the email is formatted correctly and
     * belongs to an existing domain. This doesn't guarantee that
     * the email address actually exists.
     * 
     */
    validEmailAddress: Scalars['Boolean']
    /** Whether the customer has verified their email address. Defaults to `true` if the customer is created through the Shopify admin or API. */
    verifiedEmail: Scalars['Boolean']
    __typename: 'Customer'
}


/** Return type for `customerAddTaxExemptions` mutation. */
export interface CustomerAddTaxExemptionsPayload {
    /** The updated customer. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerAddTaxExemptionsPayload'
}


/**
 * An auto-generated type for paginating through multiple Customers.
 * 
 */
export interface CustomerConnection {
    /** A list of edges. */
    edges: CustomerEdge[]
    /** A list of the nodes contained in CustomerEdge. */
    nodes: Customer[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CustomerConnection'
}


/**
 * The source that collected the customer's consent to receive marketing materials.
 * 
 */
export type CustomerConsentCollectedFrom = 'SHOPIFY' | 'OTHER'


/** Return type for `customerCreate` mutation. */
export interface CustomerCreatePayload {
    /** The created customer. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerCreatePayload'
}


/** Represents a card instrument for customer payment method. */
export interface CustomerCreditCard {
    /** The billing address of the card. */
    billingAddress?: CustomerCreditCardBillingAddress
    /** The brand of the card. */
    brand: Scalars['String']
    /** Whether the card is about to expire. */
    expiresSoon: Scalars['Boolean']
    /** The expiry month of the card. */
    expiryMonth: Scalars['Int']
    /** The expiry year of the card. */
    expiryYear: Scalars['Int']
    /** The card's BIN number. */
    firstDigits?: Scalars['String']
    /** The payment method can be revoked if there are no active subscription contracts. */
    isRevocable: Scalars['Boolean']
    /** The last 4 digits of the card. */
    lastDigits: Scalars['String']
    /** The masked card number with only the last 4 digits displayed. */
    maskedNumber: Scalars['String']
    /** The name of the card holder. */
    name: Scalars['String']
    /** The source of the card if coming from a wallet such as Apple Pay. */
    source?: Scalars['String']
    /** The last 4 digits of the Device Account Number. */
    virtualLastDigits?: Scalars['String']
    __typename: 'CustomerCreditCard'
}


/** The billing address of a credit card payment instrument. */
export interface CustomerCreditCardBillingAddress {
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: Scalars['String']
    /** The name of the city, district, village, or town. */
    city?: Scalars['String']
    /** The name of the country. */
    country?: Scalars['String']
    /**
     * The two-letter code for the country of the address.
     * For example, US.
     * 
     */
    countryCode?: CountryCode
    /** The first name in the billing address. */
    firstName?: Scalars['String']
    /** The last name in the billing address. */
    lastName?: Scalars['String']
    /** The region of the address, such as the province, state, or district. */
    province?: Scalars['String']
    /**
     * The two-letter code for the region.
     * For example, ON.
     * 
     */
    provinceCode?: Scalars['String']
    /** The zip or postal code of the address. */
    zip?: Scalars['String']
    __typename: 'CustomerCreditCardBillingAddress'
}


/** Return type for `customerDelete` mutation. */
export interface CustomerDeletePayload {
    /** The ID of the deleted customer. */
    deletedCustomerId?: Scalars['ID']
    /** The shop of the deleted customer. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerDeletePayload'
}


/**
 * An auto-generated type which holds one Customer and a cursor during pagination.
 * 
 */
export interface CustomerEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CustomerEdge. */
    node: Customer
    __typename: 'CustomerEdge'
}


/**
 * Represents an email address.
 * 
 */
export interface CustomerEmailAddress {
    /** The customer's default email address. */
    emailAddress: Scalars['String']
    /** Whether the customer has subscribed to email marketing. */
    marketingState: CustomerEmailAddressMarketingState
    /** The URL to unsubscribe a member from all mailing lists. */
    marketingUnsubscribeUrl: Scalars['URL']
    /**
     * Whether the customer has opted in to having their opened emails tracked.
     * 
     */
    openTrackingLevel: CustomerEmailAddressOpenTrackingLevel
    /**
     * The URL that can be used to opt a customer in or out of email open tracking.
     * 
     */
    openTrackingUrl: Scalars['URL']
    __typename: 'CustomerEmailAddress'
}


/**
 * Possible marketing states for the customer’s email address.
 * 
 */
export type CustomerEmailAddressMarketingState = 'INVALID' | 'NOT_SUBSCRIBED' | 'PENDING' | 'SUBSCRIBED' | 'UNSUBSCRIBED'


/**
 * The different levels related to whether a customer has opted in to having their opened emails tracked.
 * 
 */
export type CustomerEmailAddressOpenTrackingLevel = 'UNKNOWN' | 'OPTED_IN' | 'OPTED_OUT'


/**
 * The record of when a customer consented to receive marketing material by email.
 * 
 */
export interface CustomerEmailMarketingConsentState {
    /**
     * The date and time at which the customer consented to receive marketing material by email.
     * The customer's consent state reflects the consent record with the most recent `consent_updated_at` date.
     * If no date is provided, then the date and time at which the consent information was sent is used.
     * 
     */
    consentUpdatedAt?: Scalars['DateTime']
    /**
     * The marketing subscription opt-in level, as described by the M3AAWG best practices guidelines,
     * that the customer gave when they consented to receive marketing material by email.
     * 
     */
    marketingOptInLevel?: CustomerMarketingOptInLevel
    /** The current email marketing state for the customer. */
    marketingState: CustomerEmailMarketingState
    __typename: 'CustomerEmailMarketingConsentState'
}


/** Return type for `customerEmailMarketingConsentUpdate` mutation. */
export interface CustomerEmailMarketingConsentUpdatePayload {
    /**
     * The updated customer.
     * 
     */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerEmailMarketingConsentUpdateUserError[]
    __typename: 'CustomerEmailMarketingConsentUpdatePayload'
}


/** An error that occurs during the execution of `CustomerEmailMarketingConsentUpdate`. */
export interface CustomerEmailMarketingConsentUpdateUserError {
    /** The error code. */
    code?: CustomerEmailMarketingConsentUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerEmailMarketingConsentUpdateUserError'
}


/** Possible error codes that can be returned by `CustomerEmailMarketingConsentUpdateUserError`. */
export type CustomerEmailMarketingConsentUpdateUserErrorCode = 'INVALID' | 'INCLUSION' | 'INTERNAL_ERROR' | 'MISSING_ARGUMENT'


/**
 * The possible email marketing states for a customer.
 * 
 */
export type CustomerEmailMarketingState = 'NOT_SUBSCRIBED' | 'PENDING' | 'SUBSCRIBED' | 'UNSUBSCRIBED' | 'REDACTED' | 'INVALID'


/** Return type for `customerGenerateAccountActivationUrl` mutation. */
export interface CustomerGenerateAccountActivationUrlPayload {
    /** The generated account activation URL. */
    accountActivationUrl?: Scalars['URL']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerGenerateAccountActivationUrlPayload'
}


/** Represents a customer's visiting activities on a shop's online store. */
export interface CustomerJourney {
    /** The position of the current order within the customer's order history. */
    customerOrderIndex: Scalars['Int']
    /** The amount of days between first session and order creation date. First session represents first session since the last order, or first session within the 30 day attribution window, if more than 30 days has passed since the last order. */
    daysToConversion: Scalars['Int']
    /** The customer's first session going into the shop. */
    firstVisit: CustomerVisit
    /** The last session before an order is made. */
    lastVisit?: CustomerVisit
    /** Events preceding a customer order, such as shop sessions. */
    moments: CustomerMoment[]
    __typename: 'CustomerJourney'
}


/** Represents a customer's visiting activities on a shop's online store. */
export interface CustomerJourneySummary {
    /** The position of the current order within the customer's order history. Test orders aren't included. */
    customerOrderIndex?: Scalars['Int']
    /** The number of days between the first session and the order creation date. The first session represents the first session since the last order, or the first session within the 30 day attribution window, if more than 30 days have passed since the last order. */
    daysToConversion?: Scalars['Int']
    /** The customer's first session going into the shop. */
    firstVisit?: CustomerVisit
    /** The last session before an order is made. */
    lastVisit?: CustomerVisit
    /** The events preceding a customer's order, such as shop sessions. */
    moments?: CustomerMomentConnection
    /** The total number of customer moments associated with this order. Returns null if the order is still in the process of being attributed. */
    momentsCount?: Scalars['Int']
    /** Whether the attributed sessions for the order have been created yet. */
    ready: Scalars['Boolean']
    __typename: 'CustomerJourneySummary'
}


/**
 * The possible values for the marketing subscription opt-in level enabled at the time the customer consented to receive marketing information.
 * 
 * The levels are defined by [the M3AAWG best practices guideline
 *   document](https://www.m3aawg.org/sites/maawg/files/news/M3AAWG_Senders_BCP_Ver3-2015-02.pdf).
 * 
 */
export type CustomerMarketingOptInLevel = 'SINGLE_OPT_IN' | 'CONFIRMED_OPT_IN' | 'UNKNOWN'


/** The error blocking a customer merge. */
export interface CustomerMergeError {
    /** The list of fields preventing the customer from being merged. */
    errorFields: CustomerMergeErrorFieldType[]
    /** The customer merge error message. */
    message: Scalars['String']
    __typename: 'CustomerMergeError'
}


/** Possible error codes that can be returned by `CustomerMergeUserError`. */
export type CustomerMergeErrorCode = 'INTERNAL_ERROR' | 'INVALID_CUSTOMER' | 'INVALID_CUSTOMER_ID' | 'CUSTOMER_HAS_GIFT_CARDS' | 'MISSING_OVERRIDE_ATTRIBUTE' | 'OVERRIDE_ATTRIBUTE_INVALID'


/**
 * The types of the hard blockers preventing a customer from being merged to another customer.
 * 
 */
export type CustomerMergeErrorFieldType = 'DELETED_AT' | 'REDACTED_AT' | 'SUBSCRIPTIONS' | 'MERGE_IN_PROGRESS' | 'GIFT_CARDS' | 'COMPANY_CONTACT' | 'CUSTOMER_PAYMENT_METHODS' | 'PENDING_DATA_REQUEST' | 'MULTIPASS_IDENTIFIER'


/** Return type for `customerMerge` mutation. */
export interface CustomerMergePayload {
    /** The asynchronous job for merging the customers. */
    job?: Job
    /** The ID of the customer resulting from the merge. */
    resultingCustomerId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerMergeUserError[]
    __typename: 'CustomerMergePayload'
}


/** A preview of the results of a customer merge request. */
export interface CustomerMergePreview {
    /** The fields that can be used to override the default fields. */
    alternateFields?: CustomerMergePreviewAlternateFields
    /** The fields that will block the merge if the two customers are merged. */
    blockingFields?: CustomerMergePreviewBlockingFields
    /** The errors blocking the customer merge. */
    customerMergeErrors?: CustomerMergeError[]
    /** The fields that will be kept if the two customers are merged. */
    defaultFields?: CustomerMergePreviewDefaultFields
    /** The resulting customer ID if the two customers are merged. */
    resultingCustomerId?: Scalars['ID']
    __typename: 'CustomerMergePreview'
}


/** The fields that can be used to override the default fields. */
export interface CustomerMergePreviewAlternateFields {
    /** The default address of a customer. */
    defaultAddress?: MailingAddress
    /** The email state of a customer. */
    email?: CustomerEmailAddress
    /** The first name of a customer. */
    firstName?: Scalars['String']
    /** The last name of a customer. */
    lastName?: Scalars['String']
    /** The phone number state of a customer. */
    phoneNumber?: CustomerPhoneNumber
    __typename: 'CustomerMergePreviewAlternateFields'
}


/**
 * The blocking fields of a customer merge preview. These fields will block customer merge unless edited.
 * 
 */
export interface CustomerMergePreviewBlockingFields {
    /**
     * The merged note resulting from a customer merge. The merged note is over the 5000 character limit and will block customer merge.
     * 
     */
    note?: Scalars['String']
    /**
     * The merged tags resulting from a customer merge. The merged tags are over the 250 limit and will block customer merge.
     * 
     */
    tags: Scalars['String'][]
    __typename: 'CustomerMergePreviewBlockingFields'
}


/** The fields that will be kept as part of a customer merge preview. */
export interface CustomerMergePreviewDefaultFields {
    /** The merged addresses resulting from a customer merge. */
    addresses: MailingAddressConnection
    /** The default address resulting from a customer merge. */
    defaultAddress?: MailingAddress
    /** The total number of customer-specific discounts resulting from a customer merge. */
    discountNodeCount: Scalars['UnsignedInt64']
    /** The merged customer-specific discounts resulting from a customer merge. */
    discountNodes: DiscountNodeConnection
    /** The full name of the customer, based on the values for `first_name` and `last_name`. If `first_name` and `last_name` aren't available, then this field falls back to the customer's email address. If the customer's email isn't available, then this field falls back to the customer's phone number. */
    displayName: Scalars['String']
    /** The total number of merged draft orders. */
    draftOrderCount: Scalars['UnsignedInt64']
    /** The merged draft orders resulting from a customer merge. */
    draftOrders: DraftOrderConnection
    /** The email state of a customer. */
    email?: CustomerEmailAddress
    /** The first name resulting from a customer merge. */
    firstName?: Scalars['String']
    /** The total number of merged gift cards. */
    giftCardCount: Scalars['UnsignedInt64']
    /** The merged gift cards resulting from a customer merge. */
    giftCards: GiftCardConnection
    /** The last name resulting from a customer merge. */
    lastName?: Scalars['String']
    /** The total number of merged metafields. */
    metafieldCount: Scalars['UnsignedInt64']
    /** The merged note resulting from a customer merge. */
    note?: Scalars['String']
    /** The total number of merged orders. */
    orderCount: Scalars['UnsignedInt64']
    /** The merged orders resulting from a customer merge. */
    orders: OrderConnection
    /** The phone number state of a customer. */
    phoneNumber?: CustomerPhoneNumber
    /** The merged tags resulting from a customer merge. */
    tags: Scalars['String'][]
    __typename: 'CustomerMergePreviewDefaultFields'
}


/**
 * A merge request for merging two customers.
 * 
 */
export interface CustomerMergeRequest {
    /** The merge errors that occurred during the customer merge request. */
    customerMergeErrors: CustomerMergeError[]
    /** The UUID of the merge job. */
    jobId?: Scalars['ID']
    /** The ID of the customer resulting from the merge. */
    resultingCustomerId: Scalars['ID']
    /** The status of the customer merge request. */
    status: CustomerMergeRequestStatus
    __typename: 'CustomerMergeRequest'
}


/**
 * The status of the customer merge request.
 * 
 */
export type CustomerMergeRequestStatus = 'REQUESTED' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILED'


/** An error that occurs while merging two customers. */
export interface CustomerMergeUserError {
    /** The error code. */
    code?: CustomerMergeErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerMergeUserError'
}


/**
 * An object that represents whether a customer can be merged with another customer.
 * 
 */
export interface CustomerMergeable {
    /**
     * The list of fields preventing the customer from being merged.
     * 
     */
    errorFields: CustomerMergeErrorFieldType[]
    /**
     * Whether the customer can be merged with another customer.
     * 
     */
    isMergeable: Scalars['Boolean']
    /**
     * The merge request if one is currently in progress.
     * 
     */
    mergeInProgress?: CustomerMergeRequest
    /**
     * The reason why the customer can't be merged with another customer.
     * 
     */
    reason?: Scalars['String']
    __typename: 'CustomerMergeable'
}


/** Represents a session preceding an order, often used for building a timeline of events leading to an order. */
export type CustomerMoment = (CustomerVisit) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple CustomerMoments.
 * 
 */
export interface CustomerMomentConnection {
    /** A list of edges. */
    edges: CustomerMomentEdge[]
    /** A list of the nodes contained in CustomerMomentEdge. */
    nodes: CustomerMoment[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CustomerMomentConnection'
}


/**
 * An auto-generated type which holds one CustomerMoment and a cursor during pagination.
 * 
 */
export interface CustomerMomentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CustomerMomentEdge. */
    node: CustomerMoment
    __typename: 'CustomerMomentEdge'
}


/** All possible instruments for CustomerPaymentMethods. */
export type CustomerPaymentInstrument = (CustomerCreditCard | CustomerPaypalBillingAgreement | CustomerShopPayAgreement) & { __isUnion?: true }


/** The billing address of a payment instrument. */
export interface CustomerPaymentInstrumentBillingAddress {
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: Scalars['String']
    /** The name of the city, district, village, or town. */
    city?: Scalars['String']
    /** The name of the country. */
    country?: Scalars['String']
    /**
     * The two-letter code for the country of the address.
     * For example, US.
     * 
     */
    countryCode?: CountryCode
    /** The name of the buyer of the address. */
    name?: Scalars['String']
    /** The region of the address, such as the province, state, or district. */
    province?: Scalars['String']
    /**
     * The two-letter code for the region.
     * For example, ON.
     * 
     */
    provinceCode?: Scalars['String']
    /** The zip or postal code of the address. */
    zip?: Scalars['String']
    __typename: 'CustomerPaymentInstrumentBillingAddress'
}


/** A customer's payment method. */
export interface CustomerPaymentMethod {
    /** The customer to whom the payment method belongs. */
    customer?: Customer
    /** The ID of this payment method. */
    id: Scalars['ID']
    /** The instrument for this payment method. */
    instrument?: CustomerPaymentInstrument
    /** The time that the payment method was revoked. */
    revokedAt?: Scalars['DateTime']
    /** The revocation reason for this payment method. */
    revokedReason?: CustomerPaymentMethodRevocationReason
    /** List Subscription Contracts. */
    subscriptionContracts: SubscriptionContractConnection
    __typename: 'CustomerPaymentMethod'
}


/**
 * An auto-generated type for paginating through multiple CustomerPaymentMethods.
 * 
 */
export interface CustomerPaymentMethodConnection {
    /** A list of edges. */
    edges: CustomerPaymentMethodEdge[]
    /** A list of the nodes contained in CustomerPaymentMethodEdge. */
    nodes: CustomerPaymentMethod[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CustomerPaymentMethodConnection'
}


/** Return type for `customerPaymentMethodCreateFromDuplicationData` mutation. */
export interface CustomerPaymentMethodCreateFromDuplicationDataPayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodCreateFromDuplicationDataUserError[]
    __typename: 'CustomerPaymentMethodCreateFromDuplicationDataPayload'
}


/** An error that occurs during the execution of `CustomerPaymentMethodCreateFromDuplicationData`. */
export interface CustomerPaymentMethodCreateFromDuplicationDataUserError {
    /** The error code. */
    code?: CustomerPaymentMethodCreateFromDuplicationDataUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerPaymentMethodCreateFromDuplicationDataUserError'
}


/** Possible error codes that can be returned by `CustomerPaymentMethodCreateFromDuplicationDataUserError`. */
export type CustomerPaymentMethodCreateFromDuplicationDataUserErrorCode = 'TOO_MANY_REQUESTS' | 'CUSTOMER_DOES_NOT_EXIST' | 'INVALID_ENCRYPTED_DUPLICATION_DATA'


/** Return type for `customerPaymentMethodCreditCardCreate` mutation. */
export interface CustomerPaymentMethodCreditCardCreatePayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerPaymentMethodCreditCardCreatePayload'
}


/** Return type for `customerPaymentMethodCreditCardUpdate` mutation. */
export interface CustomerPaymentMethodCreditCardUpdatePayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerPaymentMethodCreditCardUpdatePayload'
}


/**
 * An auto-generated type which holds one CustomerPaymentMethod and a cursor during pagination.
 * 
 */
export interface CustomerPaymentMethodEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CustomerPaymentMethodEdge. */
    node: CustomerPaymentMethod
    __typename: 'CustomerPaymentMethodEdge'
}


/** Return type for `customerPaymentMethodGetDuplicationData` mutation. */
export interface CustomerPaymentMethodGetDuplicationDataPayload {
    /** The encrypted data from the payment method to be duplicated. */
    encryptedDuplicationData?: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodGetDuplicationDataUserError[]
    __typename: 'CustomerPaymentMethodGetDuplicationDataPayload'
}


/** An error that occurs during the execution of `CustomerPaymentMethodGetDuplicationData`. */
export interface CustomerPaymentMethodGetDuplicationDataUserError {
    /** The error code. */
    code?: CustomerPaymentMethodGetDuplicationDataUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerPaymentMethodGetDuplicationDataUserError'
}


/** Possible error codes that can be returned by `CustomerPaymentMethodGetDuplicationDataUserError`. */
export type CustomerPaymentMethodGetDuplicationDataUserErrorCode = 'PAYMENT_METHOD_DOES_NOT_EXIST' | 'INVALID_INSTRUMENT' | 'TOO_MANY_REQUESTS' | 'CUSTOMER_DOES_NOT_EXIST' | 'SAME_SHOP' | 'INVALID_ORGANIZATION_SHOP'


/** Return type for `customerPaymentMethodGetUpdateUrl` mutation. */
export interface CustomerPaymentMethodGetUpdateUrlPayload {
    /** The URL to redirect the customer to update the payment method. */
    updatePaymentMethodUrl?: Scalars['URL']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodGetUpdateUrlUserError[]
    __typename: 'CustomerPaymentMethodGetUpdateUrlPayload'
}


/** An error that occurs during the execution of `CustomerPaymentMethodGetUpdateUrl`. */
export interface CustomerPaymentMethodGetUpdateUrlUserError {
    /** The error code. */
    code?: CustomerPaymentMethodGetUpdateUrlUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerPaymentMethodGetUpdateUrlUserError'
}


/** Possible error codes that can be returned by `CustomerPaymentMethodGetUpdateUrlUserError`. */
export type CustomerPaymentMethodGetUpdateUrlUserErrorCode = 'PAYMENT_METHOD_DOES_NOT_EXIST' | 'INVALID_INSTRUMENT' | 'TOO_MANY_REQUESTS' | 'CUSTOMER_DOES_NOT_EXIST'


/** Return type for `customerPaymentMethodPaypalBillingAgreementCreate` mutation. */
export interface CustomerPaymentMethodPaypalBillingAgreementCreatePayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodUserError[]
    __typename: 'CustomerPaymentMethodPaypalBillingAgreementCreatePayload'
}


/** Return type for `customerPaymentMethodPaypalBillingAgreementUpdate` mutation. */
export interface CustomerPaymentMethodPaypalBillingAgreementUpdatePayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodUserError[]
    __typename: 'CustomerPaymentMethodPaypalBillingAgreementUpdatePayload'
}


/** Return type for `customerPaymentMethodRemoteCreate` mutation. */
export interface CustomerPaymentMethodRemoteCreatePayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodRemoteUserError[]
    __typename: 'CustomerPaymentMethodRemoteCreatePayload'
}


/** Return type for `customerPaymentMethodRemoteCreditCardCreate` mutation. */
export interface CustomerPaymentMethodRemoteCreditCardCreatePayload {
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerPaymentMethodUserError[]
    __typename: 'CustomerPaymentMethodRemoteCreditCardCreatePayload'
}


/** Represents an error in the input of a mutation. */
export interface CustomerPaymentMethodRemoteUserError {
    /** The error code. */
    code?: CustomerPaymentMethodRemoteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerPaymentMethodRemoteUserError'
}


/** Possible error codes that can be returned by `CustomerPaymentMethodRemoteUserError`. */
export type CustomerPaymentMethodRemoteUserErrorCode = 'INVALID' | 'PRESENT' | 'TAKEN' | 'EXACTLY_ONE_REMOTE_REFERENCE_REQUIRED' | 'AUTHORIZE_NET_NOT_ENABLED_FOR_SUBSCRIPTIONS' | 'BRAINTREE_NOT_ENABLED_FOR_SUBSCRIPTIONS'


/** The revocation reason types for a customer payment method. */
export type CustomerPaymentMethodRevocationReason = 'AUTHORIZE_NET_GATEWAY_NOT_ENABLED' | 'AUTHORIZE_NET_RETURNED_NO_PAYMENT_METHOD' | 'FAILED_TO_UPDATE_CREDIT_CARD' | 'STRIPE_API_AUTHENTICATION_ERROR' | 'STRIPE_API_INVALID_REQUEST_ERROR' | 'STRIPE_GATEWAY_NOT_ENABLED' | 'STRIPE_RETURNED_NO_PAYMENT_METHOD' | 'STRIPE_PAYMENT_METHOD_NOT_CARD' | 'BRAINTREE_API_AUTHENTICATION_ERROR' | 'BRAINTREE_GATEWAY_NOT_ENABLED' | 'BRAINTREE_RETURNED_NO_PAYMENT_METHOD' | 'BRAINTREE_PAYMENT_METHOD_NOT_CARD' | 'MANUALLY_REVOKED' | 'MERGED'


/** Return type for `customerPaymentMethodRevoke` mutation. */
export interface CustomerPaymentMethodRevokePayload {
    /** The ID of the revoked customer payment method. */
    revokedCustomerPaymentMethodId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerPaymentMethodRevokePayload'
}


/** Return type for `customerPaymentMethodSendUpdateEmail` mutation. */
export interface CustomerPaymentMethodSendUpdateEmailPayload {
    /** The customer to whom an update payment method email was sent. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerPaymentMethodSendUpdateEmailPayload'
}


/** Represents an error in the input of a mutation. */
export interface CustomerPaymentMethodUserError {
    /** The error code. */
    code?: CustomerPaymentMethodUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerPaymentMethodUserError'
}


/** Possible error codes that can be returned by `CustomerPaymentMethodUserError`. */
export type CustomerPaymentMethodUserErrorCode = 'INVALID' | 'PRESENT' | 'TAKEN'


/** Represents a PayPal instrument for customer payment method. */
export interface CustomerPaypalBillingAgreement {
    /** The billing address of this payment method. */
    billingAddress?: CustomerPaymentInstrumentBillingAddress
    /** Whether the PayPal billing agreement is inactive. */
    inactive: Scalars['Boolean']
    /** Whether the payment method can be revoked.The payment method can be revoked if there are no active subscription contracts. */
    isRevocable: Scalars['Boolean']
    /** The customers's PayPal account email address. */
    paypalAccountEmail?: Scalars['String']
    __typename: 'CustomerPaypalBillingAgreement'
}


/**
 * A phone number.
 * 
 */
export interface CustomerPhoneNumber {
    /** Whether the customer has subscribed to SMS marketing material. */
    marketingState: CustomerSmsMarketingState
    /** A customer's phone number. */
    phoneNumber: Scalars['String']
    __typename: 'CustomerPhoneNumber'
}


/** The valid tiers for the predicted spend of a customer with a shop. */
export type CustomerPredictedSpendTier = 'HIGH' | 'MEDIUM' | 'LOW'


/**
 * The possible product subscription states for a customer, as defined by the customer's subscription contracts.
 * 
 */
export type CustomerProductSubscriberStatus = 'ACTIVE' | 'CANCELLED' | 'EXPIRED' | 'FAILED' | 'NEVER_SUBSCRIBED' | 'PAUSED'


/** Return type for `customerRemoveTaxExemptions` mutation. */
export interface CustomerRemoveTaxExemptionsPayload {
    /** The updated customer. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerRemoveTaxExemptionsPayload'
}


/** Return type for `customerReplaceTaxExemptions` mutation. */
export interface CustomerReplaceTaxExemptionsPayload {
    /** The updated customer. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerReplaceTaxExemptionsPayload'
}


/** The set of valid sort keys for the CustomerSavedSearch query. */
export type CustomerSavedSearchSortKeys = 'NAME' | 'ID' | 'RELEVANCE'


/**
 * The member of a segment.
 * 
 */
export interface CustomerSegmentMember {
    /** The total amount of money that the member has spent on orders. */
    amountSpent?: MoneyV2
    /** The member's default address. */
    defaultAddress?: MailingAddress
    /** The member's default email address. */
    defaultEmailAddress?: CustomerEmailAddress
    /** The member's default phone number. */
    defaultPhoneNumber?: CustomerPhoneNumber
    /** The full name of the member, which is based on the values of the `first_name` and `last_name` fields. If the member's first name and last name aren't available, then the customer's email address is used. If the customer's email address isn't available, then the customer's phone number is used. */
    displayName: Scalars['String']
    /** The member's first name. */
    firstName?: Scalars['String']
    /** The member’s ID. */
    id: Scalars['ID']
    /** The member's last name. */
    lastName?: Scalars['String']
    /** The ID of the member's most recent order. */
    lastOrderId?: Scalars['ID']
    /** Whether the customer can be merged with another customer. */
    mergeable: CustomerMergeable
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** A note about the member. */
    note?: Scalars['String']
    /** The total number of orders that the member has made. */
    numberOfOrders?: Scalars['UnsignedInt64']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    __typename: 'CustomerSegmentMember'
}


/** The connection type for the `CustomerSegmentMembers` object. */
export interface CustomerSegmentMemberConnection {
    /** A list of edges. */
    edges: CustomerSegmentMemberEdge[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The statistics for a given segment. */
    statistics: SegmentStatistics
    /** The total number of members in a given segment. */
    totalCount: Scalars['Int']
    __typename: 'CustomerSegmentMemberConnection'
}


/**
 * An auto-generated type which holds one CustomerSegmentMember and a cursor during pagination.
 * 
 */
export interface CustomerSegmentMemberEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CustomerSegmentMemberEdge. */
    node: CustomerSegmentMember
    __typename: 'CustomerSegmentMemberEdge'
}


/** A job to determine a list of members, such as customers, that are associated with an individual segment. */
export interface CustomerSegmentMembersQuery {
    /** The current total number of members in a given segment. */
    currentCount: Scalars['Int']
    /** This indicates if the job is still queued or has been run. */
    done: Scalars['Boolean']
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id: Scalars['ID']
    __typename: 'CustomerSegmentMembersQuery'
}


/** Return type for `customerSegmentMembersQueryCreate` mutation. */
export interface CustomerSegmentMembersQueryCreatePayload {
    /** The newly created customer segment members query. */
    customerSegmentMembersQuery?: CustomerSegmentMembersQuery
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerSegmentMembersQueryUserError[]
    __typename: 'CustomerSegmentMembersQueryCreatePayload'
}


/**
 * Represents a customer segment members query custom error.
 * 
 */
export interface CustomerSegmentMembersQueryUserError {
    /** The error code. */
    code?: CustomerSegmentMembersQueryUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerSegmentMembersQueryUserError'
}


/** Possible error codes that can be returned by `CustomerSegmentMembersQueryUserError`. */
export type CustomerSegmentMembersQueryUserErrorCode = 'INVALID'


/** Represents a Shop Pay card instrument for customer payment method. */
export interface CustomerShopPayAgreement {
    /** The billing address of the card. */
    billingAddress?: CustomerCreditCardBillingAddress
    /** Whether the card is about to expire. */
    expiresSoon: Scalars['Boolean']
    /** The expiry month of the card. */
    expiryMonth: Scalars['Int']
    /** The expiry year of the card. */
    expiryYear: Scalars['Int']
    /** Whether the Shop Pay billing agreement is inactive. */
    inactive: Scalars['Boolean']
    /** The payment method can be revoked if there are no active subscription contracts. */
    isRevocable: Scalars['Boolean']
    /** The last 4 digits of the card. */
    lastDigits: Scalars['String']
    /** The masked card number with only the last 4 digits displayed. */
    maskedNumber: Scalars['String']
    /** The name of the card holder. */
    name: Scalars['String']
    __typename: 'CustomerShopPayAgreement'
}


/** An error that occurs during execution of an SMS marketing consent mutation. */
export interface CustomerSmsMarketingConsentError {
    /** The error code. */
    code?: CustomerSmsMarketingConsentErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'CustomerSmsMarketingConsentError'
}


/** Possible error codes that can be returned by `CustomerSmsMarketingConsentError`. */
export type CustomerSmsMarketingConsentErrorCode = 'INVALID' | 'INCLUSION' | 'INTERNAL_ERROR' | 'MISSING_ARGUMENT'


/**
 * The record of when a customer consented to receive marketing material by SMS.
 * 
 * The customer's consent state reflects the record with the most recent date when consent was updated.
 * 
 */
export interface CustomerSmsMarketingConsentState {
    /** The source from which the SMS marketing information for the customer was collected. */
    consentCollectedFrom?: CustomerConsentCollectedFrom
    /**
     * The date and time when the customer consented to receive marketing material by SMS.
     * If no date is provided, then the date and time when the consent information was sent is used.
     * 
     */
    consentUpdatedAt?: Scalars['DateTime']
    /**
     * The marketing subscription opt-in level that was set when the customer consented to receive marketing information.
     * 
     */
    marketingOptInLevel: CustomerMarketingOptInLevel
    /** The current SMS marketing state for the customer. */
    marketingState: CustomerSmsMarketingState
    __typename: 'CustomerSmsMarketingConsentState'
}


/** Return type for `customerSmsMarketingConsentUpdate` mutation. */
export interface CustomerSmsMarketingConsentUpdatePayload {
    /**
     * The updated customer.
     * 
     */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: CustomerSmsMarketingConsentError[]
    __typename: 'CustomerSmsMarketingConsentUpdatePayload'
}


/**
 * The valid SMS marketing states for a customer’s phone number.
 * 
 */
export type CustomerSmsMarketingState = 'NOT_SUBSCRIBED' | 'PENDING' | 'SUBSCRIBED' | 'UNSUBSCRIBED' | 'REDACTED'


/** The set of valid sort keys for the Customer query. */
export type CustomerSortKeys = 'CREATED_AT' | 'NAME' | 'LOCATION' | 'ORDERS_COUNT' | 'LAST_ORDER_DATE' | 'TOTAL_SPENT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/** The valid values for the state of a customer's account with a shop. */
export type CustomerState = 'DECLINED' | 'DISABLED' | 'ENABLED' | 'INVITED'


/** A customer's computed statistics. */
export interface CustomerStatistics {
    /** The predicted spend tier of a customer with a shop. */
    predictedSpendTier?: CustomerPredictedSpendTier
    __typename: 'CustomerStatistics'
}


/** Return type for `customerUpdateDefaultAddress` mutation. */
export interface CustomerUpdateDefaultAddressPayload {
    /** The customer whose address was updated. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerUpdateDefaultAddressPayload'
}


/** Return type for `customerUpdate` mutation. */
export interface CustomerUpdatePayload {
    /** The updated customer. */
    customer?: Customer
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'CustomerUpdatePayload'
}


/** Represents a customer's session visiting a shop's online store, including information about the marketing activity attributed to starting the session. */
export interface CustomerVisit {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** URL of the first page the customer landed on for the session. */
    landingPage?: Scalars['URL']
    /** Landing page information with URL linked in HTML. For example, the first page the customer visited was store.myshopify.com/products/1. */
    landingPageHtml?: Scalars['HTML']
    /**
     * Represent actions taken by an app, on behalf of a merchant,
     * to market Shopify resources such as products, collections, and discounts.
     * 
     */
    marketingEvent?: MarketingEvent
    /** The date and time when the customer's session occurred. */
    occurredAt: Scalars['DateTime']
    /**
     * Marketing referral code from the link that the customer clicked to visit the store.
     * Supports the following URL attributes: _ref_, _source_, or _r_.
     * For example, if the URL is myshopifystore.com/products/slide?ref=j2tj1tn2, then this value is j2tj1tn2.
     * 
     */
    referralCode?: Scalars['String']
    /** Referral information with URLs linked in HTML. */
    referralInfoHtml: Scalars['FormattedString']
    /**
     * Webpage where the customer clicked a link that sent them to the online store.
     * For example, _https://randomblog.com/page1_ or _android-app://com.google.android.gm_.
     * 
     */
    referrerUrl?: Scalars['URL']
    /**
     * Source from which the customer visited the store, such as a platform (Facebook, Google), email, direct,
     * a website domain, QR code, or unknown.
     * 
     */
    source: Scalars['String']
    /** Describes the source explicitly for first or last session. */
    sourceDescription?: Scalars['String']
    /** Type of marketing tactic. */
    sourceType?: MarketingTactic
    /** A set of UTM parameters gathered from the URL parameters of the referrer. */
    utmParameters?: UTMParameters
    __typename: 'CustomerVisit'
}


/**
 * This type returns the information about the product and product variant from a customer visit.
 * 
 */
export interface CustomerVisitProductInfo {
    /** The product information. If `null`, then the product was deleted from the store. */
    product?: Product
    /** The quantity of the product that the customer requested. */
    quantity: Scalars['Int']
    /** The product variant information, if the product variant exists. */
    variant?: ProductVariant
    __typename: 'CustomerVisitProductInfo'
}


/**
 * An auto-generated type for paginating through multiple CustomerVisitProductInfos.
 * 
 */
export interface CustomerVisitProductInfoConnection {
    /** A list of edges. */
    edges: CustomerVisitProductInfoEdge[]
    /** A list of the nodes contained in CustomerVisitProductInfoEdge. */
    nodes: CustomerVisitProductInfo[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'CustomerVisitProductInfoConnection'
}


/**
 * An auto-generated type which holds one CustomerVisitProductInfo and a cursor during pagination.
 * 
 */
export interface CustomerVisitProductInfoEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of CustomerVisitProductInfoEdge. */
    node: CustomerVisitProductInfo
    __typename: 'CustomerVisitProductInfoEdge'
}


/** Days of the week from Monday to Sunday. */
export type DayOfTheWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'


/**
 * A token that delegates a set of scopes from the original permission.
 * 
 * To learn more about creating delegate access tokens, refer to
 * [Delegate OAuth access tokens to subsystems]
 * (https://shopify.dev/apps/auth/oauth/delegate-access-tokens).
 * 
 */
export interface DelegateAccessToken {
    /** The list of permissions associated with the token. */
    accessScopes: Scalars['String'][]
    /** The issued delegate access token. */
    accessToken: Scalars['String']
    /** The date and time when the delegate access token was created. */
    createdAt: Scalars['DateTime']
    __typename: 'DelegateAccessToken'
}


/** Return type for `delegateAccessTokenCreate` mutation. */
export interface DelegateAccessTokenCreatePayload {
    /** The delegate access token. */
    delegateAccessToken?: DelegateAccessToken
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DelegateAccessTokenCreateUserError[]
    __typename: 'DelegateAccessTokenCreatePayload'
}


/** An error that occurs during the execution of `DelegateAccessTokenCreate`. */
export interface DelegateAccessTokenCreateUserError {
    /** The error code. */
    code?: DelegateAccessTokenCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'DelegateAccessTokenCreateUserError'
}


/** Possible error codes that can be returned by `DelegateAccessTokenCreateUserError`. */
export type DelegateAccessTokenCreateUserErrorCode = 'EMPTY_ACCESS_SCOPE' | 'DELEGATE_ACCESS_TOKEN' | 'NEGATIVE_EXPIRES_IN' | 'EXPIRES_AFTER_PARENT' | 'REFRESH_TOKEN' | 'PERSISTENCE_FAILED' | 'UNKNOWN_SCOPES'


/** Return type for `delegateAccessTokenDestroy` mutation. */
export interface DelegateAccessTokenDestroyPayload {
    /** The user's shop. */
    shop: Shop
    /** The status of the delegate access token destroy operation. Returns true if successful. */
    status?: Scalars['Boolean']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DelegateAccessTokenDestroyUserError[]
    __typename: 'DelegateAccessTokenDestroyPayload'
}


/** An error that occurs during the execution of `DelegateAccessTokenDestroy`. */
export interface DelegateAccessTokenDestroyUserError {
    /** The error code. */
    code?: DelegateAccessTokenDestroyUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'DelegateAccessTokenDestroyUserError'
}


/** Possible error codes that can be returned by `DelegateAccessTokenDestroyUserError`. */
export type DelegateAccessTokenDestroyUserErrorCode = 'PERSISTENCE_FAILED' | 'ACCESS_TOKEN_NOT_FOUND' | 'CAN_ONLY_DELETE_DELEGATE_TOKENS' | 'ACCESS_DENIED'


/**
 * Deletion events chronicle the destruction of resources (e.g. products and collections).
 * Once deleted, the deletion event is the only trace of the original's existence,
 * as the resource itself has been removed and can no longer be accessed.
 * 
 */
export interface DeletionEvent {
    /** The date and time when the deletion event for the related resource was generated. */
    occurredAt: Scalars['DateTime']
    /** The ID of the resource that was deleted. */
    subjectId: Scalars['ID']
    /** The type of resource that was deleted. */
    subjectType: DeletionEventSubjectType
    __typename: 'DeletionEvent'
}


/**
 * An auto-generated type for paginating through multiple DeletionEvents.
 * 
 */
export interface DeletionEventConnection {
    /** A list of edges. */
    edges: DeletionEventEdge[]
    /** A list of the nodes contained in DeletionEventEdge. */
    nodes: DeletionEvent[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DeletionEventConnection'
}


/**
 * An auto-generated type which holds one DeletionEvent and a cursor during pagination.
 * 
 */
export interface DeletionEventEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DeletionEventEdge. */
    node: DeletionEvent
    __typename: 'DeletionEventEdge'
}


/** The set of valid sort keys for the DeletionEvent query. */
export type DeletionEventSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** The supported subject types of deletion events. */
export type DeletionEventSubjectType = 'COLLECTION' | 'PRODUCT'


/** A shipping service and a list of countries that the service is available for. */
export interface DeliveryAvailableService {
    /** The countries the service provider ships to. */
    countries: DeliveryCountryCodesOrRestOfWorld
    /** The name of the service. */
    name: Scalars['String']
    __typename: 'DeliveryAvailableService'
}


/**
 * Represents a branded promise presented to buyers.
 * 
 */
export interface DeliveryBrandedPromise {
    /** The handle of the branded promise.  For example: `shop_promise`. */
    handle: Scalars['String']
    /** The name of the branded promise.  For example: `Shop Promise`. */
    name: Scalars['String']
    __typename: 'DeliveryBrandedPromise'
}


/** A shipping service provider or a carrier account. */
export interface DeliveryCarrierService {
    /** The list of services offered for given destinations. */
    availableServicesForCountries: DeliveryAvailableService[]
    /** The properly formatted name of the shipping service provider, ready to display. */
    formattedName?: Scalars['String']
    /** The logo of the service provider. */
    icon: Image
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the shipping service provider. */
    name?: Scalars['String']
    __typename: 'DeliveryCarrierService'
}


/** A carrier service and the associated list of shop locations. */
export interface DeliveryCarrierServiceAndLocations {
    /** The carrier service. */
    carrierService: DeliveryCarrierService
    /** The list of locations that support this carrier service. */
    locations: Location[]
    __typename: 'DeliveryCarrierServiceAndLocations'
}


/** A condition that must pass for a delivery method definition to be applied to an order. */
export interface DeliveryCondition {
    /** The value (weight or price) that the condition field is compared to. */
    conditionCriteria: DeliveryConditionCriteria
    /** The field to compare the criterion value against, using the operator. */
    field: DeliveryConditionField
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The operator to compare the field and criterion value. */
    operator: DeliveryConditionOperator
    __typename: 'DeliveryCondition'
}


/** The value (weight or price) that the condition field is compared to. */
export type DeliveryConditionCriteria = (MoneyV2 | Weight) & { __isUnion?: true }


/** The field type that the condition will be applied to. */
export type DeliveryConditionField = 'TOTAL_WEIGHT' | 'TOTAL_PRICE'


/** The operator to use to determine if the condition passes. */
export type DeliveryConditionOperator = 'GREATER_THAN_OR_EQUAL_TO' | 'LESS_THAN_OR_EQUAL_TO'


/** A country that is used to define a shipping zone. */
export interface DeliveryCountry {
    /**
     * A two-letter country code in ISO 3166-1 alpha-2 standard.
     * It also includes a flag indicating whether the country should be
     * a part of the 'Rest Of World' shipping zone.
     * 
     */
    code: DeliveryCountryCodeOrRestOfWorld
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The full name of the country. */
    name: Scalars['String']
    /** The list of regions associated with this country. */
    provinces: DeliveryProvince[]
    /** The translated name of the country. The translation returned is based on the system's locale. */
    translatedName: Scalars['String']
    __typename: 'DeliveryCountry'
}


/** The country details and the associated shipping zone. */
export interface DeliveryCountryAndZone {
    /** The country details. */
    country: DeliveryCountry
    /** The name of the shipping zone. */
    zone: Scalars['String']
    __typename: 'DeliveryCountryAndZone'
}


/**
 * The country code and whether the country is a part of the 'Rest Of World' shipping zone.
 * 
 */
export interface DeliveryCountryCodeOrRestOfWorld {
    /** The country code in the ISO 3166-1 alpha-2 format. */
    countryCode?: CountryCode
    /** Whether the country is a part of the 'Rest of World' shipping zone. */
    restOfWorld: Scalars['Boolean']
    __typename: 'DeliveryCountryCodeOrRestOfWorld'
}


/**
 * The list of country codes and information whether the countries
 * are a part of the 'Rest Of World' shipping zone.
 * 
 */
export interface DeliveryCountryCodesOrRestOfWorld {
    /** List of applicable country codes in the ISO 3166-1 alpha-2 format. */
    countryCodes: CountryCode[]
    /** Whether the countries are a part of the 'Rest of World' shipping zone. */
    restOfWorld: Scalars['Boolean']
    __typename: 'DeliveryCountryCodesOrRestOfWorld'
}


/** A delivery customization. */
export interface DeliveryCustomization {
    /** The enabled status of the delivery customization. */
    enabled: Scalars['Boolean']
    /** The error history on the most recent version of the delivery customization. */
    errorHistory?: FunctionsErrorHistory
    /** The ID of the Shopify Function implementing the delivery customization. */
    functionId: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The Shopify Function implementing the delivery customization. */
    shopifyFunction: ShopifyFunction
    /** The title of the delivery customization. */
    title: Scalars['String']
    __typename: 'DeliveryCustomization'
}


/** Return type for `deliveryCustomizationActivation` mutation. */
export interface DeliveryCustomizationActivationPayload {
    /** The IDs of the updated delivery customizations. */
    ids?: Scalars['String'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DeliveryCustomizationError[]
    __typename: 'DeliveryCustomizationActivationPayload'
}


/**
 * An auto-generated type for paginating through multiple DeliveryCustomizations.
 * 
 */
export interface DeliveryCustomizationConnection {
    /** A list of edges. */
    edges: DeliveryCustomizationEdge[]
    /** A list of the nodes contained in DeliveryCustomizationEdge. */
    nodes: DeliveryCustomization[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DeliveryCustomizationConnection'
}


/** Return type for `deliveryCustomizationCreate` mutation. */
export interface DeliveryCustomizationCreatePayload {
    /** Returns the created delivery customization. */
    deliveryCustomization?: DeliveryCustomization
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DeliveryCustomizationError[]
    __typename: 'DeliveryCustomizationCreatePayload'
}


/** Return type for `deliveryCustomizationDelete` mutation. */
export interface DeliveryCustomizationDeletePayload {
    /** Returns the deleted delivery customization ID. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DeliveryCustomizationError[]
    __typename: 'DeliveryCustomizationDeletePayload'
}


/**
 * An auto-generated type which holds one DeliveryCustomization and a cursor during pagination.
 * 
 */
export interface DeliveryCustomizationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DeliveryCustomizationEdge. */
    node: DeliveryCustomization
    __typename: 'DeliveryCustomizationEdge'
}


/** An error that occurs during the execution of a delivery customization mutation. */
export interface DeliveryCustomizationError {
    /** The error code. */
    code?: DeliveryCustomizationErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'DeliveryCustomizationError'
}


/** Possible error codes that can be returned by `DeliveryCustomizationError`. */
export type DeliveryCustomizationErrorCode = 'INVALID' | 'FUNCTION_NOT_FOUND' | 'DELIVERY_CUSTOMIZATION_NOT_FOUND' | 'DELIVERY_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE' | 'UNAUTHORIZED_APP_SCOPE' | 'MAXIMUM_ACTIVE_DELIVERY_CUSTOMIZATIONS' | 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' | 'FUNCTION_DOES_NOT_IMPLEMENT' | 'FUNCTION_PENDING_DELETION' | 'FUNCTION_ID_CANNOT_BE_CHANGED' | 'REQUIRED_INPUT_FIELD' | 'INVALID_METAFIELDS'


/** Return type for `deliveryCustomizationUpdate` mutation. */
export interface DeliveryCustomizationUpdatePayload {
    /** Returns the updated delivery customization. */
    deliveryCustomization?: DeliveryCustomization
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DeliveryCustomizationError[]
    __typename: 'DeliveryCustomizationUpdatePayload'
}


/** Whether the shop is blocked from converting to full multi-location delivery profiles mode. If the shop is blocked, then the blocking reasons are also returned. */
export interface DeliveryLegacyModeBlocked {
    /** Whether the shop can convert to full multi-location delivery profiles mode. */
    blocked: Scalars['Boolean']
    /** The reasons why the shop is blocked from converting to full multi-location delivery profiles mode. */
    reasons?: DeliveryLegacyModeBlockedReason[]
    __typename: 'DeliveryLegacyModeBlocked'
}


/** Reasons the shop is blocked from converting to full multi-location delivery profiles mode. */
export type DeliveryLegacyModeBlockedReason = 'MULTI_LOCATION_DISABLED' | 'NO_LOCATIONS_FULFILLING_ONLINE_ORDERS'


/** Local pickup settings associated with a location. */
export interface DeliveryLocalPickupSettings {
    /** Additional instructions or information related to the local pickup. */
    instructions: Scalars['String']
    /** The estimated pickup time to show customers at checkout. */
    pickupTime: DeliveryLocalPickupTime
    __typename: 'DeliveryLocalPickupSettings'
}


/** Possible pickup time values that a location enabled for local pickup can have. */
export type DeliveryLocalPickupTime = 'ONE_HOUR' | 'TWO_HOURS' | 'FOUR_HOURS' | 'TWENTY_FOUR_HOURS' | 'TWO_TO_FOUR_DAYS' | 'FIVE_OR_MORE_DAYS'


/**
 * A location group is a collection of locations. They share zones and delivery methods across delivery
 * profiles.
 * 
 */
export interface DeliveryLocationGroup {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** A list of all locations that are part of this location group. */
    locations: LocationConnection
    /** A count of all locations that are part of this location group. */
    locationsCount: Scalars['Int']
    __typename: 'DeliveryLocationGroup'
}


/** Links a location group with a zone and the associated method definitions. */
export interface DeliveryLocationGroupZone {
    /** The number of method definitions for the zone. */
    methodDefinitionCounts: DeliveryMethodDefinitionCounts
    /** The method definitions associated to a zone and location group. */
    methodDefinitions: DeliveryMethodDefinitionConnection
    /** The zone associated to a location group. */
    zone: DeliveryZone
    __typename: 'DeliveryLocationGroupZone'
}


/**
 * An auto-generated type for paginating through multiple DeliveryLocationGroupZones.
 * 
 */
export interface DeliveryLocationGroupZoneConnection {
    /** A list of edges. */
    edges: DeliveryLocationGroupZoneEdge[]
    /** A list of the nodes contained in DeliveryLocationGroupZoneEdge. */
    nodes: DeliveryLocationGroupZone[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DeliveryLocationGroupZoneConnection'
}


/**
 * An auto-generated type which holds one DeliveryLocationGroupZone and a cursor during pagination.
 * 
 */
export interface DeliveryLocationGroupZoneEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DeliveryLocationGroupZoneEdge. */
    node: DeliveryLocationGroupZone
    __typename: 'DeliveryLocationGroupZoneEdge'
}


/** Represents an error that happened when changing local pickup settings for a location. */
export interface DeliveryLocationLocalPickupSettingsError {
    /** The error code. */
    code?: DeliveryLocationLocalPickupSettingsErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'DeliveryLocationLocalPickupSettingsError'
}


/** Possible error codes that can be returned by `DeliveryLocationLocalPickupSettingsError`. */
export type DeliveryLocationLocalPickupSettingsErrorCode = 'ACTIVE_LOCATION_NOT_FOUND' | 'GENERIC_ERROR'


/** The delivery method used by a fulfillment order. */
export interface DeliveryMethod {
    /** The branded promise that was presented to the buyer during checkout.  For example: Shop Promise. */
    brandedPromise?: DeliveryBrandedPromise
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The latest delivery date and time when the fulfillment is expected to arrive at the buyer's location. */
    maxDeliveryDateTime?: Scalars['DateTime']
    /** The type of the delivery method. */
    methodType: DeliveryMethodType
    /** The earliest delivery date and time when the fulfillment is expected to arrive at the buyer's location. */
    minDeliveryDateTime?: Scalars['DateTime']
    __typename: 'DeliveryMethod'
}


/**
 * A method definition contains the delivery rate and the conditions that must be met for the method to be
 * applied.
 * 
 */
export interface DeliveryMethodDefinition {
    /** Whether this method definition is active. */
    active: Scalars['Boolean']
    /** The description of the method definition. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The method conditions that must pass for this method definition to be applied to an order. */
    methodConditions: DeliveryCondition[]
    /** The name of the method definition. */
    name: Scalars['String']
    /** The provided rate for this method definition, from a rate definition or participant. */
    rateProvider: DeliveryRateProvider
    __typename: 'DeliveryMethodDefinition'
}


/**
 * An auto-generated type for paginating through multiple DeliveryMethodDefinitions.
 * 
 */
export interface DeliveryMethodDefinitionConnection {
    /** A list of edges. */
    edges: DeliveryMethodDefinitionEdge[]
    /** A list of the nodes contained in DeliveryMethodDefinitionEdge. */
    nodes: DeliveryMethodDefinition[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DeliveryMethodDefinitionConnection'
}


/**
 * The number of method definitions for a zone, separated into merchant-owned and participant definitions.
 * 
 */
export interface DeliveryMethodDefinitionCounts {
    /** The number of participant method definitions for the specified zone. */
    participantDefinitionsCount: Scalars['Int']
    /** The number of merchant-defined method definitions for the specified zone. */
    rateDefinitionsCount: Scalars['Int']
    __typename: 'DeliveryMethodDefinitionCounts'
}


/**
 * An auto-generated type which holds one DeliveryMethodDefinition and a cursor during pagination.
 * 
 */
export interface DeliveryMethodDefinitionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DeliveryMethodDefinitionEdge. */
    node: DeliveryMethodDefinition
    __typename: 'DeliveryMethodDefinitionEdge'
}


/** The different types of method definitions to filter by. */
export type DeliveryMethodDefinitionType = 'MERCHANT' | 'PARTICIPANT'


/** Possible method types that a delivery method can have. */
export type DeliveryMethodType = 'SHIPPING' | 'PICK_UP' | 'NONE' | 'RETAIL' | 'LOCAL'


/**
 * A participant defines carrier-calculated rates for shipping services
 * with a possible merchant-defined fixed fee or a percentage-of-rate fee.
 * 
 */
export interface DeliveryParticipant {
    /**
     * Whether to display new shipping services automatically to the customer when the service becomes available.
     * 
     */
    adaptToNewServicesFlag: Scalars['Boolean']
    /** The carrier used for this participant. */
    carrierService: DeliveryCarrierService
    /** The merchant-defined fixed fee for this participant. */
    fixedFee?: MoneyV2
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The carrier-specific services offered by the participant, and whether each service is active. */
    participantServices: DeliveryParticipantService[]
    /** The merchant-defined percentage-of-rate fee for this participant. */
    percentageOfRateFee: Scalars['Float']
    __typename: 'DeliveryParticipant'
}


/** A mail service provided by the participant. */
export interface DeliveryParticipantService {
    /** Whether the service is active. */
    active: Scalars['Boolean']
    /** The name of the service. */
    name: Scalars['String']
    __typename: 'DeliveryParticipantService'
}


/** How many product variants are in a profile. This count is capped at 500. */
export interface DeliveryProductVariantsCount {
    /** Whether the count has reached the cap of 500. */
    capped: Scalars['Boolean']
    /** The product variant count. */
    count: Scalars['Int']
    __typename: 'DeliveryProductVariantsCount'
}


/**
 * A shipping profile. In Shopify, a shipping profile is a set of shipping rates scoped to a set of products or variants that can be shipped from selected locations to zones.
 * 
 */
export interface DeliveryProfile {
    /** The number of active shipping rates for the profile. */
    activeMethodDefinitionsCount: Scalars['Int']
    /** Whether this is the default profile. */
    default: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Whether this shop has enabled legacy compatibility mode for delivery profiles. */
    legacyMode: Scalars['Boolean']
    /** The number of locations without rates defined. */
    locationsWithoutRatesCount: Scalars['Int']
    /** The name of the delivery profile. */
    name: Scalars['String']
    /** The number of active origin locations for the profile. */
    originLocationCount: Scalars['Int']
    /**
     * @deprecated Use `productVariantsCountV2` instead.
     * The number of product variants for this profile. The count for the default profile is not supported and will return -1.
     */
    productVariantsCount: Scalars['Int']
    /** How many product variants are in this profile. */
    productVariantsCountV2: DeliveryProductVariantsCount
    /** The products and variants associated with this profile. */
    profileItems: DeliveryProfileItemConnection
    /** The location groups and associated zones using this profile. */
    profileLocationGroups: DeliveryProfileLocationGroup[]
    /** Selling plan groups associated with the specified delivery profile. */
    sellingPlanGroups: SellingPlanGroupConnection
    /** List of locations that have not been assigned to a location group for this profile. */
    unassignedLocations: Location[]
    /** List of locations that have not been assigned to a location group for this profile. */
    unassignedLocationsPaginated: LocationConnection
    /** The number of countries with active rates to deliver to. */
    zoneCountryCount: Scalars['Int']
    __typename: 'DeliveryProfile'
}


/**
 * An auto-generated type for paginating through multiple DeliveryProfiles.
 * 
 */
export interface DeliveryProfileConnection {
    /** A list of edges. */
    edges: DeliveryProfileEdge[]
    /** A list of the nodes contained in DeliveryProfileEdge. */
    nodes: DeliveryProfile[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DeliveryProfileConnection'
}


/**
 * An auto-generated type which holds one DeliveryProfile and a cursor during pagination.
 * 
 */
export interface DeliveryProfileEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DeliveryProfileEdge. */
    node: DeliveryProfile
    __typename: 'DeliveryProfileEdge'
}


/** A product and the subset of associated variants that are part of this delivery profile. */
export interface DeliveryProfileItem {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** A product associated with this profile. */
    product: Product
    /** The product variants associated with this delivery profile. */
    variants: ProductVariantConnection
    __typename: 'DeliveryProfileItem'
}


/**
 * An auto-generated type for paginating through multiple DeliveryProfileItems.
 * 
 */
export interface DeliveryProfileItemConnection {
    /** A list of edges. */
    edges: DeliveryProfileItemEdge[]
    /** A list of the nodes contained in DeliveryProfileItemEdge. */
    nodes: DeliveryProfileItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DeliveryProfileItemConnection'
}


/**
 * An auto-generated type which holds one DeliveryProfileItem and a cursor during pagination.
 * 
 */
export interface DeliveryProfileItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DeliveryProfileItemEdge. */
    node: DeliveryProfileItem
    __typename: 'DeliveryProfileItemEdge'
}


/** Links a location group with zones. Both are associated to a delivery profile. */
export interface DeliveryProfileLocationGroup {
    /** The countries already selected in any zone for the specified location group. */
    countriesInAnyZone: DeliveryCountryAndZone[]
    /** The collection of locations that make up the specified location group. */
    locationGroup: DeliveryLocationGroup
    /** The applicable zones associated to the specified location group. */
    locationGroupZones: DeliveryLocationGroupZoneConnection
    __typename: 'DeliveryProfileLocationGroup'
}


/** A region that is used to define a shipping zone. */
export interface DeliveryProvince {
    /** The code of the region. */
    code: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The full name of the region. */
    name: Scalars['String']
    /** The translated name of the region. The translation returned is based on the system's locale. */
    translatedName: Scalars['String']
    __typename: 'DeliveryProvince'
}


/** The merchant-defined rate of the [DeliveryMethodDefinition](https://shopify.dev/api/admin-graphql/latest/objects/DeliveryMethodDefinition). */
export interface DeliveryRateDefinition {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The price of this rate. */
    price: MoneyV2
    __typename: 'DeliveryRateDefinition'
}


/** A rate provided by a merchant-defined rate or a participant. */
export type DeliveryRateProvider = (DeliveryParticipant | DeliveryRateDefinition) & { __isUnion?: true }


/**
 * The `DeliverySetting` object enables you to manage shop-wide shipping settings.
 * You can enable legacy compatibility mode for the multi-location delivery profiles feature
 * if the legacy mode isn't blocked.
 * 
 */
export interface DeliverySetting {
    /** Whether the shop is blocked from converting to full multi-location delivery profiles mode. If the shop is blocked, then the blocking reasons are also returned. */
    legacyModeBlocked: DeliveryLegacyModeBlocked
    /** Enables legacy compatability mode for the multi-location delivery profiles feature. */
    legacyModeProfiles: Scalars['Boolean']
    __typename: 'DeliverySetting'
}


/** Return type for `deliverySettingUpdate` mutation. */
export interface DeliverySettingUpdatePayload {
    /** The updated delivery shop level settings. */
    setting?: DeliverySetting
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DeliverySettingUpdatePayload'
}


/** Return type for `deliveryShippingOriginAssign` mutation. */
export interface DeliveryShippingOriginAssignPayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DeliveryShippingOriginAssignPayload'
}


/**
 * A zone is a group of countries that have the same shipping rates. Customers can order products from a store only if they choose a shipping destination that's included in one of the store's zones.
 * 
 */
export interface DeliveryZone {
    /** The list of countries within the zone. */
    countries: DeliveryCountry[]
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the zone. */
    name: Scalars['String']
    __typename: 'DeliveryZone'
}


/** Digital wallet, such as Apple Pay, which can be used for accelerated checkouts. */
export type DigitalWallet = 'APPLE_PAY' | 'ANDROID_PAY' | 'GOOGLE_PAY' | 'SHOPIFY_PAY'


/** A discount. */
export type Discount = (DiscountAutomaticApp | DiscountAutomaticBasic | DiscountAutomaticBxgy | DiscountCodeApp | DiscountCodeBasic | DiscountCodeBxgy | DiscountCodeFreeShipping) & { __isUnion?: true }


/** An amount that's allocated to a line based on an associated discount application. */
export interface DiscountAllocation {
    /**
     * @deprecated Use `allocatedAmountSet` instead.
     * The money amount that's allocated to a line based on the associated discount application.
     */
    allocatedAmount: MoneyV2
    /** The money amount that's allocated to a line based on the associated discount application in shop and presentment currencies. */
    allocatedAmountSet: MoneyBag
    /** The discount application that the allocated amount originated from. */
    discountApplication: DiscountApplication
    __typename: 'DiscountAllocation'
}


/** The fixed amount value of a discount, and whether the amount is applied to each entitled item or spread evenly across the entitled items. */
export interface DiscountAmount {
    /** The value of the discount. */
    amount: MoneyV2
    /** If true, then the discount is applied to each of the entitled items. If false, then the amount is split across all of the entitled items. */
    appliesOnEachItem: Scalars['Boolean']
    __typename: 'DiscountAmount'
}


/**
 * Discount applications capture the intentions of a discount source at
 * the time of application on an order's line items or shipping lines.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export type DiscountApplication = (AutomaticDiscountApplication | DiscountCodeApplication | ManualDiscountApplication | ScriptDiscountApplication) & { __isUnion?: true }


/** The method by which the discount's value is allocated onto its entitled lines. */
export type DiscountApplicationAllocationMethod = 'ACROSS' | 'EACH' | 'ONE'


/**
 * An auto-generated type for paginating through multiple DiscountApplications.
 * 
 */
export interface DiscountApplicationConnection {
    /** A list of edges. */
    edges: DiscountApplicationEdge[]
    /** A list of the nodes contained in DiscountApplicationEdge. */
    nodes: DiscountApplication[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountApplicationConnection'
}


/**
 * An auto-generated type which holds one DiscountApplication and a cursor during pagination.
 * 
 */
export interface DiscountApplicationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountApplicationEdge. */
    node: DiscountApplication
    __typename: 'DiscountApplicationEdge'
}


/** The level at which the discount's value is applied. */
export type DiscountApplicationLevel = 'ORDER' | 'LINE'


/**
 * The lines on the order to which the discount is applied, of the type defined by
 * the discount application's `targetType`. For example, the value `ENTITLED`, combined with a `targetType` of
 * `LINE_ITEM`, applies the discount on all line items that are entitled to the discount.
 * The value `ALL`, combined with a `targetType` of `SHIPPING_LINE`, applies the discount on all shipping lines.
 * 
 */
export type DiscountApplicationTargetSelection = 'ALL' | 'ENTITLED' | 'EXPLICIT'


/**
 * The type of line (i.e. line item or shipping line) on an order that the discount is applicable towards.
 * 
 */
export type DiscountApplicationTargetType = 'LINE_ITEM' | 'SHIPPING_LINE'


/** The type of discount associated to the automatic discount. For example, the automatic discount might offer a basic discount using a fixed percentage, or a fixed amount, on specific products from the order. The automatic discount may also be a BXGY discount, which offers customer discounts on select products if they add a specific product to their order. */
export type DiscountAutomatic = (DiscountAutomaticApp | DiscountAutomaticBasic | DiscountAutomaticBxgy) & { __isUnion?: true }


/** Return type for `discountAutomaticActivate` mutation. */
export interface DiscountAutomaticActivatePayload {
    /** The activated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticActivatePayload'
}


/** An automatic app discount. */
export interface DiscountAutomaticApp {
    /** The app discount type providing the discount type. */
    appDiscountType: AppDiscountType
    /** The number of times the discount has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount: Scalars['Int']
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The class of the discount for combining purposes. */
    discountClass: DiscountClass
    /** The ID for the discount. */
    discountId: Scalars['ID']
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** The error history on the most recent version of the app discount. */
    errorHistory?: FunctionsErrorHistory
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** The title of the discount. */
    title: Scalars['String']
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'DiscountAutomaticApp'
}


/** Return type for `discountAutomaticAppCreate` mutation. */
export interface DiscountAutomaticAppCreatePayload {
    /** The created app discount. */
    automaticAppDiscount?: DiscountAutomaticApp
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticAppCreatePayload'
}


/** Return type for `discountAutomaticAppUpdate` mutation. */
export interface DiscountAutomaticAppUpdatePayload {
    /** The updated automatic app discount. */
    automaticAppDiscount?: DiscountAutomaticApp
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticAppUpdatePayload'
}


/** An automatic discount that offers customers a percentage discount, or fixed amount discount, on specific products, collections, or the entire order. */
export interface DiscountAutomaticBasic {
    /** The number of times the discount has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount: Scalars['Int']
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets: DiscountCustomerGets
    /** The class of the discount for combining purposes. */
    discountClass: MerchandiseDiscountClass
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** The minimum subtotal or quantity that's required for the discount to be applied. */
    minimumRequirement: DiscountMinimumRequirement
    /** A short summary of the discount. */
    shortSummary: Scalars['String']
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** A detailed summary of the discount. */
    summary: Scalars['String']
    /** The title of the discount. */
    title: Scalars['String']
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    /**
     * @deprecated Use `asyncUsageCount` instead.
     * The number of times that the discount has been used.
     */
    usageCount: Scalars['Int']
    __typename: 'DiscountAutomaticBasic'
}


/** Return type for `discountAutomaticBasicCreate` mutation. */
export interface DiscountAutomaticBasicCreatePayload {
    /** The created automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticBasicCreatePayload'
}


/** Return type for `discountAutomaticBasicUpdate` mutation. */
export interface DiscountAutomaticBasicUpdatePayload {
    /** The updated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticBasicUpdatePayload'
}


/** Return type for `discountAutomaticBulkDelete` mutation. */
export interface DiscountAutomaticBulkDeletePayload {
    /** The asynchronous job removing the automatic discounts. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticBulkDeletePayload'
}


/** An automatic discount that offers customers a Buy X, Get Y (BXGY) discount. */
export interface DiscountAutomaticBxgy {
    /** The number of times the discount has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount: Scalars['Int']
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount. */
    customerBuys: DiscountCustomerBuys
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets: DiscountCustomerGets
    /** The class of the discount for combining purposes. */
    discountClass: MerchandiseDiscountClass
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** The paginated list of events associated with the host subject. */
    events: EventConnection
    /**
     * @deprecated Use DiscountAutomaticNode.id instead.
     * A legacy unique ID for the discount.
     */
    id: Scalars['ID']
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** A detailed summary of the discount. */
    summary: Scalars['String']
    /** The title of the discount. */
    title: Scalars['String']
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    /**
     * @deprecated Use `asyncUsageCount` instead.
     * The number of times that the discount has been used.
     */
    usageCount: Scalars['Int']
    /** The maximum number of times that the discount can be applied to an order. */
    usesPerOrderLimit?: Scalars['Int']
    __typename: 'DiscountAutomaticBxgy'
}


/** Return type for `discountAutomaticBxgyCreate` mutation. */
export interface DiscountAutomaticBxgyCreatePayload {
    /** The created automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticBxgyCreatePayload'
}


/** Return type for `discountAutomaticBxgyUpdate` mutation. */
export interface DiscountAutomaticBxgyUpdatePayload {
    /** The updated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticBxgyUpdatePayload'
}


/**
 * An auto-generated type for paginating through multiple DiscountAutomatics.
 * 
 */
export interface DiscountAutomaticConnection {
    /** A list of edges. */
    edges: DiscountAutomaticEdge[]
    /** A list of the nodes contained in DiscountAutomaticEdge. */
    nodes: DiscountAutomatic[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountAutomaticConnection'
}


/** Return type for `discountAutomaticDeactivate` mutation. */
export interface DiscountAutomaticDeactivatePayload {
    /** The deactivated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticDeactivatePayload'
}


/** Return type for `discountAutomaticDelete` mutation. */
export interface DiscountAutomaticDeletePayload {
    /** The deleted automatic discount ID. */
    deletedAutomaticDiscountId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountAutomaticDeletePayload'
}


/**
 * An auto-generated type which holds one DiscountAutomatic and a cursor during pagination.
 * 
 */
export interface DiscountAutomaticEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountAutomaticEdge. */
    node: DiscountAutomatic
    __typename: 'DiscountAutomaticEdge'
}


/** A node containing an automatic discount and its related events. */
export interface DiscountAutomaticNode {
    /** The automatic discount object. */
    automaticDiscount: DiscountAutomatic
    /** The paginated list of events associated with the host subject. */
    events: EventConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    __typename: 'DiscountAutomaticNode'
}


/**
 * An auto-generated type for paginating through multiple DiscountAutomaticNodes.
 * 
 */
export interface DiscountAutomaticNodeConnection {
    /** A list of edges. */
    edges: DiscountAutomaticNodeEdge[]
    /** A list of the nodes contained in DiscountAutomaticNodeEdge. */
    nodes: DiscountAutomaticNode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountAutomaticNodeConnection'
}


/**
 * An auto-generated type which holds one DiscountAutomaticNode and a cursor during pagination.
 * 
 */
export interface DiscountAutomaticNodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountAutomaticNodeEdge. */
    node: DiscountAutomaticNode
    __typename: 'DiscountAutomaticNodeEdge'
}


/** The class of the discount for combining purposes. */
export type DiscountClass = 'PRODUCT' | 'ORDER' | 'SHIPPING'


/** The type of discount associated with the discount code. For example, the discount code might offer a basic discount of a fixed percentage, or a fixed amount, on specific products or the order. Alternatively, the discount might offer the customer free shipping on their order. A third option is a Buy X, Get Y (BXGY) discount, which offers a customer discounts on select products if they add a specific product to their order. */
export type DiscountCode = (DiscountCodeApp | DiscountCodeBasic | DiscountCodeBxgy | DiscountCodeFreeShipping) & { __isUnion?: true }


/** Return type for `discountCodeActivate` mutation. */
export interface DiscountCodeActivatePayload {
    /** The activated code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeActivatePayload'
}


/** A code app discount. */
export interface DiscountCodeApp {
    /** The app discount type providing the discount type. */
    appDiscountType: AppDiscountType
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer: Scalars['Boolean']
    /** The number of times that the discount has been used. */
    asyncUsageCount: Scalars['Int']
    /** The number of redeem codes for the discount. */
    codeCount: Scalars['Int']
    /** A list of redeem codes for the discount. */
    codes: DiscountRedeemCodeConnection
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The customers that can use the discount. */
    customerSelection: DiscountCustomerSelection
    /** The class of the discount for combining purposes. */
    discountClass: DiscountClass
    /** The ID for the discount. */
    discountId: Scalars['ID']
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** The error history on the most recent version of the discount. */
    errorHistory?: FunctionsErrorHistory
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment: Scalars['Boolean']
    /** The number of times a discount applies on recurring purchases (subscriptions). */
    recurringCycleLimit?: Scalars['Int']
    /** URLs that can be used to share the discount. */
    shareableUrls: DiscountShareableUrl[]
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** The title of the discount. */
    title: Scalars['String']
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    /** The maximum number of times that the discount can be used. */
    usageLimit?: Scalars['Int']
    __typename: 'DiscountCodeApp'
}


/** Return type for `discountCodeAppCreate` mutation. */
export interface DiscountCodeAppCreatePayload {
    /** The created code app discount. */
    codeAppDiscount?: DiscountCodeApp
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeAppCreatePayload'
}


/** Return type for `discountCodeAppUpdate` mutation. */
export interface DiscountCodeAppUpdatePayload {
    /** The updated code app discount. */
    codeAppDiscount?: DiscountCodeApp
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeAppUpdatePayload'
}


/**
 * Discount code applications capture the intentions of a discount code at
 * the time that it is applied onto an order.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface DiscountCodeApplication {
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /** The string identifying the discount code that was used at the time of application. */
    code: Scalars['String']
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index: Scalars['Int']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'DiscountCodeApplication'
}


/** A code discount that offers customers a percentage or fixed amount discount on specific products, collections, or the entire order. */
export interface DiscountCodeBasic {
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer: Scalars['Boolean']
    /** The number of times that the discount has been used. */
    asyncUsageCount: Scalars['Int']
    /** The number of redeem codes for the discount. */
    codeCount: Scalars['Int']
    /** A list of redeem codes for the discount. */
    codes: DiscountRedeemCodeConnection
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets: DiscountCustomerGets
    /** The customers that can use the discount. */
    customerSelection: DiscountCustomerSelection
    /** The class of the discount for combining purposes. */
    discountClass: MerchandiseDiscountClass
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment: Scalars['Boolean']
    /** The minimum subtotal or quantity that's required for the discount to be applied. */
    minimumRequirement?: DiscountMinimumRequirement
    /** The number of times a discount applies on recurring purchases (subscriptions). */
    recurringCycleLimit?: Scalars['Int']
    /** URLs that can be used to share the discount. */
    shareableUrls: DiscountShareableUrl[]
    /** A short summary of the discount. */
    shortSummary: Scalars['String']
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** A detailed summary of the discount. */
    summary: Scalars['String']
    /** The title of the discount. */
    title: Scalars['String']
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    /** The maximum number of times that the discount can be used. */
    usageLimit?: Scalars['Int']
    __typename: 'DiscountCodeBasic'
}


/** Return type for `discountCodeBasicCreate` mutation. */
export interface DiscountCodeBasicCreatePayload {
    /** The created code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBasicCreatePayload'
}


/** Return type for `discountCodeBasicUpdate` mutation. */
export interface DiscountCodeBasicUpdatePayload {
    /** The updated code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBasicUpdatePayload'
}


/** Return type for `discountCodeBulkActivate` mutation. */
export interface DiscountCodeBulkActivatePayload {
    /** The asynchronous job that activates the code discounts. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBulkActivatePayload'
}


/** Return type for `discountCodeBulkDeactivate` mutation. */
export interface DiscountCodeBulkDeactivatePayload {
    /** The asynchronous job that deactivates the code discounts. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBulkDeactivatePayload'
}


/** Return type for `discountCodeBulkDelete` mutation. */
export interface DiscountCodeBulkDeletePayload {
    /** The asynchronous job that deletes the code discounts. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBulkDeletePayload'
}


/** A code discount that offers customers a Buy X, Get Y (BXGY) discount. */
export interface DiscountCodeBxgy {
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer: Scalars['Boolean']
    /** The number of times that the discount has been used. */
    asyncUsageCount: Scalars['Int']
    /** The number of redeem codes for the discount. */
    codeCount: Scalars['Int']
    /** A list of redeem codes for the discount. */
    codes: DiscountRedeemCodeConnection
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount. */
    customerBuys: DiscountCustomerBuys
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets: DiscountCustomerGets
    /** The customers that can use the discount. */
    customerSelection: DiscountCustomerSelection
    /** The class of the discount for combining purposes. */
    discountClass: MerchandiseDiscountClass
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment: Scalars['Boolean']
    /** URLs that can be used to share the discount. */
    shareableUrls: DiscountShareableUrl[]
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** A detailed summary of the discount. */
    summary: Scalars['String']
    /** The title of the discount. */
    title: Scalars['String']
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    /** The maximum number of times that the discount can be used. */
    usageLimit?: Scalars['Int']
    /** The maximum number of times that the discount can be applied to an order. */
    usesPerOrderLimit?: Scalars['Int']
    __typename: 'DiscountCodeBxgy'
}


/** Return type for `discountCodeBxgyCreate` mutation. */
export interface DiscountCodeBxgyCreatePayload {
    /** The created code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBxgyCreatePayload'
}


/** Return type for `discountCodeBxgyUpdate` mutation. */
export interface DiscountCodeBxgyUpdatePayload {
    /** The updated code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeBxgyUpdatePayload'
}


/** Return type for `discountCodeDeactivate` mutation. */
export interface DiscountCodeDeactivatePayload {
    /** The deactivated code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeDeactivatePayload'
}


/** Return type for `discountCodeDelete` mutation. */
export interface DiscountCodeDeletePayload {
    /** The deleted code discount ID. */
    deletedCodeDiscountId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeDeletePayload'
}


/** A code discount that offers customers free shipping on their order. */
export interface DiscountCodeFreeShipping {
    /** Whether the discount applies on regular one-time-purchase shipping lines. */
    appliesOnOneTimePurchase: Scalars['Boolean']
    /** Whether the discount applies on subscription shipping lines. */
    appliesOnSubscription: Scalars['Boolean']
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer: Scalars['Boolean']
    /** The number of times that the discount has been used. */
    asyncUsageCount: Scalars['Int']
    /** The number of redeem codes for the discount. */
    codeCount: Scalars['Int']
    /** A list of redeem codes for the discount. */
    codes: DiscountRedeemCodeConnection
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the discount was created. */
    createdAt: Scalars['DateTime']
    /** The customers that can use the discount. */
    customerSelection: DiscountCustomerSelection
    /** A shipping destination that qualifies for the discount. */
    destinationSelection: DiscountShippingDestinationSelection
    /** The class of the discount for combining purposes. */
    discountClass: ShippingDiscountClass
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: Scalars['DateTime']
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment: Scalars['Boolean']
    /** The maximum shipping price amount accepted to qualify for the discount. */
    maximumShippingPrice?: MoneyV2
    /** The minimum subtotal or quantity that's required for the discount to be applied. */
    minimumRequirement?: DiscountMinimumRequirement
    /** The number of times a discount applies on recurring purchases (subscriptions). */
    recurringCycleLimit?: Scalars['Int']
    /** URLs that can be used to share the discount. */
    shareableUrls: DiscountShareableUrl[]
    /** A short summary of the discount. */
    shortSummary: Scalars['String']
    /** The date and time when the discount starts. */
    startsAt: Scalars['DateTime']
    /** The status of the discount. */
    status: DiscountStatus
    /** A detailed summary of the discount. */
    summary: Scalars['String']
    /** The title of the discount. */
    title: Scalars['String']
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2
    /** The date and time when the discount was updated. */
    updatedAt: Scalars['DateTime']
    /** The maximum number of times that the discount can be used. */
    usageLimit?: Scalars['Int']
    __typename: 'DiscountCodeFreeShipping'
}


/** Return type for `discountCodeFreeShippingCreate` mutation. */
export interface DiscountCodeFreeShippingCreatePayload {
    /** The created code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeFreeShippingCreatePayload'
}


/** Return type for `discountCodeFreeShippingUpdate` mutation. */
export interface DiscountCodeFreeShippingUpdatePayload {
    /** The updated code discount. */
    codeDiscountNode?: DiscountCodeNode
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeFreeShippingUpdatePayload'
}


/** A node containing a code discount and its related events. */
export interface DiscountCodeNode {
    /** The underlying code discount object. */
    codeDiscount: DiscountCode
    /** The paginated list of events associated with the host subject. */
    events: EventConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    __typename: 'DiscountCodeNode'
}


/**
 * An auto-generated type for paginating through multiple DiscountCodeNodes.
 * 
 */
export interface DiscountCodeNodeConnection {
    /** A list of edges. */
    edges: DiscountCodeNodeEdge[]
    /** A list of the nodes contained in DiscountCodeNodeEdge. */
    nodes: DiscountCodeNode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountCodeNodeConnection'
}


/**
 * An auto-generated type which holds one DiscountCodeNode and a cursor during pagination.
 * 
 */
export interface DiscountCodeNodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountCodeNodeEdge. */
    node: DiscountCodeNode
    __typename: 'DiscountCodeNodeEdge'
}


/** Return type for `discountCodeRedeemCodeBulkDelete` mutation. */
export interface DiscountCodeRedeemCodeBulkDeletePayload {
    /** The asynchronous job that deletes the discount redeem codes. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountCodeRedeemCodeBulkDeletePayload'
}


/** The set of valid sort keys for the DiscountCode query. */
export type DiscountCodeSortKeys = 'CODE' | 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** A list of collections that the discount can have as a prerequisite or a list of collections to which the discount can be applied. */
export interface DiscountCollections {
    /** The list of collections that the discount can have as a prerequisite or the list of collections to which the discount can be applied. */
    collections: CollectionConnection
    __typename: 'DiscountCollections'
}


/** Determines which discount classes the discount can combine with. */
export interface DiscountCombinesWith {
    /** Combines with order discounts. */
    orderDiscounts: Scalars['Boolean']
    /** Combines with product discounts. */
    productDiscounts: Scalars['Boolean']
    /** Combines with shipping discounts. */
    shippingDiscounts: Scalars['Boolean']
    __typename: 'DiscountCombinesWith'
}


/** The shipping destinations where the discount can be applied. */
export interface DiscountCountries {
    /** The codes for the countries where the discount can be applied. */
    countries: CountryCode[]
    /** Whether the discount is applicable to countries that have not been defined in the shop's shipping zones. */
    includeRestOfWorld: Scalars['Boolean']
    __typename: 'DiscountCountries'
}


/** The `DiscountCountryAll` object lets you target all countries as shipping destination for discount eligibility. */
export interface DiscountCountryAll {
    /** Whether the discount can be applied to all countries as shipping destination. This value is always `true`. */
    allCountries: Scalars['Boolean']
    __typename: 'DiscountCountryAll'
}


/** The `DiscountCustomerAll` object lets you target all customers for discount eligibility. */
export interface DiscountCustomerAll {
    /** Whether the discount can be applied by all customers. This value is always `true`. */
    allCustomers: Scalars['Boolean']
    __typename: 'DiscountCustomerAll'
}


/** The prerequisite items and prerequisite value that a customer must have on the order for the discount to be applicable. */
export interface DiscountCustomerBuys {
    /** The items required for the discount to be applicable. */
    items: DiscountItems
    /** The prerequisite value. */
    value: DiscountCustomerBuysValue
    __typename: 'DiscountCustomerBuys'
}


/** The prerequisite for the discount to be applicable. For example, the discount might require a customer to buy a minimum quantity of select items. Alternatively, the discount might require a customer to spend a minimum amount on select items. */
export type DiscountCustomerBuysValue = (DiscountPurchaseAmount | DiscountQuantity) & { __isUnion?: true }


/** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
export interface DiscountCustomerGets {
    /** Whether the discount applies on regular one-time-purchase items. */
    appliesOnOneTimePurchase: Scalars['Boolean']
    /** Whether the discount applies on subscription items. */
    appliesOnSubscription: Scalars['Boolean']
    /** The items to which the discount applies. */
    items: DiscountItems
    /** Entitled quantity and the discount value. */
    value: DiscountCustomerGetsValue
    __typename: 'DiscountCustomerGets'
}


/** The type of the discount value and how it will be applied. For example, it might be a percentage discount on a fixed number of items. Alternatively, it might be a fixed amount evenly distributed across all items or on each individual item. A third example is a percentage discount on all items. */
export type DiscountCustomerGetsValue = (DiscountAmount | DiscountOnQuantity | DiscountPercentage) & { __isUnion?: true }


/** A list of customer segments that contain the customers that the discount applies to. */
export interface DiscountCustomerSegments {
    /** A list of customer segments that contain the customers who can use the discount. */
    segments: Segment[]
    __typename: 'DiscountCustomerSegments'
}


/** The type used for targeting a set of customers who are eligible for the discount. For example, the discount might be available to all customers or it might only be available to a specific set of customers. You can define the set of customers by targeting a list of customer segments, or by targeting a list of specific customers. */
export type DiscountCustomerSelection = (DiscountCustomerAll | DiscountCustomerSegments | DiscountCustomers) & { __isUnion?: true }


/** A list of customers eligible for the discount. */
export interface DiscountCustomers {
    /** The list of customers eligible for the discount. */
    customers: Customer[]
    __typename: 'DiscountCustomers'
}


/** The type of discount that will be applied. Currently, only a percentage discount is supported. */
export type DiscountEffect = (DiscountPercentage) & { __isUnion?: true }


/** Possible error codes that can be returned by `DiscountUserError`. */
export type DiscountErrorCode = 'BLANK' | 'PRESENT' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INVALID' | 'LESS_THAN_OR_EQUAL_TO' | 'LESS_THAN' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'INTERNAL_ERROR' | 'TOO_MANY_ARGUMENTS' | 'MISSING_ARGUMENT' | 'ACTIVE_PERIOD_OVERLAP' | 'EXCEEDED_MAX' | 'MINIMUM_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT' | 'VALUE_OUTSIDE_RANGE' | 'CONFLICT' | 'IMPLICIT_DUPLICATE' | 'DUPLICATE' | 'INCLUSION' | 'INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS' | 'INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE' | 'MAX_APP_DISCOUNTS'


/** The type used to target the items required for discount eligibility, or the items to which the application of a discount might apply. For example, for a customer to be eligible for a discount, they're required to add an item from a specified collection to their order. Alternatively, a customer might be required to add a specific product or product variant. When using this type to target which items the discount will apply to, the discount might apply to all items on the order, or to specific products and product variants, or items in a given collection. */
export type DiscountItems = (AllDiscountItems | DiscountCollections | DiscountProducts) & { __isUnion?: true }


/** The minimum quantity of items required for the discount to apply. */
export interface DiscountMinimumQuantity {
    /** The minimum quantity of items that's required for the discount to be applied. */
    greaterThanOrEqualToQuantity: Scalars['UnsignedInt64']
    __typename: 'DiscountMinimumQuantity'
}


/** The type of minimum requirement that must be met for the discount to be applied. For example, a customer must spend a minimum subtotal to be eligible for the discount. Alternatively, a customer must purchase a minimum quantity of items to be eligible for the discount. */
export type DiscountMinimumRequirement = (DiscountMinimumQuantity | DiscountMinimumSubtotal) & { __isUnion?: true }


/** The minimum subtotal required for the discount to apply. */
export interface DiscountMinimumSubtotal {
    /** The minimum subtotal that's required for the discount to be applied. */
    greaterThanOrEqualToSubtotal: MoneyV2
    __typename: 'DiscountMinimumSubtotal'
}


/** A discount wrapper node. */
export interface DiscountNode {
    /** A discount. */
    discount: Discount
    /** The paginated list of events associated with the host subject. */
    events: EventConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    __typename: 'DiscountNode'
}


/**
 * An auto-generated type for paginating through multiple DiscountNodes.
 * 
 */
export interface DiscountNodeConnection {
    /** A list of edges. */
    edges: DiscountNodeEdge[]
    /** A list of the nodes contained in DiscountNodeEdge. */
    nodes: DiscountNode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountNodeConnection'
}


/**
 * An auto-generated type which holds one DiscountNode and a cursor during pagination.
 * 
 */
export interface DiscountNodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountNodeEdge. */
    node: DiscountNode
    __typename: 'DiscountNodeEdge'
}


/** The quantity of items discounted, the discount value, and how the discount will be applied. */
export interface DiscountOnQuantity {
    /** The discount's effect on qualifying items. */
    effect: DiscountEffect
    /** The number of items being discounted. The customer must have at least this many items of specified products or product variants in their order to be eligible for the discount. */
    quantity: DiscountQuantity
    __typename: 'DiscountOnQuantity'
}


/** A discount effect that gives customers a percentage off of specified items on their order. */
export interface DiscountPercentage {
    /** The percentage value of the discount. */
    percentage: Scalars['Float']
    __typename: 'DiscountPercentage'
}


/** A list of products and product variants that the discount can have as a prerequisite or a list of products and product variants to which the discount can be applied. */
export interface DiscountProducts {
    /** The list of product variants that the discount can have as a prerequisite or the list of product variants to which the discount can be applied. */
    productVariants: ProductVariantConnection
    /** The list of products that the discount can have as a prerequisite or the list of products to which the discount can be applied. */
    products: ProductConnection
    __typename: 'DiscountProducts'
}


/** A purchase amount in the context of a discount. This object can be used to define the minimum purchase amount required for a discount to be applicable. */
export interface DiscountPurchaseAmount {
    /** The purchase amount in decimal format. */
    amount: Scalars['Decimal']
    __typename: 'DiscountPurchaseAmount'
}


/** A quantity of items in the context of a discount. This object can be used to define the minimum quantity of items required to apply a discount. Alternatively, it can be used to define the quantity of items that can be discounted. */
export interface DiscountQuantity {
    /** The quantity of items. */
    quantity: Scalars['UnsignedInt64']
    __typename: 'DiscountQuantity'
}


/** A code that a customer can use at checkout to receive a discount. For example, a customer can use the redeem code 'SUMMER20' at checkout to receive a 20% discount on their entire order. */
export interface DiscountRedeemCode {
    /** The number of times that the discount redeem code has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount: Scalars['Int']
    /** The code that a customer can use at checkout to receive a discount. */
    code: Scalars['String']
    /** The application that created the discount redeem code. */
    createdBy?: App
    /** A globally-unique ID of the discount redeem code. */
    id: Scalars['ID']
    __typename: 'DiscountRedeemCode'
}


/** Return type for `discountRedeemCodeBulkAdd` mutation. */
export interface DiscountRedeemCodeBulkAddPayload {
    /** The ID of the discount redeem code bulk creation operation. The properties and status of the operation can be tracked using the [`DiscountRedeemCodeBulkCreation` query](https://shopify.dev/api/admin-graphql/2022-04/queries/discountRedeemCodeBulkCreation). */
    bulkCreation?: DiscountRedeemCodeBulkCreation
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DiscountUserError[]
    __typename: 'DiscountRedeemCodeBulkAddPayload'
}


/** The properties and status of a bulk discount redeem code creation operation. */
export interface DiscountRedeemCodeBulkCreation {
    /** The result of each code creation operation associated with the bulk creation operation including any errors that might have occurred during the operation. */
    codes: DiscountRedeemCodeBulkCreationCodeConnection
    /** The number of codes to create. */
    codesCount: Scalars['Int']
    /** The date and time when the bulk creation was created. */
    createdAt: Scalars['DateTime']
    /** The code discount associated with the created codes. */
    discountCode?: DiscountCodeNode
    /** Whether the bulk creation is still queued (`false`) or has been run (`true`). */
    done: Scalars['Boolean']
    /** The number of codes that weren't created successfully. */
    failedCount: Scalars['Int']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The number of codes created successfully. */
    importedCount: Scalars['Int']
    __typename: 'DiscountRedeemCodeBulkCreation'
}


/** A result of a discount redeem code creation operation created by a bulk creation. */
export interface DiscountRedeemCodeBulkCreationCode {
    /** The code to use in the discount redeem code creation operation. */
    code: Scalars['String']
    /**
     * The successfully created discount redeem code.
     * 
     * If the discount redeem code couldn't be created, then this field is `null``.
     * 
     */
    discountRedeemCode?: DiscountRedeemCode
    /** A list of errors that occurred during the creation operation of the discount redeem code. */
    errors: DiscountUserError[]
    __typename: 'DiscountRedeemCodeBulkCreationCode'
}


/**
 * An auto-generated type for paginating through multiple DiscountRedeemCodeBulkCreationCodes.
 * 
 */
export interface DiscountRedeemCodeBulkCreationCodeConnection {
    /** A list of edges. */
    edges: DiscountRedeemCodeBulkCreationCodeEdge[]
    /** A list of the nodes contained in DiscountRedeemCodeBulkCreationCodeEdge. */
    nodes: DiscountRedeemCodeBulkCreationCode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountRedeemCodeBulkCreationCodeConnection'
}


/**
 * An auto-generated type which holds one DiscountRedeemCodeBulkCreationCode and a cursor during pagination.
 * 
 */
export interface DiscountRedeemCodeBulkCreationCodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountRedeemCodeBulkCreationCodeEdge. */
    node: DiscountRedeemCodeBulkCreationCode
    __typename: 'DiscountRedeemCodeBulkCreationCodeEdge'
}


/**
 * An auto-generated type for paginating through multiple DiscountRedeemCodes.
 * 
 */
export interface DiscountRedeemCodeConnection {
    /** A list of edges. */
    edges: DiscountRedeemCodeEdge[]
    /** A list of the nodes contained in DiscountRedeemCodeEdge. */
    nodes: DiscountRedeemCode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DiscountRedeemCodeConnection'
}


/**
 * An auto-generated type which holds one DiscountRedeemCode and a cursor during pagination.
 * 
 */
export interface DiscountRedeemCodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DiscountRedeemCodeEdge. */
    node: DiscountRedeemCode
    __typename: 'DiscountRedeemCodeEdge'
}


/** A shareable URL for a discount code. */
export interface DiscountShareableUrl {
    /** The image URL of the item (product or collection) to which the discount applies. */
    targetItemImage?: Image
    /** The type of page that's associated with the URL. */
    targetType: DiscountShareableUrlTargetType
    /** The title of the page that's associated with the URL. */
    title: Scalars['String']
    /** The URL for the discount code. */
    url: Scalars['URL']
    __typename: 'DiscountShareableUrl'
}


/** The type of page where a shareable discount URL lands. */
export type DiscountShareableUrlTargetType = 'HOME' | 'PRODUCT' | 'COLLECTION'


/** The type used to target the eligible countries of an order's shipping destination for which the discount applies. For example, the discount might be applicable when shipping to all countries, or only to a set of countries. */
export type DiscountShippingDestinationSelection = (DiscountCountries | DiscountCountryAll) & { __isUnion?: true }


/** The set of valid sort keys for the Discount query. */
export type DiscountSortKeys = 'STARTS_AT' | 'ENDS_AT' | 'TITLE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/** The status of the discount. */
export type DiscountStatus = 'ACTIVE' | 'EXPIRED' | 'SCHEDULED'


/** The type of line (line item or shipping line) on an order that the subscription discount is applicable towards. */
export type DiscountTargetType = 'LINE_ITEM' | 'SHIPPING_LINE'


/** The type of the subscription discount. */
export type DiscountType = 'MANUAL' | 'CODE_DISCOUNT'


/** An error that occurs during the execution of a discount mutation. */
export interface DiscountUserError {
    /** The error code. */
    code?: DiscountErrorCode
    /** Extra information about this error. */
    extraInfo?: Scalars['String']
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'DiscountUserError'
}


/** Represents an error in the input of a mutation. */
export type DisplayableError = (AbandonmentEmailStateUpdateUserError | AbandonmentUpdateActivitiesDeliveryStatusesUserError | AppRevenueAttributionRecordCreateUserError | AppRevenueAttributionRecordDeleteUserError | AppSubscriptionTrialExtendUserError | BillingAttemptUserError | BulkMutationUserError | BulkProductResourceFeedbackCreateUserError | BusinessCustomerUserError | CartTransformCreateUserError | CartTransformDeleteUserError | CatalogUserError | CollectionAddProductsV2UserError | CustomerEmailMarketingConsentUpdateUserError | CustomerMergeUserError | CustomerPaymentMethodCreateFromDuplicationDataUserError | CustomerPaymentMethodGetDuplicationDataUserError | CustomerPaymentMethodGetUpdateUrlUserError | CustomerPaymentMethodRemoteUserError | CustomerPaymentMethodUserError | CustomerSegmentMembersQueryUserError | CustomerSmsMarketingConsentError | DelegateAccessTokenCreateUserError | DelegateAccessTokenDestroyUserError | DeliveryCustomizationError | DeliveryLocationLocalPickupSettingsError | DiscountUserError | DisputeEvidenceUpdateUserError | ErrorsServerPixelUserError | ErrorsWebPixelUserError | FilesUserError | FulfillmentOrderHoldUserError | FulfillmentOrderLineItemsPreparedForPickupUserError | FulfillmentOrderMergeUserError | FulfillmentOrderReleaseHoldUserError | FulfillmentOrderRescheduleUserError | FulfillmentOrderSplitUserError | FulfillmentOrdersReleaseHoldsUserError | FulfillmentOrdersSetFulfillmentDeadlineUserError | GiftCardUserError | InventoryAdjustQuantitiesUserError | InventoryBulkToggleActivationUserError | InventoryMoveQuantitiesUserError | InventorySetOnHandQuantitiesUserError | LocationActivateUserError | LocationAddUserError | LocationDeactivateUserError | LocationDeleteUserError | LocationEditUserError | MarketCurrencySettingsUserError | MarketUserError | MarketingActivityUserError | MediaUserError | MetafieldDefinitionCreateUserError | MetafieldDefinitionDeleteUserError | MetafieldDefinitionPinUserError | MetafieldDefinitionUnpinUserError | MetafieldDefinitionUpdateUserError | MetafieldsSetUserError | MetaobjectUserError | OrderCreateMandatePaymentUserError | OrderInvoiceSendUserError | PaymentCustomizationError | PaymentReminderSendUserError | PaymentTermsCreateUserError | PaymentTermsDeleteUserError | PaymentTermsUpdateUserError | PriceListFixedPricesByProductBulkUpdateUserError | PriceListPriceUserError | PriceListUserError | PriceRuleUserError | ProductChangeStatusUserError | ProductDeleteUserError | ProductDuplicateUserError | ProductFeedCreateUserError | ProductFeedDeleteUserError | ProductFullSyncUserError | ProductVariantRelationshipBulkUpdateUserError | ProductVariantsBulkCreateUserError | ProductVariantsBulkDeleteUserError | ProductVariantsBulkReorderUserError | ProductVariantsBulkUpdateUserError | PubSubWebhookSubscriptionCreateUserError | PubSubWebhookSubscriptionUpdateUserError | PublicationUserError | QuantityRuleUserError | ReturnUserError | SellingPlanGroupUserError | ShopPolicyUserError | ShopResourceFeedbackCreateUserError | StandardMetafieldDefinitionEnableUserError | SubscriptionBillingCycleUserError | SubscriptionContractUserError | SubscriptionDraftUserError | TaxAppConfigureUserError | TranslationUserError | UrlRedirectBulkDeleteByIdsUserError | UrlRedirectBulkDeleteBySavedSearchUserError | UrlRedirectBulkDeleteBySearchUserError | UrlRedirectImportUserError | UrlRedirectUserError | UserError) & { __isUnion?: true }


/** Return type for `disputeEvidenceUpdate` mutation. */
export interface DisputeEvidenceUpdatePayload {
    /** The updated dispute evidence. */
    disputeEvidence?: ShopifyPaymentsDisputeEvidence
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DisputeEvidenceUpdateUserError[]
    __typename: 'DisputeEvidenceUpdatePayload'
}


/** An error that occurs during the execution of `DisputeEvidenceUpdate`. */
export interface DisputeEvidenceUpdateUserError {
    /** The error code. */
    code?: DisputeEvidenceUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'DisputeEvidenceUpdateUserError'
}


/** Possible error codes that can be returned by `DisputeEvidenceUpdateUserError`. */
export type DisputeEvidenceUpdateUserErrorCode = 'DISPUTE_EVIDENCE_NOT_FOUND' | 'EVIDENCE_ALREADY_ACCEPTED' | 'EVIDENCE_PAST_DUE_DATE' | 'FILES_SIZE_EXCEEDED_LIMIT' | 'TOO_LARGE' | 'INVALID'


/** The possible statuses of a dispute. */
export type DisputeStatus = 'NEEDS_RESPONSE' | 'UNDER_REVIEW' | 'CHARGE_REFUNDED' | 'ACCEPTED' | 'WON' | 'LOST'


/** The possible types for a dispute. */
export type DisputeType = 'CHARGEBACK' | 'INQUIRY'


/** A unique string that represents the address of a Shopify store on the Internet. */
export interface Domain {
    /** The host name of the domain. For example, `example.com`. */
    host: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The localization of the domain, if the domain doesn't redirect. */
    localization?: DomainLocalization
    /** The web presence of the domain. */
    marketWebPresence?: MarketWebPresence
    /** Whether SSL is enabled. */
    sslEnabled: Scalars['Boolean']
    /** The URL of the domain (for example, `https://example.com`). */
    url: Scalars['URL']
    __typename: 'Domain'
}


/** The country and language settings assigned to a domain. */
export interface DomainLocalization {
    /** The ISO codes for the domain’s alternate locales. For example, `["en"]`. */
    alternateLocales: Scalars['String'][]
    /** The ISO code for the country assigned to the domain. For example, `"CA"` or "*" for a domain set to "Rest of world". */
    country?: Scalars['String']
    /** The ISO code for the domain’s default locale. For example, `"en"`. */
    defaultLocale: Scalars['String']
    __typename: 'DomainLocalization'
}


/**
 * An order that a merchant creates on behalf of a customer. Draft orders are useful for merchants that need to do the following tasks:
 * 
 * - Create new orders for sales made by phone, in person, by chat, or elsewhere. When a merchant accepts payment for a draft order, an order is created.
 * - Send invoices to customers to pay with a secure checkout link.
 * - Use custom items to represent additional costs or products that aren't displayed in a shop's inventory.
 * - Re-create orders manually from active sales channels.
 * - Sell products at discount or wholesale rates.
 * - Take pre-orders.
 * - Save an order as a draft and resume working on it later.
 * 
 * For Draft orders in multiple currencies `presentment_money` is the source of truth for what a customer is going to be charged and `shop_money` is an estimate of what the merchant might receive in their local currency.
 * 
 * **Caution:** Only use this data if it's required for your app's functionality. Shopify will restrict [access to scopes](https://shopify.dev/api/usage/access-scopes) for apps that don't have a legitimate use for the associated data.
 * 
 */
export interface DraftOrder {
    /** The order-level discount applied to the draft order. */
    appliedDiscount?: DraftOrderAppliedDiscount
    /**
     * The billing address of the customer.
     * 
     */
    billingAddress?: MailingAddress
    /** Whether the billing address matches the shipping address. */
    billingAddressMatchesShippingAddress: Scalars['Boolean']
    /**
     * The date and time when the draft order converted to a new order,
     * and the draft order's status changed to **Completed**.
     * 
     */
    completedAt?: Scalars['DateTime']
    /** The date and time when the draft order was created in Shopify. */
    createdAt: Scalars['DateTime']
    /**
     * The three letter code for the currency of the store at the time of the most recent update to the draft order.
     * 
     */
    currencyCode: CurrencyCode
    /**
     * The custom information added to the draft order on behalf of the customer.
     * 
     */
    customAttributes: Attribute[]
    /** The customer who will be sent an invoice for the draft order, if there is one. */
    customer?: Customer
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** The email address of the customer, which is used to send notifications. */
    email?: Scalars['String']
    /** The list of events associated with the draft order. */
    events: EventConnection
    /** Whether the merchant has added timeline comments to the draft order. */
    hasTimelineComment: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The subject defined for the draft invoice email template. */
    invoiceEmailTemplateSubject: Scalars['String']
    /** The date and time when the invoice was last emailed to the customer. */
    invoiceSentAt?: Scalars['DateTime']
    /** The link to the checkout, which is sent to the customer in the invoice email. */
    invoiceUrl?: Scalars['URL']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The list of the line items in the draft order. */
    lineItems: DraftOrderLineItemConnection
    /** The subtotal of the line items and corresponding discounts. The subtotal doesn't include shipping charges, shipping discounts, taxes, or order discounts. */
    lineItemsSubtotalPrice: MoneyBag
    /** List of localization extensions for the resource. */
    localizationExtensions: LocalizationExtensionConnection
    /** The name of the selected market. */
    marketName: Scalars['String']
    /** The selected market region country code for the draft order. */
    marketRegionCountryCode: CountryCode
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * The identifier for the draft order, which is unique within the store. For example, _#D1223_.
     * 
     */
    name: Scalars['String']
    /** The text from an optional note attached to the draft order. */
    note2?: Scalars['String']
    /** The order that was created from this draft order. */
    order?: Order
    /** The associated payment terms for this draft order. */
    paymentTerms?: PaymentTerms
    /** The phone number assigned to the draft order. */
    phone?: Scalars['String']
    /** The purchase order number. */
    poNumber?: Scalars['String']
    /** The payment currency of the customer for this draft order. */
    presentmentCurrencyCode: CurrencyCode
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The purchasing entity for the draft order. */
    purchasingEntity?: PurchasingEntity
    /**
     * Whether the Draft Order is ready and can be completed. Draft Orders
     *         might have asynchronous operations that can take time to finish.
     */
    ready: Scalars['Boolean']
    /** The time after which inventory will automatically be restocked. */
    reserveInventoryUntil?: Scalars['DateTime']
    /** The shipping address of the customer. */
    shippingAddress?: MailingAddress
    /** The line item that contains the shipping costs. */
    shippingLine?: ShippingLine
    /** Status of the draft order. */
    status: DraftOrderStatus
    /**
     * The subtotal of the line items and their discounts. The subtotal doesn't include shipping charges, shipping discounts, or taxes.
     * 
     */
    subtotalPrice: Scalars['Money']
    /** A subtotal of the line items and corresponding discounts. The subtotal doesn't include shipping charges, shipping discounts, or taxes. */
    subtotalPriceSet: MoneyBag
    /**
     * A comma separated list of tags associated with the draft order. Updating `tags` overwrites
     * any existing tags that were previously added to the draft order. To add new tags without overwriting
     * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
     * mutation.
     * 
     */
    tags: Scalars['String'][]
    /** Whether the draft order is tax exempt. */
    taxExempt: Scalars['Boolean']
    /** Total amount of taxes charged for each line item and shipping line. */
    taxLines: TaxLine[]
    /** Whether the line item prices include taxes. */
    taxesIncluded: Scalars['Boolean']
    /** The total discounts for this draft order. */
    totalDiscountsSet: MoneyBag
    /** The total price of line items for this draft order. */
    totalLineItemsPriceSet: MoneyBag
    /** The total amount of the draft order, including taxes, shipping charges, and discounts. */
    totalPrice: Scalars['Money']
    /** The total amount of the draft order including taxes, shipping charges, and discounts. */
    totalPriceSet: MoneyBag
    /** The total shipping charge for the draft order. */
    totalShippingPrice: Scalars['Money']
    /** The total shipping charge for the draft order. */
    totalShippingPriceSet: MoneyBag
    /** The total amount of taxes for the draft order. */
    totalTax: Scalars['Money']
    /** The total amount of taxes for the draft order. */
    totalTaxSet: MoneyBag
    /** The total weight in grams of the draft order. */
    totalWeight: Scalars['UnsignedInt64']
    /**
     * The date and time when the draft order was last changed.
     * The format is YYYY-MM-DD HH:mm:ss. For example, 2016-02-05 17:04:01.
     * 
     */
    updatedAt: Scalars['DateTime']
    /** Whether the draft order will be visible to the customer on the self-serve portal. */
    visibleToCustomer: Scalars['Boolean']
    __typename: 'DraftOrder'
}


/** The order-level discount applied to a draft order. */
export interface DraftOrderAppliedDiscount {
    /**
     * @deprecated Use `amountV2` instead.
     * Amount of the order-level discount that is applied to the draft order.
     */
    amount: Scalars['Money']
    /** The amount of money discounted, with values shown in both shop currency and presentment currency. */
    amountSet: MoneyBag
    /** Amount of money discounted. */
    amountV2: MoneyV2
    /** Description of the order-level discount. */
    description: Scalars['String']
    /** Name of the order-level discount. */
    title?: Scalars['String']
    /**
     * The order level discount amount. If `valueType` is `"percentage"`,
     * then `value` is the percentage discount.
     * 
     */
    value: Scalars['Float']
    /** Type of the order-level discount. */
    valueType: DraftOrderAppliedDiscountType
    __typename: 'DraftOrderAppliedDiscount'
}


/** The valid discount types that can be applied to a draft order. */
export type DraftOrderAppliedDiscountType = 'FIXED_AMOUNT' | 'PERCENTAGE'


/** Return type for `draftOrderBulkAddTags` mutation. */
export interface DraftOrderBulkAddTagsPayload {
    /** The asynchronous job for adding tags to the draft orders. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderBulkAddTagsPayload'
}


/** Return type for `draftOrderBulkDelete` mutation. */
export interface DraftOrderBulkDeletePayload {
    /** The asynchronous job for deleting the draft orders. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderBulkDeletePayload'
}


/** Return type for `draftOrderBulkRemoveTags` mutation. */
export interface DraftOrderBulkRemoveTagsPayload {
    /** The asynchronous job for removing tags from the draft orders. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderBulkRemoveTagsPayload'
}


/** Return type for `draftOrderCalculate` mutation. */
export interface DraftOrderCalculatePayload {
    /** The calculated properties for a draft order. */
    calculatedDraftOrder?: CalculatedDraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderCalculatePayload'
}


/** Return type for `draftOrderComplete` mutation. */
export interface DraftOrderCompletePayload {
    /** The completed draft order. */
    draftOrder?: DraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderCompletePayload'
}


/**
 * An auto-generated type for paginating through multiple DraftOrders.
 * 
 */
export interface DraftOrderConnection {
    /** A list of edges. */
    edges: DraftOrderEdge[]
    /** A list of the nodes contained in DraftOrderEdge. */
    nodes: DraftOrder[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DraftOrderConnection'
}


/** Return type for `draftOrderCreateFromOrder` mutation. */
export interface DraftOrderCreateFromOrderPayload {
    /** The created Draft Order. */
    draftOrder?: DraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderCreateFromOrderPayload'
}


/** Return type for `draftOrderCreateMerchantCheckout` mutation. */
export interface DraftOrderCreateMerchantCheckoutPayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderCreateMerchantCheckoutPayload'
}


/** Return type for `draftOrderCreate` mutation. */
export interface DraftOrderCreatePayload {
    /**
     * The created draft order.
     * 
     */
    draftOrder?: DraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderCreatePayload'
}


/** Return type for `draftOrderDelete` mutation. */
export interface DraftOrderDeletePayload {
    /**
     * The ID of the deleted draft order.
     * 
     */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderDeletePayload'
}


/** Return type for `draftOrderDuplicate` mutation. */
export interface DraftOrderDuplicatePayload {
    /** The newly duplicated draft order. */
    draftOrder?: DraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderDuplicatePayload'
}


/**
 * An auto-generated type which holds one DraftOrder and a cursor during pagination.
 * 
 */
export interface DraftOrderEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DraftOrderEdge. */
    node: DraftOrder
    __typename: 'DraftOrderEdge'
}


/** Return type for `draftOrderInvoicePreview` mutation. */
export interface DraftOrderInvoicePreviewPayload {
    /** The draft order invoice email rendered as HTML to allow previewing. */
    previewHtml?: Scalars['HTML']
    /** The subject preview for the draft order invoice email. */
    previewSubject?: Scalars['HTML']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderInvoicePreviewPayload'
}


/** Return type for `draftOrderInvoiceSend` mutation. */
export interface DraftOrderInvoiceSendPayload {
    /** The draft order an invoice email is sent for. */
    draftOrder?: DraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderInvoiceSendPayload'
}


/** A line item included in a draft order. */
export interface DraftOrderLineItem {
    /**
     * The discount that will be applied to the line item or the overall order.
     * 
     */
    appliedDiscount?: DraftOrderAppliedDiscount
    /**
     * Whether the line item is a custom line item (`true`) or a product variant line item (`false`).
     * 
     */
    custom: Scalars['Boolean']
    /** A list of attributes that represent custom features or special requests. */
    customAttributes: Attribute[]
    /** Additional information (metafields) about the line item with the associated types. */
    customAttributesV2: TypedAttribute[]
    /**
     * The line item price after discounts are applied.
     * 
     */
    discountedTotal: Scalars['Money']
    /** The line item price after discounts are applied. */
    discountedTotalSet: MoneyBag
    /**
     * The `discountedTotal` divided by `quantity`, resulting in the value of the discount per unit.
     * 
     */
    discountedUnitPrice: Scalars['Money']
    /** The `discountedTotal` divided by `quantity`, resulting in the value of the discount per unit. */
    discountedUnitPriceSet: MoneyBag
    /**
     * Name of the service provider who fulfilled the order.
     * 
     * Valid values are either **manual** or the name of the provider.
     * For example, **amazon**, **shipwire**.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentService
    /**
     * @deprecated Use `weight` instead.
     * The weight of the line item in grams. The weight can only be specified if the line item is a custom
     * line item.
     * 
     */
    grams?: Scalars['Int']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image associated with the draft order line item. */
    image?: Image
    /** Whether the line item is a gift card. */
    isGiftCard: Scalars['Boolean']
    /** The name of the product. */
    name: Scalars['String']
    /**
     * The total price (without discounts) of the line item, based on the original unit price of the variant x quantity.
     * 
     */
    originalTotal: Scalars['Money']
    /** The total price (without discounts) of the line item,based on the original unit price of the variant x quantity. */
    originalTotalSet: MoneyBag
    /** The variant price without any discounts applied. */
    originalUnitPrice: Scalars['Money']
    /** The variant price without any discounts applied. */
    originalUnitPriceSet: MoneyBag
    /**
     * The product corresponding to the line item’s product variant.
     * 
     */
    product?: Product
    /** The number of product variants that are requested in the draft order. */
    quantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /** The SKU number of the product variant. */
    sku?: Scalars['String']
    /**
     * A list of tax line objects, each of which details the total taxes applicable to the order.
     * 
     */
    taxLines: TaxLine[]
    /** Whether the variant is taxable. */
    taxable: Scalars['Boolean']
    /** The title of the product or variant. This field only applies to custom line items. */
    title: Scalars['String']
    /**
     * The total value of the discount that is applied to the line item.
     * 
     */
    totalDiscount: Scalars['Money']
    /** The total value of the discount that is applied to the line item. */
    totalDiscountSet: MoneyBag
    /**
     * The associated variant for the line item.
     * 
     */
    variant?: ProductVariant
    /** The name of the variant. */
    variantTitle?: Scalars['String']
    /** The name of the vendor who created the product variant. */
    vendor?: Scalars['String']
    /** The weight unit and value for a draft order line item. */
    weight?: Weight
    __typename: 'DraftOrderLineItem'
}


/**
 * An auto-generated type for paginating through multiple DraftOrderLineItems.
 * 
 */
export interface DraftOrderLineItemConnection {
    /** A list of edges. */
    edges: DraftOrderLineItemEdge[]
    /** A list of the nodes contained in DraftOrderLineItemEdge. */
    nodes: DraftOrderLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'DraftOrderLineItemConnection'
}


/**
 * An auto-generated type which holds one DraftOrderLineItem and a cursor during pagination.
 * 
 */
export interface DraftOrderLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of DraftOrderLineItemEdge. */
    node: DraftOrderLineItem
    __typename: 'DraftOrderLineItemEdge'
}


/** The set of valid sort keys for the DraftOrder query. */
export type DraftOrderSortKeys = 'NUMBER' | 'UPDATED_AT' | 'STATUS' | 'TOTAL_PRICE' | 'CUSTOMER_NAME' | 'ID' | 'RELEVANCE'


/** The valid statuses for a draft order. */
export type DraftOrderStatus = 'COMPLETED' | 'INVOICE_SENT' | 'OPEN'


/** Represents a draft order tag. */
export interface DraftOrderTag {
    /** Handle of draft order tag. */
    handle: Scalars['String']
    /** ID of draft order tag. */
    id: Scalars['ID']
    /** Title of draft order tag. */
    title: Scalars['String']
    __typename: 'DraftOrderTag'
}


/** Return type for `draftOrderUpdate` mutation. */
export interface DraftOrderUpdatePayload {
    /** The updated draft order. */
    draftOrder?: DraftOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'DraftOrderUpdatePayload'
}


/** The duty details for a line item. */
export interface Duty {
    /** The ISO 3166-1 alpha-2 country code of the country of origin used in calculating the duty. */
    countryCodeOfOrigin?: CountryCode
    /** The harmonized system code of the item used in calculating the duty. */
    harmonizedSystemCode?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The amount of the duty. */
    price: MoneyBag
    /** A list of taxes charged on the duty. */
    taxLines: TaxLine[]
    __typename: 'Duty'
}


/** A sale associated with a duty charge. */
export interface DutySale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The duty for the associated sale. */
    duty: Duty
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'DutySale'
}


/** The attribute editable information. */
export interface EditableProperty {
    /** Whether the attribute is locked for editing. */
    locked: Scalars['Boolean']
    /** The reason the attribute is locked for editing. */
    reason?: Scalars['FormattedString']
    __typename: 'EditableProperty'
}


/** Error position information in a ShopifyQL parsing error. */
export interface ErrorPosition {
    /** The character position of the error in the line. */
    character: Scalars['Int']
    /** The line number of the error. */
    line: Scalars['Int']
    __typename: 'ErrorPosition'
}


/** An error that occurs during the execution of a server pixel mutation. */
export interface ErrorsServerPixelUserError {
    /** The error code. */
    code?: ErrorsServerPixelUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ErrorsServerPixelUserError'
}


/** Possible error codes that can be returned by `ErrorsServerPixelUserError`. */
export type ErrorsServerPixelUserErrorCode = 'NOT_FOUND' | 'ALREADY_EXISTS' | 'PUB_SUB_ERROR' | 'NEEDS_CONFIGURATION_TO_CONNECT'


/** An error that occurs during the execution of a web pixel mutation. */
export interface ErrorsWebPixelUserError {
    /** The error code. */
    code?: ErrorsWebPixelUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ErrorsWebPixelUserError'
}


/** Possible error codes that can be returned by `ErrorsWebPixelUserError`. */
export type ErrorsWebPixelUserErrorCode = 'BLANK' | 'TAKEN' | 'NOT_FOUND' | 'INVALID_SETTINGS' | 'UNABLE_TO_DELETE'


/**
 * Events chronicle resource activities such as the creation of an article, the fulfillment of an order, or the
 * addition of a product.
 * 
 */
export type Event = (BasicEvent | CommentEvent) & { __isUnion?: true }


/** Return type for `eventBridgeServerPixelUpdate` mutation. */
export interface EventBridgeServerPixelUpdatePayload {
    /** The server pixel as configured by the mutation. */
    serverPixel?: ServerPixel
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsServerPixelUserError[]
    __typename: 'EventBridgeServerPixelUpdatePayload'
}


/** Return type for `eventBridgeWebhookSubscriptionCreate` mutation. */
export interface EventBridgeWebhookSubscriptionCreatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    /** The webhook subscription that was created. */
    webhookSubscription?: WebhookSubscription
    __typename: 'EventBridgeWebhookSubscriptionCreatePayload'
}


/** Return type for `eventBridgeWebhookSubscriptionUpdate` mutation. */
export interface EventBridgeWebhookSubscriptionUpdatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    /** The webhook subscription that was updated. */
    webhookSubscription?: WebhookSubscription
    __typename: 'EventBridgeWebhookSubscriptionUpdatePayload'
}


/**
 * An auto-generated type for paginating through multiple Events.
 * 
 */
export interface EventConnection {
    /** A list of edges. */
    edges: EventEdge[]
    /** A list of the nodes contained in EventEdge. */
    nodes: Event[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'EventConnection'
}


/**
 * An auto-generated type which holds one Event and a cursor during pagination.
 * 
 */
export interface EventEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of EventEdge. */
    node: Event
    __typename: 'EventEdge'
}


/** The set of valid sort keys for the Event query. */
export type EventSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** An exchange where existing items on an order are returned and new items are added to the order. */
export interface ExchangeV2 {
    /** The details of the new items in the exchange. */
    additions: ExchangeV2Additions
    /** The date and time when the exchange was completed. */
    completedAt?: Scalars['DateTime']
    /** The date and time when the exchange was created. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The location where the exchange happened. */
    location?: Location
    /** The text of an optional note that a shop owner can attach to the exchange. */
    note?: Scalars['String']
    /** The refunds processed during the exchange. */
    refunds: Refund[]
    /** The details of the returned items in the exchange. */
    returns: ExchangeV2Returns
    /** The staff member associated with the exchange. */
    staffMember?: StaffMember
    /** The amount of money that was paid or refunded as part of the exchange. */
    totalAmountProcessedSet: MoneyBag
    /** The difference in values of the items that were exchanged. */
    totalPriceSet: MoneyBag
    /** The order transactions related to the exchange. */
    transactions: OrderTransaction[]
    __typename: 'ExchangeV2'
}


/** New items associated to the exchange. */
export interface ExchangeV2Additions {
    /** The list of new items for the exchange. */
    lineItems: ExchangeV2LineItem[]
    /** The subtotal of the items being added, including discounts. */
    subtotalPriceSet: MoneyBag
    /** The summary of all taxes of the items being added. */
    taxLines: TaxLine[]
    /** The total price of the items being added, including discounts and taxes. */
    totalPriceSet: MoneyBag
    __typename: 'ExchangeV2Additions'
}


/**
 * An auto-generated type for paginating through multiple ExchangeV2s.
 * 
 */
export interface ExchangeV2Connection {
    /** A list of edges. */
    edges: ExchangeV2Edge[]
    /** A list of the nodes contained in ExchangeV2Edge. */
    nodes: ExchangeV2[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ExchangeV2Connection'
}


/**
 * An auto-generated type which holds one ExchangeV2 and a cursor during pagination.
 * 
 */
export interface ExchangeV2Edge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ExchangeV2Edge. */
    node: ExchangeV2
    __typename: 'ExchangeV2Edge'
}


/** Contains information about an item in the exchange. */
export interface ExchangeV2LineItem {
    /** A list of attributes that represent custom features or special requests. */
    customAttributes: Attribute[]
    /** The total line price, in shop and presentment currencies, after discounts are applied. */
    discountedTotalSet: MoneyBag
    /**
     * The price, in shop and presentment currencies,
     * of a single variant unit after line item discounts are applied.
     * 
     */
    discountedUnitPriceSet: MoneyBag
    /**
     * Name of the service provider who fulfilled the order.
     * 
     * Valid values are either **manual** or the name of the provider.
     * For example, **amazon**, **shipwire**.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentService
    /** Indiciates if this line item is a gift card. */
    giftCard: Scalars['Boolean']
    /** The gift cards associated with the line item. */
    giftCards: GiftCard[]
    /** The line item associated with this object. */
    lineItem?: LineItem
    /** The name of the product. */
    name: Scalars['String']
    /** The total price, in shop and presentment currencies, before discounts are applied. */
    originalTotalSet: MoneyBag
    /**
     * The price, in shop and presentment currencies,
     * of a single variant unit before line item discounts are applied.
     * 
     */
    originalUnitPriceSet: MoneyBag
    /** The number of products that were purchased. */
    quantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /** The SKU number of the product variant. */
    sku?: Scalars['String']
    /** The TaxLine object connected to this line item. */
    taxLines: TaxLine[]
    /** Whether the variant is taxable. */
    taxable: Scalars['Boolean']
    /** The title of the product or variant. This field only applies to custom line items. */
    title: Scalars['String']
    /** The product variant of the line item. */
    variant?: ProductVariant
    /** The name of the variant. */
    variantTitle?: Scalars['String']
    /** The name of the vendor who created the product variant. */
    vendor?: Scalars['String']
    __typename: 'ExchangeV2LineItem'
}


/** Return items associated to the exchange. */
export interface ExchangeV2Returns {
    /** The list of return items for the exchange. */
    lineItems: ExchangeV2LineItem[]
    /**
     * The amount of the order-level discount for the items and shipping being returned, which doesn't contain any line item discounts.
     * 
     */
    orderDiscountAmountSet: MoneyBag
    /** The amount of money to be refunded for shipping. */
    shippingRefundAmountSet: MoneyBag
    /** The subtotal of the items being returned. */
    subtotalPriceSet: MoneyBag
    /** The summary of all taxes of the items being returned. */
    taxLines: TaxLine[]
    /** The amount of money to be refunded for tip. */
    tipRefundAmountSet: MoneyBag
    /** The total value of the items being returned. */
    totalPriceSet: MoneyBag
    __typename: 'ExchangeV2Returns'
}


/**
 * Represents a video hosted outside of Shopify.
 * 
 */
export interface ExternalVideo {
    /** A word or phrase to share the nature or contents of a media. */
    alt?: Scalars['String']
    /** The embed URL of the video for the respective host. */
    embedUrl: Scalars['URL']
    /**
     * @deprecated Use `originUrl` instead.
     * The URL.
     */
    embeddedUrl: Scalars['URL']
    /** The host of the external video. */
    host: MediaHost
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The media content type. */
    mediaContentType: MediaContentType
    /** Any errors which have occurred on the media. */
    mediaErrors: MediaError[]
    /** The warnings attached to the media. */
    mediaWarnings: MediaWarning[]
    /** The origin URL of the video on the respective host. */
    originUrl: Scalars['URL']
    /** The preview image for the media. */
    preview?: MediaPreviewImage
    /** Current status of the media. */
    status: MediaStatus
    __typename: 'ExternalVideo'
}


/** Requirements that must be met before an app can be installed. */
export interface FailedRequirement {
    /** Action to be taken to resolve a failed requirement, including URL link. */
    action?: NavigationItem
    /**
     * A concise set of copy strings to be displayed to merchants, to guide them in resolving problems your app
     * encounters when trying to make use of their Shop and its resources.
     * 
     */
    message: Scalars['String']
    __typename: 'FailedRequirement'
}


/** A file interface. */
export type File = (GenericFile | MediaImage | Video) & { __isUnion?: true }


/** Return type for `fileAcknowledgeUpdateFailed` mutation. */
export interface FileAcknowledgeUpdateFailedPayload {
    /** The updated file(s). */
    files?: File[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FilesUserError[]
    __typename: 'FileAcknowledgeUpdateFailedPayload'
}


/**
 * An auto-generated type for paginating through multiple Files.
 * 
 */
export interface FileConnection {
    /** A list of edges. */
    edges: FileEdge[]
    /** A list of the nodes contained in FileEdge. */
    nodes: File[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FileConnection'
}


/** The possible content types for a file object. */
export type FileContentType = 'IMAGE' | 'FILE' | 'VIDEO'


/** The input fields for handling if filename is already in use. */
export type FileCreateInputDuplicateResolutionMode = 'APPEND_UUID' | 'RAISE_ERROR' | 'REPLACE'


/** Return type for `fileCreate` mutation. */
export interface FileCreatePayload {
    /** The newly created files. */
    files?: File[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FilesUserError[]
    __typename: 'FileCreatePayload'
}


/** Return type for `fileDelete` mutation. */
export interface FileDeletePayload {
    /** The IDs of the deleted files. */
    deletedFileIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FilesUserError[]
    __typename: 'FileDeletePayload'
}


/**
 * An auto-generated type which holds one File and a cursor during pagination.
 * 
 */
export interface FileEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FileEdge. */
    node: File
    __typename: 'FileEdge'
}


/**
 * A file error. This typically occurs when there is an issue with the file itself causing it to fail validation.
 * Check the file before attempting to upload again.
 * 
 */
export interface FileError {
    /** Code representing the type of error. */
    code: FileErrorCode
    /** Additional details regarding the error. */
    details?: Scalars['String']
    /** Translated error message. */
    message: Scalars['String']
    __typename: 'FileError'
}


/** The error types for a file. */
export type FileErrorCode = 'UNKNOWN' | 'INVALID_SIGNED_URL' | 'IMAGE_DOWNLOAD_FAILURE' | 'IMAGE_PROCESSING_FAILURE' | 'MEDIA_TIMEOUT_ERROR' | 'EXTERNAL_VIDEO_NOT_FOUND' | 'EXTERNAL_VIDEO_UNLISTED' | 'EXTERNAL_VIDEO_INVALID_ASPECT_RATIO' | 'EXTERNAL_VIDEO_EMBED_DISABLED' | 'EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING' | 'GENERIC_FILE_DOWNLOAD_FAILURE' | 'GENERIC_FILE_INVALID_SIZE' | 'VIDEO_METADATA_READ_ERROR' | 'VIDEO_INVALID_FILETYPE_ERROR' | 'VIDEO_MIN_WIDTH_ERROR' | 'VIDEO_MAX_WIDTH_ERROR' | 'VIDEO_MIN_HEIGHT_ERROR' | 'VIDEO_MAX_HEIGHT_ERROR' | 'VIDEO_MIN_DURATION_ERROR' | 'VIDEO_MAX_DURATION_ERROR' | 'VIDEO_VALIDATION_ERROR' | 'MODEL3D_VALIDATION_ERROR' | 'MODEL3D_THUMBNAIL_GENERATION_ERROR' | 'MODEL3D_THUMBNAIL_REGENERATION_ERROR' | 'MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR' | 'MODEL3D_GLB_OUTPUT_CREATION_ERROR' | 'MODEL3D_PROCESSING_FAILURE' | 'UNSUPPORTED_IMAGE_FILE_TYPE' | 'INVALID_IMAGE_FILE_SIZE' | 'INVALID_IMAGE_ASPECT_RATIO' | 'INVALID_IMAGE_RESOLUTION' | 'FILE_STORAGE_LIMIT_EXCEEDED' | 'DUPLICATE_FILENAME_ERROR'


/** The set of valid sort keys for the File query. */
export type FileSortKeys = 'FILENAME' | 'ORIGINAL_UPLOAD_SIZE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/** The possible statuses for a file object. */
export type FileStatus = 'UPLOADED' | 'PROCESSING' | 'READY' | 'FAILED'


/** Return type for `fileUpdate` mutation. */
export interface FileUpdatePayload {
    /** The list of updated files. */
    files?: File[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FilesUserError[]
    __typename: 'FileUpdatePayload'
}


/** Possible error codes that can be returned by `FilesUserError`. */
export type FilesErrorCode = 'INVALID' | 'FILE_DOES_NOT_EXIST' | 'FILE_LOCKED' | 'UNSUPPORTED_MEDIA_TYPE_FOR_FILENAME_UPDATE' | 'TOO_MANY_ARGUMENTS' | 'BLANK_SEARCH' | 'MISSING_ARGUMENTS' | 'INVALID_QUERY' | 'INVALID_FILENAME_EXTENSION' | 'INVALID_FILENAME' | 'FILENAME_ALREADY_EXISTS' | 'UNACCEPTABLE_UNVERIFIED_TRIAL_ASSET' | 'UNACCEPTABLE_ASSET' | 'UNACCEPTABLE_TRIAL_ASSET' | 'ALT_VALUE_LIMIT_EXCEEDED' | 'NON_READY_STATE' | 'NON_IMAGE_MEDIA_PER_SHOP_LIMIT_EXCEEDED' | 'MISMATCHED_FILENAME_AND_ORIGINAL_SOURCE' | 'INVALID_DUPLICATE_MODE_FOR_TYPE' | 'INVALID_IMAGE_SOURCE_URL' | 'MISSING_FILENAME_FOR_DUPLICATE_MODE_REPLACE'


/** An error that happens during the execution of a Files API query or mutation. */
export interface FilesUserError {
    /** The error code. */
    code?: FilesErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FilesUserError'
}


/** A filter option is one possible value in a search filter. */
export interface FilterOption {
    /** The filter option's label for display purposes. */
    label: Scalars['String']
    /** The filter option's value. */
    value: Scalars['String']
    __typename: 'FilterOption'
}


/** Return type for `flowTriggerReceive` mutation. */
export interface FlowTriggerReceivePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FlowTriggerReceivePayload'
}


/**
 * Represents a fulfillment.
 * In Shopify, a fulfillment represents a shipment of one or more items in an order.
 * When an order has been completely fulfilled, it means that all the items that are included
 * in the order have been sent to the customer.
 * There can be more than one fulfillment for an order.
 * 
 */
export interface Fulfillment {
    /** The date and time when the fulfillment was created. */
    createdAt: Scalars['DateTime']
    /** The date that this fulfillment was delivered. */
    deliveredAt?: Scalars['DateTime']
    /** Human readable display status for this fulfillment. */
    displayStatus?: FulfillmentDisplayStatus
    /** The estimated date that this fulfillment will arrive. */
    estimatedDeliveryAt?: Scalars['DateTime']
    /** The history of events associated with this fulfillment. */
    events: FulfillmentEventConnection
    /** List of the fulfillment's line items. */
    fulfillmentLineItems: FulfillmentLineItemConnection
    /** A paginated list of fulfillment orders for the fulfillment. */
    fulfillmentOrders: FulfillmentOrderConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The date and time when the fulfillment went into transit. */
    inTransitAt?: Scalars['DateTime']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The location that the fulfillment was processed at. */
    location?: Location
    /** Human readable reference identifier for this fulfillment. */
    name: Scalars['String']
    /** The order for which the fulfillment was created. */
    order: Order
    /** The address at which the fulfillment occurred. Typically this is the address of the warehouse or fulfillment center. */
    originAddress?: FulfillmentOriginAddress
    /** Whether any of the line items in the fulfillment require shipping. */
    requiresShipping: Scalars['Boolean']
    /** Fulfillment service associated with the fulfillment. */
    service?: FulfillmentService
    /** The status of the fulfillment. */
    status: FulfillmentStatus
    /** Sum of all line item quantities for the fulfillment. */
    totalQuantity: Scalars['Int']
    /**
     * Tracking information associated with the fulfillment,
     * such as the tracking company, tracking number, and tracking URL.
     * 
     */
    trackingInfo: FulfillmentTrackingInfo[]
    /**
     * The date and time when the fulfillment was last modified.
     * 
     */
    updatedAt: Scalars['DateTime']
    __typename: 'Fulfillment'
}


/** Return type for `fulfillmentCancel` mutation. */
export interface FulfillmentCancelPayload {
    /** The canceled fulfillment. */
    fulfillment?: Fulfillment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentCancelPayload'
}


/**
 * An auto-generated type for paginating through multiple Fulfillments.
 * 
 */
export interface FulfillmentConnection {
    /** A list of edges. */
    edges: FulfillmentEdge[]
    /** A list of the nodes contained in FulfillmentEdge. */
    nodes: Fulfillment[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentConnection'
}


/** Return type for `fulfillmentCreateV2` mutation. */
export interface FulfillmentCreateV2Payload {
    /** The created fulfillment. */
    fulfillment?: Fulfillment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentCreateV2Payload'
}


/** The display status of a fulfillment. */
export type FulfillmentDisplayStatus = 'ATTEMPTED_DELIVERY' | 'CANCELED' | 'CONFIRMED' | 'DELIVERED' | 'FAILURE' | 'FULFILLED' | 'IN_TRANSIT' | 'LABEL_PRINTED' | 'LABEL_PURCHASED' | 'LABEL_VOIDED' | 'MARKED_AS_FULFILLED' | 'NOT_DELIVERED' | 'OUT_FOR_DELIVERY' | 'READY_FOR_PICKUP' | 'PICKED_UP' | 'SUBMITTED'


/**
 * An auto-generated type which holds one Fulfillment and a cursor during pagination.
 * 
 */
export interface FulfillmentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentEdge. */
    node: Fulfillment
    __typename: 'FulfillmentEdge'
}


/** The fulfillment event that describes the fulfilllment status at a particular time. */
export interface FulfillmentEvent {
    /** The street address where this fulfillment event occurred. */
    address1?: Scalars['String']
    /** The city where this fulfillment event occurred. */
    city?: Scalars['String']
    /** The country where this fulfillment event occurred. */
    country?: Scalars['String']
    /** The estimated delivery date and time of the fulfillment. */
    estimatedDeliveryAt?: Scalars['DateTime']
    /** The time at which this fulfillment event happened. */
    happenedAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The latitude where this fulfillment event occurred. */
    latitude?: Scalars['Float']
    /** The longitude where this fulfillment event occurred. */
    longitude?: Scalars['Float']
    /** A message associated with this fulfillment event. */
    message?: Scalars['String']
    /** The province where this fulfillment event occurred. */
    province?: Scalars['String']
    /** The status of this fulfillment event. */
    status: FulfillmentEventStatus
    /** The zip code of the location where this fulfillment event occurred. */
    zip?: Scalars['String']
    __typename: 'FulfillmentEvent'
}


/**
 * An auto-generated type for paginating through multiple FulfillmentEvents.
 * 
 */
export interface FulfillmentEventConnection {
    /** A list of edges. */
    edges: FulfillmentEventEdge[]
    /** A list of the nodes contained in FulfillmentEventEdge. */
    nodes: FulfillmentEvent[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentEventConnection'
}


/** Return type for `fulfillmentEventCreate` mutation. */
export interface FulfillmentEventCreatePayload {
    /** The created fulfillment event. */
    fulfillmentEvent?: FulfillmentEvent
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentEventCreatePayload'
}


/**
 * An auto-generated type which holds one FulfillmentEvent and a cursor during pagination.
 * 
 */
export interface FulfillmentEventEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentEventEdge. */
    node: FulfillmentEvent
    __typename: 'FulfillmentEventEdge'
}


/** The set of valid sort keys for the FulfillmentEvent query. */
export type FulfillmentEventSortKeys = 'HAPPENED_AT' | 'ID' | 'RELEVANCE'


/** The status that describes a fulfillment or delivery event. */
export type FulfillmentEventStatus = 'LABEL_PURCHASED' | 'LABEL_PRINTED' | 'READY_FOR_PICKUP' | 'CONFIRMED' | 'IN_TRANSIT' | 'OUT_FOR_DELIVERY' | 'ATTEMPTED_DELIVERY' | 'DELIVERED' | 'FAILURE'


/**
 * A fulfillment hold currently applied on a fulfillment order.
 * 
 */
export interface FulfillmentHold {
    /** The name of the app or service that applied the fulfillment hold. */
    heldBy?: Scalars['String']
    /** The reason for the fulfillment hold. */
    reason: FulfillmentHoldReason
    /** Additional information about the fulfillment hold reason. */
    reasonNotes?: Scalars['String']
    __typename: 'FulfillmentHold'
}


/** The reason for a fulfillment hold. */
export type FulfillmentHoldReason = 'AWAITING_PAYMENT' | 'HIGH_RISK_OF_FRAUD' | 'INCORRECT_ADDRESS' | 'INVENTORY_OUT_OF_STOCK' | 'UNKNOWN_DELIVERY_DATE' | 'ONLINE_STORE_POST_PURCHASE_CROSS_SELL' | 'OTHER'


/** Represents a line item from an order that's included in a fulfillment. */
export interface FulfillmentLineItem {
    /**
     * @deprecated Use `discountedTotalSet` instead.
     * The total price after discounts are applied.
     */
    discountedTotal: Scalars['Money']
    /** The total price after discounts are applied in shop and presentment currencies. */
    discountedTotalSet: MoneyBag
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The associated order's line item. */
    lineItem: LineItem
    /**
     * @deprecated Use `originalTotalSet` instead.
     * The total price before discounts are applied.
     */
    originalTotal: Scalars['Money']
    /** The total price before discounts are applied in shop and presentment currencies. */
    originalTotalSet: MoneyBag
    /** Number of line items in the fulfillment. */
    quantity?: Scalars['Int']
    __typename: 'FulfillmentLineItem'
}


/**
 * An auto-generated type for paginating through multiple FulfillmentLineItems.
 * 
 */
export interface FulfillmentLineItemConnection {
    /** A list of edges. */
    edges: FulfillmentLineItemEdge[]
    /** A list of the nodes contained in FulfillmentLineItemEdge. */
    nodes: FulfillmentLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentLineItemConnection'
}


/**
 * An auto-generated type which holds one FulfillmentLineItem and a cursor during pagination.
 * 
 */
export interface FulfillmentLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentLineItemEdge. */
    node: FulfillmentLineItem
    __typename: 'FulfillmentLineItemEdge'
}


/**
 * The FulfillmentOrder object represents either an item or a group of items in an
 * [Order](https://shopify.dev/api/admin-graphql/latest/objects/Order)
 * that are expected to be fulfilled from the same location.
 * There can be more than one fulfillment order for an
 * [order](https://shopify.dev/api/admin-graphql/latest/objects/Order)
 * at a given location.
 * 
 * {{ '/api/reference/fulfillment_order_relationships.png' | image }}
 * 
 * Fulfillment orders represent the work which is intended to be done in relation to an order.
 * When fulfillment has started for one or more line items, a
 * [Fulfillment](https://shopify.dev/api/admin-graphql/latest/objects/Fulfillment)
 * is created by a merchant or third party to represent the ongoing or completed work of fulfillment.
 * 
 * [See below for more details on creating fulfillments](#the-lifecycle-of-a-fulfillment-order-at-a-location-which-is-managed-by-a-fulfillment-service).
 * 
 * > Note:
 * > Shopify creates fulfillment orders automatically when an order is created.
 * > It is not possible to manually create fulfillment orders.
 * >
 * > [See below for more details on the lifecycle of a fulfillment order](#the-lifecycle-of-a-fulfillment-order).
 * 
 * ## Retrieving fulfillment orders
 * 
 * ### Fulfillment orders from an order
 * 
 * All fulfillment orders related to a given order can be retrieved with the
 * [Order.fulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/objects/Order#connection-order-fulfillmentorders)
 * connection.
 * 
 * [API access scopes](#api-access-scopes)
 * govern which fulfillments orders are returned to clients.
 * An API client will only receive a subset of the fulfillment orders which belong to an order
 * if they don't have the necessary access scopes to view all of the fulfillment orders.
 * 
 * ### Fulfillment orders assigned to the app for fulfillment
 * 
 * Fulfillment service apps can retrieve the fulfillment orders which have been assigned to their locations with the
 * [Shop.assignedFulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/objects/Shop#connection-shop-assignedfulfillmentorders)
 * connection.
 * Use the `assignmentStatus` argument to control whether all assigned fulfillment orders
 * should be returned or only those where a merchant has sent a
 * [fulfillment request](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderMerchantRequest)
 * and it has yet to be responded to.
 * 
 * The API client must be granted the `read_assigned_fulfillment_orders` access scope to access
 * the assigned fulfillment orders.
 * 
 * ### All fulfillment orders
 * 
 * Apps can retrieve all fulfillment orders with the
 * [fulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/queries/fulfillmentOrders)
 * query. This query returns all assigned, merchant-managed, and third-party fulfillment orders on the shop,
 * which are accessible to the app according to the
 * [fulfillment order access scopes](#api-access-scopes) it was granted with.
 * 
 * ## The lifecycle of a fulfillment order
 * 
 * ### Fulfillment Order Creation
 * 
 * After an order is created, a background worker performs the order routing process which determines
 * which locations will be responsible for fulfilling the purchased items.
 * Once the order routing process is complete, one or more fulfillment orders will be created
 * and assigned to these locations. It is not possible to manually create fulfillment orders.
 * 
 * Once a fulfillment order has been created, it will have one of two different lifecycles depending on
 * the type of location which the fulfillment order is assigned to.
 * 
 * ### The lifecycle of a fulfillment order at a merchant managed location
 * 
 * Fulfillment orders are completed by creating
 * [fulfillments](https://shopify.dev/api/admin-graphql/latest/objects/Fulfillment).
 * Fulfillments represents the work done.
 * 
 * For digital products a merchant or an order management app would create a fulfilment once the digital asset
 * has been provisioned.
 * For example, in the case of a digital gift card, a merchant would to do this once
 * the gift card has been activated - before the email has been shipped.
 * 
 * On the other hand, for a traditional shipped order,
 * a merchant or an order management app would create a fulfillment after picking and packing the items relating
 * to a fulfillment order, but before the courier has collected the goods.
 * 
 * [Learn about managing fulfillment orders as an order management app](https://shopify.dev/apps/fulfillment/order-management-apps/manage-fulfillments).
 * 
 * ### The lifecycle of a fulfillment order at a location which is managed by a fulfillment service
 * 
 * For fulfillment orders which are assigned to a location that is managed by a fulfillment service,
 * a merchant or an Order Management App can
 * [send a fulfillment request](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderSubmitFulfillmentRequest)
 * to the fulfillment service which operates the location to request that they fulfill the associated items.
 * A fulfillment service has the option to
 * [accept](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderAcceptFulfillmentRequest)
 * or [reject](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderRejectFulfillmentRequest)
 * this fulfillment request.
 * 
 * Once the fulfillment service has accepted the request, the request can no longer be cancelled by the merchant
 * or order management app and instead a
 * [cancellation request must be submitted](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderSubmitCancellationRequest)
 * to the fulfillment service.
 * 
 * Once a fulfillment service accepts a fulfillment request,
 * then after they are ready to pack items and send them for delivery, they create fulfillments with the
 * [fulfillmentCreateV2](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentCreateV2)
 * mutation.
 * They can provide tracking information right away or create fulfillments without it and then
 * update the tracking information for fulfillments with the
 * [fulfillmentTrackingInfoUpdateV2](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentTrackingInfoUpdateV2)
 * mutation.
 * 
 * [Learn about managing fulfillment orders as a fulfillment service](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments).
 * 
 * ## API access scopes
 * 
 * Fulfillment orders are governed by the following API access scopes:
 * 
 * * The `read_merchant_managed_fulfillment_orders` and
 *   `write_merchant_managed_fulfillment_orders` access scopes
 *   grant access to fulfillment orders assigned to merchant-managed locations.
 * * The `read_assigned_fulfillment_orders` and `write_assigned_fulfillment_orders`
 *   access scopes are intended for fulfillment services.
 *   These scopes grant access to fulfillment orders assigned to locations that are being managed
 *   by fulfillment services.
 * * The `read_third_party_fulfillment_orders` and `write_third_party_fulfillment_orders`
 *   access scopes grant access to fulfillment orders
 *   assigned to locations managed by other fulfillment services.
 * 
 * ### Fulfillment service app access scopes
 * 
 * Usually, **fulfillment services** have the `write_assigned_fulfillment_orders` access scope
 * and don't have the `*_third_party_fulfillment_orders`
 * or `*_merchant_managed_fulfillment_orders` access scopes.
 * The app will only have access to the fulfillment orders assigned to their location
 * (or multiple locations if the app registers multiple fulfillment services on the shop).
 * The app will not have access to fulfillment orders assigned to merchant-managed locations
 * or locations owned by other fulfillment service apps.
 * 
 * ### Order management app access scopes
 * 
 * **Order management apps** will usually request `write_merchant_managed_fulfillment_orders` and
 * `write_third_party_fulfillment_orders` access scopes. This will allow them to manage all fulfillment orders
 * on behalf of a merchant.
 * 
 * If an app combines the functions of an order management app and a fulfillment service,
 * then the app should request all
 * access scopes to manage all assigned and all unassigned fulfillment orders.
 * 
 * ## Notifications about fulfillment orders
 * 
 * Fulfillment services are required to
 * [register](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentService)
 * a self-hosted callback URL which has a number of uses. One of these uses is that this callback URL will be notified
 * whenever a merchant submits a fulfillment or cancellation request.
 * 
 * Both merchants and apps can
 * [subscribe](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#webhooks)
 * to the
 * [fulfillment order webhooks](https://shopify.dev/api/admin-graphql/latest/enums/WebhookSubscriptionTopic#value-fulfillmentorderscancellationrequestaccepted)
 * to be notified whenever fulfillment order related domain events occur.
 * 
 * [Learn about fulfillment workflows](https://shopify.dev/apps/fulfillment).
 * 
 */
export interface FulfillmentOrder {
    /**
     * The fulfillment order's assigned location. This is the location where the fulfillment is expected to happen.
     * 
     * The fulfillment order's assigned location might change in the following cases:
     * 
     * - The fulfillment order has been entirely moved to a new location. For example, the [fulfillmentOrderMove](
     *   https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove
     *   ) mutation has been called, and you see the original fulfillment order in the [movedFulfillmentOrder](
     *   https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove#field-fulfillmentordermovepayload-movedfulfillmentorder
     *   ) field within the mutation's response.
     * - Work on the fulfillment order has not yet begun, which means that the fulfillment order has the
     *     [OPEN](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-open),
     *     [SCHEDULED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-scheduled), or
     *     [ON_HOLD](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-onhold)
     *     status, and the shop's location properties might be undergoing edits (for example, in the Shopify admin).
     * 
     */
    assignedLocation: FulfillmentOrderAssignedLocation
    /** Date and time when the fulfillment order was created. */
    createdAt: Scalars['DateTime']
    /** Delivery method of this fulfillment order. */
    deliveryMethod?: DeliveryMethod
    /** The destination where the items should be sent. */
    destination?: FulfillmentOrderDestination
    /** The date and time at which the fulfillment order will be fulfillable. When this date and time is reached, the scheduled fulfillment order is automatically transitioned to open. For example, the `fulfill_at` date for a subscription order might be the 1st of each month, a pre-order `fulfill_at` date would be `nil`, and a standard order `fulfill_at` date would be the order creation date. */
    fulfillAt?: Scalars['DateTime']
    /** The latest date and time by which all items in the fulfillment order need to be fulfilled. */
    fulfillBy?: Scalars['DateTime']
    /** The fulfillment holds applied on the fulfillment order. */
    fulfillmentHolds: FulfillmentHold[]
    /** A list of fulfillments for the fulfillment order. */
    fulfillments: FulfillmentConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The duties delivery method of this fulfillment order. */
    internationalDuties?: FulfillmentOrderInternationalDuties
    /** A list of the fulfillment order's line items. */
    lineItems: FulfillmentOrderLineItemConnection
    /** A list of locations that the fulfillment order can potentially move to. */
    locationsForMove: FulfillmentOrderLocationForMoveConnection
    /** A list of requests sent by the merchant or an order management app to the fulfillment service for the fulfillment order. */
    merchantRequests: FulfillmentOrderMerchantRequestConnection
    /** The order that's associated with the fulfillment order. */
    order: Order
    /** The request status of the fulfillment order. */
    requestStatus: FulfillmentOrderRequestStatus
    /** The status of the fulfillment order. */
    status: FulfillmentOrderStatus
    /** The actions that can be performed on this fulfillment order. */
    supportedActions: FulfillmentOrderSupportedAction[]
    /** The date and time when the fulfillment order was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'FulfillmentOrder'
}


/** Return type for `fulfillmentOrderAcceptCancellationRequest` mutation. */
export interface FulfillmentOrderAcceptCancellationRequestPayload {
    /** The fulfillment order whose cancellation request was accepted. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderAcceptCancellationRequestPayload'
}


/** Return type for `fulfillmentOrderAcceptFulfillmentRequest` mutation. */
export interface FulfillmentOrderAcceptFulfillmentRequestPayload {
    /** The fulfillment order whose fulfillment request was accepted. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderAcceptFulfillmentRequestPayload'
}


/** The actions that can be taken on a fulfillment order. */
export type FulfillmentOrderAction = 'CREATE_FULFILLMENT' | 'REQUEST_FULFILLMENT' | 'CANCEL_FULFILLMENT_ORDER' | 'MOVE' | 'REQUEST_CANCELLATION' | 'MARK_AS_OPEN' | 'RELEASE_HOLD' | 'HOLD' | 'EXTERNAL' | 'SPLIT' | 'MERGE'


/**
 * The fulfillment order's assigned location. This is the location where the fulfillment is expected to happen.
 * 
 *  The fulfillment order's assigned location might change in the following cases:
 * 
 *   - The fulfillment order has been entirely moved to a new location. For example, the [fulfillmentOrderMove](
 *     https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove
 *     ) mutation has been called, and you see the original fulfillment order in the [movedFulfillmentOrder](
 *     https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove#field-fulfillmentordermovepayload-movedfulfillmentorder
 *     ) field within the mutation's response.
 * 
 *   - Work on the fulfillment order has not yet begun, which means that the fulfillment order has the
 *       [OPEN](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-open),
 *       [SCHEDULED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-scheduled), or
 *       [ON_HOLD](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-onhold)
 *       status, and the shop's location properties might be undergoing edits (for example, in the Shopify admin).
 * 
 * If the [fulfillmentOrderMove](
 * https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove
 * ) mutation has moved the fulfillment order's line items to a new location,
 * but hasn't moved the fulfillment order instance itself, then the original fulfillment order's assigned location
 * doesn't change.
 * This happens if the fulfillment order is being split during the move, or if all line items can be moved
 * to an existing fulfillment order at a new location.
 * 
 * Once the fulfillment order has been taken into work or canceled,
 * which means that the fulfillment order has the
 * [IN_PROGRESS](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-inprogress),
 * [CLOSED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-closed),
 * [CANCELLED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-cancelled), or
 * [INCOMPLETE](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-incomplete)
 * status, `FulfillmentOrderAssignedLocation` acts as a snapshot of the shop's location content.
 * Up-to-date shop's location data may be queried through [location](
 *   https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderAssignedLocation#field-fulfillmentorderassignedlocation-location
 * ) connection.
 * 
 */
export interface FulfillmentOrderAssignedLocation {
    /** The first line of the address for the location. */
    address1?: Scalars['String']
    /** The second line of the address for the location. */
    address2?: Scalars['String']
    /** The city of the location. */
    city?: Scalars['String']
    /** The two-letter country code of the location. */
    countryCode: CountryCode
    /**
     * The location where the fulfillment is expected to happen. This value might be different from
     * `FulfillmentOrderAssignedLocation` if the location's attributes were updated
     * after the fulfillment order was taken into work of canceled.
     * 
     */
    location?: Location
    /** The name of the location. */
    name: Scalars['String']
    /** The phone number of the location. */
    phone?: Scalars['String']
    /** The province of the location. */
    province?: Scalars['String']
    /** The ZIP code of the location. */
    zip?: Scalars['String']
    __typename: 'FulfillmentOrderAssignedLocation'
}


/** The assigment status to be used to filter fulfillment orders. */
export type FulfillmentOrderAssignmentStatus = 'CANCELLATION_REQUESTED' | 'FULFILLMENT_REQUESTED' | 'FULFILLMENT_ACCEPTED'


/** Return type for `fulfillmentOrderCancel` mutation. */
export interface FulfillmentOrderCancelPayload {
    /** The fulfillment order that was marked as canceled. */
    fulfillmentOrder?: FulfillmentOrder
    /** The fulfillment order that was created to replace the canceled fulfillment order. */
    replacementFulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderCancelPayload'
}


/** Return type for `fulfillmentOrderClose` mutation. */
export interface FulfillmentOrderClosePayload {
    /** The fulfillment order that was marked as incomplete. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderClosePayload'
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrders.
 * 
 */
export interface FulfillmentOrderConnection {
    /** A list of edges. */
    edges: FulfillmentOrderEdge[]
    /** A list of the nodes contained in FulfillmentOrderEdge. */
    nodes: FulfillmentOrder[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentOrderConnection'
}


/**
 * Represents the destination where the items should be sent upon fulfillment.
 * 
 */
export interface FulfillmentOrderDestination {
    /** The first line of the address of the destination. */
    address1?: Scalars['String']
    /** The second line of the address of the destination. */
    address2?: Scalars['String']
    /** The city of the destination. */
    city?: Scalars['String']
    /** The company of the destination. */
    company?: Scalars['String']
    /** The two-letter country code of the destination. */
    countryCode?: CountryCode
    /** The email of the customer at the destination. */
    email?: Scalars['String']
    /** The first name of the customer at the destination. */
    firstName?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The last name of the customer at the destination. */
    lastName?: Scalars['String']
    /** The phone number of the customer at the destination. */
    phone?: Scalars['String']
    /** The province of the destination. */
    province?: Scalars['String']
    /** The ZIP code of the destination. */
    zip?: Scalars['String']
    __typename: 'FulfillmentOrderDestination'
}


/**
 * An auto-generated type which holds one FulfillmentOrder and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentOrderEdge. */
    node: FulfillmentOrder
    __typename: 'FulfillmentOrderEdge'
}


/** Return type for `fulfillmentOrderHold` mutation. */
export interface FulfillmentOrderHoldPayload {
    /** The fulfillment order on which a fulfillment hold was applied. */
    fulfillmentOrder?: FulfillmentOrder
    /**
     * The remaining fulfillment order containing the line items to which the hold was not applied,
     * if specific line items were specified to be placed on hold.
     * 
     */
    remainingFulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrderHoldUserError[]
    __typename: 'FulfillmentOrderHoldPayload'
}


/** An error that occurs during the execution of `FulfillmentOrderHold`. */
export interface FulfillmentOrderHoldUserError {
    /** The error code. */
    code?: FulfillmentOrderHoldUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrderHoldUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrderHoldUserError`. */
export type FulfillmentOrderHoldUserErrorCode = 'FULFILLMENT_ORDER_NOT_FOUND' | 'TAKEN' | 'GREATER_THAN_ZERO' | 'INVALID_LINE_ITEM_QUANTITY'


/**
 * The international duties relevant to a fulfillment order.
 * 
 */
export interface FulfillmentOrderInternationalDuties {
    /** The method of duties payment. Example values: `DDP`, `DAP`. */
    incoterm: Scalars['String']
    __typename: 'FulfillmentOrderInternationalDuties'
}


/**
 * Associates an order line item with quantities requiring fulfillment from the respective fulfillment order.
 * 
 */
export interface FulfillmentOrderLineItem {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image associated to the line item's variant. */
    image?: Image
    /** The ID of the inventory item. */
    inventoryItemId?: Scalars['ID']
    /**
     * @deprecated           As of API version 2023-01, this field has been deprecated. The order line item associated with a `FulfillmentOrderLineItem`           shouldn't be used to determine what to fulfill. Use the `FulfillmentOrderLineItem` and `FulfillmentOrder` objects           instead. An order `LineItem` represents a single line item on an order, but it doesn't represent what should be fulfilled. 
     * The associated order line item.
     */
    lineItem: LineItem
    /** The variant unit price without discounts applied, in shop and presentment currencies. */
    originalUnitPriceSet: MoneyBag
    /** The title of the product. */
    productTitle: Scalars['String']
    /** The number of units remaining to be fulfilled. */
    remainingQuantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /** The variant SKU number. */
    sku?: Scalars['String']
    /** The total number of units to be fulfilled. */
    totalQuantity: Scalars['Int']
    /** The name of the variant. */
    variantTitle?: Scalars['String']
    /** The name of the vendor who made the variant. */
    vendor?: Scalars['String']
    /** Warning messages for a fulfillment order line item. */
    warnings: FulfillmentOrderLineItemWarning[]
    /** The weight of a line item unit. */
    weight?: Weight
    __typename: 'FulfillmentOrderLineItem'
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrderLineItems.
 * 
 */
export interface FulfillmentOrderLineItemConnection {
    /** A list of edges. */
    edges: FulfillmentOrderLineItemEdge[]
    /** A list of the nodes contained in FulfillmentOrderLineItemEdge. */
    nodes: FulfillmentOrderLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentOrderLineItemConnection'
}


/**
 * An auto-generated type which holds one FulfillmentOrderLineItem and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentOrderLineItemEdge. */
    node: FulfillmentOrderLineItem
    __typename: 'FulfillmentOrderLineItemEdge'
}


/**
 * A fulfillment order line item warning. For example, a warning about why a fulfillment request was rejected.
 * 
 */
export interface FulfillmentOrderLineItemWarning {
    /** The description of warning. */
    description?: Scalars['String']
    /** The title of warning. */
    title?: Scalars['String']
    __typename: 'FulfillmentOrderLineItemWarning'
}


/** Return type for `fulfillmentOrderLineItemsPreparedForPickup` mutation. */
export interface FulfillmentOrderLineItemsPreparedForPickupPayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrderLineItemsPreparedForPickupUserError[]
    __typename: 'FulfillmentOrderLineItemsPreparedForPickupPayload'
}


/** An error that occurs during the execution of `FulfillmentOrderLineItemsPreparedForPickup`. */
export interface FulfillmentOrderLineItemsPreparedForPickupUserError {
    /** The error code. */
    code?: FulfillmentOrderLineItemsPreparedForPickupUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrderLineItemsPreparedForPickupUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrderLineItemsPreparedForPickupUserError`. */
export type FulfillmentOrderLineItemsPreparedForPickupUserErrorCode = 'NO_LINE_ITEMS_TO_PREPARE_FOR_FULFILLMENT_ORDER' | 'FULFILLMENT_ORDER_INVALID' | 'UNABLE_TO_PREPARE_QUANTITY'


/**
 * A location that a fulfillment order can potentially move to.
 * 
 */
export interface FulfillmentOrderLocationForMove {
    /** The location being considered as the fulfillment order's new assigned location. */
    location: Location
    /**
     * A human-readable string with the reason why the fulfillment order, or some of its line items, can't be
     * moved to the location.
     * 
     */
    message?: Scalars['String']
    /** Whether the fulfillment order can be moved to the location. */
    movable: Scalars['Boolean']
    __typename: 'FulfillmentOrderLocationForMove'
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrderLocationForMoves.
 * 
 */
export interface FulfillmentOrderLocationForMoveConnection {
    /** A list of edges. */
    edges: FulfillmentOrderLocationForMoveEdge[]
    /** A list of the nodes contained in FulfillmentOrderLocationForMoveEdge. */
    nodes: FulfillmentOrderLocationForMove[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentOrderLocationForMoveConnection'
}


/**
 * An auto-generated type which holds one FulfillmentOrderLocationForMove and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderLocationForMoveEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentOrderLocationForMoveEdge. */
    node: FulfillmentOrderLocationForMove
    __typename: 'FulfillmentOrderLocationForMoveEdge'
}


/**
 * A request made by the merchant or an order management app to a fulfillment service
 * for a fulfillment order.
 * 
 */
export interface FulfillmentOrderMerchantRequest {
    /** The fulfillment order associated with the merchant request. */
    fulfillmentOrder: FulfillmentOrder
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The kind of request made. */
    kind: FulfillmentOrderMerchantRequestKind
    /** The optional message that the merchant included in the request. */
    message?: Scalars['String']
    /**
     * Additional options requested by the merchant. These depend on the `kind` of the request.
     * For example, for a `FULFILLMENT_REQUEST`, one option is `notify_customer`, which indicates whether the
     * merchant intends to notify the customer upon fulfillment. The fulfillment service can then set
     * `notifyCustomer` when making calls to `FulfillmentCreateV2`.
     * 
     */
    requestOptions?: Scalars['JSON']
    /** The response from the fulfillment service. */
    responseData?: Scalars['JSON']
    /** The timestamp when the request was made. */
    sentAt: Scalars['DateTime']
    __typename: 'FulfillmentOrderMerchantRequest'
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrderMerchantRequests.
 * 
 */
export interface FulfillmentOrderMerchantRequestConnection {
    /** A list of edges. */
    edges: FulfillmentOrderMerchantRequestEdge[]
    /** A list of the nodes contained in FulfillmentOrderMerchantRequestEdge. */
    nodes: FulfillmentOrderMerchantRequest[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'FulfillmentOrderMerchantRequestConnection'
}


/**
 * An auto-generated type which holds one FulfillmentOrderMerchantRequest and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderMerchantRequestEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of FulfillmentOrderMerchantRequestEdge. */
    node: FulfillmentOrderMerchantRequest
    __typename: 'FulfillmentOrderMerchantRequestEdge'
}


/** The kinds of request merchants can make to a fulfillment service. */
export type FulfillmentOrderMerchantRequestKind = 'FULFILLMENT_REQUEST' | 'CANCELLATION_REQUEST'


/** Return type for `fulfillmentOrderMerge` mutation. */
export interface FulfillmentOrderMergePayload {
    /** The result of the fulfillment order merges. */
    fulfillmentOrderMerges?: FulfillmentOrderMergeResult[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrderMergeUserError[]
    __typename: 'FulfillmentOrderMergePayload'
}


/** The result of merging a set of fulfillment orders. */
export interface FulfillmentOrderMergeResult {
    /** The new fulfillment order as a result of the merge. */
    fulfillmentOrder: FulfillmentOrder
    __typename: 'FulfillmentOrderMergeResult'
}


/** An error that occurs during the execution of `FulfillmentOrderMerge`. */
export interface FulfillmentOrderMergeUserError {
    /** The error code. */
    code?: FulfillmentOrderMergeUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrderMergeUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrderMergeUserError`. */
export type FulfillmentOrderMergeUserErrorCode = 'FULFILLMENT_ORDER_NOT_FOUND' | 'GREATER_THAN' | 'INVALID_LINE_ITEM_QUANTITY'


/** Return type for `fulfillmentOrderMove` mutation. */
export interface FulfillmentOrderMovePayload {
    /**
     * The fulfillment order which now contains the moved line items and is assigned to the destination location.
     * 
     * **First scenario:** All line items belonging to the original fulfillment order are re-assigned.
     * 
     * In this case, this will be the original fulfillment order.
     * 
     * **Second scenario:** A subset of the line items belonging to the original fulfillment order are re-assigned.
     * 
     * If the new location is already assigned to fulfill line items on the order, then
     * this will be an existing active fulfillment order.
     * Otherwise, this will be a new fulfillment order with the moved line items assigned.
     * 
     */
    movedFulfillmentOrder?: FulfillmentOrder
    /**
     * The final state of the original fulfillment order.
     * 
     * As a result of the move operation, the original fulfillment order might be moved to the new location
     * or remain in the original location. The original fulfillment order might have the same status or be closed.
     * 
     */
    originalFulfillmentOrder?: FulfillmentOrder
    /**
     * This field is deprecated.
     * 
     */
    remainingFulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderMovePayload'
}


/** Return type for `fulfillmentOrderOpen` mutation. */
export interface FulfillmentOrderOpenPayload {
    /** The fulfillment order that was transitioned to open and is fulfillable. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderOpenPayload'
}


/** Return type for `fulfillmentOrderRejectCancellationRequest` mutation. */
export interface FulfillmentOrderRejectCancellationRequestPayload {
    /** The fulfillment order whose cancellation request was rejected. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderRejectCancellationRequestPayload'
}


/** Return type for `fulfillmentOrderRejectFulfillmentRequest` mutation. */
export interface FulfillmentOrderRejectFulfillmentRequestPayload {
    /** The fulfillment order whose fulfillment request was rejected. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderRejectFulfillmentRequestPayload'
}


/** The reason for a fulfillment order rejection. */
export type FulfillmentOrderRejectionReason = 'INCORRECT_ADDRESS' | 'INVENTORY_OUT_OF_STOCK' | 'INELIGIBLE_PRODUCT' | 'UNDELIVERABLE_DESTINATION' | 'OTHER'


/** Return type for `fulfillmentOrderReleaseHold` mutation. */
export interface FulfillmentOrderReleaseHoldPayload {
    /** The fulfillment order on which the hold was released. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrderReleaseHoldUserError[]
    __typename: 'FulfillmentOrderReleaseHoldPayload'
}


/** An error that occurs during the execution of `FulfillmentOrderReleaseHold`. */
export interface FulfillmentOrderReleaseHoldUserError {
    /** The error code. */
    code?: FulfillmentOrderReleaseHoldUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrderReleaseHoldUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrderReleaseHoldUserError`. */
export type FulfillmentOrderReleaseHoldUserErrorCode = 'FULFILLMENT_ORDER_NOT_FOUND' | 'GREATER_THAN_ZERO' | 'INVALID_LINE_ITEM_QUANTITY'


/** The request status of a fulfillment order. */
export type FulfillmentOrderRequestStatus = 'UNSUBMITTED' | 'SUBMITTED' | 'ACCEPTED' | 'REJECTED' | 'CANCELLATION_REQUESTED' | 'CANCELLATION_ACCEPTED' | 'CANCELLATION_REJECTED' | 'CLOSED'


/** Return type for `fulfillmentOrderReschedule` mutation. */
export interface FulfillmentOrderReschedulePayload {
    /** The fulfillment order that was rescheduled. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrderRescheduleUserError[]
    __typename: 'FulfillmentOrderReschedulePayload'
}


/** An error that occurs during the execution of `FulfillmentOrderReschedule`. */
export interface FulfillmentOrderRescheduleUserError {
    /** The error code. */
    code?: FulfillmentOrderRescheduleUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrderRescheduleUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrderRescheduleUserError`. */
export type FulfillmentOrderRescheduleUserErrorCode = 'FULFILLMENT_ORDER_NOT_FOUND'


/** The set of valid sort keys for the FulfillmentOrder query. */
export type FulfillmentOrderSortKeys = 'ID' | 'RELEVANCE'


/** Return type for `fulfillmentOrderSplit` mutation. */
export interface FulfillmentOrderSplitPayload {
    /** The result of the fulfillment order splits. */
    fulfillmentOrderSplits?: FulfillmentOrderSplitResult[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrderSplitUserError[]
    __typename: 'FulfillmentOrderSplitPayload'
}


/** The result of splitting a fulfillment order. */
export interface FulfillmentOrderSplitResult {
    /** The original fulfillment order as a result of the split. */
    fulfillmentOrder: FulfillmentOrder
    /** The remaining fulfillment order as a result of the split. */
    remainingFulfillmentOrder: FulfillmentOrder
    /** The replacement fulfillment order if the original fulfillment order was not in a state to be split. */
    replacementFulfillmentOrder?: FulfillmentOrder
    __typename: 'FulfillmentOrderSplitResult'
}


/** An error that occurs during the execution of `FulfillmentOrderSplit`. */
export interface FulfillmentOrderSplitUserError {
    /** The error code. */
    code?: FulfillmentOrderSplitUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrderSplitUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrderSplitUserError`. */
export type FulfillmentOrderSplitUserErrorCode = 'FULFILLMENT_ORDER_NOT_FOUND' | 'GREATER_THAN' | 'INVALID_LINE_ITEM_QUANTITY'


/** The status of a fulfillment order. */
export type FulfillmentOrderStatus = 'OPEN' | 'IN_PROGRESS' | 'CANCELLED' | 'INCOMPLETE' | 'CLOSED' | 'SCHEDULED' | 'ON_HOLD'


/** Return type for `fulfillmentOrderSubmitCancellationRequest` mutation. */
export interface FulfillmentOrderSubmitCancellationRequestPayload {
    /** The fulfillment order specified in the cancelation request. */
    fulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderSubmitCancellationRequestPayload'
}


/** Return type for `fulfillmentOrderSubmitFulfillmentRequest` mutation. */
export interface FulfillmentOrderSubmitFulfillmentRequestPayload {
    /**
     * The original fulfillment order intended to request fulfillment for.
     * 
     */
    originalFulfillmentOrder?: FulfillmentOrder
    /**
     * The fulfillment order that was submitted to the fulfillment service. This will be the same as
     * the original fulfillment order field. The exception to this is partial fulfillment requests or
     * fulfillment request for cancelled or incomplete fulfillment orders.
     * 
     */
    submittedFulfillmentOrder?: FulfillmentOrder
    /**
     * This field will only be present for partial fulfillment requests. This will represent the new
     * fulfillment order with the remaining line items not submitted to the fulfillment service.
     * 
     */
    unsubmittedFulfillmentOrder?: FulfillmentOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentOrderSubmitFulfillmentRequestPayload'
}


/**
 * One of the actions that the fulfillment order supports in its current state.
 * 
 */
export interface FulfillmentOrderSupportedAction {
    /** The action value. */
    action: FulfillmentOrderAction
    /**
     * The external URL to be used to initiate the fulfillment process outside Shopify.
     * Applicable only when the `action` value is `EXTERNAL`.
     * 
     */
    externalUrl?: Scalars['URL']
    __typename: 'FulfillmentOrderSupportedAction'
}


/** Return type for `fulfillmentOrdersReleaseHolds` mutation. */
export interface FulfillmentOrdersReleaseHoldsPayload {
    /** The asynchronous job that will release the fulfillment holds. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrdersReleaseHoldsUserError[]
    __typename: 'FulfillmentOrdersReleaseHoldsPayload'
}


/** An error that occurs during the execution of `FulfillmentOrdersReleaseHolds`. */
export interface FulfillmentOrdersReleaseHoldsUserError {
    /** The error code. */
    code?: FulfillmentOrdersReleaseHoldsUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrdersReleaseHoldsUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrdersReleaseHoldsUserError`. */
export type FulfillmentOrdersReleaseHoldsUserErrorCode = 'FAILED_TO_CREATE_JOB'


/** Return type for `fulfillmentOrdersSetFulfillmentDeadline` mutation. */
export interface FulfillmentOrdersSetFulfillmentDeadlinePayload {
    /** Whether the fulfillment deadline was successfully set. */
    success?: Scalars['Boolean']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: FulfillmentOrdersSetFulfillmentDeadlineUserError[]
    __typename: 'FulfillmentOrdersSetFulfillmentDeadlinePayload'
}


/** An error that occurs during the execution of `FulfillmentOrdersSetFulfillmentDeadline`. */
export interface FulfillmentOrdersSetFulfillmentDeadlineUserError {
    /** The error code. */
    code?: FulfillmentOrdersSetFulfillmentDeadlineUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'FulfillmentOrdersSetFulfillmentDeadlineUserError'
}


/** Possible error codes that can be returned by `FulfillmentOrdersSetFulfillmentDeadlineUserError`. */
export type FulfillmentOrdersSetFulfillmentDeadlineUserErrorCode = 'FULFILLMENT_ORDERS_NOT_FOUND'


/** The address at which the fulfillment occurred. Typically this is the address of the warehouse or fulfillment center. */
export interface FulfillmentOriginAddress {
    /** The street address of the fulfillment location. */
    address1?: Scalars['String']
    /** The second line of the address. Typically the number of the apartment, suite, or unit. */
    address2?: Scalars['String']
    /** The city in which the fulfillment location is located. */
    city?: Scalars['String']
    /** The country code of the fulfillment location. */
    countryCode: Scalars['String']
    /** The province code of the fulfillment location. */
    provinceCode?: Scalars['String']
    /** The zip code of the fulfillment location. */
    zip?: Scalars['String']
    __typename: 'FulfillmentOriginAddress'
}


/**
 * A **Fulfillment Service** is a third party warehouse that prepares and ships orders
 * on behalf of the store owner. Fulfillment services charge a fee to package and ship items
 * and update product inventory levels. Some well known fulfillment services with Shopify integrations
 * include: Amazon, Shipwire, and Rakuten. When an app registers a new `FulfillmentService` on a store,
 * Shopify automatically creates a `Location` that's associated to the fulfillment service.
 * To learn more about fulfillment services, refer to
 * [Manage fulfillments as a fulfillment service app](https://shopify.dev/apps/fulfillment/fulfillment-service-apps)
 * guide.
 * 
 * ## Mutations
 * 
 * You can work with the `FulfillmentService` object with the
 * [fulfillmentServiceCreate](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceCreate),
 * [fulfillmentServiceUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceUpdate),
 * and [fulfillmentServiceDelete](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceDelete)
 * mutations.
 * 
 * ## Hosted endpoints
 * 
 * Fulfillment service providers integrate with Shopify by providing Shopify with a set of hosted endpoints that
 * Shopify can query on certain conditions.
 * These endpoints must have a common prefix, and this prefix should be supplied in the `callbackUrl` parameter
 * in the
 * [fulfillmentServiceCreate](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceCreate)
 * mutation.
 * 
 * - Shopify sends POST requests to the `<callbackUrl>/fulfillment_order_notification` endpoint
 *   to notify the fulfillment service about fulfillment requests and fulfillment cancellation requests,
 *   if `fulfillment_orders_opt_in` is set to `true`.
 * 
 *   [As of the 2022-07 API version](https://shopify.dev/changelog/legacy-fulfillment-api-deprecation),
 *   it's mandatory for a fulfillment service to follow a fulfillment order based workflow by
 *   having `fulfillment_orders_opt_in` set to `true`,
 *   hosting the `<callbackUrl>/fulfillment_order_notification` endpoint, and acting on fulfillment requests and cancellations.
 * 
 *   For more information, refer to
 *   [Receive fulfillment requests and cancellations](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations).
 * - Shopify sends GET requests to the `<callbackUrl>/fetch_tracking_numbers` endpoint to retrieve tracking numbers for orders,
 *   if `trackingSupport` is set to `true`.
 * 
 *   For more information, refer to
 *   [Enable tracking support](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-8-enable-tracking-support-optional).
 * 
 *   Fulfillment services can also update tracking information with the
 *   [fulfillmentTrackingInfoUpdateV2](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentTrackingInfoUpdateV2) mutation,
 *   rather than waiting for Shopify to ask for tracking numbers.
 * - Shopify sends GET requests to the `<callbackUrl>/fetch_stock` endpoint to retrieve inventory levels,
 *   if `inventoryManagement` is set to `true`.
 * 
 *   For more information, refer to
 *   [Sharing inventory levels with Shopify](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-9-share-inventory-levels-with-shopify-optional).
 * 
 * To make sure you have everything set up correctly, you can test the `callbackUrl`-prefixed endpoints
 * in your development store.
 * 
 * ## Resources and webhooks
 * 
 * There are a variety of objects and webhooks that enable a fulfillment service to work.
 * To exchange fulfillment information with Shopify, fulfillment services use the
 * [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder),
 * [Fulfillment](https://shopify.dev/api/admin-graphql/latest/objects/Fulfillment) and
 * [Order](https://shopify.dev/api/admin-graphql/latest/objects/Order) objects and related mutations.
 * To act on fulfillment process events that happen on the Shopify side,
 * besides awaiting calls to `callbackUrl`-prefixed endpoints,
 * fulfillment services can subscribe to the
 * [fulfillment order](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#webhooks)
 * and [order](https://shopify.dev/api/admin-rest/latest/resources/webhook)
 * webhooks.
 * 
 */
export interface FulfillmentService {
    /**
     * The callback URL that the fulfillment service has registered for requests. The following considerations apply:
     * 
     * - Shopify queries the `<callbackUrl>/fetch_tracking_numbers` endpoint to retrieve tracking numbers
     *     for orders, if `trackingSupport` is set to `true`.
     * - Shopify queries the `<callbackUrl>/fetch_stock` endpoint to retrieve inventory levels,
     *     if `inventoryManagement` is set to `true`.
     * - Shopify uses the `<callbackUrl>/fulfillment_order_notification` endpoint to send
     *     [fulfillment and cancellation requests](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations),
     *     if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments
     *     (`fulfillmentOrdersOptIn` is set to `true`).
     * 
     */
    callbackUrl?: Scalars['URL']
    /**
     * Whether the fulfillment service uses the [fulfillment order based workflow](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments) for managing fulfillments.
     * 
     */
    fulfillmentOrdersOptIn: Scalars['Boolean']
    /** Human-readable unique identifier for this fulfillment service. */
    handle: Scalars['String']
    /** The ID of the fulfillment service. */
    id: Scalars['ID']
    /** Whether the fulfillment service tracks product inventory and provides updates to Shopify. */
    inventoryManagement: Scalars['Boolean']
    /** Location associated with the fulfillment service. */
    location?: Location
    /** Whether the fulfillment service can stock inventory alongside other locations. */
    permitsSkuSharing: Scalars['Boolean']
    /** Whether the fulfillment service supports local deliveries. */
    productBased: Scalars['Boolean']
    /** The name of the fulfillment service as seen by merchants. */
    serviceName: Scalars['String']
    /**
     * @deprecated The Fulfillment by Amazon feature will no longer be supported from March 30, 2023. To continue using Amazon fulfillment, merchants need to set up a Multi-Channel Fulfillment solution recommended by Amazon: https://help.shopify.com/manual/shipping/fulfillment-services/amazon#activate-fulfillment-by-amazon
     * Shipping methods associated with the fulfillment service provider. Applies only to Fulfill By Amazon fulfillment service.
     */
    shippingMethods: ShippingMethod[]
    /** Type associated with the fulfillment service. */
    type: FulfillmentServiceType
    __typename: 'FulfillmentService'
}


/** Return type for `fulfillmentServiceCreate` mutation. */
export interface FulfillmentServiceCreatePayload {
    /** The created fulfillment service. */
    fulfillmentService?: FulfillmentService
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentServiceCreatePayload'
}


/** Return type for `fulfillmentServiceDelete` mutation. */
export interface FulfillmentServiceDeletePayload {
    /** The ID of the deleted fulfillment service. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentServiceDeletePayload'
}


/** The type of a fulfillment service. */
export type FulfillmentServiceType = 'GIFT_CARD' | 'MANUAL' | 'THIRD_PARTY'


/** Return type for `fulfillmentServiceUpdate` mutation. */
export interface FulfillmentServiceUpdatePayload {
    /** The updated fulfillment service. */
    fulfillmentService?: FulfillmentService
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentServiceUpdatePayload'
}


/** The status of a fulfillment. */
export type FulfillmentStatus = 'PENDING' | 'OPEN' | 'SUCCESS' | 'CANCELLED' | 'ERROR' | 'FAILURE'


/** Represents the tracking information for a fulfillment. */
export interface FulfillmentTrackingInfo {
    /**
     * The name of the tracking company.
     * 
     * For tracking company names from the list below
     * Shopify will automatically build tracking URLs for all provided tracking numbers,
     * which will make the tracking numbers clickable in the interface.
     * 
     * Additionally, for the tracking companies listed on the
     * [Shipping Carriers help page](https://help.shopify.com/manual/shipping/understanding-shipping/shipping-carriers#integrated-shipping-carriers)
     * Shopify will automatically update the fulfillment's `shipment_status` field during the fulfillment process.
     * 
     * ### Supported tracking companies
     * 
     * The following tracking companies display for shops located in any country:
     * 
     *   * 4PX
     *   * AGS
     *   * Amazon Logistics UK
     *   * Amazon Logistics US
     *   * An Post
     *   * Anjun Logistics
     *   * APC
     *   * Asendia USA
     *   * Australia Post
     *   * Bonshaw
     *   * BPost
     *   * BPost International
     *   * Canada Post
     *   * Canpar
     *   * CDL Last Mile
     *   * China Post
     *   * Chronopost
     *   * Chukou1
     *   * Colissimo
     *   * Comingle
     *   * Coordinadora
     *   * Correios
     *   * Correos
     *   * CTT
     *   * CTT Express
     *   * Cyprus Post
     *   * Delnext
     *   * Deutsche Post
     *   * DHL eCommerce
     *   * DHL eCommerce Asia
     *   * DHL Express
     *   * DoorDash
     *   * DPD
     *   * DPD Local
     *   * DPD UK
     *   * DTD Express
     *   * DX
     *   * Eagle
     *   * Estes
     *   * Evri
     *   * FedEx
     *   * First Global Logistics
     *   * First Line
     *   * FSC
     *   * Fulfilla
     *   * GLS
     *   * Guangdong Weisuyi Information Technology (WSE)
     *   * Heppner Internationale Spedition GmbH & Co.
     *   * Iceland Post
     *   * IDEX
     *   * Israel Post
     *   * Japan Post (EN)
     *   * Japan Post (JA)
     *   * La Poste
     *   * Lasership
     *   * Latvia Post
     *   * Lietuvos Paštas
     *   * Logisters
     *   * Lone Star Overnight
     *   * M3 Logistics
     *   * Meteor Space
     *   * Mondial Relay
     *   * New Zealand Post
     *   * NinjaVan
     *   * North Russia Supply Chain (Shenzhen) Co.
     *   * OnTrac
     *   * Packeta
     *   * Pago Logistics
     *   * Ping An Da Tengfei Express
     *   * Pitney Bowes
     *   * Portal PostNord
     *   * Poste Italiane
     *   * PostNL
     *   * PostNord DK
     *   * PostNord NO
     *   * PostNord SE
     *   * Purolator
     *   * Qxpress
     *   * Qyun Express
     *   * Royal Mail
     *   * Royal Shipments
     *   * Sagawa (EN)
     *   * Sagawa (JA)
     *   * Sendle
     *   * SF Express
     *   * SFC Fulfillment
     *   * SHREE NANDAN COURIER
     *   * Singapore Post
     *   * Southwest Air Cargo
     *   * StarTrack
     *   * Step Forward Freight
     *   * Swiss Post
     *   * TForce Final Mile
     *   * Tinghao
     *   * TNT
     *   * Toll IPEC
     *   * United Delivery Service
     *   * UPS
     *   * USPS
     *   * Venipak
     *   * We Post
     *   * Whistl
     *   * Wizmo
     *   * WMYC
     *   * Xpedigo
     *   * XPO Logistics
     *   * Yamato (EN)
     *   * Yamato (JA)
     *   * YiFan Express
     *   * YunExpress
     * 
     * The following tracking companies are displayed for shops located in specific countries:
     * 
     *   * **Australia**: Australia Post, Sendle, Aramex Australia, TNT Australia, Hunter Express, Couriers Please, Bonds, Allied Express, Direct Couriers, Northline, GO Logistics
     *   * **Austria**: Österreichische Post
     *   * **Bulgaria**: Speedy
     *   * **Canada**: Intelcom, BoxKnight, Loomis, GLS
     *   * **China**: China Post, DHL eCommerce Asia, WanbExpress, YunExpress, Anjun Logistics, SFC Fulfillment, FSC
     *   * **Czechia**: Zásilkovna
     *   * **Germany**: Deutsche Post (DE), Deutsche Post (EN), DHL, DHL Express, Swiship, Hermes, GLS
     *   * **Spain**: SEUR
     *   * **France**: Colissimo, Mondial Relay, Colis Privé, GLS
     *   * **United Kingdom**: Evri, DPD UK, Parcelforce, Yodel, DHL Parcel, Tuffnells
     *   * **Greece**: ACS Courier
     *   * **Hong Kong SAR**: SF Express
     *   * **Ireland**: Fastway, DPD Ireland
     *   * **India**: DTDC, India Post, Delhivery, Gati KWE, Professional Couriers, XpressBees, Ecom Express, Ekart, Shadowfax, Bluedart
     *   * **Italy**: BRT, GLS Italy
     *   * **Japan**: エコ配, 西濃運輸, 西濃スーパーエキスプレス, 福山通運, 日本通運, 名鉄運輸, 第一貨物
     *   * **Netherlands**: DHL Parcel, DPD
     *   * **Norway**: Bring
     *   * **Poland**: Inpost
     *   * **Turkey**: PTT, Yurtiçi Kargo, Aras Kargo, Sürat Kargo
     *   * **United States**: GLS, Alliance Air Freight, Pilot Freight, LSO, Old Dominion, R+L Carriers, Southwest Air Cargo
     *   * **South Africa**: Fastway, Skynet.
     * 
     */
    company?: Scalars['String']
    /**
     * The tracking number of the fulfillment.
     * 
     * The tracking number is clickable in the interface if one of the following applies
     * (the highest in the list has the highest priority):
     * 
     * * Tracking url provided in the `url` field.
     * * [Shopify-known tracking company name](#supported-tracking-companies) specified in the `company` field.
     *   Shopify will build the tracking URL automatically based on the tracking number specified.
     * * The tracking number has a Shopify-known format.
     *   Shopify will guess the tracking provider and build the tracking url based on the tracking number format.
     *   Not all tracking carriers are supported, and multiple tracking carriers may use similarly formatted tracking numbers.
     *   This can result in an invalid tracking URL.
     *   It is highly recommended that you send the tracking company and the tracking URL.
     * 
     */
    number?: Scalars['String']
    /**
     * The URLs to track the fulfillment.
     * 
     * The tracking URL is displayed in the merchant's admin on the order page.
     * The tracking URL is displayed in the shipping confirmation email, which can optionally be sent to the customer.
     * When accounts are enabled, it is also displayed in the customer's order history.
     * 
     */
    url?: Scalars['URL']
    __typename: 'FulfillmentTrackingInfo'
}


/** Return type for `fulfillmentTrackingInfoUpdateV2` mutation. */
export interface FulfillmentTrackingInfoUpdateV2Payload {
    /** The updated fulfillment with tracking information. */
    fulfillment?: Fulfillment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'FulfillmentTrackingInfoUpdateV2Payload'
}


/** The App Bridge information for a Shopify Function. */
export interface FunctionsAppBridge {
    /** The relative path for creating a customization. */
    createPath: Scalars['String']
    /** The relative path for viewing a customization. */
    detailsPath: Scalars['String']
    __typename: 'FunctionsAppBridge'
}


/** The error history from running a Shopify Function. */
export interface FunctionsErrorHistory {
    /** The date and time that the first error occurred. */
    errorsFirstOccurredAt: Scalars['DateTime']
    /** The date and time that the first error occurred. */
    firstOccurredAt: Scalars['DateTime']
    /** Whether the merchant has shared all the recent errors with the developer. */
    hasBeenSharedSinceLastError: Scalars['Boolean']
    /** Whether the merchant has shared all the recent errors with the developer. */
    hasSharedRecentErrors: Scalars['Boolean']
    __typename: 'FunctionsErrorHistory'
}


/**
 * Represents any file other than HTML.
 * 
 */
export interface GenericFile {
    /** A word or phrase to describe the contents or the function of a file. */
    alt?: Scalars['String']
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt: Scalars['DateTime']
    /** Any errors that have occurred on the file. */
    fileErrors: FileError[]
    /** The status of the file. */
    fileStatus: FileStatus
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The generic file's MIME type. */
    mimeType?: Scalars['String']
    /** The generic file's size in bytes. */
    originalFileSize?: Scalars['Int']
    /** The preview image for the media. */
    preview?: MediaPreviewImage
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt: Scalars['DateTime']
    /** The generic file's URL. */
    url?: Scalars['URL']
    __typename: 'GenericFile'
}


/** Represents an issued gift card. */
export interface GiftCard {
    /** The gift card's remaining balance. */
    balance: MoneyV2
    /** The date and time at which the gift card was created. */
    createdAt: Scalars['DateTime']
    /** The customer who will receive the gift card. */
    customer?: Customer
    /** The date and time at which the gift card was disabled. */
    disabledAt?: Scalars['DateTime']
    /** Whether the gift card is enabled. */
    enabled: Scalars['Boolean']
    /** The date at which the gift card will expire. */
    expiresOn?: Scalars['Date']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The initial value of the gift card. */
    initialValue: MoneyV2
    /** The final four characters of the gift card code. */
    lastCharacters: Scalars['String']
    /** The gift card code. Everything but the final four characters is masked. */
    maskedCode: Scalars['String']
    /** The note associated with the gift card, which is not visible to the customer. */
    note?: Scalars['String']
    /**
     * The order associated with the gift card. This value is `null` if the gift card was issued manually.
     * 
     */
    order?: Order
    __typename: 'GiftCard'
}


/**
 * An auto-generated type for paginating through multiple GiftCards.
 * 
 */
export interface GiftCardConnection {
    /** A list of edges. */
    edges: GiftCardEdge[]
    /** A list of the nodes contained in GiftCardEdge. */
    nodes: GiftCard[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'GiftCardConnection'
}


/** Return type for `giftCardCreate` mutation. */
export interface GiftCardCreatePayload {
    /** The created gift card. */
    giftCard?: GiftCard
    /** The created gift card's code. */
    giftCardCode?: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: GiftCardUserError[]
    __typename: 'GiftCardCreatePayload'
}


/** Return type for `giftCardDisable` mutation. */
export interface GiftCardDisablePayload {
    /** The disabled gift card. */
    giftCard?: GiftCard
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'GiftCardDisablePayload'
}


/**
 * An auto-generated type which holds one GiftCard and a cursor during pagination.
 * 
 */
export interface GiftCardEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of GiftCardEdge. */
    node: GiftCard
    __typename: 'GiftCardEdge'
}


/** Possible error codes that can be returned by `GiftCardUserError`. */
export type GiftCardErrorCode = 'TOO_LONG' | 'TOO_SHORT' | 'TAKEN' | 'INVALID' | 'INTERNAL_ERROR' | 'MISSING_ARGUMENT' | 'GREATER_THAN'


/** A sale associated with a gift card. */
export interface GiftCardSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line item for the associated sale. */
    lineItem: LineItem
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'GiftCardSale'
}


/** The set of valid sort keys for the GiftCard query. */
export type GiftCardSortKeys = 'CREATED_AT' | 'UPDATED_AT' | 'CUSTOMER_NAME' | 'CODE' | 'BALANCE' | 'AMOUNT_SPENT' | 'INITIAL_VALUE' | 'DISABLED_AT' | 'EXPIRES_ON' | 'ID' | 'RELEVANCE'


/** Return type for `giftCardUpdate` mutation. */
export interface GiftCardUpdatePayload {
    /** The updated gift card. */
    giftCard?: GiftCard
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'GiftCardUpdatePayload'
}


/** Represents an error that happens during the execution of a gift card mutation. */
export interface GiftCardUserError {
    /** The error code. */
    code?: GiftCardErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'GiftCardUserError'
}


/** Represents an object that has a list of events. */
export type HasEvents = (Company | CompanyLocation | Customer | DiscountAutomaticBxgy | DiscountAutomaticNode | DiscountCodeNode | DiscountNode | DraftOrder | Order | PriceRule) & { __isUnion?: true }


/**
 * Localization extensions associated with the specified resource. For example, the tax id for government invoice.
 * 
 */
export type HasLocalizationExtensions = (DraftOrder | Order) & { __isUnion?: true }


/** Resources that metafield definitions can be applied to. */
export type HasMetafieldDefinitions = (Collection | Company | CompanyLocation | Customer | DeliveryCustomization | DiscountAutomaticNode | DiscountCodeNode | DiscountNode | Location | Market | Order | PaymentCustomization | Product | ProductVariant) & { __isUnion?: true }


/** Represents information about the metafields associated to the specified resource. */
export type HasMetafields = (AppInstallation | CartTransform | Collection | Company | CompanyLocation | Customer | CustomerSegmentMember | DeliveryCustomization | DiscountAutomaticNode | DiscountCodeNode | DiscountNode | DraftOrder | Image | Location | Market | MediaImage | Order | PaymentCustomization | Product | ProductVariant | Shop) & { __isUnion?: true }


/** Published translations associated with the resource. */
export type HasPublishedTranslations = (Collection | Link | OnlineStoreArticle | OnlineStoreBlog | OnlineStorePage | Product | ProductOption | ProductVariant | SellingPlan | SellingPlanGroup | Shop | ShopPolicy) & { __isUnion?: true }


/** Represents an image resource. */
export interface Image {
    /** A word or phrase to share the nature or contents of an image. */
    altText?: Scalars['String']
    /** The original height of the image in pixels. Returns `null` if the image is not hosted by Shopify. */
    height?: Scalars['Int']
    /** A unique ID for the image. */
    id?: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Use `url` instead.
     * The location of the original image as a URL.
     * 
     * If there are any existing transformations in the original source URL, they will remain and not be stripped.
     * 
     */
    originalSrc: Scalars['URL']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /**
     * @deprecated Use `url` instead.
     * The location of the image as a URL.
     */
    src: Scalars['URL']
    /**
     * @deprecated Use `url(transform:)` instead
     * The location of the transformed image as a URL.
     * 
     * All transformation arguments are considered "best-effort". If they can be applied to an image, they will be.
     * Otherwise any transformations which an image type does not support will be ignored.
     * 
     */
    transformedSrc: Scalars['URL']
    /**
     * The location of the image as a URL.
     * 
     * If no transform options are specified, then the original image will be preserved including any pre-applied transforms.
     * 
     * All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.
     * 
     * If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).
     * 
     */
    url: Scalars['URL']
    /** The original width of the image in pixels. Returns `null` if the image is not hosted by Shopify. */
    width?: Scalars['Int']
    __typename: 'Image'
}


/**
 * An auto-generated type for paginating through multiple Images.
 * 
 */
export interface ImageConnection {
    /** A list of edges. */
    edges: ImageEdge[]
    /** A list of the nodes contained in ImageEdge. */
    nodes: Image[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ImageConnection'
}


/** List of supported image content types. */
export type ImageContentType = 'PNG' | 'JPG' | 'WEBP'


/**
 * An auto-generated type which holds one Image and a cursor during pagination.
 * 
 */
export interface ImageEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ImageEdge. */
    node: Image
    __typename: 'ImageEdge'
}


/**
 * A parameter to upload an image.
 * 
 * Deprecated in favor of
 * [StagedUploadParameter](https://shopify.dev/api/admin-graphql/latest/objects/StagedUploadParameter),
 * which is used in
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget)
 * and returned by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface ImageUploadParameter {
    /** The parameter name. */
    name: Scalars['String']
    /** The parameter value. */
    value: Scalars['String']
    __typename: 'ImageUploadParameter'
}


/** Return type for `inventoryActivate` mutation. */
export interface InventoryActivatePayload {
    /** The inventory level that was activated. */
    inventoryLevel?: InventoryLevel
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'InventoryActivatePayload'
}


/** Return type for `inventoryAdjustQuantities` mutation. */
export interface InventoryAdjustQuantitiesPayload {
    /** The group of changes made by the operation. */
    inventoryAdjustmentGroup?: InventoryAdjustmentGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: InventoryAdjustQuantitiesUserError[]
    __typename: 'InventoryAdjustQuantitiesPayload'
}


/** An error that occurs during the execution of `InventoryAdjustQuantities`. */
export interface InventoryAdjustQuantitiesUserError {
    /** The error code. */
    code?: InventoryAdjustQuantitiesUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'InventoryAdjustQuantitiesUserError'
}


/** Possible error codes that can be returned by `InventoryAdjustQuantitiesUserError`. */
export type InventoryAdjustQuantitiesUserErrorCode = 'INTERNAL_LEDGER_DOCUMENT' | 'INVALID_AVAILABLE_DOCUMENT' | 'INVALID_INVENTORY_ITEM' | 'INVALID_LEDGER_DOCUMENT' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_DOCUMENT' | 'INVALID_QUANTITY_NAME' | 'INVALID_QUANTITY_TOO_LOW' | 'INVALID_QUANTITY_TOO_HIGH' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'ADJUST_QUANTITIES_FAILED' | 'MAX_ONE_LEDGER_DOCUMENT' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'NON_MUTABLE_INVENTORY_ITEM'


/** Return type for `inventoryAdjustQuantity` mutation. */
export interface InventoryAdjustQuantityPayload {
    /** Represents the updated inventory quantity of an inventory item at a specific location. */
    inventoryLevel?: InventoryLevel
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'InventoryAdjustQuantityPayload'
}


/**
 * Represents a group of adjustments made as part of the same operation.
 * 
 */
export interface InventoryAdjustmentGroup {
    /** The app that triggered the inventory event, if one exists. */
    app?: App
    /** The set of inventory quantity changes that occurred in the inventory event. */
    changes: InventoryChange[]
    /** The date and time the inventory adjustment group was created. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The reason for the group of adjustments. */
    reason: Scalars['String']
    /** The reference document URI for the changes. Denotes what is causing the change. */
    referenceDocumentUri?: Scalars['String']
    /** The staff member associated with the inventory event. */
    staffMember?: StaffMember
    __typename: 'InventoryAdjustmentGroup'
}


/** Return type for `inventoryBulkAdjustQuantityAtLocation` mutation. */
export interface InventoryBulkAdjustQuantityAtLocationPayload {
    /** Represents the updated inventory quantities of an inventory item at the location. */
    inventoryLevels?: InventoryLevel[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'InventoryBulkAdjustQuantityAtLocationPayload'
}


/** Return type for `inventoryBulkToggleActivation` mutation. */
export interface InventoryBulkToggleActivationPayload {
    /** The inventory item that was updated. */
    inventoryItem?: InventoryItem
    /** The activated inventory levels. */
    inventoryLevels?: InventoryLevel[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: InventoryBulkToggleActivationUserError[]
    __typename: 'InventoryBulkToggleActivationPayload'
}


/** An error that occurred while setting the activation status of an inventory item. */
export interface InventoryBulkToggleActivationUserError {
    /** The error code. */
    code?: InventoryBulkToggleActivationUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'InventoryBulkToggleActivationUserError'
}


/** Possible error codes that can be returned by `InventoryBulkToggleActivationUserError`. */
export type InventoryBulkToggleActivationUserErrorCode = 'GENERIC_ERROR' | 'CANNOT_DEACTIVATE_FROM_ONLY_LOCATION' | 'COMMITTED_AND_INCOMING_INVENTORY_AT_LOCATION' | 'INCOMING_INVENTORY_AT_LOCATION' | 'COMMITTED_INVENTORY_AT_LOCATION' | 'RESERVED_INVENTORY_AT_LOCATION' | 'FAILED_TO_UNSTOCK_FROM_LOCATION' | 'INVENTORY_MANAGED_BY_3RD_PARTY' | 'INVENTORY_MANAGED_BY_SHOPIFY' | 'FAILED_TO_STOCK_AT_LOCATION' | 'MISSING_SKU' | 'LOCATION_NOT_FOUND' | 'INVENTORY_ITEM_NOT_FOUND'


/**
 * Represents a change in an inventory quantity of an inventory item at a location.
 * 
 */
export interface InventoryChange {
    /** The amount by which the inventory quantity was changed. */
    delta: Scalars['Int']
    /** The inventory item associated with this inventory change. */
    item?: InventoryItem
    /** The ledger document URI for the change. Denotes who the change is applied to. */
    ledgerDocumentUri?: Scalars['String']
    /** The location associated with this inventory change. */
    location?: Location
    /** The name of the inventory quantity that was changed. */
    name: Scalars['String']
    /** The quantity of named inventory after the change. */
    quantityAfterChange?: Scalars['Int']
    __typename: 'InventoryChange'
}


/** Return type for `inventoryDeactivate` mutation. */
export interface InventoryDeactivatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'InventoryDeactivatePayload'
}


/**
 * Represents the goods available to be shipped to a customer.
 * It holds essential information about the goods, including SKU and whether it is tracked.
 * 
 */
export interface InventoryItem {
    /** The ISO 3166-1 alpha-2 country code of where the item originated from. */
    countryCodeOfOrigin?: CountryCode
    /** A list of country specific harmonized system codes. */
    countryHarmonizedSystemCodes: CountryHarmonizedSystemCodeConnection
    /** The date and time when the inventory item was created. */
    createdAt: Scalars['DateTime']
    /** The number of inventory items that share the same SKU with this item. */
    duplicateSkuCount: Scalars['Int']
    /** The harmonized system code of the item. */
    harmonizedSystemCode?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The URL that points to the inventory history for the item. */
    inventoryHistoryUrl?: Scalars['URL']
    /** The inventory item's quantities at the specified location. */
    inventoryLevel?: InventoryLevel
    /** A list of the inventory item's quantities for each location that the inventory item can be stocked at. */
    inventoryLevels: InventoryLevelConnection
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The number of locations where this inventory item is stocked. */
    locationsCount: Scalars['Int']
    /** The ISO 3166-2 alpha-2 province code of where the item originated from. */
    provinceCodeOfOrigin?: Scalars['String']
    /** Whether the inventory item requires shipping. */
    requiresShipping: Scalars['Boolean']
    /** Inventory item SKU. Case-sensitive string. */
    sku?: Scalars['String']
    /** Whether inventory levels are tracked for the item. */
    tracked: Scalars['Boolean']
    /** Whether the value of the `tracked` field for the inventory item can be changed. */
    trackedEditable: EditableProperty
    /** Unit cost associated with the inventory item. Note: the user must have "View product costs" permission granted in order to access this field once product granular permissions are enabled. */
    unitCost?: MoneyV2
    /** The date and time when the inventory item was updated. */
    updatedAt: Scalars['DateTime']
    /** The variant that owns this inventory item. */
    variant: ProductVariant
    __typename: 'InventoryItem'
}


/**
 * An auto-generated type for paginating through multiple InventoryItems.
 * 
 */
export interface InventoryItemConnection {
    /** A list of edges. */
    edges: InventoryItemEdge[]
    /** A list of the nodes contained in InventoryItemEdge. */
    nodes: InventoryItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'InventoryItemConnection'
}


/**
 * An auto-generated type which holds one InventoryItem and a cursor during pagination.
 * 
 */
export interface InventoryItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of InventoryItemEdge. */
    node: InventoryItem
    __typename: 'InventoryItemEdge'
}


/** Return type for `inventoryItemUpdate` mutation. */
export interface InventoryItemUpdatePayload {
    /** The inventory item that was updated. */
    inventoryItem?: InventoryItem
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'InventoryItemUpdatePayload'
}


/**
 * The quantities of an inventory item that are related to a specific location.
 * 
 */
export interface InventoryLevel {
    /**
     * @deprecated Use `quantities` instead.
     * The quantity of inventory items that are available at the inventory level's associated location.
     */
    available: Scalars['Int']
    /** Whether the inventory items associated with the inventory level can be deactivated. */
    canDeactivate: Scalars['Boolean']
    /** The date and time when the inventory level was created. */
    createdAt: Scalars['DateTime']
    /** Describes either the impact of deactivating the inventory level, or why the inventory level can't be deactivated. */
    deactivationAlert?: Scalars['String']
    /**
     * @deprecated Use `deactivationAlert` instead.
     * Describes, in HTML with embedded URLs, either the impact of deactivating the inventory level or why the inventory level can't be deactivated.
     */
    deactivationAlertHtml?: Scalars['FormattedString']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * @deprecated Use `quantities` instead.
     * The quantity of inventory items that are going to the inventory level's associated location.
     */
    incoming: Scalars['Int']
    /** Inventory item associated with the inventory level. */
    item: InventoryItem
    /** The location associated with the inventory level. */
    location: Location
    /** Quantities for the requested names. */
    quantities: InventoryQuantity[]
    /** The date and time when the inventory level was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'InventoryLevel'
}


/**
 * An auto-generated type for paginating through multiple InventoryLevels.
 * 
 */
export interface InventoryLevelConnection {
    /** A list of edges. */
    edges: InventoryLevelEdge[]
    /** A list of the nodes contained in InventoryLevelEdge. */
    nodes: InventoryLevel[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'InventoryLevelConnection'
}


/**
 * An auto-generated type which holds one InventoryLevel and a cursor during pagination.
 * 
 */
export interface InventoryLevelEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of InventoryLevelEdge. */
    node: InventoryLevel
    __typename: 'InventoryLevelEdge'
}


/** Return type for `inventoryMoveQuantities` mutation. */
export interface InventoryMoveQuantitiesPayload {
    /** The group of changes made by the operation. */
    inventoryAdjustmentGroup?: InventoryAdjustmentGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: InventoryMoveQuantitiesUserError[]
    __typename: 'InventoryMoveQuantitiesPayload'
}


/** An error that occurs during the execution of `InventoryMoveQuantities`. */
export interface InventoryMoveQuantitiesUserError {
    /** The error code. */
    code?: InventoryMoveQuantitiesUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'InventoryMoveQuantitiesUserError'
}


/** Possible error codes that can be returned by `InventoryMoveQuantitiesUserError`. */
export type InventoryMoveQuantitiesUserErrorCode = 'INTERNAL_LEDGER_DOCUMENT' | 'INVALID_AVAILABLE_DOCUMENT' | 'INVALID_INVENTORY_ITEM' | 'INVALID_LEDGER_DOCUMENT' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_DOCUMENT' | 'INVALID_QUANTITY_NAME' | 'INVALID_QUANTITY_NEGATIVE' | 'INVALID_QUANTITY_TOO_HIGH' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'MOVE_QUANTITIES_FAILED' | 'DIFFERENT_LOCATIONS' | 'SAME_QUANTITY_NAME' | 'MAXIMUM_LEDGER_DOCUMENT_URIS' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'NON_MUTABLE_INVENTORY_ITEM'


/** General inventory properties for the shop. */
export interface InventoryProperties {
    /** All the quantity names. */
    quantityNames: InventoryQuantityName[]
    __typename: 'InventoryProperties'
}


/**
 * Represents a quantity of an inventory item at a specific location, for a specific name.
 * 
 */
export interface InventoryQuantity {
    /** The name that identifies the inventory quantity. */
    name: Scalars['String']
    /** The quantity for the quantity name. */
    quantity: Scalars['Int']
    /** When the quantity was last updated. */
    updatedAt?: Scalars['DateTime']
    __typename: 'InventoryQuantity'
}


/** Details about an individual quantity name. */
export interface InventoryQuantityName {
    /** List of quantity names that this quantity name belongs to. */
    belongsTo: Scalars['String'][]
    /** List of quantity names that comprise this quantity name. */
    comprises: Scalars['String'][]
    /** The i18n-friendly display name of the quantity. */
    displayName?: Scalars['String']
    /** Whether the quantity name has been used by the merchant. */
    isInUse: Scalars['Boolean']
    /** The quantity name as used by the API. */
    name: Scalars['String']
    __typename: 'InventoryQuantityName'
}


/** Return type for `inventorySetOnHandQuantities` mutation. */
export interface InventorySetOnHandQuantitiesPayload {
    /** The group of changes made by the operation. */
    inventoryAdjustmentGroup?: InventoryAdjustmentGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: InventorySetOnHandQuantitiesUserError[]
    __typename: 'InventorySetOnHandQuantitiesPayload'
}


/** An error that occurs during the execution of `InventorySetOnHandQuantities`. */
export interface InventorySetOnHandQuantitiesUserError {
    /** The error code. */
    code?: InventorySetOnHandQuantitiesUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'InventorySetOnHandQuantitiesUserError'
}


/** Possible error codes that can be returned by `InventorySetOnHandQuantitiesUserError`. */
export type InventorySetOnHandQuantitiesUserErrorCode = 'INVALID_INVENTORY_ITEM' | 'INVALID_LOCATION' | 'INVALID_QUANTITY_NEGATIVE' | 'INVALID_REASON' | 'INVALID_REFERENCE_DOCUMENT' | 'SET_ON_HAND_QUANTITIES_FAILED' | 'ITEM_NOT_STOCKED_AT_LOCATION' | 'NON_MUTABLE_INVENTORY_ITEM' | 'INVALID_QUANTITY_TOO_HIGH'


/** A job corresponds to some long running task that the client should poll for status. */
export interface Job {
    /** This indicates if the job is still queued or has been run. */
    done: Scalars['Boolean']
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id: Scalars['ID']
    /** This field will only resolve once the job is done. Can be used to ask for object(s) that have been changed by the job. */
    query?: QueryRoot
    __typename: 'Job'
}


/** A job corresponds to some long running task that the client should poll for status. */
export type JobResult = (CustomerSegmentMembersQuery) & { __isUnion?: true }


/** ISO 639-1 language codes supported by Shopify. */
export type LanguageCode = 'AF' | 'AK' | 'AM' | 'AR' | 'AS' | 'AZ' | 'BE' | 'BG' | 'BM' | 'BN' | 'BO' | 'BR' | 'BS' | 'CA' | 'CE' | 'CS' | 'CY' | 'DA' | 'DE' | 'DZ' | 'EE' | 'EL' | 'EN' | 'EO' | 'ES' | 'ET' | 'EU' | 'FA' | 'FF' | 'FI' | 'FO' | 'FR' | 'FY' | 'GA' | 'GD' | 'GL' | 'GU' | 'GV' | 'HA' | 'HE' | 'HI' | 'HR' | 'HU' | 'HY' | 'IA' | 'ID' | 'IG' | 'II' | 'IS' | 'IT' | 'JA' | 'JV' | 'KA' | 'KI' | 'KK' | 'KL' | 'KM' | 'KN' | 'KO' | 'KS' | 'KU' | 'KW' | 'KY' | 'LB' | 'LG' | 'LN' | 'LO' | 'LT' | 'LU' | 'LV' | 'MG' | 'MI' | 'MK' | 'ML' | 'MN' | 'MR' | 'MS' | 'MT' | 'MY' | 'NB' | 'ND' | 'NE' | 'NL' | 'NN' | 'NO' | 'OM' | 'OR' | 'OS' | 'PA' | 'PL' | 'PS' | 'PT_BR' | 'PT_PT' | 'QU' | 'RM' | 'RN' | 'RO' | 'RU' | 'RW' | 'SD' | 'SE' | 'SG' | 'SI' | 'SK' | 'SL' | 'SN' | 'SO' | 'SQ' | 'SR' | 'SU' | 'SV' | 'SW' | 'TA' | 'TE' | 'TG' | 'TH' | 'TI' | 'TK' | 'TO' | 'TR' | 'TT' | 'UG' | 'UK' | 'UR' | 'UZ' | 'VI' | 'WO' | 'XH' | 'YI' | 'YO' | 'ZH_CN' | 'ZH_TW' | 'ZU' | 'ZH' | 'PT' | 'CU' | 'VO'


/**
 * Interoperability metadata for types that directly correspond to a REST Admin API resource.
 * For example, on the Product type, LegacyInteroperability returns metadata for the corresponding [Product object](https://shopify.dev/api/admin-graphql/latest/objects/product) in the REST Admin API.
 * 
 */
export type LegacyInteroperability = (Customer | DraftOrder | Fulfillment | InventoryItem | Location | MarketingEvent | Metafield | MetafieldStorefrontVisibility | Order | PriceRule | Product | ProductVariant | Refund | SavedSearch | ScriptTag | ShopifyPaymentsDispute | ShopifyPaymentsPayout | WebhookSubscription) & { __isUnion?: true }


/** Units of measurement for length. */
export type LengthUnit = 'MILLIMETERS' | 'CENTIMETERS' | 'METERS' | 'INCHES' | 'FEET' | 'YARDS'


/**
 * The total number of pending orders on a shop if less then a maximum, or that maximum.
 * The atMax field indicates when this maximum has been reached.
 * 
 */
export interface LimitedPendingOrderCount {
    /** This is set when the number of pending orders has reached the maximum. */
    atMax: Scalars['Boolean']
    /**
     * The number of pendings orders on the shop.
     * Limited to a maximum of 10000.
     * 
     */
    count: Scalars['Int']
    __typename: 'LimitedPendingOrderCount'
}


/** Represents individual products and quantities purchased in the associated order. */
export interface LineItem {
    /**
     * @deprecated Use `restockable` instead.
     * Whether the line item can be restocked.
     */
    canRestock: Scalars['Boolean']
    /** The subscription contract associated with this line item. */
    contract?: SubscriptionContract
    /** The line item's quantity, minus the removed quantity. */
    currentQuantity: Scalars['Int']
    /** A list of attributes that represent custom features or special requests. */
    customAttributes: Attribute[]
    /** The discounts that have been allocated onto the line item by discount applications, not including order edits and refunds. */
    discountAllocations: DiscountAllocation[]
    /**
     * @deprecated Use `discountedTotalSet` instead.
     * The total line price after discounts are applied, in shop currency.
     */
    discountedTotal: Scalars['Money']
    /** The total line price after discounts are applied, in shop and presentment currencies. */
    discountedTotalSet: MoneyBag
    /**
     * @deprecated Use `discountedUnitPriceSet` instead.
     * The approximate split price of a line item unit, in shop currency. This value doesn't include discounts applied to the entire order.
     */
    discountedUnitPrice: Scalars['Money']
    /** The approximate split price of a line item unit, in shop and presentment currencies. This value doesn't include discounts applied to the entire order. */
    discountedUnitPriceSet: MoneyBag
    /** The duties associated with the line item. */
    duties: Duty[]
    /**
     * @deprecated Use [FulfillmentOrderLineItem#remainingQuantity](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderLineItem#field-fulfillmentorderlineitem-remainingquantity) instead.
     * The total number of units to fulfill.
     */
    fulfillableQuantity: Scalars['Int']
    /**
     * @deprecated  The [relationship between a product variant and a fulfillment service was changed in the `2022-07` API version](/changelog/fulfillment-service-sku-sharing). A [ProductVariant](/api/admin-graphql/latest/objects/ProductVariant) can be stocked by multiple fulfillment services. As a result, we recommend that you use the [inventoryItem field](/api/admin-graphql/latest/objects/ProductVariant#field-productvariant-inventoryitem) if you need to determine where a product variant is stocked.  If you need to determine whether a product is a gift card, then you should continue to use this field until an alternative is available.  Altering the locations which stock a product variant won't change the value of this field for existing orders.  Learn about [managing inventory quantities and states](/apps/fulfillment/inventory-management-apps/quantities-states). 
     * The fulfillment service that stocks the product variant belonging to a line item.
     * 
     * This is a third-party fulfillment service in the following scenarios:
     * 
     * **Scenario 1**
     * - The product variant is stocked by a single fulfillment service.
     * - The [FulfillmentService](/api/admin-graphql/latest/objects/FulfillmentService) is a third-party fulfillment service. Third-party fulfillment services don't have a handle with the value `manual`.
     * 
     * **Scenario 2**
     * - Multiple fulfillment services stock the product variant.
     * - The last time that the line item was unfulfilled, it was awaiting fulfillment by a third-party fulfillment service. Third-party fulfillment services don't have a handle with the value `manual`.
     * 
     * If none of the above conditions are met, then the fulfillment service has the `manual` handle.
     * 
     */
    fulfillmentService?: FulfillmentService
    /**
     * @deprecated Use [FulfillmentOrderLineItem#remainingQuantity](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderLineItem#field-fulfillmentorderlineitem-remainingquantity) instead
     * The line item's fulfillment status. Returns 'fulfilled' if fulfillableQuantity >= quantity,
     * 'partial' if  fulfillableQuantity > 0, and 'unfulfilled' otherwise.
     * 
     */
    fulfillmentStatus: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image associated to the line item's variant. */
    image?: Image
    /** Whether the line item can be edited or not. */
    merchantEditable: Scalars['Boolean']
    /** The title of the product, optionally appended with the title of the variant (if applicable). */
    name: Scalars['String']
    /** The total number of units that can't be fulfilled. For example, if items have been refunded, or the item is not something that can be fulfilled, like a tip. Please see the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object for more fulfillment details. */
    nonFulfillableQuantity: Scalars['Int']
    /**
     * @deprecated Use `originalTotalSet` instead.
     * The total price without discounts applied, in shop currency.
     * This value is based on the unit price of the variant x quantity.
     * 
     */
    originalTotal: Scalars['Money']
    /** The total price in shop and presentment currencies, without discounts applied. This value is based on the unit price of the variant x quantity. */
    originalTotalSet: MoneyBag
    /**
     * @deprecated Use `originalUnitPriceSet` instead.
     * The variant unit price without discounts applied, in shop currency.
     */
    originalUnitPrice: Scalars['Money']
    /** The variant unit price without discounts applied, in shop and presentment currencies. */
    originalUnitPriceSet: MoneyBag
    /** The Product object associated with this line item's variant. */
    product?: Product
    /** The number of variant units ordered. */
    quantity: Scalars['Int']
    /** The line item's quantity, minus the removed quantity. */
    refundableQuantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /** Whether the line item can be restocked. */
    restockable: Scalars['Boolean']
    /** The selling plan details associated with the line item. */
    sellingPlan?: LineItemSellingPlan
    /** The variant SKU number. */
    sku?: Scalars['String']
    /** Staff attributed to the line item. */
    staffMember?: StaffMember
    /** The taxes charged for this line item. */
    taxLines: TaxLine[]
    /** Whether the variant is taxable. */
    taxable: Scalars['Boolean']
    /** The title of the product at time of order creation. */
    title: Scalars['String']
    /**
     * @deprecated Use `totalDiscountSet` instead.
     * The total amount of the discount allocated to the line item in the shop currency.
     */
    totalDiscount: Scalars['Money']
    /** The total amount of the discount that's allocated to the line item, in the shop and presentment currencies. This field must be explicitly set using draft orders, Shopify scripts, or the API. */
    totalDiscountSet: MoneyBag
    /**
     * @deprecated Use `unfulfilledDiscountedTotalSet` instead.
     * The total discounted value of unfulfilled units, in shop currency.
     */
    unfulfilledDiscountedTotal: Scalars['Money']
    /** The total discounted value of unfulfilled units, in shop and presentment currencies. */
    unfulfilledDiscountedTotalSet: MoneyBag
    /**
     * @deprecated Use `unfulfilledOriginalTotalSet` instead.
     * The total price, without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop currency.
     */
    unfulfilledOriginalTotal: Scalars['Money']
    /** The total price, without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop and presentment currencies. */
    unfulfilledOriginalTotalSet: MoneyBag
    /** The number of units not yet fulfilled. */
    unfulfilledQuantity: Scalars['Int']
    /** The Variant object associated with this line item. */
    variant?: ProductVariant
    /** The title of the variant at time of order creation. */
    variantTitle?: Scalars['String']
    /** The name of the vendor who made the variant. */
    vendor?: Scalars['String']
    __typename: 'LineItem'
}


/**
 * An auto-generated type for paginating through multiple LineItems.
 * 
 */
export interface LineItemConnection {
    /** A list of edges. */
    edges: LineItemEdge[]
    /** A list of the nodes contained in LineItemEdge. */
    nodes: LineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'LineItemConnection'
}


/**
 * An auto-generated type which holds one LineItem and a cursor during pagination.
 * 
 */
export interface LineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of LineItemEdge. */
    node: LineItem
    __typename: 'LineItemEdge'
}


/** Represents a single line item on an order. */
export interface LineItemMutable {
    /**
     * @deprecated Use `restockable` instead.
     * Whether the line item can be restocked.
     */
    canRestock: Scalars['Boolean']
    /** A list of attributes that represent custom features or special requests. */
    customAttributes: Attribute[]
    /** The discounts that have been allocated onto the line item by discount applications. */
    discountAllocations: DiscountAllocation[]
    /**
     * @deprecated Use `discountedTotalSet` instead.
     * The total line price after discounts are applied, in shop currency.
     */
    discountedTotal: Scalars['Money']
    /** The total line price after discounts are applied, in shop and presentment currencies. */
    discountedTotalSet: MoneyBag
    /**
     * @deprecated Use `discountedUnitPriceSet` instead.
     * The approximate split price of a line item unit, in shop currency. This value doesn't include discounts applied to the entire order.
     */
    discountedUnitPrice: Scalars['Money']
    /** The approximate split price of a line item unit, in shop and presentment currencies. This value doesn't include discounts applied to the entire order. */
    discountedUnitPriceSet: MoneyBag
    /** The total number of units to fulfill. */
    fulfillableQuantity: Scalars['Int']
    /**
     * The service provider that fulfills the line item.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentService
    /**
     * The line item's fulfillment status. Returns 'fulfilled' if fulfillableQuantity >= quantity,
     * 'partial' if  fulfillableQuantity > 0, and 'unfulfilled' otherwise.
     * 
     */
    fulfillmentStatus: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image associated to the line item's variant. */
    image?: Image
    /** Whether the line item can be edited or not. */
    merchantEditable: Scalars['Boolean']
    /** The name of the product. */
    name: Scalars['String']
    /** The total number of units that can't be fulfilled. For example, if items have been refunded, or the item is not something that can be fulfilled, like a tip. */
    nonFulfillableQuantity: Scalars['Int']
    /**
     * @deprecated Use `originalTotalSet` instead.
     * The total price without any discounts applied, in shop currency. ""This value is based on the unit price of the variant x quantity.
     * 
     */
    originalTotal: Scalars['Money']
    /** The total price in shop and presentment currencies, without discounts applied. This value is based on the unit price of the variant x quantity. */
    originalTotalSet: MoneyBag
    /**
     * @deprecated Use `originalUnitPriceSet` instead.
     * The variant unit price without discounts applied, in shop currency.
     */
    originalUnitPrice: Scalars['Money']
    /** The variant unit price without discounts applied, in shop and presentment currencies. */
    originalUnitPriceSet: MoneyBag
    /** The Product object associated with this line item's variant. */
    product?: Product
    /** The number of variant units ordered. */
    quantity: Scalars['Int']
    /** The line item's quantity, minus the removed quantity. */
    refundableQuantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /** Whether the line item can be restocked. */
    restockable: Scalars['Boolean']
    /** The variant SKU number. */
    sku?: Scalars['String']
    /** Staff attributed to the line item. */
    staffMember?: StaffMember
    /** The TaxLine object connected to this line item. */
    taxLines: TaxLine[]
    /** Whether the variant is taxable. */
    taxable: Scalars['Boolean']
    /** The title of the product. */
    title: Scalars['String']
    /**
     * @deprecated Use `totalDiscountSet` instead.
     * The total amount of the discount allocated to the line item in the shop currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discountAllocations`, which provides the same information.
     */
    totalDiscount: Scalars['Money']
    /** The total amount of the discount allocated to the line item in the presentment currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discountAllocations`, which provides the same information. */
    totalDiscountSet: MoneyBag
    /**
     * @deprecated Use `unfulfilledDiscountedTotalSet` instead.
     * The total discounted value of unfulfilled units, in shop currency.
     */
    unfulfilledDiscountedTotal: Scalars['Money']
    /** The total discounted value of unfulfilled units, in shop and presentment currencies. */
    unfulfilledDiscountedTotalSet: MoneyBag
    /**
     * @deprecated Use `unfulfilledOriginalTotalSet` instead.
     * The total price without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop currency.
     */
    unfulfilledOriginalTotal: Scalars['Money']
    /** The total price without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop and presentment currencies. */
    unfulfilledOriginalTotalSet: MoneyBag
    /** The number of units not yet fulfilled. */
    unfulfilledQuantity: Scalars['Int']
    /** The Variant object associated with this line item. */
    variant?: ProductVariant
    /** The name of the variant. */
    variantTitle?: Scalars['String']
    /** The name of the vendor who made the variant. */
    vendor?: Scalars['String']
    __typename: 'LineItemMutable'
}


/**
 * An auto-generated type for paginating through multiple LineItemMutables.
 * 
 */
export interface LineItemMutableConnection {
    /** A list of edges. */
    edges: LineItemMutableEdge[]
    /** A list of the nodes contained in LineItemMutableEdge. */
    nodes: LineItemMutable[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'LineItemMutableConnection'
}


/**
 * An auto-generated type which holds one LineItemMutable and a cursor during pagination.
 * 
 */
export interface LineItemMutableEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of LineItemMutableEdge. */
    node: LineItemMutable
    __typename: 'LineItemMutableEdge'
}


/** Represents the selling plan for a line item. */
export interface LineItemSellingPlan {
    /** The name of the selling plan for display purposes. */
    name: Scalars['String']
    /** The ID of the selling plan associated with the line item. */
    sellingPlanId?: Scalars['ID']
    __typename: 'LineItemSellingPlan'
}


/** A link to direct users to. */
export interface Link {
    /** A context-sensitive label for the link. */
    label: Scalars['String']
    /** The translations associated with the resource. */
    translations: Translation[]
    /** The URL that the link visits. */
    url: Scalars['URL']
    __typename: 'Link'
}


/** A locale. */
export interface Locale {
    /** Locale ISO code. */
    isoCode: Scalars['String']
    /** Human-readable locale name. */
    name: Scalars['String']
    __typename: 'Locale'
}


/** Specifies the type of the underlying localizable content. This can be used to conditionally render different UI elements such as input fields. */
export type LocalizableContentType = 'JSON_STRING' | 'JSON' | 'LIST_MULTI_LINE_TEXT_FIELD' | 'LIST_SINGLE_LINE_TEXT_FIELD' | 'LIST_URL' | 'MULTI_LINE_TEXT_FIELD' | 'RICH_TEXT_FIELD' | 'SINGLE_LINE_TEXT_FIELD' | 'STRING' | 'URL' | 'FILE_REFERENCE' | 'LIST_FILE_REFERENCE' | 'HTML' | 'URI' | 'INLINE_RICH_TEXT'


/** Represents the value captured by a localization extension. Localization extensions are additional fields required by certain countries on international orders. For example, some countries require additional fields for customs information or tax identification numbers. */
export interface LocalizationExtension {
    /** Country ISO 3166-1 alpha-2 code. */
    countryCode: CountryCode
    /** The localized extension keys that are allowed. */
    key: LocalizationExtensionKey
    /** The purpose of this localization extension. */
    purpose: LocalizationExtensionPurpose
    /** The localized extension title. */
    title: Scalars['String']
    /** The value of the field. */
    value: Scalars['String']
    __typename: 'LocalizationExtension'
}


/**
 * An auto-generated type for paginating through multiple LocalizationExtensions.
 * 
 */
export interface LocalizationExtensionConnection {
    /** A list of edges. */
    edges: LocalizationExtensionEdge[]
    /** A list of the nodes contained in LocalizationExtensionEdge. */
    nodes: LocalizationExtension[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'LocalizationExtensionConnection'
}


/**
 * An auto-generated type which holds one LocalizationExtension and a cursor during pagination.
 * 
 */
export interface LocalizationExtensionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of LocalizationExtensionEdge. */
    node: LocalizationExtension
    __typename: 'LocalizationExtensionEdge'
}


/** The key of a localization extension. */
export type LocalizationExtensionKey = 'TAX_CREDENTIAL_BR' | 'SHIPPING_CREDENTIAL_BR' | 'SHIPPING_CREDENTIAL_CN' | 'TAX_CREDENTIAL_IT' | 'TAX_EMAIL_IT' | 'SHIPPING_CREDENTIAL_KR'


/** The purpose of a localization extension. */
export type LocalizationExtensionPurpose = 'SHIPPING' | 'TAX'


/**
 * Represents the location where the physical good resides.
 * 
 */
export interface Location {
    /** Whether this location can be reactivated. */
    activatable: Scalars['Boolean']
    /** The address of this location. */
    address: LocationAddress
    /** Whether the location address has been verified. */
    addressVerified: Scalars['Boolean']
    /** Whether this location can be deactivated. */
    deactivatable: Scalars['Boolean']
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) that the location was deactivated at. For example, 3:30 pm on September 7, 2019 in the time zone of UTC (Universal Time Coordinated) is represented as `"2019-09-07T15:50:00Z`". */
    deactivatedAt?: Scalars['String']
    /** Whether this location can be deleted. */
    deletable: Scalars['Boolean']
    /** Name of the service provider that fulfills from this location. */
    fulfillmentService?: FulfillmentService
    /** Whether this location can fulfill online orders. */
    fulfillsOnlineOrders: Scalars['Boolean']
    /** Whether this location has active inventory. */
    hasActiveInventory: Scalars['Boolean']
    /** Whether this location has orders that need to be fulfilled. */
    hasUnfulfilledOrders: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The quantities of an inventory item at this location. */
    inventoryLevel?: InventoryLevel
    /** A list of the quantities of the inventory items that can be stocked at this location. */
    inventoryLevels: InventoryLevelConnection
    /** Whether the location is active. */
    isActive: Scalars['Boolean']
    /**
     * @deprecated The concept of a primary location is deprecated, shipsInventory can be used to get a fallback location
     * Whether the location is your primary location for shipping inventory.
     */
    isPrimary: Scalars['Boolean']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** Local pickup settings for the location. */
    localPickupSettingsV2?: DeliveryLocalPickupSettings
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The name of the location. */
    name: Scalars['String']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** Whether this location is used for calculating shipping rates. In multi-origin shipping mode, this flag is ignored. */
    shipsInventory: Scalars['Boolean']
    /** List of suggested addresses for this location (empty if none). */
    suggestedAddresses: LocationSuggestedAddress[]
    __typename: 'Location'
}


/** Return type for `locationActivate` mutation. */
export interface LocationActivatePayload {
    /** The location that was activated. */
    location?: Location
    /** The list of errors that occurred from executing the mutation. */
    locationActivateUserErrors: LocationActivateUserError[]
    __typename: 'LocationActivatePayload'
}


/** An error that occurs while activating a location. */
export interface LocationActivateUserError {
    /** The error code. */
    code?: LocationActivateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'LocationActivateUserError'
}


/** Possible error codes that can be returned by `LocationActivateUserError`. */
export type LocationActivateUserErrorCode = 'GENERIC_ERROR' | 'LOCATION_LIMIT' | 'HAS_ONGOING_RELOCATION' | 'LOCATION_NOT_FOUND' | 'HAS_NON_UNIQUE_NAME'


/** Return type for `locationAdd` mutation. */
export interface LocationAddPayload {
    /** The location that was added. */
    location?: Location
    /** The list of errors that occurred from executing the mutation. */
    userErrors: LocationAddUserError[]
    __typename: 'LocationAddPayload'
}


/** An error that occurs while adding a location. */
export interface LocationAddUserError {
    /** The error code. */
    code?: LocationAddUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'LocationAddUserError'
}


/** Possible error codes that can be returned by `LocationAddUserError`. */
export type LocationAddUserErrorCode = 'INVALID' | 'TOO_LONG' | 'TAKEN' | 'BLANK' | 'INVALID_US_ZIPCODE' | 'GENERIC_ERROR' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'APP_NOT_AUTHORIZED' | 'UNSTRUCTURED_RESERVED_NAMESPACE' | 'DISALLOWED_OWNER_TYPE' | 'INCLUSION' | 'PRESENT' | 'TOO_SHORT'


/**
 * Represents the address of a location.
 * 
 */
export interface LocationAddress {
    /** The first line of the address for the location. */
    address1?: Scalars['String']
    /** The second line of the address for the location. */
    address2?: Scalars['String']
    /** The city of the location. */
    city?: Scalars['String']
    /** The country of the location. */
    country?: Scalars['String']
    /** The country code of the location. */
    countryCode?: Scalars['String']
    /** A formatted version of the address for the location. */
    formatted: Scalars['String'][]
    /** The latitude coordinates of the location. */
    latitude?: Scalars['Float']
    /** The longitude coordinates of the location. */
    longitude?: Scalars['Float']
    /** The phone number of the location. */
    phone?: Scalars['String']
    /** The province of the location. */
    province?: Scalars['String']
    /**
     * The code for the province, state, or district of the address of the location.
     * 
     */
    provinceCode?: Scalars['String']
    /** The ZIP code of the location. */
    zip?: Scalars['String']
    __typename: 'LocationAddress'
}


/**
 * An auto-generated type for paginating through multiple Locations.
 * 
 */
export interface LocationConnection {
    /** A list of edges. */
    edges: LocationEdge[]
    /** A list of the nodes contained in LocationEdge. */
    nodes: Location[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'LocationConnection'
}


/** Return type for `locationDeactivate` mutation. */
export interface LocationDeactivatePayload {
    /** The location that was deactivated. */
    location?: Location
    /** The list of errors that occurred from executing the mutation. */
    locationDeactivateUserErrors: LocationDeactivateUserError[]
    __typename: 'LocationDeactivatePayload'
}


/** The possible errors that can be returned when executing the `locationDeactivate` mutation. */
export interface LocationDeactivateUserError {
    /** The error code. */
    code?: LocationDeactivateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'LocationDeactivateUserError'
}


/** Possible error codes that can be returned by `LocationDeactivateUserError`. */
export type LocationDeactivateUserErrorCode = 'LOCATION_NOT_FOUND' | 'PERMANENTLY_BLOCKED_FROM_DEACTIVATION_ERROR' | 'TEMPORARILY_BLOCKED_FROM_DEACTIVATION_ERROR' | 'HAS_ACTIVE_RETAIL_SUBSCRIPTIONS' | 'DESTINATION_LOCATION_IS_THE_SAME_LOCATION' | 'DESTINATION_LOCATION_NOT_FOUND_OR_INACTIVE' | 'HAS_ACTIVE_INVENTORY_ERROR' | 'HAS_FULFILLMENT_ORDERS_ERROR' | 'HAS_OPEN_TRANSFERS_ERROR' | 'HAS_INCOMING_MOVEMENTS_ERROR' | 'HAS_OPEN_PURCHASE_ORDERS_ERROR' | 'FAILED_TO_RELOCATE_ACTIVE_INVENTORIES' | 'FAILED_TO_RELOCATE_OPEN_TRANSFERS' | 'FAILED_TO_RELOCATE_OPEN_PURCHASE_ORDERS' | 'FAILED_TO_RELOCATE_INCOMING_MOVEMENTS' | 'CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT'


/** Return type for `locationDelete` mutation. */
export interface LocationDeletePayload {
    /** The ID of the location that was deleted. */
    deletedLocationId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    locationDeleteUserErrors: LocationDeleteUserError[]
    __typename: 'LocationDeletePayload'
}


/** An error that occurs while deleting a location. */
export interface LocationDeleteUserError {
    /** The error code. */
    code?: LocationDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'LocationDeleteUserError'
}


/** Possible error codes that can be returned by `LocationDeleteUserError`. */
export type LocationDeleteUserErrorCode = 'LOCATION_NOT_FOUND' | 'LOCATION_IS_ACTIVE' | 'GENERIC_ERROR' | 'LOCATION_HAS_INVENTORY' | 'LOCATION_HAS_PENDING_ORDERS' | 'LOCATION_HAS_ACTIVE_RETAIL_SUBSCRIPTION'


/**
 * An auto-generated type which holds one Location and a cursor during pagination.
 * 
 */
export interface LocationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of LocationEdge. */
    node: Location
    __typename: 'LocationEdge'
}


/** Return type for `locationEdit` mutation. */
export interface LocationEditPayload {
    /** The location that was edited. */
    location?: Location
    /** The list of errors that occurred from executing the mutation. */
    userErrors: LocationEditUserError[]
    __typename: 'LocationEditPayload'
}


/** An error that occurs while editing a location. */
export interface LocationEditUserError {
    /** The error code. */
    code?: LocationEditUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'LocationEditUserError'
}


/** Possible error codes that can be returned by `LocationEditUserError`. */
export type LocationEditUserErrorCode = 'TOO_LONG' | 'BLANK' | 'NOT_FOUND' | 'INVALID' | 'TAKEN' | 'INVALID_US_ZIPCODE' | 'GENERIC_ERROR' | 'CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'APP_NOT_AUTHORIZED' | 'UNSTRUCTURED_RESERVED_NAMESPACE' | 'DISALLOWED_OWNER_TYPE' | 'INCLUSION' | 'PRESENT' | 'TOO_SHORT'


/** Return type for `locationLocalPickupDisable` mutation. */
export interface LocationLocalPickupDisablePayload {
    /** The ID of the location for which local pickup was disabled. */
    locationId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DeliveryLocationLocalPickupSettingsError[]
    __typename: 'LocationLocalPickupDisablePayload'
}


/** Return type for `locationLocalPickupEnable` mutation. */
export interface LocationLocalPickupEnablePayload {
    /** The local pickup settings that were enabled. */
    localPickupSettings?: DeliveryLocalPickupSettings
    /** The list of errors that occurred from executing the mutation. */
    userErrors: DeliveryLocationLocalPickupSettingsError[]
    __typename: 'LocationLocalPickupEnablePayload'
}


/** The set of valid sort keys for the Location query. */
export type LocationSortKeys = 'NAME' | 'ID' | 'RELEVANCE'


/**
 * Represents a suggested address for a location.
 * 
 */
export interface LocationSuggestedAddress {
    /** The first line of the suggested address. */
    address1?: Scalars['String']
    /** The second line of the suggested address. */
    address2?: Scalars['String']
    /** The city of the suggested address. */
    city?: Scalars['String']
    /** The country of the suggested address. */
    country?: Scalars['String']
    /** The country code of the suggested address. */
    countryCode?: CountryCode
    /** A formatted version of the suggested address. */
    formatted: Scalars['String'][]
    /** The province of the suggested address. */
    province?: Scalars['String']
    /** The code for the province, state, or district of the suggested address. */
    provinceCode?: Scalars['String']
    /** The ZIP code of the suggested address. */
    zip?: Scalars['String']
    __typename: 'LocationSuggestedAddress'
}


/**
 * Represents a customer mailing address.
 * 
 * For example, a customer's default address and an order's billing address are both mailling addresses.
 * 
 */
export interface MailingAddress {
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: Scalars['String']
    /**
     * The second line of the address. Typically the number of the apartment, suite, or unit.
     * 
     */
    address2?: Scalars['String']
    /**
     * The name of the city, district, village, or town.
     * 
     */
    city?: Scalars['String']
    /**
     * The name of the customer's company or organization.
     * 
     */
    company?: Scalars['String']
    /** Whether the address coordinates are valid. */
    coordinatesValidated: Scalars['Boolean']
    /**
     * The name of the country.
     * 
     */
    country?: Scalars['String']
    /**
     * @deprecated Use `countryCodeV2` instead.
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCode?: Scalars['String']
    /**
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCodeV2?: CountryCode
    /** The first name of the customer. */
    firstName?: Scalars['String']
    /** A formatted version of the address, customized by the provided arguments. */
    formatted: Scalars['String'][]
    /** A comma-separated list of the values for city, province, and country. */
    formattedArea?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The last name of the customer. */
    lastName?: Scalars['String']
    /** The latitude coordinate of the customer address. */
    latitude?: Scalars['Float']
    /** The longitude coordinate of the customer address. */
    longitude?: Scalars['Float']
    /**
     * The full name of the customer, based on firstName and lastName.
     * 
     */
    name?: Scalars['String']
    /**
     * A unique phone number for the customer.
     * 
     * Formatted using E.164 standard. For example, _+16135551111_.
     * 
     */
    phone?: Scalars['String']
    /** The region of the address, such as the province, state, or district. */
    province?: Scalars['String']
    /**
     * The two-letter code for the region.
     * 
     * For example, ON.
     * 
     */
    provinceCode?: Scalars['String']
    /** The time zone of the address. */
    timeZone?: Scalars['String']
    /** The zip or postal code of the address. */
    zip?: Scalars['String']
    __typename: 'MailingAddress'
}


/**
 * An auto-generated type for paginating through multiple MailingAddresses.
 * 
 */
export interface MailingAddressConnection {
    /** A list of edges. */
    edges: MailingAddressEdge[]
    /** A list of the nodes contained in MailingAddressEdge. */
    nodes: MailingAddress[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MailingAddressConnection'
}


/**
 * An auto-generated type which holds one MailingAddress and a cursor during pagination.
 * 
 */
export interface MailingAddressEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MailingAddressEdge. */
    node: MailingAddress
    __typename: 'MailingAddressEdge'
}


/**
 * Manual discount applications capture the intentions of a discount that was manually created for an order.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface ManualDiscountApplication {
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /** The description of the discount application. */
    description?: Scalars['String']
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index: Scalars['Int']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The title of the discount application. */
    title: Scalars['String']
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'ManualDiscountApplication'
}


/**
 * A market is a group of one or more regions that you want to target for international sales.
 * By creating a market, you can configure a distinct, localized shopping experience for
 * customers from a specific area of the world. For example, you can
 * [change currency](https://shopify.dev/api/admin-graphql/current/mutations/marketCurrencySettingsUpdate),
 * [configure international pricing](https://shopify.dev/apps/internationalization/product-price-lists),
 * or [add market-specific domains or subfolders](https://shopify.dev/api/admin-graphql/current/objects/MarketWebPresence).
 * 
 */
export interface Market {
    /** The catalogs that belong to the market. */
    catalogs: MarketCatalogConnection
    /** The market’s currency settings. */
    currencySettings: MarketCurrencySettings
    /**
     * Whether the market is enabled to receive visitors and sales. **Note**: Regions in inactive
     * markets cannot be selected on the storefront or in checkout.
     * 
     */
    enabled: Scalars['Boolean']
    /** A short, human-readable unique identifier for the market. This is changeable by the merchant. */
    handle: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The name of the market. Not shown to customers. */
    name: Scalars['String']
    /**
     * The market’s price list, which specifies a percentage-based price adjustment as well as
     * fixed price overrides for specific variants.
     * 
     */
    priceList?: PriceList
    /**
     * Whether the market is the shop’s primary market.
     * 
     */
    primary: Scalars['Boolean']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The regions that comprise the market. */
    regions: MarketRegionConnection
    /**
     * The market’s web presence, which defines its SEO strategy. This can be a different domain,
     * subdomain, or subfolders of the primary domain. Each web presence comprises one or more
     * language variants. If a market doesn't have its own web presence, then the market is accessible on the
     * shop’s primary domain using [country
     * selectors](https://shopify.dev/themes/internationalization/multiple-currencies-languages#the-country-selector).
     * 
     */
    webPresence?: MarketWebPresence
    __typename: 'Market'
}


/**
 * A list of products with publishing and pricing information associated with markets.
 * 
 */
export interface MarketCatalog {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The markets associated with the catalog. */
    markets: MarketConnection
    /** Most recent catalog operations. */
    operations: ResourceOperation[]
    /** The price list associated with the catalog. */
    priceList?: PriceList
    /** A group of products and collections that's published to a catalog. */
    publication?: Publication
    /** The status of the catalog. */
    status: CatalogStatus
    /** The name of the catalog. */
    title: Scalars['String']
    __typename: 'MarketCatalog'
}


/**
 * An auto-generated type for paginating through multiple MarketCatalogs.
 * 
 */
export interface MarketCatalogConnection {
    /** A list of edges. */
    edges: MarketCatalogEdge[]
    /** A list of the nodes contained in MarketCatalogEdge. */
    nodes: MarketCatalog[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MarketCatalogConnection'
}


/**
 * An auto-generated type which holds one MarketCatalog and a cursor during pagination.
 * 
 */
export interface MarketCatalogEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MarketCatalogEdge. */
    node: MarketCatalog
    __typename: 'MarketCatalogEdge'
}


/**
 * An auto-generated type for paginating through multiple Markets.
 * 
 */
export interface MarketConnection {
    /** A list of edges. */
    edges: MarketEdge[]
    /** A list of the nodes contained in MarketEdge. */
    nodes: Market[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MarketConnection'
}


/** Return type for `marketCreate` mutation. */
export interface MarketCreatePayload {
    /** The market object. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketCreatePayload'
}


/** A market's currency settings. */
export interface MarketCurrencySettings {
    /**
     * The currency which this market's prices are defined in, and the
     * currency which its customers must use if local currencies are disabled.
     * 
     */
    baseCurrency: CurrencySetting
    /**
     * Whether or not local currencies are enabled. If enabled, then prices will
     * be converted to give each customer the best experience based on their
     * region. If disabled, then all customers in this market will see prices
     * in the market's base currency.
     * 
     */
    localCurrencies: Scalars['Boolean']
    __typename: 'MarketCurrencySettings'
}


/** Return type for `marketCurrencySettingsUpdate` mutation. */
export interface MarketCurrencySettingsUpdatePayload {
    /** The market object. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketCurrencySettingsUserError[]
    __typename: 'MarketCurrencySettingsUpdatePayload'
}


/** Error codes for failed market multi-currency operations. */
export interface MarketCurrencySettingsUserError {
    /** The error code. */
    code?: MarketCurrencySettingsUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MarketCurrencySettingsUserError'
}


/** Possible error codes that can be returned by `MarketCurrencySettingsUserError`. */
export type MarketCurrencySettingsUserErrorCode = 'MARKET_NOT_FOUND' | 'MANAGED_MARKET' | 'MULTIPLE_CURRENCIES_NOT_SUPPORTED' | 'NO_LOCAL_CURRENCIES_ON_SINGLE_COUNTRY_MARKET' | 'UNSUPPORTED_CURRENCY' | 'PRIMARY_MARKET_USES_SHOP_CURRENCY'


/** Return type for `marketDelete` mutation. */
export interface MarketDeletePayload {
    /** The ID of the deleted market. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketDeletePayload'
}


/**
 * An auto-generated type which holds one Market and a cursor during pagination.
 * 
 */
export interface MarketEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MarketEdge. */
    node: Market
    __typename: 'MarketEdge'
}


/** The market localizable content of a resource's field. */
export interface MarketLocalizableContent {
    /** The hash digest representation of the content value. */
    digest?: Scalars['String']
    /** The resource field that's being localized. */
    key: Scalars['String']
    /** The content value. */
    value?: Scalars['String']
    __typename: 'MarketLocalizableContent'
}


/** A resource that has market localizable fields. */
export interface MarketLocalizableResource {
    /** The market localizable content. */
    marketLocalizableContent: MarketLocalizableContent[]
    /** Market localizations for the market localizable content. */
    marketLocalizations: MarketLocalization[]
    /** The GID of the resource. */
    resourceId: Scalars['ID']
    __typename: 'MarketLocalizableResource'
}


/**
 * An auto-generated type for paginating through multiple MarketLocalizableResources.
 * 
 */
export interface MarketLocalizableResourceConnection {
    /** A list of edges. */
    edges: MarketLocalizableResourceEdge[]
    /** A list of the nodes contained in MarketLocalizableResourceEdge. */
    nodes: MarketLocalizableResource[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MarketLocalizableResourceConnection'
}


/**
 * An auto-generated type which holds one MarketLocalizableResource and a cursor during pagination.
 * 
 */
export interface MarketLocalizableResourceEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MarketLocalizableResourceEdge. */
    node: MarketLocalizableResource
    __typename: 'MarketLocalizableResourceEdge'
}


/** The type of resources that are market localizable. */
export type MarketLocalizableResourceType = 'METAFIELD'


/** The market localization of a field within a resource, which is determined by the market ID. */
export interface MarketLocalization {
    /** A reference to the value being localized on the resource that this market localization belongs to. */
    key: Scalars['String']
    /** The market that the localization is specific to. */
    market: Market
    /** Whether the original content has changed since this market localization was updated. */
    outdated: Scalars['Boolean']
    /** The date and time when the market localization was updated. */
    updatedAt?: Scalars['DateTime']
    /** The value of the market localization. */
    value?: Scalars['String']
    __typename: 'MarketLocalization'
}


/** Return type for `marketLocalizationsRegister` mutation. */
export interface MarketLocalizationsRegisterPayload {
    /** The market localizations that were created or updated. */
    marketLocalizations?: MarketLocalization[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: TranslationUserError[]
    __typename: 'MarketLocalizationsRegisterPayload'
}


/** Return type for `marketLocalizationsRemove` mutation. */
export interface MarketLocalizationsRemovePayload {
    /** The market localizations that were deleted. */
    marketLocalizations?: MarketLocalization[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: TranslationUserError[]
    __typename: 'MarketLocalizationsRemovePayload'
}


/** A geographic region which comprises a market. */
export type MarketRegion = (MarketRegionCountry) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple MarketRegions.
 * 
 */
export interface MarketRegionConnection {
    /** A list of edges. */
    edges: MarketRegionEdge[]
    /** A list of the nodes contained in MarketRegionEdge. */
    nodes: MarketRegion[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MarketRegionConnection'
}


/** A country which comprises a market. */
export interface MarketRegionCountry {
    /** The ISO code identifying the country. */
    code: CountryCode
    /** The currency which this country uses given its market settings. */
    currency: CurrencySetting
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the region. */
    name: Scalars['String']
    __typename: 'MarketRegionCountry'
}


/** Return type for `marketRegionDelete` mutation. */
export interface MarketRegionDeletePayload {
    /** The ID of the deleted market region. */
    deletedId?: Scalars['ID']
    /** The parent market object of the deleted region. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketRegionDeletePayload'
}


/**
 * An auto-generated type which holds one MarketRegion and a cursor during pagination.
 * 
 */
export interface MarketRegionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MarketRegionEdge. */
    node: MarketRegion
    __typename: 'MarketRegionEdge'
}


/** Return type for `marketRegionsCreate` mutation. */
export interface MarketRegionsCreatePayload {
    /** The market object. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketRegionsCreatePayload'
}


/** Return type for `marketUpdate` mutation. */
export interface MarketUpdatePayload {
    /** The market object. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketUpdatePayload'
}


/**
 * Defines errors encountered while managing a Market.
 * 
 */
export interface MarketUserError {
    /** The error code. */
    code?: MarketUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MarketUserError'
}


/** Possible error codes that can be returned by `MarketUserError`. */
export type MarketUserErrorCode = 'INVALID' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'BLANK' | 'MARKET_NOT_FOUND' | 'REGION_NOT_FOUND' | 'WEB_PRESENCE_NOT_FOUND' | 'CANNOT_ADD_REGIONS_TO_PRIMARY_MARKET' | 'CANNOT_DELETE_ONLY_REGION' | 'REQUIRES_EXACTLY_ONE_OPTION' | 'CANNOT_DELETE_PRIMARY_MARKET' | 'DOMAIN_NOT_FOUND' | 'SUBFOLDER_SUFFIX_MUST_CONTAIN_ONLY_LETTERS' | 'SUBFOLDER_SUFFIX_CANNOT_BE_SCRIPT_CODE' | 'NO_LANGUAGES' | 'DUPLICATE_LANGUAGES' | 'REGION_SPECIFIC_LANGUAGE' | 'CANNOT_HAVE_SUBFOLDER_AND_DOMAIN' | 'CANNOT_ADD_WEB_PRESENCE_TO_PRIMARY_MARKET' | 'REQUIRES_DOMAIN_OR_SUBFOLDER' | 'PRIMARY_MARKET_MUST_USE_PRIMARY_DOMAIN' | 'CANNOT_DELETE_PRIMARY_MARKET_WEB_PRESENCE' | 'SHOP_REACHED_MARKETS_LIMIT' | 'CANNOT_DISABLE_PRIMARY_MARKET' | 'UNPUBLISHED_LANGUAGE' | 'DISABLED_LANGUAGE' | 'CANNOT_SET_DEFAULT_LOCALE_TO_NULL' | 'UNSUPPORTED_COUNTRY_REGION' | 'CANNOT_ADD_CUSTOMER_DOMAIN'


/**
 * The market’s web presence, which defines its SEO strategy. This can be a different domain
 * (e.g. `example.ca`), subdomain (e.g. `ca.example.com`), or subfolders of the primary
 * domain (e.g. `example.com/en-ca`). Each web presence comprises one or more language
 * variants. If a market does not have its own web presence, it is accessible on the shop’s
 * primary domain via [country
 * selectors](https://shopify.dev/themes/internationalization/multiple-currencies-languages#the-country-selector).
 * 
 * Note: while the domain/subfolders defined by a market’s web presence are not applicable to
 * custom storefronts, which must manage their own domains and routing, the languages chosen
 * here do govern [the languages available on the Storefront
 * API](https://shopify.dev/custom-storefronts/internationalization/multiple-languages) for the countries in
 * this market.
 * 
 */
export interface MarketWebPresence {
    /**
     * The ISO codes for the alternate locales. When a domain is used, these locales will be
     * available as language-specific subfolders. For example, if English is an
     * alternate locale, and `example.ca` is the market’s domain, then
     * `example.ca/en` will load in English.
     * 
     */
    alternateLocales: Scalars['String'][]
    /**
     * The ISO code for the default locale. When a domain is used, this is the locale that will
     * be used when the domain root is accessed. For example, if French is the default locale,
     * and `example.ca` is the market’s domian, then `example.ca` will load in French.
     * 
     */
    defaultLocale: Scalars['String']
    /**
     * The web presence’s domain.
     * This field will be null if `subfolderSuffix` isn't null.
     * 
     */
    domain?: Domain
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The associated market. */
    market: Market
    /**
     * The list of root URLs for each of the web presence’s locales.
     * 
     */
    rootUrls: MarketWebPresenceRootUrl[]
    /** The market-specific suffix of the subfolders defined by the web presence. Example: in `/en-us` the subfolder suffix is `us`. This field will be null if `domain` isn't null. */
    subfolderSuffix?: Scalars['String']
    __typename: 'MarketWebPresence'
}


/** Return type for `marketWebPresenceCreate` mutation. */
export interface MarketWebPresenceCreatePayload {
    /** The market object. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketWebPresenceCreatePayload'
}


/** Return type for `marketWebPresenceDelete` mutation. */
export interface MarketWebPresenceDeletePayload {
    /** The ID of the deleted web presence. */
    deletedId?: Scalars['ID']
    /** The market for which the web presence was deleted. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketWebPresenceDeletePayload'
}


/**
 * The URL for the homepage of the online store in the context of a particular market and a
 * particular locale.
 * 
 */
export interface MarketWebPresenceRootUrl {
    /** The locale that the storefront loads in. */
    locale: Scalars['String']
    /** The URL. */
    url: Scalars['URL']
    __typename: 'MarketWebPresenceRootUrl'
}


/** Return type for `marketWebPresenceUpdate` mutation. */
export interface MarketWebPresenceUpdatePayload {
    /** The market object. */
    market?: Market
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketUserError[]
    __typename: 'MarketWebPresenceUpdatePayload'
}


/**
 * The marketing activity resource represents marketing that a
 *         merchant created through an app.
 */
export interface MarketingActivity {
    /** The URL of the marketing activity listing page in the marketing section. */
    activityListUrl?: Scalars['URL']
    /** The amount spent on the marketing activity. */
    adSpend?: MoneyV2
    /** The app which created this marketing activity. */
    app: App
    /** The errors generated when an app publishes the marketing activity. */
    appErrors?: MarketingActivityExtensionAppErrors
    /** The allocated budget for the marketing activity. */
    budget?: MarketingBudget
    /** The date and time when the marketing activity was created. */
    createdAt: Scalars['DateTime']
    /** The completed content in the marketing activity creation form. */
    formData?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * Whether the marketing activity is in the main workflow version of
     *           the marketing automation.
     */
    inMainWorkflowVersion: Scalars['Boolean']
    /** The available marketing channels for a marketing activity. */
    marketingChannel: MarketingChannel
    /** Associated marketing event of this marketing activity. */
    marketingEvent?: MarketingEvent
    /** A contextual description of the marketing activity based on the platform and tactic used. */
    sourceAndMedium: Scalars['String']
    /** The current state of the marketing activity. */
    status: MarketingActivityStatus
    /**
     * @deprecated Use `statusBadgeTypeV2` instead.
     * The severity of the marketing activity's status.
     */
    statusBadgeType?: MarketingActivityStatusBadgeType
    /** The severity of the marketing activity's status. */
    statusBadgeTypeV2?: BadgeType
    /** The rendered status of the marketing activity. */
    statusLabel: Scalars['String']
    /**
     * The [date and time](
     *           https://help.shopify.com/https://en.wikipedia.org/wiki/ISO_8601
     *           ) when the activity's status last changed.
     */
    statusTransitionedAt?: Scalars['DateTime']
    /** The method of marketing used for this marketing activity. */
    tactic: MarketingTactic
    /** The status to which the marketing activity is currently transitioning. */
    targetStatus?: MarketingActivityStatus
    /** The marketing activity's title, which is rendered on the marketing listing page. */
    title: Scalars['String']
    /** The date and time when the marketing activity was updated. */
    updatedAt: Scalars['DateTime']
    /**
     * The set of [Urchin Tracking Module](
     *           https://help.shopify.com/https://en.wikipedia.org/wiki/UTM_parameters
     *           ) used in the URL for tracking this marketing activity.
     */
    utmParameters?: UTMParameters
    __typename: 'MarketingActivity'
}


/**
 * An auto-generated type for paginating through multiple MarketingActivities.
 * 
 */
export interface MarketingActivityConnection {
    /** A list of edges. */
    edges: MarketingActivityEdge[]
    /** A list of the nodes contained in MarketingActivityEdge. */
    nodes: MarketingActivity[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MarketingActivityConnection'
}


/** Return type for `marketingActivityCreateExternal` mutation. */
export interface MarketingActivityCreateExternalPayload {
    /** The external marketing activity that was created. */
    marketingActivity?: MarketingActivity
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketingActivityUserError[]
    __typename: 'MarketingActivityCreateExternalPayload'
}


/** Return type for `marketingActivityCreate` mutation. */
export interface MarketingActivityCreatePayload {
    /** The created marketing activity. */
    marketingActivity?: MarketingActivity
    /** The path to return back to shopify admin from embedded editor. */
    redirectPath?: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'MarketingActivityCreatePayload'
}


/**
 * An auto-generated type which holds one MarketingActivity and a cursor during pagination.
 * 
 */
export interface MarketingActivityEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MarketingActivityEdge. */
    node: MarketingActivity
    __typename: 'MarketingActivityEdge'
}


/** The error code resulted from the marketing activity extension integration. */
export type MarketingActivityExtensionAppErrorCode = 'NOT_ONBOARDED_ERROR' | 'VALIDATION_ERROR' | 'API_ERROR' | 'PLATFORM_ERROR' | 'INSTALL_REQUIRED_ERROR'


/** Represents errors returned from apps when using the marketing activity extension. */
export interface MarketingActivityExtensionAppErrors {
    /** The app error type. */
    code: MarketingActivityExtensionAppErrorCode
    /** The list of errors returned by the app. */
    userErrors: UserError[]
    __typename: 'MarketingActivityExtensionAppErrors'
}


/** The set of valid sort keys for the MarketingActivity query. */
export type MarketingActivitySortKeys = 'TITLE' | 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** Status helps to identify if this marketing activity has been completed, queued, failed etc. */
export type MarketingActivityStatus = 'ACTIVE' | 'DELETED' | 'DELETED_EXTERNALLY' | 'DISCONNECTED' | 'DRAFT' | 'FAILED' | 'INACTIVE' | 'PAUSED' | 'PENDING' | 'SCHEDULED' | 'UNDEFINED'


/** StatusBadgeType helps to identify the color of the status badge. */
export type MarketingActivityStatusBadgeType = 'DEFAULT' | 'SUCCESS' | 'ATTENTION' | 'WARNING' | 'INFO'


/** Return type for `marketingActivityUpdateExternal` mutation. */
export interface MarketingActivityUpdateExternalPayload {
    /** The updated marketing activity. */
    marketingActivity?: MarketingActivity
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MarketingActivityUserError[]
    __typename: 'MarketingActivityUpdateExternalPayload'
}


/** Return type for `marketingActivityUpdate` mutation. */
export interface MarketingActivityUpdatePayload {
    /** The updated marketing activity. */
    marketingActivity?: MarketingActivity
    /** The redirect path from the embedded editor to the Shopify admin. */
    redirectPath?: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'MarketingActivityUpdatePayload'
}


/** An error that occurs during the execution of a Shopify Marketing mutation. */
export interface MarketingActivityUserError {
    /** The error code. */
    code?: MarketingActivityUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MarketingActivityUserError'
}


/** Possible error codes that can be returned by `MarketingActivityUserError`. */
export type MarketingActivityUserErrorCode = 'INVALID' | 'TAKEN'


/**
 * This type combines budget amount and its marketing budget type.
 * 
 */
export interface MarketingBudget {
    /** The budget type for a marketing activity. */
    budgetType: MarketingBudgetBudgetType
    /** The amount of budget for marketing activity. */
    total: MoneyV2
    __typename: 'MarketingBudget'
}


/** The budget type for a marketing activity. */
export type MarketingBudgetBudgetType = 'DAILY' | 'LIFETIME'


/**
 * The available marketing channels for a marketing activity or event. A marketing channel is broad category of marketing, used for reporting aggregation.
 * 
 */
export type MarketingChannel = 'SEARCH' | 'DISPLAY' | 'SOCIAL' | 'EMAIL' | 'REFERRAL'


/** Marketing engagement represents customer activity taken on a marketing activity or a marketing channel. */
export interface MarketingEngagement {
    /** The total ad spend for the day, if the marketing event is a paid ad with a daily spend. */
    adSpend?: MoneyV2
    /** The total number of clicks on the marketing event for the day. */
    clicksCount?: Scalars['Int']
    /** The total number of comments on marketing content for the day. */
    commentsCount?: Scalars['Int']
    /** The total number of complaints for the day. */
    complaintsCount?: Scalars['Int']
    /** The total number of fails for the day. For message-based platforms such as email or SMS, this represents the number of bounced marketing emails or messages. */
    failsCount?: Scalars['Int']
    /** The total number of favorites, likes, saves, or bookmarks for the day. */
    favoritesCount?: Scalars['Int']
    /** The date time at which the data was fetched. */
    fetchedAt?: Scalars['DateTime']
    /** The total number of impressions for the day. */
    impressionsCount?: Scalars['Int']
    /** Whether the engagements are reported as lifetime values rather than daily totals. */
    isCumulative?: Scalars['Boolean']
    /** The marketing activity object related to this engagement. This corresponds to the marketingActivityId passed in on creation of the engagement. */
    marketingActivity: MarketingActivity
    /** The date that these engagements occurred on between 12:00 AM to 11:59 PM UTC. */
    occurredOn: Scalars['Date']
    /** The total number of marketing emails or messages that were sent for the day. */
    sendsCount?: Scalars['Int']
    /** The total number of times marketing content was distributed or reposted to either one's own network of followers through a social media platform or other digital channels for the day. For message-based platforms such as email or SMS, this represents the number of times marketing emails or messages were forwarded. */
    sharesCount?: Scalars['Int']
    /** The total number of unique clicks on marketing content for the day. */
    uniqueClicksCount?: Scalars['Int']
    /** The total number of unique views for the day. */
    uniqueViewsCount?: Scalars['Int']
    /** The total number of unsubscribes for the day. For social media platforms, this represents the number of unfollows. */
    unsubscribesCount?: Scalars['Int']
    /** The UTC Offset that the app is using to determine which date to allocate spend to. */
    utcOffset?: Scalars['UtcOffset']
    /** The total number of views for the day. For message-based platforms such as email or SMS, this represents the number of times marketing emails or messages were opened. For video-based content, this represents the number of times videos were played. */
    viewsCount?: Scalars['Int']
    __typename: 'MarketingEngagement'
}


/** Return type for `marketingEngagementCreate` mutation. */
export interface MarketingEngagementCreatePayload {
    /** The marketing engagement that was created. */
    marketingEngagement?: MarketingEngagement
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'MarketingEngagementCreatePayload'
}


/** Represents actions that market a merchant's store or products. */
export interface MarketingEvent {
    /** The app that the marketing event is attributed to. */
    app: App
    /** The marketing channel used by the marketing event. */
    channel?: MarketingChannel
    /** A human-readable description of the marketing event. */
    description?: Scalars['String']
    /** The date and time when the marketing event ended. */
    endedAt?: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The URL where the marketing event can be managed. */
    manageUrl?: Scalars['URL']
    /** The URL where the marketing event can be previewed. */
    previewUrl?: Scalars['URL']
    /** An optional ID that helps Shopify validate engagement data. */
    remoteId?: Scalars['String']
    /** The date and time when the marketing event is scheduled to end. */
    scheduledToEndAt?: Scalars['DateTime']
    /**
     * Where the `MarketingEvent` occurred and what kind of content was used.
     * Because `utmSource` and `utmMedium` are often used interchangeably, this is
     * based on a combination of `marketingChannel`, `referringDomain`, and `type` to
     * provide a consistent representation for any given piece of marketing
     * regardless of the app that created it.
     * 
     */
    sourceAndMedium: Scalars['String']
    /** The date and time when the marketing event started. */
    startedAt: Scalars['DateTime']
    /**
     * @deprecated Use `sourceAndMedium` instead.
     * The display text for the marketing event type.
     */
    targetTypeDisplayText: Scalars['String']
    /** The marketing event type. */
    type: MarketingTactic
    /** The name of the marketing campaign. */
    utmCampaign?: Scalars['String']
    /** The medium that the marketing campaign is using. Example values: `cpc`, `banner`. */
    utmMedium?: Scalars['String']
    /** The referrer of the marketing event. Example values: `google`, `newsletter`. */
    utmSource?: Scalars['String']
    __typename: 'MarketingEvent'
}


/**
 * An auto-generated type for paginating through multiple MarketingEvents.
 * 
 */
export interface MarketingEventConnection {
    /** A list of edges. */
    edges: MarketingEventEdge[]
    /** A list of the nodes contained in MarketingEventEdge. */
    nodes: MarketingEvent[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MarketingEventConnection'
}


/**
 * An auto-generated type which holds one MarketingEvent and a cursor during pagination.
 * 
 */
export interface MarketingEventEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MarketingEventEdge. */
    node: MarketingEvent
    __typename: 'MarketingEventEdge'
}


/** The set of valid sort keys for the MarketingEvent query. */
export type MarketingEventSortKeys = 'STARTED_AT' | 'ID' | 'RELEVANCE'


/** The available types of marketing event. */
export type MarketingTactic = 'ABANDONED_CART' | 'AD' | 'AFFILIATE' | 'LINK' | 'LOYALTY' | 'MESSAGE' | 'NEWSLETTER' | 'NOTIFICATION' | 'POST' | 'RETARGETING' | 'TRANSACTIONAL' | 'SEO' | 'DIRECT' | 'STOREFRONT_APP' | 'DISPLAY' | 'SEARCH' | 'FOLLOW_UP' | 'RECEIPT'


/** Represents a media interface. */
export type Media = (ExternalVideo | MediaImage | Model3d | Video) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple Media.
 * 
 */
export interface MediaConnection {
    /** A list of edges. */
    edges: MediaEdge[]
    /** A list of the nodes contained in MediaEdge. */
    nodes: Media[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MediaConnection'
}


/** The possible content types for a media object. */
export type MediaContentType = 'VIDEO' | 'EXTERNAL_VIDEO' | 'MODEL_3D' | 'IMAGE'


/**
 * An auto-generated type which holds one Media and a cursor during pagination.
 * 
 */
export interface MediaEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MediaEdge. */
    node: Media
    __typename: 'MediaEdge'
}


/**
 * Represents a media error. This typically occurs when there is an issue with the media itself causing it to fail validation.
 * Check the media before attempting to upload again.
 * 
 */
export interface MediaError {
    /** Code representing the type of error. */
    code: MediaErrorCode
    /** Additional details regarding the error. */
    details?: Scalars['String']
    /** Translated error message. */
    message: Scalars['String']
    __typename: 'MediaError'
}


/** Error types for media. */
export type MediaErrorCode = 'UNKNOWN' | 'INVALID_SIGNED_URL' | 'IMAGE_DOWNLOAD_FAILURE' | 'IMAGE_PROCESSING_FAILURE' | 'MEDIA_TIMEOUT_ERROR' | 'EXTERNAL_VIDEO_NOT_FOUND' | 'EXTERNAL_VIDEO_UNLISTED' | 'EXTERNAL_VIDEO_INVALID_ASPECT_RATIO' | 'EXTERNAL_VIDEO_EMBED_DISABLED' | 'EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING' | 'GENERIC_FILE_DOWNLOAD_FAILURE' | 'GENERIC_FILE_INVALID_SIZE' | 'VIDEO_METADATA_READ_ERROR' | 'VIDEO_INVALID_FILETYPE_ERROR' | 'VIDEO_MIN_WIDTH_ERROR' | 'VIDEO_MAX_WIDTH_ERROR' | 'VIDEO_MIN_HEIGHT_ERROR' | 'VIDEO_MAX_HEIGHT_ERROR' | 'VIDEO_MIN_DURATION_ERROR' | 'VIDEO_MAX_DURATION_ERROR' | 'VIDEO_VALIDATION_ERROR' | 'MODEL3D_VALIDATION_ERROR' | 'MODEL3D_THUMBNAIL_GENERATION_ERROR' | 'MODEL3D_THUMBNAIL_REGENERATION_ERROR' | 'MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR' | 'MODEL3D_GLB_OUTPUT_CREATION_ERROR' | 'MODEL3D_PROCESSING_FAILURE' | 'UNSUPPORTED_IMAGE_FILE_TYPE' | 'INVALID_IMAGE_FILE_SIZE' | 'INVALID_IMAGE_ASPECT_RATIO' | 'INVALID_IMAGE_RESOLUTION' | 'FILE_STORAGE_LIMIT_EXCEEDED' | 'DUPLICATE_FILENAME_ERROR'


/** Host for a Media Resource. */
export type MediaHost = 'YOUTUBE' | 'VIMEO'


/**
 * An image hosted on Shopify.
 * 
 */
export interface MediaImage {
    /** A word or phrase to share the nature or contents of a media. */
    alt?: Scalars['String']
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt: Scalars['DateTime']
    /** Any errors that have occurred on the file. */
    fileErrors: FileError[]
    /** The status of the file. */
    fileStatus: FileStatus
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The image for the media. Returns `null` until `status` is `READY`. */
    image?: Image
    /** The media content type. */
    mediaContentType: MediaContentType
    /** Any errors which have occurred on the media. */
    mediaErrors: MediaError[]
    /** The warnings attached to the media. */
    mediaWarnings: MediaWarning[]
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The MIME type of the image. */
    mimeType?: Scalars['String']
    /** The original source of the image. */
    originalSource?: MediaImageOriginalSource
    /** The preview image for the media. */
    preview?: MediaPreviewImage
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** Current status of the media. */
    status: MediaStatus
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'MediaImage'
}


/**
 * The original source for an image.
 * 
 */
export interface MediaImageOriginalSource {
    /** The size of the original file in bytes. */
    fileSize?: Scalars['Int']
    __typename: 'MediaImageOriginalSource'
}


/** Represents the preview image for a media. */
export interface MediaPreviewImage {
    /** The preview image for the media. Returns `null` until `status` is `READY`. */
    image?: Image
    /** Current status of the preview image. */
    status: MediaPreviewImageStatus
    __typename: 'MediaPreviewImage'
}


/** The possible statuses for a media preview image. */
export type MediaPreviewImageStatus = 'UPLOADED' | 'PROCESSING' | 'READY' | 'FAILED'


/** The possible statuses for a media object. */
export type MediaStatus = 'UPLOADED' | 'PROCESSING' | 'READY' | 'FAILED'


/** Represents an error that happens during execution of a Media query or mutation. */
export interface MediaUserError {
    /** The error code. */
    code?: MediaUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MediaUserError'
}


/** Possible error codes that can be returned by `MediaUserError`. */
export type MediaUserErrorCode = 'INVALID' | 'BLANK' | 'VIDEO_VALIDATION_ERROR' | 'MODEL3D_VALIDATION_ERROR' | 'VIDEO_THROTTLE_EXCEEDED' | 'MODEL3D_THROTTLE_EXCEEDED' | 'PRODUCT_MEDIA_LIMIT_EXCEEDED' | 'SHOP_MEDIA_LIMIT_EXCEEDED' | 'PRODUCT_DOES_NOT_EXIST' | 'MEDIA_DOES_NOT_EXIST' | 'MEDIA_DOES_NOT_EXIST_ON_PRODUCT' | 'TOO_MANY_MEDIA_PER_INPUT_PAIR' | 'MAXIMUM_VARIANT_MEDIA_PAIRS_EXCEEDED' | 'INVALID_MEDIA_TYPE' | 'PRODUCT_VARIANT_SPECIFIED_MULTIPLE_TIMES' | 'PRODUCT_VARIANT_DOES_NOT_EXIST_ON_PRODUCT' | 'NON_READY_MEDIA' | 'PRODUCT_VARIANT_ALREADY_HAS_MEDIA' | 'MEDIA_IS_NOT_ATTACHED_TO_VARIANT' | 'MEDIA_CANNOT_BE_MODIFIED'


/**
 * Represents a media warning. This occurs when there is a non-blocking concern regarding your media.
 * Consider reviewing your media to ensure it is correct and its parameters are as expected.
 * 
 */
export interface MediaWarning {
    /** The code representing the type of warning. */
    code: MediaWarningCode
    /** Translated warning message. */
    message?: Scalars['String']
    __typename: 'MediaWarning'
}


/** Warning types for media. */
export type MediaWarningCode = 'MODEL_SMALL_PHYSICAL_SIZE' | 'MODEL_LARGE_PHYSICAL_SIZE'


/** The class of the discount for combining purposes. */
export type MerchandiseDiscountClass = 'PRODUCT' | 'ORDER'


/** Merchant approval for accelerated onboarding to channel integration apps. */
export interface MerchantApprovalSignals {
    /** Whether the shop's Shopify Payments account identity is verified. Returns `false` if the identity is unverified or if the shop doesn't have a Shopify Payments account. */
    identityVerified: Scalars['Boolean']
    /** Whether Shopify has pre-verified the merchant's business for onboarding to channel integration apps. Returns `false` if the shop is not marked for verification. */
    verifiedByShopify: Scalars['Boolean']
    /** Which tier of the Shopify verification was determined for the merchant's business for onboarding to channel integration apps. */
    verifiedByShopifyTier: Scalars['String']
    __typename: 'MerchantApprovalSignals'
}


/**
 * Metafields enable you to attach additional information to a Shopify resource, such as a [Product](https://shopify.dev/api/admin-graphql/latest/objects/product) or a [Collection](https://shopify.dev/api/admin-graphql/latest/objects/collection).
 * For more information about where you can attach metafields refer to [HasMetafields](https://shopify.dev/api/admin/graphql/reference/common-objects/HasMetafields).
 * Some examples of the data that metafields enable you to store are specifications, size charts, downloadable documents, release dates, images, or part numbers.
 * Metafields are identified by an owner resource, namespace, and key. and store a value along with type information for that value.
 * 
 */
export interface Metafield {
    /** The date and time when the metafield was created. */
    createdAt: Scalars['DateTime']
    /** The metafield definition that the metafield belongs to, if any. */
    definition?: MetafieldDefinition
    /** The description of the metafield. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The unique identifier for the metafield within its namespace. */
    key: Scalars['String']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /**
     * The container for a group of metafields that the metafield is associated with.
     * 
     */
    namespace: Scalars['String']
    /** The resource that the metafield is attached to. */
    owner: HasMetafields
    /**
     * The type of resource that the metafield is attached to.
     * 
     */
    ownerType: MetafieldOwnerType
    /** Returns a reference object if the metafield definition's type is a resource reference. */
    reference?: MetafieldReference
    /** A list of reference objects if the metafield's type is a resource reference list. */
    references?: MetafieldReferenceConnection
    /**
     * The type of data that is stored in the metafield.
     * Refer to the list of [supported types](https://shopify.dev/apps/metafields/types).
     * 
     */
    type: Scalars['String']
    /** The date and time when the metafield was updated. */
    updatedAt: Scalars['DateTime']
    /**
     * The data stored in the metafield. Always stored as a string, regardless of the metafield's type.
     * 
     */
    value: Scalars['String']
    __typename: 'Metafield'
}


/** The access settings for this metafield definition. */
export interface MetafieldAccess {
    /** The admin access setting used for the metafields under this definition. */
    admin?: MetafieldAdminAccess
    __typename: 'MetafieldAccess'
}


/** Possible admin access settings for metafields. */
export type MetafieldAdminAccess = 'PRIVATE' | 'PUBLIC_READ' | 'MERCHANT_READ' | 'MERCHANT_READ_WRITE'


/**
 * An auto-generated type for paginating through multiple Metafields.
 * 
 */
export interface MetafieldConnection {
    /** A list of edges. */
    edges: MetafieldEdge[]
    /** A list of the nodes contained in MetafieldEdge. */
    nodes: Metafield[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetafieldConnection'
}


/**
 * Metafield definitions enable you to define additional validation constraints for metafields, and enable the
 * merchant to edit metafield values in context.
 * 
 */
export interface MetafieldDefinition {
    /** The access settings associated with the metafield definition. */
    access: MetafieldAccess
    /** The description of the metafield definition. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The unique identifier for the metafield definition within its namespace. */
    key: Scalars['String']
    /** The metafields that belong to the metafield definition. */
    metafields: MetafieldConnection
    /** The count of the metafields that belong to the metafield definition. */
    metafieldsCount: Scalars['Int']
    /** The human-readable name of the metafield definition. */
    name: Scalars['String']
    /** The container for a group of metafields that the metafield definition is associated with. */
    namespace: Scalars['String']
    /** The resource type that the metafield definition is attached to. */
    ownerType: MetafieldOwnerType
    /** The position of the metafield definition in the pinned list. */
    pinnedPosition?: Scalars['Int']
    /** The standard metafield definition template associated with the metafield definition. */
    standardTemplate?: StandardMetafieldDefinitionTemplate
    /**
     * The type of data that each of the metafields that belong to the metafield definition will store.
     * Refer to the list of [supported types](https://shopify.dev/apps/metafields/types).
     * 
     */
    type: MetafieldDefinitionType
    /** Whether the metafield definition can be used as a collection condition. */
    useAsCollectionCondition: Scalars['Boolean']
    /** The validation status for the metafields that belong to the metafield definition. */
    validationStatus: MetafieldDefinitionValidationStatus
    /**
     * A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
     * the metafields that belong to the metafield definition. For example, for a metafield definition with the
     * type `date`, you can set a minimum date validation so that each of the metafields that belong to it can only
     * store dates after the specified minimum.
     * 
     */
    validations: MetafieldDefinitionValidation[]
    /**
     * Whether each of the metafields that belong to the metafield definition are visible from the Storefront API.
     * 
     */
    visibleToStorefrontApi: Scalars['Boolean']
    __typename: 'MetafieldDefinition'
}


/**
 * An auto-generated type for paginating through multiple MetafieldDefinitions.
 * 
 */
export interface MetafieldDefinitionConnection {
    /** A list of edges. */
    edges: MetafieldDefinitionEdge[]
    /** A list of the nodes contained in MetafieldDefinitionEdge. */
    nodes: MetafieldDefinition[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetafieldDefinitionConnection'
}


/** Return type for `metafieldDefinitionCreate` mutation. */
export interface MetafieldDefinitionCreatePayload {
    /** The metafield definition that was created. */
    createdDefinition?: MetafieldDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetafieldDefinitionCreateUserError[]
    __typename: 'MetafieldDefinitionCreatePayload'
}


/** An error that occurs during the execution of `MetafieldDefinitionCreate`. */
export interface MetafieldDefinitionCreateUserError {
    /** The error code. */
    code?: MetafieldDefinitionCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetafieldDefinitionCreateUserError'
}


/** Possible error codes that can be returned by `MetafieldDefinitionCreateUserError`. */
export type MetafieldDefinitionCreateUserErrorCode = 'INVALID' | 'INCLUSION' | 'PRESENT' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'RESOURCE_TYPE_LIMIT_EXCEEDED' | 'LIMIT_EXCEEDED' | 'INVALID_OPTION' | 'DUPLICATE_OPTION' | 'RESERVED_NAMESPACE_KEY' | 'PINNED_LIMIT_REACHED' | 'UNSTRUCTURED_ALREADY_EXISTS' | 'INVALID_CHARACTER' | 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' | 'OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS'


/** Return type for `metafieldDefinitionDelete` mutation. */
export interface MetafieldDefinitionDeletePayload {
    /** The ID of the deleted metafield definition. */
    deletedDefinitionId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetafieldDefinitionDeleteUserError[]
    __typename: 'MetafieldDefinitionDeletePayload'
}


/** An error that occurs during the execution of `MetafieldDefinitionDelete`. */
export interface MetafieldDefinitionDeleteUserError {
    /** The error code. */
    code?: MetafieldDefinitionDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetafieldDefinitionDeleteUserError'
}


/** Possible error codes that can be returned by `MetafieldDefinitionDeleteUserError`. */
export type MetafieldDefinitionDeleteUserErrorCode = 'PRESENT' | 'NOT_FOUND' | 'INTERNAL_ERROR' | 'REFERENCE_TYPE_DELETION_ERROR' | 'METAFIELD_DEFINITION_IN_USE' | 'DISALLOWED_OWNER_TYPE'


/**
 * An auto-generated type which holds one MetafieldDefinition and a cursor during pagination.
 * 
 */
export interface MetafieldDefinitionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetafieldDefinitionEdge. */
    node: MetafieldDefinition
    __typename: 'MetafieldDefinitionEdge'
}


/** Return type for `metafieldDefinitionPin` mutation. */
export interface MetafieldDefinitionPinPayload {
    /** The metafield definition that was pinned. */
    pinnedDefinition?: MetafieldDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetafieldDefinitionPinUserError[]
    __typename: 'MetafieldDefinitionPinPayload'
}


/** An error that occurs during the execution of `MetafieldDefinitionPin`. */
export interface MetafieldDefinitionPinUserError {
    /** The error code. */
    code?: MetafieldDefinitionPinUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetafieldDefinitionPinUserError'
}


/** Possible error codes that can be returned by `MetafieldDefinitionPinUserError`. */
export type MetafieldDefinitionPinUserErrorCode = 'NOT_FOUND' | 'PINNED_LIMIT_REACHED' | 'ALREADY_PINNED' | 'INTERNAL_ERROR' | 'DISALLOWED_OWNER_TYPE'


/** Possible metafield definition pinned statuses. */
export type MetafieldDefinitionPinnedStatus = 'ANY' | 'PINNED' | 'UNPINNED'


/** The set of valid sort keys for the MetafieldDefinition query. */
export type MetafieldDefinitionSortKeys = 'ID' | 'NAME' | 'PINNED_POSITION' | 'RELEVANCE'


/**
 * The type and name for the optional validation configuration of a metafield.
 * 
 * For example, a supported validation might consist of a `max` name and a `number_integer` type.
 * This validation can then be used to enforce a maximum character length for a `single_line_text_field` metafield.
 * 
 */
export interface MetafieldDefinitionSupportedValidation {
    /** The name of the metafield definition validation. */
    name: Scalars['String']
    /** The type of input for the validation. */
    type: Scalars['String']
    __typename: 'MetafieldDefinitionSupportedValidation'
}


/**
 * A metafield definition type provides basic foundation and validation for a metafield.
 * 
 */
export interface MetafieldDefinitionType {
    /** The category associated with the metafield definition type. */
    category: Scalars['String']
    /**
     * The name of the type for the metafield definition.
     * See the list of [supported types](https://shopify.dev/apps/metafields/types).
     * 
     */
    name: Scalars['String']
    /** The supported validations for a metafield definition type. */
    supportedValidations: MetafieldDefinitionSupportedValidation[]
    /** Whether metafields without a definition can be migrated to a definition of this type. */
    supportsDefinitionMigrations: Scalars['Boolean']
    /**
     * @deprecated `valueType` is deprecated and `name` should be used for type information.
     * The value type for a metafield created with this definition type.
     */
    valueType: MetafieldValueType
    __typename: 'MetafieldDefinitionType'
}


/** Return type for `metafieldDefinitionUnpin` mutation. */
export interface MetafieldDefinitionUnpinPayload {
    /** The metafield definition that was unpinned. */
    unpinnedDefinition?: MetafieldDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetafieldDefinitionUnpinUserError[]
    __typename: 'MetafieldDefinitionUnpinPayload'
}


/** An error that occurs during the execution of `MetafieldDefinitionUnpin`. */
export interface MetafieldDefinitionUnpinUserError {
    /** The error code. */
    code?: MetafieldDefinitionUnpinUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetafieldDefinitionUnpinUserError'
}


/** Possible error codes that can be returned by `MetafieldDefinitionUnpinUserError`. */
export type MetafieldDefinitionUnpinUserErrorCode = 'NOT_FOUND' | 'NOT_PINNED' | 'INTERNAL_ERROR' | 'DISALLOWED_OWNER_TYPE'


/** Return type for `metafieldDefinitionUpdate` mutation. */
export interface MetafieldDefinitionUpdatePayload {
    /** The metafield definition that was updated. */
    updatedDefinition?: MetafieldDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetafieldDefinitionUpdateUserError[]
    /** The asynchronous job updating the metafield definition's validation_status. */
    validationJob?: Job
    __typename: 'MetafieldDefinitionUpdatePayload'
}


/** An error that occurs during the execution of `MetafieldDefinitionUpdate`. */
export interface MetafieldDefinitionUpdateUserError {
    /** The error code. */
    code?: MetafieldDefinitionUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetafieldDefinitionUpdateUserError'
}


/** Possible error codes that can be returned by `MetafieldDefinitionUpdateUserError`. */
export type MetafieldDefinitionUpdateUserErrorCode = 'PRESENT' | 'TOO_LONG' | 'NOT_FOUND' | 'INVALID_INPUT' | 'PINNED_LIMIT_REACHED' | 'INTERNAL_ERROR' | 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' | 'METAFIELD_DEFINITION_IN_USE' | 'OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS'


/**
 * A configured metafield definition validation.
 * 
 * For example, for a metafield definition of `number_integer` type, you can set a validation with the name `max`
 * and a value of `15`. This validation will ensure that the value of the metafield is a number less than or equal to 15.
 * 
 * Refer to the [list of supported validations](https://shopify.dev/api/admin/graphql/reference/common-objects/metafieldDefinitionTypes#examples-Fetch_all_metafield_definition_types).
 * 
 */
export interface MetafieldDefinitionValidation {
    /** The validation name. */
    name: Scalars['String']
    /** The name for the metafield type of this validation. */
    type: Scalars['String']
    /** The validation value. */
    value?: Scalars['String']
    __typename: 'MetafieldDefinitionValidation'
}


/** Possible metafield definition validation statuses. */
export type MetafieldDefinitionValidationStatus = 'ALL_VALID' | 'IN_PROGRESS' | 'SOME_INVALID'


/** Return type for `metafieldDelete` mutation. */
export interface MetafieldDeletePayload {
    /** The ID of the deleted metafield. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'MetafieldDeletePayload'
}


/**
 * An auto-generated type which holds one Metafield and a cursor during pagination.
 * 
 */
export interface MetafieldEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetafieldEdge. */
    node: Metafield
    __typename: 'MetafieldEdge'
}


/** Possible types of a metafield's owner resource. */
export type MetafieldOwnerType = 'API_PERMISSION' | 'COMPANY' | 'COMPANY_LOCATION' | 'PAYMENT_CUSTOMIZATION' | 'CUSTOMER' | 'DELIVERY_CUSTOMIZATION' | 'DRAFTORDER' | 'MARKET' | 'COLLECTION' | 'MEDIA_IMAGE' | 'PRODUCTIMAGE' | 'PRODUCT' | 'PRODUCTVARIANT' | 'ARTICLE' | 'BLOG' | 'PAGE' | 'DISCOUNT' | 'ORDER' | 'LOCATION' | 'SHOP'


/**
 * The resource referenced by the metafield value.
 * 
 */
export type MetafieldReference = (Collection | GenericFile | MediaImage | Metaobject | OnlineStorePage | Product | ProductVariant | Video) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple MetafieldReferences.
 * 
 */
export interface MetafieldReferenceConnection {
    /** A list of edges. */
    edges: MetafieldReferenceEdge[]
    /** A list of the nodes contained in MetafieldReferenceEdge. */
    nodes: (MetafieldReference | undefined)[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetafieldReferenceConnection'
}


/**
 * An auto-generated type which holds one MetafieldReference and a cursor during pagination.
 * 
 */
export interface MetafieldReferenceEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetafieldReferenceEdge. */
    node?: MetafieldReference
    __typename: 'MetafieldReferenceEdge'
}


/**
 * Types of resources that may use metafields to reference other resources.
 * 
 */
export type MetafieldReferencer = (AppInstallation | Collection | Customer | DeliveryCustomization | DiscountAutomaticNode | DiscountCodeNode | DiscountNode | DraftOrder | FulfillmentOrder | Location | Market | Metaobject | OnlineStoreArticle | OnlineStoreBlog | OnlineStorePage | Order | PaymentCustomization | Product | ProductVariant | Shop) & { __isUnion?: true }


/**
 * Defines a relation between two resources via a reference metafield.
 * The referencer owns the joining field with a given namespace and key,
 * while the target is referenced by the field.
 * 
 */
export interface MetafieldRelation {
    /** The key of the field making the reference. */
    key: Scalars['String']
    /** The name of the field making the reference. */
    name: Scalars['String']
    /** The namespace of the metafield making the reference, or type of the metaobject. */
    namespace: Scalars['String']
    /** The resource making the reference. */
    referencer: MetafieldReferencer
    /** The referenced resource. */
    target: MetafieldReference
    __typename: 'MetafieldRelation'
}


/**
 * An auto-generated type for paginating through multiple MetafieldRelations.
 * 
 */
export interface MetafieldRelationConnection {
    /** A list of edges. */
    edges: MetafieldRelationEdge[]
    /** A list of the nodes contained in MetafieldRelationEdge. */
    nodes: MetafieldRelation[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetafieldRelationConnection'
}


/**
 * An auto-generated type which holds one MetafieldRelation and a cursor during pagination.
 * 
 */
export interface MetafieldRelationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetafieldRelationEdge. */
    node: MetafieldRelation
    __typename: 'MetafieldRelationEdge'
}


/**
 * By default, the Storefront API can't read metafields. To make specific metafields visible in the Storefront API,
 * you need to create a `MetafieldStorefrontVisibility` record. A `MetafieldStorefrontVisibility` record is a list
 * of the metafields, defined by the `owner_type`, `namespace`, and `key`, to make visible in the Storefront API.
 * 
 * Learn about [exposing metafields in the Storefront API]
 * (https://shopify.dev/custom-storefronts/products-collections/metafields)
 * for more details.
 * 
 */
export interface MetafieldStorefrontVisibility {
    /** The date and time when the metafield was set to visible in the Storefront API. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The key of a metafield to make visible in the Storefront API. */
    key: Scalars['String']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The namespace of a metafield to make visible in the Storefront API. */
    namespace: Scalars['String']
    /** The owner type of a metafield to make visible in the Storefront API. */
    ownerType: MetafieldOwnerType
    /**
     * The date and time when the `MetafieldStorefrontVisilibty` record was updated.
     * 
     */
    updatedAt: Scalars['DateTime']
    __typename: 'MetafieldStorefrontVisibility'
}


/**
 * An auto-generated type for paginating through multiple MetafieldStorefrontVisibilities.
 * 
 */
export interface MetafieldStorefrontVisibilityConnection {
    /** A list of edges. */
    edges: MetafieldStorefrontVisibilityEdge[]
    /** A list of the nodes contained in MetafieldStorefrontVisibilityEdge. */
    nodes: MetafieldStorefrontVisibility[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetafieldStorefrontVisibilityConnection'
}


/** Return type for `metafieldStorefrontVisibilityCreate` mutation. */
export interface MetafieldStorefrontVisibilityCreatePayload {
    /** The `MetafieldStorefrontVisibility` that was created. */
    metafieldStorefrontVisibility?: MetafieldStorefrontVisibility
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'MetafieldStorefrontVisibilityCreatePayload'
}


/** Return type for `metafieldStorefrontVisibilityDelete` mutation. */
export interface MetafieldStorefrontVisibilityDeletePayload {
    /** The ID of the deleted `MetafieldStorefrontVisibility` record. */
    deletedMetafieldStorefrontVisibilityId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'MetafieldStorefrontVisibilityDeletePayload'
}


/**
 * An auto-generated type which holds one MetafieldStorefrontVisibility and a cursor during pagination.
 * 
 */
export interface MetafieldStorefrontVisibilityEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetafieldStorefrontVisibilityEdge. */
    node: MetafieldStorefrontVisibility
    __typename: 'MetafieldStorefrontVisibilityEdge'
}


/** Possible metafield validation statuses. */
export type MetafieldValidationStatus = 'ANY' | 'VALID' | 'INVALID'


/**
 * Legacy type information for the stored value.
 * Replaced by `type`.
 * 
 */
export type MetafieldValueType = 'STRING' | 'INTEGER' | 'JSON_STRING' | 'BOOLEAN'


/** Return type for `metafieldsSet` mutation. */
export interface MetafieldsSetPayload {
    /** The list of metafields that were set. */
    metafields?: Metafield[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetafieldsSetUserError[]
    __typename: 'MetafieldsSetPayload'
}


/** An error that occurs during the execution of `MetafieldsSet`. */
export interface MetafieldsSetUserError {
    /** The error code. */
    code?: MetafieldsSetUserErrorCode
    /** The index of the array element that's causing the error. */
    elementIndex?: Scalars['Int']
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetafieldsSetUserError'
}


/** Possible error codes that can be returned by `MetafieldsSetUserError`. */
export type MetafieldsSetUserErrorCode = 'BLANK' | 'INCLUSION' | 'LESS_THAN_OR_EQUAL_TO' | 'PRESENT' | 'TOO_SHORT' | 'TOO_LONG' | 'INVALID_VALUE' | 'INVALID_TYPE' | 'APP_NOT_AUTHORIZED'


/** Provides an object instance represented by a MetaobjectDefinition. */
export interface Metaobject {
    /** Metaobject capabilities for this Metaobject. */
    capabilities: MetaobjectCapabilityData
    /** The app used to create the object. */
    createdBy: App
    /** The MetaobjectDefinition that models this object type. */
    definition: MetaobjectDefinition
    /** The preferred display name field value of the metaobject. */
    displayName: Scalars['String']
    /** The field for an object key, or null if the key has no field definition. */
    field?: MetaobjectField
    /** All ordered fields of the metaobject with their definitions and values. */
    fields: MetaobjectField[]
    /** The unique handle of the object, useful as a custom ID. */
    handle: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** List of back references metafields that belong to the resource. */
    referencedBy: MetafieldRelationConnection
    /** The staff member who created the metaobject. */
    staffMember?: StaffMember
    /** The type of the metaobject. */
    type: Scalars['String']
    /** When the object was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'Metaobject'
}


/** Provides metaobject definition's access configuration. */
export interface MetaobjectAccess {
    /**
     * Access configuration for Admin API surface areas, including the GraphQL Admin API.
     * 
     */
    admin: MetaobjectAdminAccess
    /**
     * Access configuration for Storefront surface areas, including the GraphQL Storefront API and Liquid.
     * 
     */
    storefront: MetaobjectStorefrontAccess
    __typename: 'MetaobjectAccess'
}


/** Defines how the metaobjects of a definition can be accessed in admin API surface areas. */
export type MetaobjectAdminAccess = 'PRIVATE' | 'MERCHANT_READ' | 'MERCHANT_READ_WRITE' | 'PUBLIC_READ' | 'PUBLIC_READ_WRITE'


/** Return type for `metaobjectBulkDelete` mutation. */
export interface MetaobjectBulkDeletePayload {
    /** The asynchronous job that deletes the metaobjects. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectBulkDeletePayload'
}


/** Provides the capabilities of a metaobject definition. */
export interface MetaobjectCapabilities {
    /** Indicate whether a metaobject definition is publishable. */
    publishable: MetaobjectCapabilitiesPublishable
    /** Indicate whether a metaobject definition is translatable. */
    translatable: MetaobjectCapabilitiesTranslatable
    __typename: 'MetaobjectCapabilities'
}


/** The publishable capability of a metaobject definition. */
export interface MetaobjectCapabilitiesPublishable {
    /** Indicates if the capability is enabled. */
    enabled: Scalars['Boolean']
    __typename: 'MetaobjectCapabilitiesPublishable'
}


/** The translatable capability of a metaobject definition. */
export interface MetaobjectCapabilitiesTranslatable {
    /** Indicates if the capability is enabled. */
    enabled: Scalars['Boolean']
    __typename: 'MetaobjectCapabilitiesTranslatable'
}


/** Provides the capabilities of a metaobject. */
export interface MetaobjectCapabilityData {
    /** The publishable capability for this metaobject. */
    publishable?: MetaobjectCapabilityDataPublishable
    __typename: 'MetaobjectCapabilityData'
}


/** The publishable capability for the parent metaobject. */
export interface MetaobjectCapabilityDataPublishable {
    /** The visibility status of this metaobject across all channels. */
    status: MetaobjectStatus
    __typename: 'MetaobjectCapabilityDataPublishable'
}


/**
 * An auto-generated type for paginating through multiple Metaobjects.
 * 
 */
export interface MetaobjectConnection {
    /** A list of edges. */
    edges: MetaobjectEdge[]
    /** A list of the nodes contained in MetaobjectEdge. */
    nodes: Metaobject[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetaobjectConnection'
}


/** Return type for `metaobjectCreate` mutation. */
export interface MetaobjectCreatePayload {
    /** The created metaobject. */
    metaobject?: Metaobject
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectCreatePayload'
}


/** Provides the definition of a generic object structure composed of metafields. */
export interface MetaobjectDefinition {
    /** Access configuration for the metaobject definition. */
    access: MetaobjectAccess
    /** The capabilities of the metaobject definition. */
    capabilities: MetaobjectCapabilities
    /** The administrative description. */
    description?: Scalars['String']
    /** The key of a field to reference as the display name for each object. */
    displayNameKey?: Scalars['String']
    /** The fields defined for this object type. */
    fieldDefinitions: MetaobjectFieldDefinition[]
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** A paginated connection to the metaobjects associated with the definition. */
    metaobjects: MetaobjectConnection
    /** The count of metaobjects created for the definition. */
    metaobjectsCount: Scalars['Int']
    /** The human-readable name. */
    name: Scalars['String']
    /** The type of the object definition. Defines the namespace of associated metafields. */
    type: Scalars['String']
    __typename: 'MetaobjectDefinition'
}


/**
 * An auto-generated type for paginating through multiple MetaobjectDefinitions.
 * 
 */
export interface MetaobjectDefinitionConnection {
    /** A list of edges. */
    edges: MetaobjectDefinitionEdge[]
    /** A list of the nodes contained in MetaobjectDefinitionEdge. */
    nodes: MetaobjectDefinition[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'MetaobjectDefinitionConnection'
}


/** Return type for `metaobjectDefinitionCreate` mutation. */
export interface MetaobjectDefinitionCreatePayload {
    /** The created metaobject definition. */
    metaobjectDefinition?: MetaobjectDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectDefinitionCreatePayload'
}


/** Return type for `metaobjectDefinitionDelete` mutation. */
export interface MetaobjectDefinitionDeletePayload {
    /** The ID of the deleted metaobjects definition. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectDefinitionDeletePayload'
}


/**
 * An auto-generated type which holds one MetaobjectDefinition and a cursor during pagination.
 * 
 */
export interface MetaobjectDefinitionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetaobjectDefinitionEdge. */
    node: MetaobjectDefinition
    __typename: 'MetaobjectDefinitionEdge'
}


/** Return type for `metaobjectDefinitionUpdate` mutation. */
export interface MetaobjectDefinitionUpdatePayload {
    /** The updated metaobject definition. */
    metaobjectDefinition?: MetaobjectDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectDefinitionUpdatePayload'
}


/** Return type for `metaobjectDelete` mutation. */
export interface MetaobjectDeletePayload {
    /** The ID of the deleted metaobject. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectDeletePayload'
}


/**
 * An auto-generated type which holds one Metaobject and a cursor during pagination.
 * 
 */
export interface MetaobjectEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of MetaobjectEdge. */
    node: Metaobject
    __typename: 'MetaobjectEdge'
}


/** Provides a field definition and the data value assigned to it. */
export interface MetaobjectField {
    /** The field definition for this object key. */
    definition: MetaobjectFieldDefinition
    /** The object key of this field. */
    key: Scalars['String']
    /** For resource reference fields, provides the referenced object. */
    reference?: MetafieldReference
    /** For resource reference list fields, provides the list of referenced objects. */
    references?: MetafieldReferenceConnection
    /** The type of the field. */
    type: Scalars['String']
    /** The assigned field value, always stored as a string regardless of the field type. */
    value?: Scalars['String']
    __typename: 'MetaobjectField'
}


/**
 * Defines a field for a MetaobjectDefinition with properties
 * such as the field's data type and validations.
 * 
 */
export interface MetaobjectFieldDefinition {
    /** The administrative description. */
    description?: Scalars['String']
    /** A key name used to identify the field within the metaobject composition. */
    key: Scalars['String']
    /** The human-readable name. */
    name: Scalars['String']
    /** Required status of the field within the metaobject composition. */
    required: Scalars['Boolean']
    /** The type of data that the field stores. */
    type: MetafieldDefinitionType
    /**
     * A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
     * the field. For example, a field with the type `date` can set a minimum date requirement.
     * 
     */
    validations: MetafieldDefinitionValidation[]
    __typename: 'MetaobjectFieldDefinition'
}


/** Defines visibility status for metaobjects. */
export type MetaobjectStatus = 'DRAFT' | 'ACTIVE'


/**
 * Defines how the metaobjects of a definition can be accessed in Storefront API surface areas, including Liquid and the GraphQL Storefront API.
 * 
 */
export type MetaobjectStorefrontAccess = 'NONE' | 'PUBLIC_READ'


/** Return type for `metaobjectUpdate` mutation. */
export interface MetaobjectUpdatePayload {
    /** The updated metaobject. */
    metaobject?: Metaobject
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectUpdatePayload'
}


/** Return type for `metaobjectUpsert` mutation. */
export interface MetaobjectUpsertPayload {
    /** The created or updated metaobject. */
    metaobject?: Metaobject
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'MetaobjectUpsertPayload'
}


/** Defines errors encountered while managing metaobject resources. */
export interface MetaobjectUserError {
    /** The error code. */
    code?: MetaobjectUserErrorCode
    /** The index of the failing list element in an array. */
    elementIndex?: Scalars['Int']
    /** The key of the failing object element. */
    elementKey?: Scalars['String']
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'MetaobjectUserError'
}


/** Possible error codes that can be returned by `MetaobjectUserError`. */
export type MetaobjectUserErrorCode = 'INVALID' | 'INCLUSION' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'PRESENT' | 'BLANK' | 'INVALID_TYPE' | 'INVALID_VALUE' | 'INVALID_OPTION' | 'DUPLICATE_FIELD_INPUT' | 'UNDEFINED_OBJECT_TYPE' | 'UNDEFINED_OBJECT_FIELD' | 'OBJECT_FIELD_TAKEN' | 'OBJECT_FIELD_REQUIRED' | 'RECORD_NOT_FOUND' | 'INTERNAL_ERROR' | 'MAX_DEFINITIONS_EXCEEDED' | 'MAX_OBJECTS_EXCEEDED' | 'IMMUTABLE' | 'NOT_AUTHORIZED' | 'RESERVED_NAME' | 'CAPABILITY_NOT_ENABLED'


/** The set of valid sort keys for the MethodDefinition query. */
export type MethodDefinitionSortKeys = 'RATE_PROVIDER_TYPE' | 'ID' | 'RELEVANCE'


/**
 * Represents a Shopify hosted 3D model.
 * 
 */
export interface Model3d {
    /** A word or phrase to share the nature or contents of a media. */
    alt?: Scalars['String']
    /** The 3d model's bounding box information. */
    boundingBox?: Model3dBoundingBox
    /** The 3d model's filename. */
    filename: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The media content type. */
    mediaContentType: MediaContentType
    /** Any errors which have occurred on the media. */
    mediaErrors: MediaError[]
    /** The warnings attached to the media. */
    mediaWarnings: MediaWarning[]
    /** The 3d model's original source. */
    originalSource?: Model3dSource
    /** The preview image for the media. */
    preview?: MediaPreviewImage
    /** The 3d model's sources. */
    sources: Model3dSource[]
    /** Current status of the media. */
    status: MediaStatus
    __typename: 'Model3d'
}


/**
 * Bounding box information of a 3d model.
 * 
 */
export interface Model3dBoundingBox {
    /**
     * Size in meters of the smallest volume which contains the 3d model.
     * 
     */
    size: Vector3
    __typename: 'Model3dBoundingBox'
}


/**
 * A source for a Shopify-hosted 3d model.
 * 
 * Types of sources include GLB and USDZ formatted 3d models, where the former
 * is an original 3d model and the latter has been converted from the original.
 * 
 * If the original source is in GLB format and over 15 MBs in size, then both the
 * original and the USDZ formatted source are optimized to reduce the file size.
 * 
 */
export interface Model3dSource {
    /** The 3d model source's filesize. */
    filesize: Scalars['Int']
    /** The 3d model source's format. */
    format: Scalars['String']
    /** The 3d model source's MIME type. */
    mimeType: Scalars['String']
    /** The 3d model source's URL. */
    url: Scalars['String']
    __typename: 'Model3dSource'
}


/**
 * A collection of monetary values in their respective currencies. Typically used in the context of multi-currency pricing and transactions,
 * when an amount in the shop's currency is converted to the customer's currency of choice (the presentment currency).
 * 
 */
export interface MoneyBag {
    /** Amount in presentment currency. */
    presentmentMoney: MoneyV2
    /** Amount in shop currency. */
    shopMoney: MoneyV2
    __typename: 'MoneyBag'
}


/**
 * A monetary value with currency.
 * 
 */
export interface MoneyV2 {
    /** Decimal money amount. */
    amount: Scalars['Decimal']
    /** Currency of the money. */
    currencyCode: CurrencyCode
    __typename: 'MoneyV2'
}


/** The schema's entry point for all mutation operations. */
export interface Mutation {
    /**
     * @deprecated Use `abandonmentUpdateActivitiesDeliveryStatuses` instead.
     * Updates the email state value for an abandonment.
     */
    abandonmentEmailStateUpdate?: AbandonmentEmailStateUpdatePayload
    /** Updates the marketing activities delivery statuses for an abandonment. */
    abandonmentUpdateActivitiesDeliveryStatuses?: AbandonmentUpdateActivitiesDeliveryStatusesPayload
    /**
     * Charges a shop for features or services one time.
     * This type of charge is recommended for apps that aren't billed on a recurring basis.
     * Test and demo shops aren't charged.
     * 
     */
    appPurchaseOneTimeCreate?: AppPurchaseOneTimeCreatePayload
    /**
     * @deprecated This mutation will be removed in a future version.
     * Creates a record of the attributed revenue for the app. This mutation should only be used to capture transactions that are not managed by the Billing API.
     */
    appRevenueAttributionRecordCreate?: AppRevenueAttributionRecordCreatePayload
    /**
     * @deprecated This mutation will be removed in a future version.
     * Deletes a record of the attributed revenue for the app.
     */
    appRevenueAttributionRecordDelete?: AppRevenueAttributionRecordDeletePayload
    /** Cancels an app subscription on a store. */
    appSubscriptionCancel?: AppSubscriptionCancelPayload
    /** Allows an app to charge a store for features or services on a recurring basis. */
    appSubscriptionCreate?: AppSubscriptionCreatePayload
    /** Updates the capped amount on the usage pricing plan of an app subscription line item. */
    appSubscriptionLineItemUpdate?: AppSubscriptionLineItemUpdatePayload
    /** Extends the trial of an app subscription. */
    appSubscriptionTrialExtend?: AppSubscriptionTrialExtendPayload
    /**
     * Enables an app to charge a store for features or services on a per-use basis.
     * The usage charge value is counted towards the `cappedAmount` limit that was specified in the `appUsagePricingDetails` field when the app subscription was created.
     * If you create an app usage charge that causes the total usage charges in a billing interval to exceed the capped amount, then a `Total price exceeds balance remaining` error is returned.
     * 
     */
    appUsageRecordCreate?: AppUsageRecordCreatePayload
    /**
     * Starts the cancelation process of a running bulk operation.
     * 
     * There may be a short delay from when a cancelation starts until the operation is actually canceled.
     * 
     */
    bulkOperationCancel?: BulkOperationCancelPayload
    /**
     * Creates and runs a bulk operation mutation.
     * 
     * To learn how to bulk import large volumes of data asynchronously, refer to the
     * [bulk import data guide](https://shopify.dev/api/usage/bulk-operations/imports).
     * 
     */
    bulkOperationRunMutation?: BulkOperationRunMutationPayload
    /**
     * Creates and runs a bulk operation query.
     * 
     * See the [bulk operations guide](https://shopify.dev/api/usage/bulk-operations/imports) for more details.
     * 
     */
    bulkOperationRunQuery?: BulkOperationRunQueryPayload
    /** Creates product feedback for multiple products. */
    bulkProductResourceFeedbackCreate?: BulkProductResourceFeedbackCreatePayload
    /** Create a CartTransform function to the Shop. */
    cartTransformCreate?: CartTransformCreatePayload
    /** Destroy a cart transform function from the Shop. */
    cartTransformDelete?: CartTransformDeletePayload
    /** Updates the context of a catalog. */
    catalogContextUpdate?: CatalogContextUpdatePayload
    /** Creates a new catalog. */
    catalogCreate?: CatalogCreatePayload
    /** Delete a catalog. */
    catalogDelete?: CatalogDeletePayload
    /** Updates an existing catalog. */
    catalogUpdate?: CatalogUpdatePayload
    /** Adds products to a collection. */
    collectionAddProducts?: CollectionAddProductsPayload
    /** Asynchronously adds a set of products to a given collection. It can take a long time to run. Instead of returning a collection, it returns a job which should be polled. */
    collectionAddProductsV2?: CollectionAddProductsV2Payload
    /**
     * Creates a collection.
     * 
     */
    collectionCreate?: CollectionCreatePayload
    /** Deletes a collection. */
    collectionDelete?: CollectionDeletePayload
    /**
     * @deprecated Use `publishablePublish` instead.
     * Publishes a collection to a channel.
     */
    collectionPublish?: CollectionPublishPayload
    /** Removes a set of products from a given collection. The mutation can take a long time to run. Instead of returning an updated collection the mutation returns a job, which should be [polled](https://shopify.dev/api/admin-graphql/latest/queries/job). For use with manual collections only. */
    collectionRemoveProducts?: CollectionRemoveProductsPayload
    /** Asynchronously reorders a set of products within a specified collection. Instead of returning an updated collection, this mutation returns a job, which should be [polled](https://shopify.dev/api/admin-graphql/latest/queries/job). The [`Collection.sortOrder`](https://shopify.dev/api/admin-graphql/latest/objects/Collection#field-collection-sortorder) must be `MANUAL`. Displaced products will have their position altered in a consistent manner, with no gaps. */
    collectionReorderProducts?: CollectionReorderProductsPayload
    /**
     * @deprecated Use `publishableUnpublish` instead.
     * Unpublishes a collection.
     */
    collectionUnpublish?: CollectionUnpublishPayload
    /** Updates a collection. */
    collectionUpdate?: CollectionUpdatePayload
    /** Deletes a list of companies. */
    companiesDelete?: CompaniesDeletePayload
    /** Deletes a company address. */
    companyAddressDelete?: CompanyAddressDeletePayload
    /** Assigns the customer as a company contact. */
    companyAssignCustomerAsContact?: CompanyAssignCustomerAsContactPayload
    /** Assigns the main contact for the company. */
    companyAssignMainContact?: CompanyAssignMainContactPayload
    /** Assigns a role to a contact for a location. */
    companyContactAssignRole?: CompanyContactAssignRolePayload
    /** Assigns roles on a company contact. */
    companyContactAssignRoles?: CompanyContactAssignRolesPayload
    /** Creates a company contact. */
    companyContactCreate?: CompanyContactCreatePayload
    /** Deletes a company contact. */
    companyContactDelete?: CompanyContactDeletePayload
    /** Removes a company contact from a Company. */
    companyContactRemoveFromCompany?: CompanyContactRemoveFromCompanyPayload
    /** Revokes a role on a company contact. */
    companyContactRevokeRole?: CompanyContactRevokeRolePayload
    /** Revokes roles on a company contact. */
    companyContactRevokeRoles?: CompanyContactRevokeRolesPayload
    /** Sends the company contact a welcome email. */
    companyContactSendWelcomeEmail?: CompanyContactSendWelcomeEmailPayload
    /** Updates a company contact. */
    companyContactUpdate?: CompanyContactUpdatePayload
    /** Deletes one or more company contacts. */
    companyContactsDelete?: CompanyContactsDeletePayload
    /** Creates a company. */
    companyCreate?: CompanyCreatePayload
    /** Deletes a company. */
    companyDelete?: CompanyDeletePayload
    /** Updates an address on a company location. */
    companyLocationAssignAddress?: CompanyLocationAssignAddressPayload
    /** Assigns roles on a company location. */
    companyLocationAssignRoles?: CompanyLocationAssignRolesPayload
    /** Assigns tax exemptions to the company location. */
    companyLocationAssignTaxExemptions?: CompanyLocationAssignTaxExemptionsPayload
    /** Creates a company location. */
    companyLocationCreate?: CompanyLocationCreatePayload
    /** Creates a tax registration for a company location. */
    companyLocationCreateTaxRegistration?: CompanyLocationCreateTaxRegistrationPayload
    /** Deletes a company location. */
    companyLocationDelete?: CompanyLocationDeletePayload
    /** Revokes roles on a company location. */
    companyLocationRevokeRoles?: CompanyLocationRevokeRolesPayload
    /** Revokes tax exemptions from the company location. */
    companyLocationRevokeTaxExemptions?: CompanyLocationRevokeTaxExemptionsPayload
    /** Revokes tax registration on a company location. */
    companyLocationRevokeTaxRegistration?: CompanyLocationRevokeTaxRegistrationPayload
    /** Updates a company location. */
    companyLocationUpdate?: CompanyLocationUpdatePayload
    /** Deletes a list of company locations. */
    companyLocationsDelete?: CompanyLocationsDeletePayload
    /** Revokes the main contact from the company. */
    companyRevokeMainContact?: CompanyRevokeMainContactPayload
    /** Updates a company. */
    companyUpdate?: CompanyUpdatePayload
    /** Add tax exemptions for the customer. */
    customerAddTaxExemptions?: CustomerAddTaxExemptionsPayload
    /** Create a new customer. As of API version 2022-10, apps using protected customer data must meet the protected customer data [requirements](https://shopify.dev/apps/store/data-protection/protected-customer-data). */
    customerCreate?: CustomerCreatePayload
    /** Delete a customer. As of API version 2022-10, apps using protected customer data must meet the protected customer data [requirements](https://shopify.dev/apps/store/data-protection/protected-customer-data). */
    customerDelete?: CustomerDeletePayload
    /**
     * Update a customer's email marketing information information.
     * 
     */
    customerEmailMarketingConsentUpdate?: CustomerEmailMarketingConsentUpdatePayload
    /** Generate an account activation URL for a customer. */
    customerGenerateAccountActivationUrl?: CustomerGenerateAccountActivationUrlPayload
    /** Merges two customers. */
    customerMerge?: CustomerMergePayload
    /**
     * Creates a vaulted payment method for a customer from duplication data.
     * 
     * This data must be obtained from another shop within the same organization.
     * 
     * Currently, this only supports Shop Pay payment methods. This is only available for selected partner apps.
     * 
     */
    customerPaymentMethodCreateFromDuplicationData?: CustomerPaymentMethodCreateFromDuplicationDataPayload
    /** Creates a credit card payment method for a customer. */
    customerPaymentMethodCreditCardCreate?: CustomerPaymentMethodCreditCardCreatePayload
    /** Updates the credit card payment method for a customer. */
    customerPaymentMethodCreditCardUpdate?: CustomerPaymentMethodCreditCardUpdatePayload
    /**
     * Returns encrypted data that can be used to duplicate the payment method in another shop within the same organization.
     * 
     * Currently, this only supports Shop Pay payment methods. This is only available for selected partner apps.
     * 
     */
    customerPaymentMethodGetDuplicationData?: CustomerPaymentMethodGetDuplicationDataPayload
    /**
     * Returns a URL that allows the customer to update a specific payment method.
     * 
     * Currently, `customerPaymentMethodGetUpdateUrl` only supports Shop Pay.
     * 
     */
    customerPaymentMethodGetUpdateUrl?: CustomerPaymentMethodGetUpdateUrlPayload
    /** Creates a PayPal billing agreement for a customer. */
    customerPaymentMethodPaypalBillingAgreementCreate?: CustomerPaymentMethodPaypalBillingAgreementCreatePayload
    /** Updates a PayPal billing agreement for a customer. */
    customerPaymentMethodPaypalBillingAgreementUpdate?: CustomerPaymentMethodPaypalBillingAgreementUpdatePayload
    /** Create a payment method from remote gateway identifiers. */
    customerPaymentMethodRemoteCreate?: CustomerPaymentMethodRemoteCreatePayload
    /**
     * @deprecated Use `customerPaymentMethodRemoteCreate` instead.
     * Create a payment method from a credit card stored by Stripe.
     */
    customerPaymentMethodRemoteCreditCardCreate?: CustomerPaymentMethodRemoteCreditCardCreatePayload
    /** Revokes a customer's payment method. */
    customerPaymentMethodRevoke?: CustomerPaymentMethodRevokePayload
    /** Sends a link to the customer so they can update a specific payment method. */
    customerPaymentMethodSendUpdateEmail?: CustomerPaymentMethodSendUpdateEmailPayload
    /** Remove tax exemptions from a customer. */
    customerRemoveTaxExemptions?: CustomerRemoveTaxExemptionsPayload
    /** Replace tax exemptions for a customer. */
    customerReplaceTaxExemptions?: CustomerReplaceTaxExemptionsPayload
    /** Creates a customer segment members query. */
    customerSegmentMembersQueryCreate?: CustomerSegmentMembersQueryCreatePayload
    /**
     * Update a customer's SMS marketing consent information.
     * 
     */
    customerSmsMarketingConsentUpdate?: CustomerSmsMarketingConsentUpdatePayload
    /** Update a customer's attributes. As of API version 2022-10, apps using protected customer data must meet the protected customer data [requirements](https://shopify.dev/apps/store/data-protection/protected-customer-data). */
    customerUpdate?: CustomerUpdatePayload
    /** Updates a customer's default address. */
    customerUpdateDefaultAddress?: CustomerUpdateDefaultAddressPayload
    /**
     * Creates a delegate access token.
     * 
     * To learn more about creating delegate access tokens, refer to
     * [Delegate OAuth access tokens to subsystems]
     * (https://shopify.dev/apps/auth/oauth/delegate-access-tokens).
     * 
     */
    delegateAccessTokenCreate?: DelegateAccessTokenCreatePayload
    /** Destroys a delegate access token. */
    delegateAccessTokenDestroy?: DelegateAccessTokenDestroyPayload
    /** Activates and deactivates delivery customizations. */
    deliveryCustomizationActivation?: DeliveryCustomizationActivationPayload
    /** Creates a delivery customization. */
    deliveryCustomizationCreate?: DeliveryCustomizationCreatePayload
    /** Creates a delivery customization. */
    deliveryCustomizationDelete?: DeliveryCustomizationDeletePayload
    /** Updates a delivery customization. */
    deliveryCustomizationUpdate?: DeliveryCustomizationUpdatePayload
    /** Create a delivery profile. */
    deliveryProfileCreate?: deliveryProfileCreatePayload
    /** Enqueue the removal of a delivery profile. */
    deliveryProfileRemove?: deliveryProfileRemovePayload
    /** Update a delivery profile. */
    deliveryProfileUpdate?: deliveryProfileUpdatePayload
    /** Set the delivery settings for a shop. */
    deliverySettingUpdate?: DeliverySettingUpdatePayload
    /**
     * Assigns a location as the shipping origin while using legacy compatibility mode for multi-location delivery profiles.
     * 
     */
    deliveryShippingOriginAssign?: DeliveryShippingOriginAssignPayload
    /** Activates an automatic discount. */
    discountAutomaticActivate?: DiscountAutomaticActivatePayload
    /** Creates an app discount. */
    discountAutomaticAppCreate?: DiscountAutomaticAppCreatePayload
    /** Updates an automatic app discount. */
    discountAutomaticAppUpdate?: DiscountAutomaticAppUpdatePayload
    /** Creates a basic automatic discount. */
    discountAutomaticBasicCreate?: DiscountAutomaticBasicCreatePayload
    /** Updates a basic automatic discount. */
    discountAutomaticBasicUpdate?: DiscountAutomaticBasicUpdatePayload
    /**
     * Asynchronously delete automatic discounts in bulk if a `search` or `saved_search_id` argument is provided or if a
     * maximum discount threshold is reached (1,000). Otherwise, deletions will occur inline.
     * **Warning:** All automatic discounts will be deleted if a blank `search` argument is provided.
     * 
     */
    discountAutomaticBulkDelete?: DiscountAutomaticBulkDeletePayload
    /** Creates a BXGY automatic discount. */
    discountAutomaticBxgyCreate?: DiscountAutomaticBxgyCreatePayload
    /** Updates an existing Buy X, Get Y (BXGY) automatic discount. */
    discountAutomaticBxgyUpdate?: DiscountAutomaticBxgyUpdatePayload
    /** Deactivates an automatic discount. */
    discountAutomaticDeactivate?: DiscountAutomaticDeactivatePayload
    /** Deletes an automatic discount. */
    discountAutomaticDelete?: DiscountAutomaticDeletePayload
    /** Activates a code discount. */
    discountCodeActivate?: DiscountCodeActivatePayload
    /** Creates a code app discount. */
    discountCodeAppCreate?: DiscountCodeAppCreatePayload
    /** Updates a code app discount. */
    discountCodeAppUpdate?: DiscountCodeAppUpdatePayload
    /** Creates a basic code discount. */
    discountCodeBasicCreate?: DiscountCodeBasicCreatePayload
    /** Updates a basic code discount. */
    discountCodeBasicUpdate?: DiscountCodeBasicUpdatePayload
    /**
     * Asynchronously activate code discounts in bulk using a search query, a saved search ID, or a list of code discount IDs.
     * 
     */
    discountCodeBulkActivate?: DiscountCodeBulkActivatePayload
    /**
     * Asynchronously deactivate code discounts in bulk using a search query, a saved search ID, or a list of code discount IDs.
     * 
     */
    discountCodeBulkDeactivate?: DiscountCodeBulkDeactivatePayload
    /**
     * Asynchronously delete code discounts in bulk using a search query, a saved search ID, or a list of code discount IDs.
     * 
     */
    discountCodeBulkDelete?: DiscountCodeBulkDeletePayload
    /** Creates a Buy X get Y (BXGY) code discount. */
    discountCodeBxgyCreate?: DiscountCodeBxgyCreatePayload
    /** Updates a Buy X, Get Y (BXGY) code discount. */
    discountCodeBxgyUpdate?: DiscountCodeBxgyUpdatePayload
    /** Deactivates a code discount. */
    discountCodeDeactivate?: DiscountCodeDeactivatePayload
    /** Deletes a code discount. */
    discountCodeDelete?: DiscountCodeDeletePayload
    /** Creates a free shipping code discount. */
    discountCodeFreeShippingCreate?: DiscountCodeFreeShippingCreatePayload
    /** Updates a free shipping code discount. */
    discountCodeFreeShippingUpdate?: DiscountCodeFreeShippingUpdatePayload
    /**
     * Asynchronously delete discount redeem codes in bulk. Specify the redeem codes to delete by providing a
     * search query, a saved search ID, or a list of redeem code IDs.
     * 
     */
    discountCodeRedeemCodeBulkDelete?: DiscountCodeRedeemCodeBulkDeletePayload
    /**
     * Asynchronously add discount redeem codes in bulk. Specify the codes to add
     * and the discount code ID that the codes will belong to.
     * 
     */
    discountRedeemCodeBulkAdd?: DiscountRedeemCodeBulkAddPayload
    /** Updates a dispute evidence. */
    disputeEvidenceUpdate?: DisputeEvidenceUpdatePayload
    /** Adds tags to multiple draft orders. */
    draftOrderBulkAddTags?: DraftOrderBulkAddTagsPayload
    /** Deletes multiple draft orders. */
    draftOrderBulkDelete?: DraftOrderBulkDeletePayload
    /** Removes tags from multiple draft orders. */
    draftOrderBulkRemoveTags?: DraftOrderBulkRemoveTagsPayload
    /**
     * Calculates the properties of a draft order. Useful for determining information
     * such as total taxes or price without actually creating a draft order.
     * 
     */
    draftOrderCalculate?: DraftOrderCalculatePayload
    /** Completes a draft order and creates an order. */
    draftOrderComplete?: DraftOrderCompletePayload
    /** Creates a draft order. */
    draftOrderCreate?: DraftOrderCreatePayload
    /** Creates a Draft Order from Order. */
    draftOrderCreateFromOrder?: DraftOrderCreateFromOrderPayload
    /** Creates a merchant checkout for the given draft order. */
    draftOrderCreateMerchantCheckout?: DraftOrderCreateMerchantCheckoutPayload
    /** Deletes a draft order. */
    draftOrderDelete?: DraftOrderDeletePayload
    /** Duplicates a draft order. */
    draftOrderDuplicate?: DraftOrderDuplicatePayload
    /** Previews a draft order invoice email. */
    draftOrderInvoicePreview?: DraftOrderInvoicePreviewPayload
    /** Sends an email invoice for a draft order. */
    draftOrderInvoiceSend?: DraftOrderInvoiceSendPayload
    /**
     * Updates a draft order.
     * 
     * If a checkout has been started for a draft order, any update to the draft will unlink the checkout. Checkouts
     * are created but not immediately completed when opening the merchant credit card modal in the admin, and when a
     * buyer opens the invoice URL. This is usually fine, but there is an edge case where a checkout is in progress
     * and the draft is updated before the checkout completes. This will not interfere with the checkout and order
     * creation, but if the link from draft to checkout is broken the draft will remain open even after the order is
     * created.
     * 
     */
    draftOrderUpdate?: DraftOrderUpdatePayload
    /**
     * Updates the server pixel to connect to an EventBridge endpoint.
     * Running this mutation deletes any previous subscriptions for the server pixel.
     * 
     */
    eventBridgeServerPixelUpdate?: EventBridgeServerPixelUpdatePayload
    /**
     * Creates a new Amazon EventBridge webhook subscription.
     * 
     */
    eventBridgeWebhookSubscriptionCreate?: EventBridgeWebhookSubscriptionCreatePayload
    /**
     * Updates an Amazon EventBridge webhook subscription.
     * 
     */
    eventBridgeWebhookSubscriptionUpdate?: EventBridgeWebhookSubscriptionUpdatePayload
    /** Acknowledges file update failure by resetting FAILED status to READY and clearing any media errors. */
    fileAcknowledgeUpdateFailed?: FileAcknowledgeUpdateFailedPayload
    /**
     * Creates file assets using an external URL or for files that were previously uploaded using the
     * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stageduploadscreate).
     * These files are added to the [Files page](https://shopify.com/admin/settings/files) in Shopify admin.
     * 
     */
    fileCreate?: FileCreatePayload
    /** Deletes existing file assets that were uploaded to Shopify. */
    fileDelete?: FileDeletePayload
    /** Updates an existing file asset that was uploaded to Shopify. */
    fileUpdate?: FileUpdatePayload
    /** Triggers any workflows that begin with the trigger specified in the request body. To learn more, refer to [_Create Shopify Flow triggers_](https://shopify.dev/apps/flow/triggers). */
    flowTriggerReceive?: FlowTriggerReceivePayload
    /** Cancels a fulfillment. */
    fulfillmentCancel?: FulfillmentCancelPayload
    /**
     * Creates a fulfillment for one or many fulfillment orders.
     * The fulfillment orders are associated with the same order and are assigned to the same location.
     * 
     */
    fulfillmentCreateV2?: FulfillmentCreateV2Payload
    /** Creates a fulfillment event for a specified fulfillment. */
    fulfillmentEventCreate?: FulfillmentEventCreatePayload
    /** Accept a cancellation request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderAcceptCancellationRequest?: FulfillmentOrderAcceptCancellationRequestPayload
    /** Accepts a fulfillment request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderAcceptFulfillmentRequest?: FulfillmentOrderAcceptFulfillmentRequestPayload
    /** Marks a fulfillment order as canceled. */
    fulfillmentOrderCancel?: FulfillmentOrderCancelPayload
    /** Marks an in-progress fulfillment order as incomplete, indicating the fulfillment service is unable to ship any remaining items and intends to close the fulfillment order. */
    fulfillmentOrderClose?: FulfillmentOrderClosePayload
    /** Applies a fulfillment hold on an open fulfillment order. */
    fulfillmentOrderHold?: FulfillmentOrderHoldPayload
    /**
     * Mark line items associated with a fulfillment order as being ready for pickup by a customer.
     * 
     * Sends a Ready For Pickup notification to the customer to let them know that their order is ready
     * to be picked up.
     * 
     */
    fulfillmentOrderLineItemsPreparedForPickup?: FulfillmentOrderLineItemsPreparedForPickupPayload
    /**
     * Merges a set or multiple sets of fulfillment orders together into one based on
     * line item inputs and quantities.
     * 
     */
    fulfillmentOrderMerge?: FulfillmentOrderMergePayload
    /**
     * Changes the location which is assigned to fulfill a number of unfulfilled fulfillment order line items.
     * 
     * Line items which have already been fulfilled can't be re-assigned
     * and will always remain assigned to the original location.
     * 
     * You can't change the assigned location while a fulfillment order has a
     * [request status](https://shopify.dev/docs/api/admin-graphql/latest/enums/FulfillmentOrderRequestStatus)
     * of `SUBMITTED`, `ACCEPTED`, `CANCELLATION_REQUESTED`, or `CANCELLATION_REJECTED`.
     * These request statuses mean that a fulfillment order is awaiting action by a fulfillment service
     * and can't be re-assigned without first having the fulfillment service accept a cancellation request.
     * This behavior is intended to prevent items from being fulfilled by multiple locations or fulfillment services.
     * 
     * ### How re-assigning line items affects fulfillment orders
     * 
     * **First scenario:** Re-assign all line items belonging to a fulfillment order to a new location.
     * 
     * In this case, the
     * [assignedLocation](https://shopify.dev/docs/api/admin-graphql/latest/objects/fulfillmentorder#field-fulfillmentorder-assignedlocation)
     * of the original fulfillment order will be updated to the new location.
     * 
     * **Second scenario:** Re-assign a subset of the line items belonging to a fulfillment order to a new location.
     * You can specify a subset of line items using the `fulfillmentOrderLineItems` parameter
     * (available as of the `2023-04` API version),
     * or specify that the original fulfillment order contains line items which have already been fulfilled.
     * 
     * If the new location is already assigned to another active fulfillment order, on the same order,
     * then the line items are moved to the existing fulfillment order.
     * Otherwise, a new fulfillment order is created for the new location, and the line items are moved to the new location.
     * 
     */
    fulfillmentOrderMove?: FulfillmentOrderMovePayload
    /** Marks a scheduled fulfillment order as open. */
    fulfillmentOrderOpen?: FulfillmentOrderOpenPayload
    /** Rejects a cancellation request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderRejectCancellationRequest?: FulfillmentOrderRejectCancellationRequestPayload
    /** Rejects a fulfillment request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderRejectFulfillmentRequest?: FulfillmentOrderRejectFulfillmentRequestPayload
    /** Releases the fulfillment hold on a fulfillment order. */
    fulfillmentOrderReleaseHold?: FulfillmentOrderReleaseHoldPayload
    /** Reschedules a scheduled fulfillment order. */
    fulfillmentOrderReschedule?: FulfillmentOrderReschedulePayload
    /** Splits a fulfillment order or orders based on line item inputs and quantities. */
    fulfillmentOrderSplit?: FulfillmentOrderSplitPayload
    /** Sends a cancellation request to the fulfillment service of a fulfillment order. */
    fulfillmentOrderSubmitCancellationRequest?: FulfillmentOrderSubmitCancellationRequestPayload
    /** Sends a fulfillment request to the fulfillment service of a fulfillment order. */
    fulfillmentOrderSubmitFulfillmentRequest?: FulfillmentOrderSubmitFulfillmentRequestPayload
    /** Releases the fulfillment holds on a list of fulfillment orders. */
    fulfillmentOrdersReleaseHolds?: FulfillmentOrdersReleaseHoldsPayload
    /** Sets the latest date and time by which the fulfillment orders need to be fulfilled. */
    fulfillmentOrdersSetFulfillmentDeadline?: FulfillmentOrdersSetFulfillmentDeadlinePayload
    /** Creates a fulfillment service. */
    fulfillmentServiceCreate?: FulfillmentServiceCreatePayload
    /** Deletes a fulfillment service. */
    fulfillmentServiceDelete?: FulfillmentServiceDeletePayload
    /** Updates a fulfillment service. */
    fulfillmentServiceUpdate?: FulfillmentServiceUpdatePayload
    /** Updates tracking information for a fulfillment. */
    fulfillmentTrackingInfoUpdateV2?: FulfillmentTrackingInfoUpdateV2Payload
    /** Create a gift card. */
    giftCardCreate?: GiftCardCreatePayload
    /**
     * Disable a gift card. A disabled gift card cannot be used by a customer. A disabled gift card cannot be re-enabled.
     * 
     */
    giftCardDisable?: GiftCardDisablePayload
    /** Update a gift card. */
    giftCardUpdate?: GiftCardUpdatePayload
    /** Activate an inventory item at a location. */
    inventoryActivate?: InventoryActivatePayload
    /** Apply changes to inventory quantities. */
    inventoryAdjustQuantities?: InventoryAdjustQuantitiesPayload
    /**
     * @deprecated Use `inventoryAdjustQuantities` instead.
     * Adjusts the inventory by a certain quantity.
     */
    inventoryAdjustQuantity?: InventoryAdjustQuantityPayload
    /**
     * @deprecated Use `inventoryAdjustQuantities` instead.
     * Adjusts the inventory at a location for multiple inventory items.
     */
    inventoryBulkAdjustQuantityAtLocation?: InventoryBulkAdjustQuantityAtLocationPayload
    /** Modify the activation status of an inventory item at locations. Activating an inventory item at a particular location allows that location to stock that inventory item. Deactivating an inventory item at a location removes the inventory item's quantities and turns off the inventory item from that location. */
    inventoryBulkToggleActivation?: InventoryBulkToggleActivationPayload
    /** Removes an inventory item's quantities from a location, and turns off inventory at the location. */
    inventoryDeactivate?: InventoryDeactivatePayload
    /** Updates an inventory item. */
    inventoryItemUpdate?: InventoryItemUpdatePayload
    /** Moves inventory between inventory quantity names at a single location. */
    inventoryMoveQuantities?: InventoryMoveQuantitiesPayload
    /** Set inventory on-hand quantities using absolute values. */
    inventorySetOnHandQuantities?: InventorySetOnHandQuantitiesPayload
    /** Activates a location. */
    locationActivate?: LocationActivatePayload
    /** Adds a new location. */
    locationAdd?: LocationAddPayload
    /** Deactivates a location and moves inventory, pending orders, and moving transfers to a destination location. */
    locationDeactivate?: LocationDeactivatePayload
    /** Deletes a location. */
    locationDelete?: LocationDeletePayload
    /** Edits an existing location. */
    locationEdit?: LocationEditPayload
    /** Disables local pickup for a location. */
    locationLocalPickupDisable?: LocationLocalPickupDisablePayload
    /** Enables local pickup for a location. */
    locationLocalPickupEnable?: LocationLocalPickupEnablePayload
    /** Creates a new market. */
    marketCreate?: MarketCreatePayload
    /** Updates currency settings of a market. */
    marketCurrencySettingsUpdate?: MarketCurrencySettingsUpdatePayload
    /** Deletes a market definition. */
    marketDelete?: MarketDeletePayload
    /** Creates or updates market localizations. */
    marketLocalizationsRegister?: MarketLocalizationsRegisterPayload
    /** Deletes market localizations. */
    marketLocalizationsRemove?: MarketLocalizationsRemovePayload
    /** Deletes a market region. */
    marketRegionDelete?: MarketRegionDeletePayload
    /** Creates regions that belong to an existing market. */
    marketRegionsCreate?: MarketRegionsCreatePayload
    /** Updates the properties of a market. */
    marketUpdate?: MarketUpdatePayload
    /** Creates a web presence for a market. */
    marketWebPresenceCreate?: MarketWebPresenceCreatePayload
    /** Deletes a market web presence. */
    marketWebPresenceDelete?: MarketWebPresenceDeletePayload
    /** Updates a market web presence. */
    marketWebPresenceUpdate?: MarketWebPresenceUpdatePayload
    /** Create new marketing activity. */
    marketingActivityCreate?: MarketingActivityCreatePayload
    /** Creates a new external marketing activity. */
    marketingActivityCreateExternal?: MarketingActivityCreateExternalPayload
    /** Updates a marketing activity with the latest information. */
    marketingActivityUpdate?: MarketingActivityUpdatePayload
    /** Update an external marketing activity. */
    marketingActivityUpdateExternal?: MarketingActivityUpdateExternalPayload
    /** Creates a new marketing event engagement for a marketing activity or a marketing channel. */
    marketingEngagementCreate?: MarketingEngagementCreatePayload
    /**
     * Creates a metafield definition.
     * 
     */
    metafieldDefinitionCreate?: MetafieldDefinitionCreatePayload
    /**
     * Delete a metafield definition.
     * Optionally deletes all associated metafields asynchronously when specified.
     * 
     */
    metafieldDefinitionDelete?: MetafieldDefinitionDeletePayload
    /**
     * You can organize your metafields in your Shopify admin by pinning/unpinning metafield definitions.
     * The order of your pinned metafield definitions determines the order in which your metafields are displayed
     * on the corresponding pages in your Shopify admin. By default, only pinned metafields are automatically displayed.
     * 
     */
    metafieldDefinitionPin?: MetafieldDefinitionPinPayload
    /**
     * You can organize your metafields in your Shopify admin by pinning/unpinning metafield definitions.
     * The order of your pinned metafield definitions determines the order in which your metafields are displayed
     * on the corresponding pages in your Shopify admin. By default, only pinned metafields are automatically displayed.
     * 
     */
    metafieldDefinitionUnpin?: MetafieldDefinitionUnpinPayload
    /**
     * Updates a metafield definition.
     * 
     */
    metafieldDefinitionUpdate?: MetafieldDefinitionUpdatePayload
    /** Deletes a metafield. */
    metafieldDelete?: MetafieldDeletePayload
    /**
     * Creates a `MetafieldStorefrontVisibility` record to make all metafields that belong to the specified resource
     * and have the established `namespace` and `key` combination visible in the Storefront API.
     * 
     */
    metafieldStorefrontVisibilityCreate?: MetafieldStorefrontVisibilityCreatePayload
    /**
     * Deletes a `MetafieldStorefrontVisibility` record. All metafields that belongs to the specified record will no
     * longer be visible in the Storefront API.
     * 
     */
    metafieldStorefrontVisibilityDelete?: MetafieldStorefrontVisibilityDeletePayload
    /**
     * Sets metafield values. Metafield values will be set regardless if they were previously created or not.
     * 
     * Allows a maximum of 25 metafields to be set at a time.
     * 
     * Note that this operation is atomic as of `2023-01`, meaning no changes are persisted if any error is
     * encountered.
     * 
     */
    metafieldsSet?: MetafieldsSetPayload
    /** Asynchronously delete metaobjects and their associated metafields in bulk. */
    metaobjectBulkDelete?: MetaobjectBulkDeletePayload
    /** Creates a new metaobject. */
    metaobjectCreate?: MetaobjectCreatePayload
    /** Creates a new metaobject definition. */
    metaobjectDefinitionCreate?: MetaobjectDefinitionCreatePayload
    /**
     * Deletes the specified metaobject definition.
     * Also deletes all related metafield definitions, metaobjects, and metafields asynchronously.
     * 
     */
    metaobjectDefinitionDelete?: MetaobjectDefinitionDeletePayload
    /** Updates a metaobject definition with new settings and metafield definitions. */
    metaobjectDefinitionUpdate?: MetaobjectDefinitionUpdatePayload
    /** Deletes the specified metaobject and its associated metafields. */
    metaobjectDelete?: MetaobjectDeletePayload
    /** Updates an existing metaobject. */
    metaobjectUpdate?: MetaobjectUpdatePayload
    /**
     * Retrieves a metaobject by handle, then updates it with the provided input values.
     * If no matching metaobject is found, a new metaobject is created with the provided input values.
     * 
     */
    metaobjectUpsert?: MetaobjectUpsertPayload
    /** Captures payment for an authorized transaction on an order. An order can only be captured if it has a successful authorization transaction. Capturing an order will claim the money reserved by the authorization. */
    orderCapture?: OrderCapturePayload
    /**
     * Closes an open order.
     * 
     */
    orderClose?: OrderClosePayload
    /** Creates a payment for an order by mandate. */
    orderCreateMandatePayment?: OrderCreateMandatePaymentPayload
    /** Adds a custom line item to an existing order. For example, you could add a gift wrapping service as a [custom line item](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing#add-a-custom-line-item). To learn how to edit existing orders, refer to [Edit an existing order with Admin API](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing). */
    orderEditAddCustomItem?: OrderEditAddCustomItemPayload
    /** Adds a discount to a newly added line item on the current order edit. More information on how to use the GraphQL Admin API to edit an existing order, refer to [Edit existing orders](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing). */
    orderEditAddLineItemDiscount?: OrderEditAddLineItemDiscountPayload
    /** Adds a line item from an existing product variant. */
    orderEditAddVariant?: OrderEditAddVariantPayload
    /**
     * Starts editing an order. Mutations are operating on `OrderEdit`.
     * All order edits start with `orderEditBegin`, have any number of `orderEdit`* mutations made, and end with `orderEditCommit`.
     * 
     */
    orderEditBegin?: OrderEditBeginPayload
    /**
     * Applies and saves staged changes to an order. Mutations are operating on `OrderEdit`.
     * All order edits start with `orderEditBegin`, have any number of `orderEdit`* mutations made, and end with `orderEditCommit`.
     * 
     */
    orderEditCommit?: OrderEditCommitPayload
    /** Removes a line item discount that was applied as part of an order edit. */
    orderEditRemoveLineItemDiscount?: OrderEditRemoveLineItemDiscountPayload
    /** Sets the quantity of a line item on an order that is being edited. More information on how to use the GraphQL Admin API to edit an existing order, refer to [Edit existing orders](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing). */
    orderEditSetQuantity?: OrderEditSetQuantityPayload
    /** Sends an email invoice for an order. */
    orderInvoiceSend?: OrderInvoiceSendPayload
    /**
     * Marks an order as paid. You can only mark an order as paid if it isn't already fully paid.
     * 
     */
    orderMarkAsPaid?: OrderMarkAsPaidPayload
    /**
     * Opens a closed order.
     * 
     */
    orderOpen?: OrderOpenPayload
    /** Updates the fields of an order. */
    orderUpdate?: OrderUpdatePayload
    /** Activates and deactivates payment customizations. */
    paymentCustomizationActivation?: PaymentCustomizationActivationPayload
    /** Creates a payment customization. */
    paymentCustomizationCreate?: PaymentCustomizationCreatePayload
    /** Deletes a payment customization. */
    paymentCustomizationDelete?: PaymentCustomizationDeletePayload
    /** Updates a payment customization. */
    paymentCustomizationUpdate?: PaymentCustomizationUpdatePayload
    /** Sends an email payment reminder for a payment schedule. */
    paymentReminderSend?: PaymentReminderSendPayload
    /** Create payment terms on an order. To create payment terms on a draft order, use a draft order mutation and include the request with the `DraftOrderInput`. */
    paymentTermsCreate?: PaymentTermsCreatePayload
    /** Delete payment terms for an order. To delete payment terms on a draft order, use a draft order mutation and include the request with the `DraftOrderInput`. */
    paymentTermsDelete?: PaymentTermsDeletePayload
    /** Update payment terms on an order. To update payment terms on a draft order, use a draft order mutation and include the request with the `DraftOrderInput`. */
    paymentTermsUpdate?: PaymentTermsUpdatePayload
    /** Creates a price list. You can use the `priceListCreate` mutation to create a new price list for a country. This enables you to sell your products with international pricing. */
    priceListCreate?: PriceListCreatePayload
    /** Deletes a price list. For example, you can delete a price list so that it no longer applies for products in the associated market. */
    priceListDelete?: PriceListDeletePayload
    /** Creates or updates fixed prices on a price list. You can use the `priceListFixedPricesAdd` mutation to set a fixed price for specific product variants. This lets you change product variant pricing on a per country basis. Any existing fixed price list prices for these variants will be overwritten. */
    priceListFixedPricesAdd?: PriceListFixedPricesAddPayload
    /** Updates the fixed prices for all variants for a product on a price list. You can use the `priceListFixedPricesByProductUpdate` mutation to set or remove a fixed price for all variants of a product associated with the price list. */
    priceListFixedPricesByProductUpdate?: PriceListFixedPricesByProductUpdatePayload
    /** Deletes specific fixed prices from a price list using a product variant ID. You can use the `priceListFixedPricesDelete` mutation to delete a set of fixed prices from a price list. After deleting the set of fixed prices from the price list, the price of each product variant reverts to the original price that was determined by the price list adjustment. */
    priceListFixedPricesDelete?: PriceListFixedPricesDeletePayload
    /** Updates fixed prices on a price list. You can use the `priceListFixedPricesUpdate` mutation to set a fixed price for specific product variants or to delete prices for variants associated with the price list. */
    priceListFixedPricesUpdate?: PriceListFixedPricesUpdatePayload
    /**
     * Updates a price list.
     * If you modify the currency, then any fixed prices set on the price list will be deleted.
     * 
     */
    priceListUpdate?: PriceListUpdatePayload
    /**
     * @deprecated Use `discountCodeActivate` instead.
     * Activate a price rule.
     */
    priceRuleActivate?: PriceRuleActivatePayload
    /**
     * @deprecated Use `discountCodeBasicCreate` instead.
     * Create a price rule using the input.
     */
    priceRuleCreate?: PriceRuleCreatePayload
    /**
     * @deprecated Use `discountCodeDeactivate` instead.
     * Deactivate a price rule.
     */
    priceRuleDeactivate?: PriceRuleDeactivatePayload
    /**
     * @deprecated Use `discountCodeDelete` instead.
     * Delete a price rule.
     */
    priceRuleDelete?: PriceRuleDeletePayload
    /**
     * @deprecated Use `discountRedeemCodeBulkAdd` instead.
     * Create a discount code for a price rule.
     */
    priceRuleDiscountCodeCreate?: PriceRuleDiscountCodeCreatePayload
    /**
     * @deprecated Use `discountCodeBasicUpdate` instead.
     * Update a discount code for a price rule.
     */
    priceRuleDiscountCodeUpdate?: PriceRuleDiscountCodeUpdatePayload
    /**
     * @deprecated Use `discountCodeBasicUpdate` instead.
     * Updates a price rule using its ID and an input.
     */
    priceRuleUpdate?: PriceRuleUpdatePayload
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Deletes a private metafield.
     * Private metafields are automatically deleted when the app that created them is uninstalled.
     * 
     */
    privateMetafieldDelete?: PrivateMetafieldDeletePayload
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Creates or updates a private metafield. Use private metafields when you don't want the metafield data to be accessible by merchants or other apps.
     * Private metafields are accessible only by the application that created them and only from the GraphQL Admin API.
     * 
     * An application can create a maximum of 10 private metafields per shop resource.
     * 
     */
    privateMetafieldUpsert?: PrivateMetafieldUpsertPayload
    /**
     * @deprecated Use `productCreateMedia` instead.
     * Appends images to a product.
     */
    productAppendImages?: ProductAppendImagesPayload
    /** Changes the status of a product. This allows you to set the availability of the product across all channels. */
    productChangeStatus?: ProductChangeStatusPayload
    /**
     * Creates a product.
     * 
     * If you need to create a product with many
     * [variants](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput)
     * that are active at several
     * [locations](https://shopify.dev/api/admin-graphql/latest/input-objects/InventoryLevelInput),
     * especially with a lot of
     * [collections](https://shopify.dev/api/admin-graphql/latest/mutations/productCreate#field-productinput-collectionstojoin)
     * and
     * [tags](https://shopify.dev/api/admin-graphql/latest/mutations/productCreate#field-productinput-tags),
     * then you should first create the product with just the variants.
     * 
     * After the product is created, you can activate the variants at locations
     * and add the other related objects to the product. This reduces the size of each mutation and increases the likelihood that it will
     * complete before the operation times out.
     * 
     * The following example shows how you might break up product creation and object association into multiple steps:
     * 
     * 1. Create the product with variants. Don't specify any tags or collections on the product, and don't specify
     * [inventory quantities](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput#field-productvariantinput-inventoryquantities)
     * for each variant.
     * 
     * 2. After the product is created, add tags to the product using the
     * [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsAdd) mutation, and add collections using the
     * [collectionsAddProducts](https://shopify.dev/api/admin-graphql/latest/mutations/collectionAddProducts) mutation.
     * 
     * 3. Use the [inventoryBulkToggleActivation](https://shopify.dev/api/admin-graphql/latest/mutations/inventoryBulkToggleActivation) mutation
     * on each [inventory item](https://shopify.dev/api/admin-graphql/latest/objects/InventoryItem) to activate it at the appropriate locations.
     * 
     * 4. After activating the variants at the locations, adjust inventory quantities at each location using the
     * [inventoryBulkAdjustQuantityAtLocation](https://shopify.dev/api/admin-graphql/latest/mutations/inventoryBulkAdjustQuantityAtLocation) mutation.
     * 
     */
    productCreate?: ProductCreatePayload
    /** Creates media for a product. */
    productCreateMedia?: ProductCreateMediaPayload
    /**
     * Deletes a product, including all associated variants and media.
     * 
     * As of API version `2023-01`, if you need to delete a large product, such as one that has many
     * [variants](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput)
     * that are active at several
     * [locations](https://shopify.dev/api/admin-graphql/latest/input-objects/InventoryLevelInput),
     * you may encounter timeout errors. To avoid these timeout errors, you can instead use the asynchronous
     * [ProductDeleteAsync](https://shopify.dev/api/admin-graphql/latest/mutations/productDeleteAsync)
     * mutation.
     * 
     */
    productDelete?: ProductDeletePayload
    /**
     * Deletes a product asynchronously, including all associated variants and media.
     * 
     */
    productDeleteAsync?: ProductDeleteAsyncPayload
    /**
     * @deprecated Use `productDeleteMedia` instead.
     * Removes product images from the product.
     */
    productDeleteImages?: ProductDeleteImagesPayload
    /** Deletes media for a product. */
    productDeleteMedia?: ProductDeleteMediaPayload
    /**
     * Duplicates a product.
     * 
     * As of API version `2023-01`, if you need to duplicate a large product, such as one that has many
     * [variants](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput)
     * that are active at several
     * [locations](https://shopify.dev/api/admin-graphql/latest/input-objects/InventoryLevelInput),
     * you may encounter timeout errors. To avoid these timeout errors, you can instead use the asynchronous
     * [ProductDuplicateAsyncV2](https://shopify.dev/api/admin-graphql/latest/mutations/productDuplicateAsyncV2)
     * mutation.
     * 
     */
    productDuplicate?: ProductDuplicatePayload
    /**
     * @deprecated Use `productDuplicateAsyncV2` instead.
     * Asynchronously duplicate a single product.
     * 
     */
    productDuplicateAsync?: ProductDuplicateAsyncPayload
    /**
     * Asynchronously duplicate a single product.
     * 
     */
    productDuplicateAsyncV2?: ProductDuplicateAsyncV2Payload
    /** Creates a product feed for a specific publication. */
    productFeedCreate?: ProductFeedCreatePayload
    /** Deletes a product feed for a specific publication. */
    productFeedDelete?: ProductFeedDeletePayload
    /** Runs the full product sync for a given shop. */
    productFullSync?: ProductFullSyncPayload
    /**
     * @deprecated Use `productUpdateMedia` instead.
     * Updates an image of a product.
     */
    productImageUpdate?: ProductImageUpdatePayload
    /**
     * Adds multiple selling plan groups to a product.
     * 
     */
    productJoinSellingPlanGroups?: ProductJoinSellingPlanGroupsPayload
    /**
     * Removes multiple groups from a product.
     * 
     */
    productLeaveSellingPlanGroups?: ProductLeaveSellingPlanGroupsPayload
    /**
     * @deprecated Use `publishablePublish` instead.
     * Publishes a product. Products that are sold exclusively on subscription (`requiresSellingPlan: true`) can only be published on online stores.
     */
    productPublish?: ProductPublishPayload
    /**
     * @deprecated Use `productReorderMedia` instead.
     * Asynchronously reorders a set of images for a given product.
     */
    productReorderImages?: ProductReorderImagesPayload
    /** Asynchronously reorders the media attached to a product. */
    productReorderMedia?: ProductReorderMediaPayload
    /**
     * @deprecated Use `publishableUnpublish` instead.
     * Unpublishes a product.
     */
    productUnpublish?: ProductUnpublishPayload
    /**
     * Updates a product. If you update a product and only include some variants in the update,
     * then any variants not included will be deleted. To safely manage variants without the risk of
     * deleting excluded variants, use
     * [productVariantsBulkUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantsbulkupdate).
     * If you want to update a single variant, then use
     * [productVariantUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantupdate).
     * 
     */
    productUpdate?: ProductUpdatePayload
    /** Updates media for a product. */
    productUpdateMedia?: ProductUpdateMediaPayload
    /** Appends media from a product to variants of the product. */
    productVariantAppendMedia?: ProductVariantAppendMediaPayload
    /** Creates a product variant. */
    productVariantCreate?: ProductVariantCreatePayload
    /** Deletes a product variant. */
    productVariantDelete?: ProductVariantDeletePayload
    /** Detaches media from product variants. */
    productVariantDetachMedia?: ProductVariantDetachMediaPayload
    /**
     * Adds multiple selling plan groups to a product variant.
     * 
     */
    productVariantJoinSellingPlanGroups?: ProductVariantJoinSellingPlanGroupsPayload
    /**
     * Remove multiple groups from a product variant.
     * 
     */
    productVariantLeaveSellingPlanGroups?: ProductVariantLeaveSellingPlanGroupsPayload
    /** Creates new bundles, updates existing bundles, and removes bundle components for one or multiple bundles. */
    productVariantRelationshipBulkUpdate?: ProductVariantRelationshipBulkUpdatePayload
    /** Updates a product variant. */
    productVariantUpdate?: ProductVariantUpdatePayload
    /**
     * Creates product variants in bulk. If you want to create a single variant, then use
     * [productVariantCreate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantcreate).
     * 
     */
    productVariantsBulkCreate?: ProductVariantsBulkCreatePayload
    /**
     * Deletes product variants in bulk. If you want to delete a single variant, then use
     * [productVariantDelete](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantdelete).
     * 
     */
    productVariantsBulkDelete?: ProductVariantsBulkDeletePayload
    /** Reorder product variants in bulk. */
    productVariantsBulkReorder?: ProductVariantsBulkReorderPayload
    /**
     * Updates product variants in bulk. If you want to update a single variant, then use
     * [productVariantUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantupdate).
     * 
     */
    productVariantsBulkUpdate?: ProductVariantsBulkUpdatePayload
    /**
     * Updates the server pixel to connect to a Google PubSub endpoint.
     * Running this mutation deletes any previous subscriptions for the server pixel.
     * 
     */
    pubSubServerPixelUpdate?: PubSubServerPixelUpdatePayload
    /** Creates a new Google Cloud Pub/Sub webhook subscription. */
    pubSubWebhookSubscriptionCreate?: PubSubWebhookSubscriptionCreatePayload
    /** Updates a Google Cloud Pub/Sub webhook subscription. */
    pubSubWebhookSubscriptionUpdate?: PubSubWebhookSubscriptionUpdatePayload
    /**
     * Creates a publication.
     * 
     */
    publicationCreate?: PublicationCreatePayload
    /**
     * Deletes a publication.
     * 
     */
    publicationDelete?: PublicationDeletePayload
    /**
     * Updates a publication.
     * 
     */
    publicationUpdate?: PublicationUpdatePayload
    /** Publishes a resource to a channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. Products that are sold exclusively on subscription (`requiresSellingPlan: true`) can be published only on online stores. */
    publishablePublish?: PublishablePublishPayload
    /** Publishes a resource to current channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. Products that are sold exclusively on subscription (`requiresSellingPlan: true`) can be published only on online stores. */
    publishablePublishToCurrentChannel?: PublishablePublishToCurrentChannelPayload
    /** Unpublishes a resource from a channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. */
    publishableUnpublish?: PublishableUnpublishPayload
    /** Unpublishes a resource from the current channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. */
    publishableUnpublishToCurrentChannel?: PublishableUnpublishToCurrentChannelPayload
    /**
     * Creates or updates existing quantity rules on a price list.
     * You can use the `quantityRulesAdd` mutation to set order level minimums, maximumums and increments for specific product variants.
     * 
     */
    quantityRulesAdd?: QuantityRulesAddPayload
    /**
     * Deletes specific quantity rules from a price list using a product variant ID.
     * You can use the `quantityRulesDelete` mutation to delete a set of quantity rules from a price list.
     * 
     */
    quantityRulesDelete?: QuantityRulesDeletePayload
    /** Creates a refund. */
    refundCreate?: RefundCreatePayload
    /**
     * Approves a customer's return request.
     * If this mutation is successful, then the `Return.status` field of the
     * approved return is set to `OPEN`.
     * 
     */
    returnApproveRequest?: ReturnApproveRequestPayload
    /**
     * Cancels a return and restores the items back to being fulfilled.
     * Canceling a return is only available before any work has been done
     * on the return (such as an inspection or refund).
     * 
     */
    returnCancel?: ReturnCancelPayload
    /**
     * Indicates a return is complete, either when a refund has been made and items restocked,
     * or simply when it has been marked as returned in the system.
     * 
     */
    returnClose?: ReturnClosePayload
    /** Creates a return. */
    returnCreate?: ReturnCreatePayload
    /**
     * Declines a return on an order.
     * When a return is declined, each `ReturnLineItem.fulfillmentLineItem` can be associated to a new return.
     * Use the `ReturnCreate` or `ReturnRequest` mutation to initiate a new return.
     * 
     */
    returnDeclineRequest?: ReturnDeclineRequestPayload
    /** Refunds a return and associates it with the related return request. */
    returnRefund?: ReturnRefundPayload
    /** Reopens a closed return. */
    returnReopen?: ReturnReopenPayload
    /**
     * A customer's return request that hasn't been approved or declined.
     * This mutation sets the value of the `Return.status` field to `REQUESTED`.
     * To create a return that has the `Return.status` field set to `OPEN`, use the `returnCreate` mutation.
     * 
     */
    returnRequest?: ReturnRequestPayload
    /** Creates a new reverse delivery with associated external shipping information. */
    reverseDeliveryCreateWithShipping?: ReverseDeliveryCreateWithShippingPayload
    /**
     * Disposes reverse delivery line items for a reverse delivery on the same shop.
     * 
     */
    reverseDeliveryDispose?: ReverseDeliveryDisposePayload
    /** Updates a reverse delivery with associated external shipping information. */
    reverseDeliveryShippingUpdate?: ReverseDeliveryShippingUpdatePayload
    /**
     * Disposes reverse fulfillment order line items.
     * 
     */
    reverseFulfillmentOrderDispose?: ReverseFulfillmentOrderDisposePayload
    /** Creates a saved search. */
    savedSearchCreate?: SavedSearchCreatePayload
    /** Delete a saved search. */
    savedSearchDelete?: SavedSearchDeletePayload
    /** Updates a saved search. */
    savedSearchUpdate?: SavedSearchUpdatePayload
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Creates a new script tag.
     * 
     */
    scriptTagCreate?: ScriptTagCreatePayload
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Deletes a script tag.
     * 
     */
    scriptTagDelete?: ScriptTagDeletePayload
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Updates a script tag.
     * 
     */
    scriptTagUpdate?: ScriptTagUpdatePayload
    /** Creates a segment. */
    segmentCreate?: SegmentCreatePayload
    /** Deletes a segment. */
    segmentDelete?: SegmentDeletePayload
    /** Updates a segment. */
    segmentUpdate?: SegmentUpdatePayload
    /**
     * Adds multiple product variants to a selling plan group.
     * 
     */
    sellingPlanGroupAddProductVariants?: SellingPlanGroupAddProductVariantsPayload
    /**
     * Adds multiple products to a selling plan group.
     * 
     */
    sellingPlanGroupAddProducts?: SellingPlanGroupAddProductsPayload
    /** Creates a Selling Plan Group. */
    sellingPlanGroupCreate?: SellingPlanGroupCreatePayload
    /** Delete a Selling Plan Group. */
    sellingPlanGroupDelete?: SellingPlanGroupDeletePayload
    /**
     * Removes multiple product variants from a selling plan group.
     * 
     */
    sellingPlanGroupRemoveProductVariants?: SellingPlanGroupRemoveProductVariantsPayload
    /**
     * Removes multiple products from a selling plan group.
     * 
     */
    sellingPlanGroupRemoveProducts?: SellingPlanGroupRemoveProductsPayload
    /** Update a Selling Plan Group. */
    sellingPlanGroupUpdate?: SellingPlanGroupUpdatePayload
    /** Creates a new unconfigured server pixel. A single server pixel can exist for an app and shop combination. If you call this mutation when a server pixel already exists, then an error will return. */
    serverPixelCreate?: ServerPixelCreatePayload
    /** Deletes the Server Pixel associated with the current app & shop. */
    serverPixelDelete?: ServerPixelDeletePayload
    /** Deletes a shipping package. */
    shippingPackageDelete?: ShippingPackageDeletePayload
    /**
     * Set a shipping package as the default.
     * The default shipping package is the one used to calculate shipping costs on checkout.
     * 
     */
    shippingPackageMakeDefault?: ShippingPackageMakeDefaultPayload
    /** Updates a shipping package. */
    shippingPackageUpdate?: ShippingPackageUpdatePayload
    /** Deletes a locale for a shop. This also deletes all translations of this locale. */
    shopLocaleDisable?: ShopLocaleDisablePayload
    /** Adds a locale for a shop. The newly added locale is in the unpublished state. */
    shopLocaleEnable?: ShopLocaleEnablePayload
    /** Updates a locale for a shop. */
    shopLocaleUpdate?: ShopLocaleUpdatePayload
    /** Updates a shop policy. */
    shopPolicyUpdate?: ShopPolicyUpdatePayload
    /**
     * The `ResourceFeedback` object lets your app report the status of shops and their resources. For example, if
     * your app is a marketplace channel, then you can use resource feedback to alert merchants that they need to connect their marketplace account by signing in.
     * 
     * Resource feedback notifications are displayed to the merchant on the home screen of their Shopify admin, and in the product details view for any products that are published to your app.
     * 
     * This resource should be used only in cases where you're describing steps that a merchant is required to complete. If your app offers optional or promotional set-up steps, or if it makes recommendations, then don't use resource feedback to let merchants know about them.
     * 
     * ## Sending feedback on a shop
     * 
     * You can send resource feedback on a shop to let the merchant know what steps they need to take to make sure that your app is set up correctly. Feedback can have one of two states: `requires_action` or `success`. You need to send a `requires_action` feedback request for each step that the merchant is required to complete.
     * 
     * If there are multiple set-up steps that require merchant action, then send feedback with a state of `requires_action` as merchants complete prior steps. And to remove the feedback message from the Shopify admin, send a `success` feedback request.
     * 
     * #### Important
     * Sending feedback replaces previously sent feedback for the shop. Send a new `shopResourceFeedbackCreate` mutation to push the latest state of a shop or its resources to Shopify.
     * 
     */
    shopResourceFeedbackCreate?: ShopResourceFeedbackCreatePayload
    /**
     * @deprecated Use `stagedUploadsCreate` instead.
     * Generates the URL and signed paramaters needed to upload an asset to Shopify.
     */
    stagedUploadTargetGenerate?: StagedUploadTargetGeneratePayload
    /**
     * @deprecated Use `stagedUploadsCreate` instead.
     * Uploads multiple images.
     */
    stagedUploadTargetsGenerate?: StagedUploadTargetsGeneratePayload
    /**
     * Creates staged upload targets for each input. This is the first step in the upload process.
     * The returned staged upload targets' URL and parameter fields can be used to send a request
     * to upload the file described in the corresponding input.
     * 
     * For more information on the upload process, refer to
     * [Upload media to Shopify](https://shopify.dev/apps/online-store/media/products#step-1-upload-media-to-shopify).
     * 
     */
    stagedUploadsCreate?: StagedUploadsCreatePayload
    /**
     * Activates the specified standard metafield definition from its template.
     * 
     * Refer to the [list of standard metafield definition templates](https://shopify.dev/apps/metafields/definitions/standard-definitions).
     * 
     */
    standardMetafieldDefinitionEnable?: StandardMetafieldDefinitionEnablePayload
    /**
     * Enables the specified standard metaobject definition from its template.
     * 
     */
    standardMetaobjectDefinitionEnable?: StandardMetaobjectDefinitionEnablePayload
    /** Creates a storefront access token. An app can have a maximum of 100 active storefront access tokens for each shop. */
    storefrontAccessTokenCreate?: StorefrontAccessTokenCreatePayload
    /** Deletes a storefront access token. */
    storefrontAccessTokenDelete?: StorefrontAccessTokenDeletePayload
    /**
     * Creates a new subscription billing attempt. For more information, refer to [Create a subscription contract](https://shopify.dev/docs/apps/selling-strategies/subscriptions/contracts/create#step-4-create-a-billing-attempt).
     * 
     */
    subscriptionBillingAttemptCreate?: SubscriptionBillingAttemptCreatePayload
    /** Commits the updates of a Subscription Billing Cycle Contract draft. */
    subscriptionBillingCycleContractDraftCommit?: SubscriptionBillingCycleContractDraftCommitPayload
    /** Concatenates a contract to a Subscription Draft. */
    subscriptionBillingCycleContractDraftConcatenate?: SubscriptionBillingCycleContractDraftConcatenatePayload
    /** Edit the contents of a subscription contract for the specified billing cycle. */
    subscriptionBillingCycleContractEdit?: SubscriptionBillingCycleContractEditPayload
    /** Delete the current or future schedule and contract edits of a subscription billing cycle. */
    subscriptionBillingCycleEditDelete?: SubscriptionBillingCycleEditDeletePayload
    /** Delete the current or future schedule and contract edits of a list of subscription billing cycles. */
    subscriptionBillingCycleEditsDelete?: SubscriptionBillingCycleEditsDeletePayload
    /** Modify the schedule of a specific billing cycle. */
    subscriptionBillingCycleScheduleEdit?: SubscriptionBillingCycleScheduleEditPayload
    /** Creates a Subscription Contract. */
    subscriptionContractAtomicCreate?: SubscriptionContractAtomicCreatePayload
    /** Creates a Subscription Contract. */
    subscriptionContractCreate?: SubscriptionContractCreatePayload
    /** Allows for the easy change of a Product in a Contract or a Product price change. */
    subscriptionContractProductChange?: SubscriptionContractProductChangePayload
    /** Sets the next billing date of a Subscription Contract. */
    subscriptionContractSetNextBillingDate?: SubscriptionContractSetNextBillingDatePayload
    /** Updates a Subscription Contract. */
    subscriptionContractUpdate?: SubscriptionContractUpdatePayload
    /** Commits the updates of a Subscription Contract draft. */
    subscriptionDraftCommit?: SubscriptionDraftCommitPayload
    /** Adds a subscription discount to a subscription draft. */
    subscriptionDraftDiscountAdd?: SubscriptionDraftDiscountAddPayload
    /** Applies a code discount on the subscription draft. */
    subscriptionDraftDiscountCodeApply?: SubscriptionDraftDiscountCodeApplyPayload
    /** Removes a subscription discount from a subscription draft. */
    subscriptionDraftDiscountRemove?: SubscriptionDraftDiscountRemovePayload
    /** Updates a subscription discount on a subscription draft. */
    subscriptionDraftDiscountUpdate?: SubscriptionDraftDiscountUpdatePayload
    /** Adds a subscription free shipping discount to a subscription draft. */
    subscriptionDraftFreeShippingDiscountAdd?: SubscriptionDraftFreeShippingDiscountAddPayload
    /** Updates a subscription free shipping discount on a subscription draft. */
    subscriptionDraftFreeShippingDiscountUpdate?: SubscriptionDraftFreeShippingDiscountUpdatePayload
    /** Adds a subscription line to a subscription draft. */
    subscriptionDraftLineAdd?: SubscriptionDraftLineAddPayload
    /** Removes a subscription line from a subscription draft. */
    subscriptionDraftLineRemove?: SubscriptionDraftLineRemovePayload
    /** Updates a subscription line on a subscription draft. */
    subscriptionDraftLineUpdate?: SubscriptionDraftLineUpdatePayload
    /** Updates a Subscription Draft. */
    subscriptionDraftUpdate?: SubscriptionDraftUpdatePayload
    /** Add tags to an order, a draft order, a customer, a product, or an online store article. */
    tagsAdd?: TagsAddPayload
    /** Remove tags from an order, a draft order, a customer, a product, or an online store article. */
    tagsRemove?: TagsRemovePayload
    /**
     * Allows tax app configurations for tax partners.
     * 
     */
    taxAppConfigure?: TaxAppConfigurePayload
    /** Creates or updates translations. */
    translationsRegister?: TranslationsRegisterPayload
    /** Deletes translations. */
    translationsRemove?: TranslationsRemovePayload
    /**
     * Asynchronously delete [URL redirects](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) in bulk.
     * 
     */
    urlRedirectBulkDeleteAll?: UrlRedirectBulkDeleteAllPayload
    /**
     * Asynchronously delete [URLRedirect](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) 
     * objects in bulk by IDs.
     * Learn more about [URLRedirect](https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect) 
     * objects.
     * 
     */
    urlRedirectBulkDeleteByIds?: UrlRedirectBulkDeleteByIdsPayload
    /** Asynchronously delete redirects in bulk. */
    urlRedirectBulkDeleteBySavedSearch?: UrlRedirectBulkDeleteBySavedSearchPayload
    /** Asynchronously delete redirects in bulk. */
    urlRedirectBulkDeleteBySearch?: UrlRedirectBulkDeleteBySearchPayload
    /**
     * Creates a [`UrlRedirect`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) object.
     * 
     */
    urlRedirectCreate?: UrlRedirectCreatePayload
    /**
     * Deletes a [`UrlRedirect`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) object.
     * 
     */
    urlRedirectDelete?: UrlRedirectDeletePayload
    /**
     * Creates a [`UrlRedirectImport`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirectImport) object.
     * 
     * After creating the `UrlRedirectImport` object, the `UrlRedirectImport` request can be performed using the [`urlRedirectImportSubmit`](https://shopify.dev/api/admin-graphql/latest/mutations/urlRedirectImportSubmit) mutation.
     * 
     */
    urlRedirectImportCreate?: UrlRedirectImportCreatePayload
    /**
     * Submits a `UrlRedirectImport` request to be processed.
     * 
     * The `UrlRedirectImport` request is first created with the [`urlRedirectImportCreate`](https://shopify.dev/api/admin-graphql/latest/mutations/urlRedirectImportCreate) mutation.
     * 
     */
    urlRedirectImportSubmit?: UrlRedirectImportSubmitPayload
    /**
     * Updates a URL redirect.
     * 
     */
    urlRedirectUpdate?: UrlRedirectUpdatePayload
    /** Creates a new web pixel settings. */
    webPixelCreate?: WebPixelCreatePayload
    /** Deletes the web pixel shop settings. */
    webPixelDelete?: WebPixelDeletePayload
    /** Updates the web pixel settings. */
    webPixelUpdate?: WebPixelUpdatePayload
    /**
     * Creates a new webhook subscription.
     * 
     */
    webhookSubscriptionCreate?: WebhookSubscriptionCreatePayload
    /**
     * Deletes a webhook subscription.
     * 
     */
    webhookSubscriptionDelete?: WebhookSubscriptionDeletePayload
    /**
     * Updates a webhook subscription.
     * 
     */
    webhookSubscriptionUpdate?: WebhookSubscriptionUpdatePayload
    __typename: 'Mutation'
}


/**
 * A signed upload parameter for uploading an asset to Shopify.
 * 
 * Deprecated in favor of
 * [StagedUploadParameter](https://shopify.dev/api/admin-graphql/latest/objects/StagedUploadParameter),
 * which is used in
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget)
 * and returned by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface MutationsStagedUploadTargetGenerateUploadParameter {
    /** The upload parameter name. */
    name: Scalars['String']
    /** The upload parameter value. */
    value: Scalars['String']
    __typename: 'MutationsStagedUploadTargetGenerateUploadParameter'
}


/**
 * A default cursor that you can use in queries to paginate your results. Each edge in a connection can
 * return a cursor, which is a reference to the edge's position in the connection. You can use an edge's cursor as
 * the starting point to retrieve the nodes before or after it in a connection.
 * 
 * To learn more about using cursor-based pagination, refer to
 * [Paginating results with GraphQL](https://shopify.dev/api/usage/pagination-graphql).
 * 
 */
export type Navigable = (AbandonedCheckout | Company | CompanyLocation | DraftOrder | OnlineStoreArticle | OnlineStorePage | Product | ProductVariant) & { __isUnion?: true }


/** A navigation item, holding basic link attributes. */
export interface NavigationItem {
    /** The unique identifier of the navigation item. */
    id: Scalars['String']
    /** The name of the navigation item. */
    title: Scalars['String']
    /** The URL of the page that the navigation item links to. */
    url: Scalars['URL']
    __typename: 'NavigationItem'
}


/**
 * An object with an ID field to support global identification, in accordance with the
 * [Relay specification](https://relay.dev/graphql/objectidentification.htm#sec-Node-Interface).
 * This interface is used by the [node](https://shopify.dev/api/admin-graphql/unstable/queries/node)
 * and [nodes](https://shopify.dev/api/admin-graphql/unstable/queries/nodes) queries.
 * 
 */
export type Node = (AbandonedCheckout | Abandonment | AddAllProductsOperation | AdditionalFee | App | AppCatalog | AppCredit | AppInstallation | AppPurchaseOneTime | AppRevenueAttributionRecord | AppSubscription | AppUsageRecord | BasicEvent | BulkOperation | CalculatedOrder | CartTransform | CatalogCsvOperation | Channel | ChannelDefinition | ChannelInformation | CheckoutProfile | Collection | CommentEvent | Company | CompanyAddress | CompanyContact | CompanyContactRole | CompanyContactRoleAssignment | CompanyLocation | CompanyLocationCatalog | Customer | CustomerPaymentMethod | CustomerSegmentMembersQuery | CustomerVisit | DeliveryCarrierService | DeliveryCondition | DeliveryCountry | DeliveryCustomization | DeliveryLocationGroup | DeliveryMethod | DeliveryMethodDefinition | DeliveryParticipant | DeliveryProfile | DeliveryProfileItem | DeliveryProvince | DeliveryRateDefinition | DeliveryZone | DiscountAutomaticBxgy | DiscountAutomaticNode | DiscountCodeNode | DiscountNode | DiscountRedeemCodeBulkCreation | Domain | DraftOrder | DraftOrderLineItem | DraftOrderTag | Duty | ExchangeV2 | ExternalVideo | Fulfillment | FulfillmentEvent | FulfillmentLineItem | FulfillmentOrder | FulfillmentOrderDestination | FulfillmentOrderLineItem | FulfillmentOrderMerchantRequest | GenericFile | GiftCard | InventoryAdjustmentGroup | InventoryItem | InventoryLevel | LineItem | LineItemMutable | Location | MailingAddress | Market | MarketCatalog | MarketRegionCountry | MarketWebPresence | MarketingActivity | MarketingEvent | MediaImage | Metafield | MetafieldDefinition | MetafieldStorefrontVisibility | Metaobject | MetaobjectDefinition | Model3d | OnlineStoreArticle | OnlineStoreBlog | OnlineStorePage | Order | OrderDisputeSummary | OrderTransaction | PaymentCustomization | PaymentMandate | PaymentSchedule | PaymentTerms | PaymentTermsTemplate | PriceList | PriceRule | PriceRuleDiscountCode | PrivateMetafield | Product | ProductFeed | ProductOption | ProductTaxonomyNode | ProductVariant | ProductVariantComponent | Publication | PublicationResourceOperation | Refund | Return | ReturnLineItem | ReturnableFulfillment | ReverseDelivery | ReverseDeliveryLineItem | ReverseFulfillmentOrder | ReverseFulfillmentOrderDisposition | ReverseFulfillmentOrderLineItem | SaleAdditionalFee | SavedSearch | ScriptTag | Segment | SellingPlan | SellingPlanGroup | ServerPixel | Shop | ShopAddress | ShopPolicy | ShopifyPaymentsAccount | ShopifyPaymentsBankAccount | ShopifyPaymentsDispute | ShopifyPaymentsDisputeEvidence | ShopifyPaymentsDisputeFileUpload | ShopifyPaymentsDisputeFulfillment | ShopifyPaymentsPayout | ShopifyPaymentsVerification | StaffMember | StandardMetafieldDefinitionTemplate | StorefrontAccessToken | SubscriptionBillingAttempt | SubscriptionContract | SubscriptionDraft | TenderTransaction | TransactionFee | UrlRedirect | UrlRedirectImport | Video | WebPixel | WebhookSubscription) & { __isUnion?: true }


/**
 * An article in the blogging system. You can query articles from
 * [the REST API](https://shopify.dev/api/admin-rest/latest/resources/article)
 * if you need to access more information about an article. Currently, `OnlineStoreArticle` is
 * only useful to pass an article `id` to the `tagsAdd` mutation. For more information, refer to
 * the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd) mutation.
 * 
 */
export interface OnlineStoreArticle {
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The translations associated with the resource. */
    translations: Translation[]
    __typename: 'OnlineStoreArticle'
}


/**
 * Shopify stores come with a built-in blogging engine, allowing a shop to have one or more blogs.  Blogs are meant
 * to be used as a type of magazine or newsletter for the shop, with content that changes over time.
 * 
 */
export interface OnlineStoreBlog {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The translations associated with the resource. */
    translations: Translation[]
    __typename: 'OnlineStoreBlog'
}


/** A custom page on the Online Store. */
export interface OnlineStorePage {
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The translations associated with the resource. */
    translations: Translation[]
    __typename: 'OnlineStorePage'
}


/** Online Store preview URL of the object. */
export type OnlineStorePreviewable = (Product) & { __isUnion?: true }


/**
 * An order is a customer's request to purchase one or more products from a shop. You can retrieve and update orders using the `Order` object.
 * Learn more about
 * [editing an existing order with the GraphQL Admin API](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing).
 * 
 * Only the last 60 days' worth of orders from a store are accessible from the `Order` object by default. If you want to access older orders,
 * then you need to [request access to all orders](https://shopify.dev/api/usage/access-scopes#orders-permissions). If your app is granted
 * access, then you can add the `read_all_orders` scope to your app along with `read_orders` or `write_orders`.
 * [Private apps](https://shopify.dev/apps/auth/basic-http) are not affected by this change and are automatically granted the scope.
 * 
 * **Caution:** Only use this data if it's required for your app's functionality. Shopify will restrict [access to scopes](https://shopify.dev/api/usage/access-scopes) for apps that don't have a legitimate use for the associated data.
 * 
 */
export interface Order {
    /** A list of addtional fees applied to the order. */
    additionalFees: AdditionalFee[]
    /** A list of sales agreements associated with the order. */
    agreements: SalesAgreementConnection
    /**
     * A list of messages that appear on the order page in the Shopify admin.
     * 
     */
    alerts: ResourceAlert[]
    /** The application that created the order. */
    app?: OrderApp
    /** The billing address of the customer. */
    billingAddress?: MailingAddress
    /** Whether the billing address matches the shipping address. */
    billingAddressMatchesShippingAddress: Scalars['Boolean']
    /** Whether the order can be manually marked as paid. */
    canMarkAsPaid: Scalars['Boolean']
    /** Whether a customer email exists for the order. */
    canNotifyCustomer: Scalars['Boolean']
    /**
     * The reason provided when the order was canceled.
     * Returns `null` if the order wasn't canceled.
     * 
     */
    cancelReason?: OrderCancelReason
    /**
     * The date and time when the order was canceled.
     * Returns `null` if the order wasn't canceled.
     * 
     */
    cancelledAt?: Scalars['DateTime']
    /**
     * Whether payment for the order can be captured.
     * 
     */
    capturable: Scalars['Boolean']
    /**
     * @deprecated Use `cartDiscountAmountSet` instead.
     * The total order-level discount amount, before returns, in shop currency.
     */
    cartDiscountAmount?: Scalars['Money']
    /** The total order-level discount amount, before returns, in shop and presentment currencies. */
    cartDiscountAmountSet?: MoneyBag
    /**
     * @deprecated Use `publication` instead.
     * The channel that created the order.
     */
    channel?: Channel
    /** Details about the channel that created the order. */
    channelInformation?: ChannelInformation
    /** The IP address of the API client that created the order. */
    clientIp?: Scalars['String']
    /** Whether the order is closed. */
    closed: Scalars['Boolean']
    /**
     * The date and time when the order was closed.
     * Returns `null` if the order is not closed.
     * 
     */
    closedAt?: Scalars['DateTime']
    /**
     * A randomly generated alpha-numeric identifier for the order that may be shown to the customer
     * instead of the sequential order name. For example, "XPAV284CT", "R50KELTJP" or "35PKUN0UJ".
     * This value isn't guaranteed to be unique.
     * 
     */
    confirmationNumber?: Scalars['String']
    /** Whether inventory has been reserved for the order. */
    confirmed: Scalars['Boolean']
    /** Date and time when the order was created in Shopify. */
    createdAt: Scalars['DateTime']
    /** The shop currency when the order was placed. */
    currencyCode: CurrencyCode
    /**
     * The current order-level discount amount after all order updates, in shop and presentment currencies.
     * 
     */
    currentCartDiscountAmountSet: MoneyBag
    /** The sum of the quantities for all line items that contribute to the order's current subtotal price. */
    currentSubtotalLineItemsQuantity: Scalars['Int']
    /**
     * The sum of the prices for all line items after discounts and returns, in shop and presentment currencies.
     * If `taxesIncluded` is `true`, then the subtotal also includes tax.
     * 
     */
    currentSubtotalPriceSet: MoneyBag
    /**
     * A list of all tax lines applied to line items on the order, after returns.
     * Tax line prices represent the total price for all tax lines with the same `rate` and `title`.
     * 
     */
    currentTaxLines: TaxLine[]
    /**
     * The total amount of additional fees after returns, in shop and presentment currencies.
     * Returns `null` if there are no additional fees for the order.
     * 
     */
    currentTotalAdditionalFeesSet?: MoneyBag
    /**
     * The total amount discounted on the order after returns, in shop and presentment currencies.
     * This includes both order and line level discounts.
     * 
     */
    currentTotalDiscountsSet: MoneyBag
    /**
     * The total amount of duties after returns, in shop and presentment currencies.
     * Returns `null` if duties aren't applicable.
     * 
     */
    currentTotalDutiesSet?: MoneyBag
    /**
     * The total price of the order, after returns, in shop and presentment currencies.
     * This includes taxes and discounts.
     * 
     */
    currentTotalPriceSet: MoneyBag
    /**
     * The sum of the prices of all tax lines applied to line items on the order, after returns, in shop and presentment currencies.
     * 
     */
    currentTotalTaxSet: MoneyBag
    /** The total weight of the order after returns, in grams. */
    currentTotalWeight: Scalars['UnsignedInt64']
    /**
     * A list of the custom attributes added to the order.
     * 
     */
    customAttributes: Attribute[]
    /** The customer that placed the order. */
    customer?: Customer
    /** Whether the customer agreed to receive marketing materials. */
    customerAcceptsMarketing: Scalars['Boolean']
    /**
     * @deprecated Use `customerJourneySummary` instead.
     * The customer's visits and interactions with the online store before placing the order.
     * 
     */
    customerJourney?: CustomerJourney
    /**
     * The customer's visits and interactions with the online store before placing the order.
     * 
     */
    customerJourneySummary?: CustomerJourneySummary
    /**
     * A two-letter or three-letter language code, optionally followed by a region modifier.
     * 
     */
    customerLocale?: Scalars['String']
    /** A list of discounts that are applied to the order, not including order edits and refunds. */
    discountApplications: DiscountApplicationConnection
    /** The discount code used for the order. */
    discountCode?: Scalars['String']
    /** The discount codes used for the order. */
    discountCodes: Scalars['String'][]
    /**
     * The primary address of the customer.
     * Returns `null` if neither the shipping address nor the billing address was provided.
     * 
     */
    displayAddress?: MailingAddress
    /**
     * The financial status of the order that can be shown to the merchant.
     * This field does not capture all the details of an order's financial state. It should only be used for display summary purposes.
     * 
     */
    displayFinancialStatus?: OrderDisplayFinancialStatus
    /**
     * The fulfillment status for the order that can be shown to the merchant.
     * This field does not capture all the details of an order's fulfillment state. It should only be used for display summary purposes.
     * For a more granular view of the fulfillment status, refer to the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object.
     * 
     */
    displayFulfillmentStatus: OrderDisplayFulfillmentStatus
    /** A list of the disputes associated with the order. */
    disputes: OrderDisputeSummary[]
    /** Whether the order has had any edits applied. */
    edited: Scalars['Boolean']
    /** The email address associated with the customer. */
    email?: Scalars['String']
    /**
     * Whether taxes on the order are estimated.
     * This field returns `false` when taxes on the order are finalized and aren't subject to any changes.
     * 
     */
    estimatedTaxes: Scalars['Boolean']
    /** A list of events associated with the order. */
    events: EventConnection
    /** A list of ExchangeV2s for the order. */
    exchangeV2s: ExchangeV2Connection
    /**
     * Whether there are line items that can be fulfilled.
     * This field returns `false` when the order has no fulfillable line items.
     * For a more granular view of the fulfillment status, refer to the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object.
     * 
     */
    fulfillable: Scalars['Boolean']
    /**
     * A list of fulfillment orders for a specific order.
     * 
     * [FulfillmentOrder API access scopes](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder#api-access-scopes)
     * govern which fulfillments orders are returned.
     * An API client will only receive a subset of the fulfillment orders which belong to an order
     * if they don't have the necessary access scopes to view all of the fulfillment orders.
     * In the case that an API client does not have the access scopes necessary to view
     * any of the fulfillment orders that belong to an order, an empty array will be returned.
     * 
     */
    fulfillmentOrders: FulfillmentOrderConnection
    /** List of shipments for the order. */
    fulfillments: Fulfillment[]
    /** Whether the order has been paid in full. */
    fullyPaid: Scalars['Boolean']
    /** Whether the merchant added a timeline comment to the order. */
    hasTimelineComment: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.landingPageHtml` instead
     * The URL of the first page of the online store that the customer visited before they submitted the order.
     */
    landingPageDisplayText?: Scalars['String']
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.landingPage` instead
     * The first page of the online store that the customer visited before they submitted the order.
     */
    landingPageUrl?: Scalars['URL']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** A list of the order's line items. */
    lineItems: LineItemConnection
    /**
     * @deprecated Use `lineItems` instead.
     * A list of the order's line items.
     */
    lineItemsMutable: LineItemMutableConnection
    /** List of localization extensions for the resource. */
    localizationExtensions: LocalizationExtensionConnection
    /**
     * @deprecated Use `physicalLocation` instead.
     * The fulfillment location that was assigned when the order was created.
     * Use the [`FulfillmentOrder`](https://shopify.dev/api/admin-graphql/latest/objects/fulfillmentorder) object for up-to-date fulfillment location information.
     * 
     */
    location?: Scalars['String']
    /** Whether the order can be edited by the merchant. For example, canceled orders can’t be edited. */
    merchantEditable: Scalars['Boolean']
    /**
     * A list of reasons why the order can't be edited. For example, "Canceled orders can’t be edited".
     * 
     */
    merchantEditableErrors: Scalars['String'][]
    /** The application acting as the Merchant of Record for the order. */
    merchantOfRecordApp?: OrderApp
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * The unique identifier for the order that appears on the order page in the Shopify admin and the order status page.
     * For example, "#1001", "EN1001", or "1001-A".
     * This value isn't unique across multiple stores.
     * 
     */
    name: Scalars['String']
    /**
     * @deprecated Use `netPaymentSet` instead.
     * The net payment for the order, based on the total amount received minus the total amount refunded, in shop currency.
     * 
     */
    netPayment: Scalars['Money']
    /** The net payment for the order, based on the total amount received minus the total amount refunded, in shop and presentment currencies. */
    netPaymentSet: MoneyBag
    /**
     * A list of line items that can't be fulfilled.
     * For example, tips and fully refunded line items can't be fulfilled.
     * For a more granular view of the fulfillment status, refer to the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object.
     * 
     */
    nonFulfillableLineItems: LineItemConnection
    /**
     * The contents of the note associated with the order.
     * 
     */
    note?: Scalars['String']
    /**
     * The total amount of additional fees after returns, in shop and presentment currencies.
     * Returns `null` if there are no additional fees for the order.
     * 
     */
    originalTotalAdditionalFeesSet?: MoneyBag
    /**
     * The total amount of duties before returns, in shop and presentment currencies.
     * Returns `null` if duties aren't applicable.
     * 
     */
    originalTotalDutiesSet?: MoneyBag
    /** The total price of the order at the time of order creation, in shop and presentment currencies. */
    originalTotalPriceSet: MoneyBag
    /** The payment collection details for the order. */
    paymentCollectionDetails: OrderPaymentCollectionDetails
    /**
     * A list of the names of all payment gateways used for the order.
     * For example, "Shopify Payments" and "Cash on Delivery (COD)".
     * 
     */
    paymentGatewayNames: Scalars['String'][]
    /** The payment terms associated with the order. */
    paymentTerms?: PaymentTerms
    /** The phone number associated with the customer. */
    phone?: Scalars['String']
    /**
     * The fulfillment location that was assigned when the order was created.
     * Use the [`FulfillmentOrder`](https://shopify.dev/api/admin-graphql/latest/objects/fulfillmentorder) object for up to date fulfillment location information.
     * 
     */
    physicalLocation?: Location
    /** The PO number associated with the order. */
    poNumber?: Scalars['String']
    /** The payment `CurrencyCode` of the customer for the order. */
    presentmentCurrencyCode: CurrencyCode
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /**
     * The date and time when the order was processed.
     * This date and time might not match the date and time when the order was created.
     * 
     */
    processedAt: Scalars['DateTime']
    /** The publication that the order was created from. */
    publication?: Publication
    /** The purchasing entity for the order. */
    purchasingEntity?: PurchasingEntity
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.referralCode` instead
     * The marketing referral code from the link that the customer clicked to visit the store.
     * Supports the following URL attributes: "ref", "source", or "r".
     * For example, if the URL is `{shop}.myshopify.com/products/slide?ref=j2tj1tn2`, then this value is `j2tj1tn2`.
     * 
     */
    referralCode?: Scalars['String']
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.referralInfoHtml` instead
     * A web domain or short description of the source that sent the customer to your online store. For example, "shopify.com" or "email".
     * 
     */
    referrerDisplayText?: Scalars['String']
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.referrerUrl` instead
     * The URL of the webpage where the customer clicked a link that sent them to your online store.
     * 
     */
    referrerUrl?: Scalars['URL']
    /** The difference between the suggested and actual refund amount of all refunds that have been applied to the order. A positive value indicates a difference in the merchant's favor, and a negative value indicates a difference in the customer's favor. */
    refundDiscrepancySet: MoneyBag
    /**
     * Whether the order can be refunded.
     * 
     */
    refundable: Scalars['Boolean']
    /** A list of refunds that have been applied to the order. */
    refunds: Refund[]
    /** The URL of the source that the order originated from, if found in the domain registry. */
    registeredSourceUrl?: Scalars['URL']
    /**
     * Whether the order has shipping lines or at least one line item on the order that requires shipping.
     * 
     */
    requiresShipping: Scalars['Boolean']
    /**
     * Whether any line item on the order can be restocked.
     * 
     */
    restockable: Scalars['Boolean']
    /** The order's aggregated return status for display purposes. */
    returnStatus: OrderReturnStatus
    /** A list of returns for the order. */
    returns: ReturnConnection
    /** The fraud risk level of the order. */
    riskLevel: OrderRiskLevel
    /** A list of risks associated with the order. */
    risks: OrderRisk[]
    /** The mailing address of the customer. */
    shippingAddress?: MailingAddress
    /** A summary of all shipping costs on the order. */
    shippingLine?: ShippingLine
    /** A list of the order's shipping lines. */
    shippingLines: ShippingLineConnection
    /**
     * A unique POS or third party order identifier.
     * For example, "1234-12-1000" or "111-98567-54". The `receipt_number` field is derived from this value for POS orders.
     * 
     */
    sourceIdentifier?: Scalars['String']
    /** The sum of the quantities for all line items that contribute to the order's subtotal price. */
    subtotalLineItemsQuantity: Scalars['Int']
    /**
     * @deprecated Use `subtotalPriceSet` instead.
     * The sum of the prices for all line items after discounts and before returns, in shop currency.
     * If `taxesIncluded` is `true`, then the subtotal also includes tax.
     * 
     */
    subtotalPrice?: Scalars['Money']
    /**
     * The sum of the prices for all line items after discounts and before returns, in shop and presentment currencies.
     * If `taxesIncluded` is `true`, then the subtotal also includes tax.
     * 
     */
    subtotalPriceSet?: MoneyBag
    /** A suggested refund for the order. */
    suggestedRefund?: SuggestedRefund
    /**
     * A comma separated list of tags associated with the order. Updating `tags` overwrites
     * any existing tags that were previously added to the order. To add new tags without overwriting
     * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
     * mutation.
     * 
     */
    tags: Scalars['String'][]
    /** Whether taxes are exempt on the order. */
    taxExempt: Scalars['Boolean']
    /**
     * A list of all tax lines applied to line items on the order, before returns.
     * Tax line prices represent the total price for all tax lines with the same `rate` and `title`.
     * 
     */
    taxLines: TaxLine[]
    /** Whether taxes are included in the subtotal price of the order. */
    taxesIncluded: Scalars['Boolean']
    /**
     * Whether the order is a test.
     * Test orders are made using the Shopify Bogus Gateway or a payment provider with test mode enabled.
     * A test order cannot be converted into a real order and vice versa.
     * 
     */
    test: Scalars['Boolean']
    /**
     * @deprecated Use `totalCapturableSet` instead.
     * The authorized amount that is uncaptured or undercaptured, in shop currency.
     * This amount isn't adjusted for returns.
     * 
     */
    totalCapturable: Scalars['Money']
    /**
     * The authorized amount that is uncaptured or undercaptured, in shop and presentment currencies.
     * This amount isn't adjusted for returns.
     * 
     */
    totalCapturableSet: MoneyBag
    /**
     * @deprecated Use `totalDiscountsSet` instead.
     * The total amount discounted on the order before returns, in shop currency.
     * This includes both order and line level discounts.
     * 
     */
    totalDiscounts?: Scalars['Money']
    /**
     * The total amount discounted on the order before returns, in shop and presentment currencies.
     * This includes both order and line level discounts.
     * 
     */
    totalDiscountsSet?: MoneyBag
    /**
     * The total amount not yet transacted for the order, in shop and presentment currencies.
     * A positive value indicates a difference in the merchant's favor (payment from customer to merchant) and a negative value indicates a difference in the customer's favor (refund from merchant to customer).
     * 
     */
    totalOutstandingSet: MoneyBag
    /**
     * @deprecated Use `totalPriceSet` instead.
     * The total price of the order, before returns, in shop currency.
     * This includes taxes and discounts.
     * 
     */
    totalPrice: Scalars['Money']
    /**
     * The total price of the order, before returns, in shop and presentment currencies.
     * This includes taxes and discounts.
     * 
     */
    totalPriceSet: MoneyBag
    /**
     * @deprecated Use `totalReceivedSet` instead.
     * The total amount received from the customer before returns, in shop currency.
     */
    totalReceived: Scalars['Money']
    /** The total amount received from the customer before returns, in shop and presentment currencies. */
    totalReceivedSet: MoneyBag
    /**
     * @deprecated Use `totalRefundedSet` instead.
     * The total amount that was refunded, in shop currency.
     */
    totalRefunded: Scalars['Money']
    /** The total amount that was refunded, in shop and presentment currencies. */
    totalRefundedSet: MoneyBag
    /** The total amount of shipping that was refunded, in shop and presentment currencies. */
    totalRefundedShippingSet: MoneyBag
    /**
     * @deprecated Use `totalShippingPriceSet` instead.
     * The total shipping amount before discounts and returns, in shop currency.
     */
    totalShippingPrice: Scalars['Money']
    /** The total shipping amount before discounts and returns, in shop and presentment currencies. */
    totalShippingPriceSet: MoneyBag
    /**
     * @deprecated Use `totalTaxSet` instead.
     * The total tax amount before returns, in shop currency.
     */
    totalTax?: Scalars['Money']
    /** The total tax amount before returns, in shop and presentment currencies. */
    totalTaxSet?: MoneyBag
    /**
     * @deprecated Use `totalTipReceivedSet` instead.
     * The sum of all tip amounts for the order, in shop currency.
     */
    totalTipReceived: MoneyV2
    /** The sum of all tip amounts for the order, in shop and presentment currencies. */
    totalTipReceivedSet: MoneyBag
    /** The total weight of the order before returns, in grams. */
    totalWeight?: Scalars['UnsignedInt64']
    /** A list of transactions associated with the order. */
    transactions: OrderTransaction[]
    /**
     * Whether no payments have been made for the order.
     * 
     */
    unpaid: Scalars['Boolean']
    /** The date and time when the order was modified last. */
    updatedAt: Scalars['DateTime']
    __typename: 'Order'
}


/**
 * The possible order action types for a
 * [sales agreement](https://shopify.dev/api/admin-graphql/latest/interfaces/salesagreement).
 * 
 */
export type OrderActionType = 'ORDER' | 'ORDER_EDIT' | 'REFUND' | 'UNKNOWN'


/** An agreement associated with an order placement. */
export interface OrderAgreement {
    /** The application that created the agreement. */
    app?: App
    /** The date and time at which the agreement occured. */
    happenedAt: Scalars['DateTime']
    /** The unique ID for the agreement. */
    id: Scalars['ID']
    /** The order associated with the agreement. */
    order: Order
    /** The reason the agremeent was created. */
    reason: OrderActionType
    /** The sales associated with the agreement. */
    sales: SaleConnection
    /** The staff member associated with the agreement. */
    user?: StaffMember
    __typename: 'OrderAgreement'
}


/**
 * The [application](https://shopify.dev/apps) that created the order.
 * 
 */
export interface OrderApp {
    /** The application icon. */
    icon: Image
    /** The application ID. */
    id: Scalars['ID']
    /** The name of the application. */
    name: Scalars['String']
    __typename: 'OrderApp'
}


/** Represents the reason for the order's cancellation. */
export type OrderCancelReason = 'CUSTOMER' | 'DECLINED' | 'FRAUD' | 'INVENTORY' | 'OTHER'


/** Return type for `orderCapture` mutation. */
export interface OrderCapturePayload {
    /** The created capture transaction. */
    transaction?: OrderTransaction
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderCapturePayload'
}


/** Return type for `orderClose` mutation. */
export interface OrderClosePayload {
    /** The closed order. */
    order?: Order
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderClosePayload'
}


/**
 * An auto-generated type for paginating through multiple Orders.
 * 
 */
export interface OrderConnection {
    /** A list of edges. */
    edges: OrderEdge[]
    /** A list of the nodes contained in OrderEdge. */
    nodes: Order[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'OrderConnection'
}


/** Return type for `orderCreateMandatePayment` mutation. */
export interface OrderCreateMandatePaymentPayload {
    /** The async job used for charging the payment. */
    job?: Job
    /** The Unique ID for the created payment. */
    paymentReferenceId?: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: OrderCreateMandatePaymentUserError[]
    __typename: 'OrderCreateMandatePaymentPayload'
}


/** An error that occurs during the execution of `OrderCreateMandatePayment`. */
export interface OrderCreateMandatePaymentUserError {
    /** The error code. */
    code?: OrderCreateMandatePaymentUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'OrderCreateMandatePaymentUserError'
}


/** Possible error codes that can be returned by `OrderCreateMandatePaymentUserError`. */
export type OrderCreateMandatePaymentUserErrorCode = 'ORDER_MANDATE_PAYMENT_ERROR_CODE'


/** Represents the order's current financial status. */
export type OrderDisplayFinancialStatus = 'PENDING' | 'AUTHORIZED' | 'PARTIALLY_PAID' | 'PARTIALLY_REFUNDED' | 'VOIDED' | 'PAID' | 'REFUNDED' | 'EXPIRED'


/** Represents the order's aggregated fulfillment status for display purposes. */
export type OrderDisplayFulfillmentStatus = 'UNFULFILLED' | 'PARTIALLY_FULFILLED' | 'FULFILLED' | 'RESTOCKED' | 'PENDING_FULFILLMENT' | 'OPEN' | 'IN_PROGRESS' | 'ON_HOLD' | 'SCHEDULED'


/** A summary of the important details for a dispute on an order. */
export interface OrderDisputeSummary {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The type that the dispute was initiated as. */
    initiatedAs: DisputeType
    /** The current status of the dispute. */
    status: DisputeStatus
    __typename: 'OrderDisputeSummary'
}


/**
 * An auto-generated type which holds one Order and a cursor during pagination.
 * 
 */
export interface OrderEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of OrderEdge. */
    node: Order
    __typename: 'OrderEdge'
}


/** Return type for `orderEditAddCustomItem` mutation. */
export interface OrderEditAddCustomItemPayload {
    /** The custom line item that will be added to the order based on the current edits. */
    calculatedLineItem?: CalculatedLineItem
    /** An order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditAddCustomItemPayload'
}


/** Return type for `orderEditAddLineItemDiscount` mutation. */
export interface OrderEditAddLineItemDiscountPayload {
    /** The discount applied to a line item during this order edit. */
    addedDiscountStagedChange?: OrderStagedChangeAddLineItemDiscount
    /** The line item with the edits applied but not saved. */
    calculatedLineItem?: CalculatedLineItem
    /** An order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditAddLineItemDiscountPayload'
}


/** Return type for `orderEditAddVariant` mutation. */
export interface OrderEditAddVariantPayload {
    /**
     * The [calculated line item](https://shopify.dev/api/admin-graphql/latest/objects/calculatedlineitem)
     * that's added during this order edit.
     * 
     */
    calculatedLineItem?: CalculatedLineItem
    /**
     * The [calculated order](https://shopify.dev/api/admin-graphql/latest/objects/calculatedorder)
     * with the edits applied but not saved.
     * 
     */
    calculatedOrder?: CalculatedOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditAddVariantPayload'
}


/** An agreement associated with an edit to the order. */
export interface OrderEditAgreement {
    /** The application that created the agreement. */
    app?: App
    /** The date and time at which the agreement occured. */
    happenedAt: Scalars['DateTime']
    /** The unique ID for the agreement. */
    id: Scalars['ID']
    /** The reason the agremeent was created. */
    reason: OrderActionType
    /** The sales associated with the agreement. */
    sales: SaleConnection
    /** The staff member associated with the agreement. */
    user?: StaffMember
    __typename: 'OrderEditAgreement'
}


/** Return type for `orderEditBegin` mutation. */
export interface OrderEditBeginPayload {
    /** The order that will be edited. */
    calculatedOrder?: CalculatedOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditBeginPayload'
}


/** Return type for `orderEditCommit` mutation. */
export interface OrderEditCommitPayload {
    /** The order with changes applied. */
    order?: Order
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditCommitPayload'
}


/** Return type for `orderEditRemoveLineItemDiscount` mutation. */
export interface OrderEditRemoveLineItemDiscountPayload {
    /** The calculated line item after removal of the discount. */
    calculatedLineItem?: CalculatedLineItem
    /** An order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditRemoveLineItemDiscountPayload'
}


/** Return type for `orderEditSetQuantity` mutation. */
export interface OrderEditSetQuantityPayload {
    /** The calculated line item with the edits applied but not saved. */
    calculatedLineItem?: CalculatedLineItem
    /** The calculated order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrder
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderEditSetQuantityPayload'
}


/** Return type for `orderInvoiceSend` mutation. */
export interface OrderInvoiceSendPayload {
    /** The order associated with the invoice email. */
    order?: Order
    /** The list of errors that occurred from executing the mutation. */
    userErrors: OrderInvoiceSendUserError[]
    __typename: 'OrderInvoiceSendPayload'
}


/** An error that occurs during the execution of `OrderInvoiceSend`. */
export interface OrderInvoiceSendUserError {
    /** The error code. */
    code?: OrderInvoiceSendUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'OrderInvoiceSendUserError'
}


/** Possible error codes that can be returned by `OrderInvoiceSendUserError`. */
export type OrderInvoiceSendUserErrorCode = 'ORDER_INVOICE_SEND_UNSUCCESSFUL'


/** Return type for `orderMarkAsPaid` mutation. */
export interface OrderMarkAsPaidPayload {
    /** The order marked as paid. */
    order?: Order
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderMarkAsPaidPayload'
}


/** Return type for `orderOpen` mutation. */
export interface OrderOpenPayload {
    /** The opened order. */
    order?: Order
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderOpenPayload'
}


/** The payment collection details for an order that requires additional payment following an edit to the order. */
export interface OrderPaymentCollectionDetails {
    /** The URL to use for collecting an additional payment on the order. */
    additionalPaymentCollectionUrl?: Scalars['URL']
    /** The list of vaulted payment methods for the order with their permissions. */
    vaultedPaymentMethods?: PaymentMandate[]
    __typename: 'OrderPaymentCollectionDetails'
}


/** The status of a customer's payment for an order. */
export interface OrderPaymentStatus {
    /** A message describing an error during the asynchronous processing of a payment. */
    errorMessage?: Scalars['String']
    /** The ID of the payment, initially returned by an `orderCreateMandatePayment` or `orderCreatePayment` mutation. */
    paymentReferenceId: Scalars['String']
    /** The status of the payment. */
    status: OrderPaymentStatusResult
    /** A translated message describing an error during the asynchronous processing of a payment. */
    translatedErrorMessage?: Scalars['String']
    __typename: 'OrderPaymentStatus'
}


/** The type of a payment status. */
export type OrderPaymentStatusResult = 'SUCCESS' | 'AUTHORIZED' | 'VOIDED' | 'REFUNDED' | 'CAPTURED' | 'PURCHASED' | 'ERROR' | 'PROCESSING' | 'REDIRECT_REQUIRED' | 'RETRYABLE' | 'UNKNOWN'


/**
 * The order's aggregated return status that's used for display purposes.
 * An order might have multiple returns, so this field communicates the prioritized return status.
 * The `OrderReturnStatus` enum is a supported filter parameter in the [`orders` query](https://shopify.dev/api/admin-graphql/latest/queries/orders#:~:text=reference_location_id-,return_status,-risk_level).
 * 
 */
export type OrderReturnStatus = 'IN_PROGRESS' | 'INSPECTION_COMPLETE' | 'NO_RETURN' | 'RETURNED' | 'RETURN_FAILED' | 'RETURN_REQUESTED'


/** Represents a fraud check on an order. */
export interface OrderRisk {
    /** Whether the risk level is shown in the Shopify admin. If false, then this order risk is ignored when Shopify determines the overall risk level for the order. */
    display: Scalars['Boolean']
    /**
     * The likelihood that an order is fraudulent, based on this order risk.
     * 
     * The level can be set by Shopify risk analysis or by an app.
     * 
     */
    level?: OrderRiskLevel
    /** The risk message that's shown to the merchant in the Shopify admin. */
    message?: Scalars['String']
    __typename: 'OrderRisk'
}


/** The likelihood that an order is fraudulent. */
export type OrderRiskLevel = 'LOW' | 'MEDIUM' | 'HIGH'


/** The set of valid sort keys for the Order query. */
export type OrderSortKeys = 'CREATED_AT' | 'CUSTOMER_NAME' | 'DESTINATION' | 'FINANCIAL_STATUS' | 'FULFILLMENT_STATUS' | 'ORDER_NUMBER' | 'PROCESSED_AT' | 'TOTAL_ITEMS_QUANTITY' | 'TOTAL_PRICE' | 'UPDATED_AT' | 'PO_NUMBER' | 'ID' | 'RELEVANCE'


/**
 * A change that has been applied to an order.
 * 
 */
export type OrderStagedChange = (OrderStagedChangeAddCustomItem | OrderStagedChangeAddLineItemDiscount | OrderStagedChangeAddShippingLine | OrderStagedChangeAddVariant | OrderStagedChangeDecrementItem | OrderStagedChangeIncrementItem) & { __isUnion?: true }


/**
 * A change to the order representing the addition of a
 * custom line item. For example, you might want to add gift wrapping service
 * as a custom line item.
 * 
 */
export interface OrderStagedChangeAddCustomItem {
    /** The price of an individual item without any discounts applied. This value cannot be negative. */
    originalUnitPrice: MoneyV2
    /** The quantity of the custom item to add to the order. This value must be greater than zero. */
    quantity: Scalars['Int']
    /** The title of the custom item. */
    title: Scalars['String']
    __typename: 'OrderStagedChangeAddCustomItem'
}


/**
 * The discount applied to an item that was added during the current order edit.
 * 
 */
export interface OrderStagedChangeAddLineItemDiscount {
    /** The description of the discount. */
    description: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The pricing value of the discount. */
    value: PricingValue
    __typename: 'OrderStagedChangeAddLineItemDiscount'
}


/**
 * A new [shipping line](https://shopify.dev/api/admin-graphql/latest/objects/shippingline)
 * added as part of an order edit.
 * 
 */
export interface OrderStagedChangeAddShippingLine {
    /** The phone number at the shipping address. */
    phone?: Scalars['String']
    /**
     * The shipping line's title that is shown to the buyer.
     * 
     */
    presentmentTitle?: Scalars['String']
    /** The price that applies to the shipping line. */
    price: MoneyV2
    /** The title of the shipping line. */
    title?: Scalars['String']
    __typename: 'OrderStagedChangeAddShippingLine'
}


/**
 * A change to the order representing the addition of an existing product variant.
 * 
 */
export interface OrderStagedChangeAddVariant {
    /** The quantity of the product variant that was added. */
    quantity: Scalars['Int']
    /** The product variant that was added. */
    variant: ProductVariant
    __typename: 'OrderStagedChangeAddVariant'
}


/**
 * An auto-generated type for paginating through multiple OrderStagedChanges.
 * 
 */
export interface OrderStagedChangeConnection {
    /** A list of edges. */
    edges: OrderStagedChangeEdge[]
    /** A list of the nodes contained in OrderStagedChangeEdge. */
    nodes: OrderStagedChange[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'OrderStagedChangeConnection'
}


/**
 * An removal of items from an existing line item on the order.
 * 
 */
export interface OrderStagedChangeDecrementItem {
    /** The number of items removed. */
    delta: Scalars['Int']
    /** The original line item. */
    lineItem: LineItem
    /** The intention to restock the removed items. */
    restock: Scalars['Boolean']
    __typename: 'OrderStagedChangeDecrementItem'
}


/**
 * An auto-generated type which holds one OrderStagedChange and a cursor during pagination.
 * 
 */
export interface OrderStagedChangeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of OrderStagedChangeEdge. */
    node: OrderStagedChange
    __typename: 'OrderStagedChangeEdge'
}


/**
 * An addition of items to an existing line item on the order.
 * 
 */
export interface OrderStagedChangeIncrementItem {
    /** The number of items added. */
    delta: Scalars['Int']
    /** The original line item. */
    lineItem: LineItem
    __typename: 'OrderStagedChangeIncrementItem'
}


/**
 * A payment transaction in the context of an order.
 * 
 */
export interface OrderTransaction {
    /** The masked account number associated with the payment method. */
    accountNumber?: Scalars['String']
    /**
     * @deprecated Use `amountSet` instead.
     * The amount of money.
     */
    amount: Scalars['Money']
    /** The amount and currency of the transaction in shop and presentment currencies. */
    amountSet: MoneyBag
    /**
     * @deprecated Use `amountSet` instead.
     * The amount and currency of the transaction.
     */
    amountV2: MoneyV2
    /** Authorization code associated with the transaction. */
    authorizationCode?: Scalars['String']
    /**
     * The time when the authorization expires. This field is available only to stores on a Shopify Plus plan and is populated only for Shopify Payments authorizations.
     * 
     */
    authorizationExpiresAt?: Scalars['DateTime']
    /** Date and time when the transaction was created. */
    createdAt: Scalars['DateTime']
    /** A standardized error code, independent of the payment provider. */
    errorCode?: OrderTransactionErrorCode
    /**
     * The transaction fees charged on the order transaction. Only present for Shopify Payments transactions.
     * 
     */
    fees: TransactionFee[]
    /** The human-readable payment gateway name used to process the transaction. */
    formattedGateway?: Scalars['String']
    /** The payment gateway used to process the transaction. */
    gateway?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The kind of transaction. */
    kind: OrderTransactionKind
    /** Whether the transaction can be manually captured. */
    manuallyCapturable: Scalars['Boolean']
    /**
     * @deprecated Use `maximumRefundableV2` instead.
     * Specifies the available amount to refund on the gateway.
     * This value is only available for transactions of type `SuggestedRefund`.
     * 
     */
    maximumRefundable?: Scalars['Money']
    /**
     * Specifies the available amount with currency to refund on the gateway.
     * This value is only available for transactions of type `SuggestedRefund`.
     * 
     */
    maximumRefundableV2?: MoneyV2
    /** The associated order. */
    order?: Order
    /** The associated parent transaction, for example the authorization of a capture. */
    parentTransaction?: OrderTransaction
    /** The payment details for the transaction. */
    paymentDetails?: PaymentDetails
    /** The payment icon to display for the transaction. */
    paymentIcon?: Image
    /** The payment ID associated with the transaction. */
    paymentId?: Scalars['String']
    /**
     * @deprecated Use `paymentIcon` instead.
     * The payment method used for the transaction. This value is `null` if the payment method is unknown.
     */
    paymentMethod?: PaymentMethods
    /** Date and time when the transaction was processed. */
    processedAt?: Scalars['DateTime']
    /**
     * @deprecated Use `receiptJson` instead.
     * The transaction receipt that the payment gateway attaches to the transaction.
     * The value of this field depends on which payment gateway processed the transaction.
     * 
     */
    receipt?: Scalars['String']
    /**
     * The transaction receipt that the payment gateway attaches to the transaction.
     * The value of this field depends on which payment gateway processed the transaction.
     * 
     */
    receiptJson?: Scalars['JSON']
    /** The settlement currency. */
    settlementCurrency?: CurrencyCode
    /** The rate used when converting the transaction amount to settlement currency. */
    settlementCurrencyRate?: Scalars['Decimal']
    /**
     * Contains all Shopify Payments information related to an order transaction. This field is available only to stores on a Shopify Plus plan.
     * 
     */
    shopifyPaymentsSet?: ShopifyPaymentsTransactionSet
    /** The status of this transaction. */
    status: OrderTransactionStatus
    /** Whether the transaction is a test transaction. */
    test: Scalars['Boolean']
    /**
     * @deprecated Use `totalUnsettledSet` instead.
     * Specifies the available amount to capture on the gateway.
     * Only available when an amount is capturable or manually mark as paid.
     * 
     */
    totalUnsettled?: Scalars['Money']
    /**
     * Specifies the available amount with currency to capture on the gateway in shop and presentment currencies.
     * Only available when an amount is capturable or manually mark as paid.
     * 
     */
    totalUnsettledSet?: MoneyBag
    /**
     * @deprecated Use `totalUnsettledSet` instead.
     * Specifies the available amount with currency to capture on the gateway.
     * Only available when an amount is capturable or manually mark as paid.
     * 
     */
    totalUnsettledV2?: MoneyV2
    /** Staff member who was logged into the Shopify POS device when the transaction was processed. */
    user?: StaffMember
    __typename: 'OrderTransaction'
}


/**
 * An auto-generated type for paginating through multiple OrderTransactions.
 * 
 */
export interface OrderTransactionConnection {
    /** A list of edges. */
    edges: OrderTransactionEdge[]
    /** A list of the nodes contained in OrderTransactionEdge. */
    nodes: OrderTransaction[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'OrderTransactionConnection'
}


/**
 * An auto-generated type which holds one OrderTransaction and a cursor during pagination.
 * 
 */
export interface OrderTransactionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of OrderTransactionEdge. */
    node: OrderTransaction
    __typename: 'OrderTransactionEdge'
}


/** A standardized error code, independent of the payment provider. */
export type OrderTransactionErrorCode = 'INCORRECT_NUMBER' | 'INVALID_NUMBER' | 'INVALID_EXPIRY_DATE' | 'INVALID_CVC' | 'EXPIRED_CARD' | 'INCORRECT_CVC' | 'INCORRECT_ZIP' | 'INCORRECT_ADDRESS' | 'INCORRECT_PIN' | 'CARD_DECLINED' | 'PROCESSING_ERROR' | 'CALL_ISSUER' | 'PICK_UP_CARD' | 'CONFIG_ERROR' | 'TEST_MODE_LIVE_CARD' | 'UNSUPPORTED_FEATURE' | 'GENERIC_ERROR' | 'INVALID_COUNTRY' | 'INVALID_AMOUNT' | 'PAYMENT_METHOD_UNAVAILABLE' | 'AMAZON_PAYMENTS_INVALID_PAYMENT_METHOD' | 'AMAZON_PAYMENTS_MAX_AMOUNT_CHARGED' | 'AMAZON_PAYMENTS_MAX_AMOUNT_REFUNDED' | 'AMAZON_PAYMENTS_MAX_AUTHORIZATIONS_CAPTURED' | 'AMAZON_PAYMENTS_MAX_REFUNDS_PROCESSED' | 'AMAZON_PAYMENTS_ORDER_REFERENCE_CANCELED' | 'AMAZON_PAYMENTS_STALE'


/** The different kinds of order transactions. */
export type OrderTransactionKind = 'SALE' | 'CAPTURE' | 'AUTHORIZATION' | 'VOID' | 'REFUND' | 'CHANGE' | 'EMV_AUTHORIZATION' | 'SUGGESTED_REFUND'


/** The different states that an `OrderTransaction` can have. */
export type OrderTransactionStatus = 'SUCCESS' | 'FAILURE' | 'PENDING' | 'ERROR' | 'AWAITING_RESPONSE' | 'UNKNOWN'


/** Return type for `orderUpdate` mutation. */
export interface OrderUpdatePayload {
    /** The updated order. */
    order?: Order
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'OrderUpdatePayload'
}


/**
 * Returns information about pagination in a connection, in accordance with the
 * [Relay specification](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo).
 * For more information, please read our [GraphQL Pagination Usage Guide](https://shopify.dev/api/usage/pagination-graphql).
 * 
 */
export interface PageInfo {
    /** The cursor corresponding to the last node in edges. */
    endCursor?: Scalars['String']
    /** Whether there are more pages to fetch following the current page. */
    hasNextPage: Scalars['Boolean']
    /** Whether there are any pages prior to the current page. */
    hasPreviousPage: Scalars['Boolean']
    /** The cursor corresponding to the first node in edges. */
    startCursor?: Scalars['String']
    __typename: 'PageInfo'
}


/** A ShopifyQL parsing error. */
export interface ParseError {
    /** An error code for the error. */
    code: ParseErrorCode
    /** The description of the parsing error. */
    message: Scalars['String']
    /** The start and end range for the error. */
    range?: ParseErrorRange
    __typename: 'ParseError'
}


/** ShopifyQL parsing errors. */
export type ParseErrorCode = 'SYNTAX_NOT_RECOGNIZED' | 'SEMANTICALLY_INVALID' | 'TABLE_NOT_FOUND' | 'COLUMN_NOT_FOUND' | 'VALUE_NOT_PARSABLE' | 'DATE_NOT_PARSABLE' | 'DATE_TIME_NOT_PARSABLE' | 'DATE_INTERVAL_NOT_FOUND' | 'NAMED_DATE_NOT_FOUND' | 'SORT_FIELD_NOT_FOUND' | 'LIMIT_INVALID' | 'VISUALIZE_CHART_TYPE_NOT_FOUND' | 'FUNCTION_MODIFIER_NOT_FOUND' | 'FUNCTION_ARGUMENTS_NOT_FOUND' | 'FUNCTION_EXCESS_ARGUMENTS' | 'FROM_NOT_FOUND' | 'PRESENTMENT_NOT_FOUND' | 'EXCESS_PRESENTMENTS' | 'FUNCTION_INCOMPATIBLE_TYPES' | 'VISUALIZE_EXCESS_PROJECTIONS' | 'UNKNOWN' | 'OPERATOR_INCOMPATIBLE_TYPES' | 'VISUALIZE_INCOMPATIBLE_TYPES' | 'VISUALIZE_GROUP_BY_NOT_FOUND' | 'VISUALIZE_GROUP_BY_MIXED_BACKFILL' | 'MIXED_AGGREGATE_AND_NON_AGGREGATE' | 'FUNCTION_NESTED_AGGREGATE' | 'TIME_FUNCTION_NOT_FOUND' | 'LIST_MIXED_ARGUMENT_TYPES' | 'EXCESS_PERIODS' | 'SYNTAX_INVALID_TOKEN' | 'SYNTAX_NO_VIABLE_ALTERNATIVE' | 'COMPARE_TO_INVALID_PERIOD' | 'COMPARE_TO_INCOMPATIBLE_PERIOD' | 'UNBACKFILLED_TIME_GROUP_BY_COMPARISON' | 'COMPARISON_WITH_NON_AGGREGATE_FIELDS' | 'REQUIRED_GROUP_BY_NOT_FOUND' | 'SYNTAX_INPUT_MISMATCH' | 'SYNTAX_UNWANTED_TOKEN' | 'SYNTAX_MISSING_TOKEN' | 'FUNCTION_NOT_FOUND' | 'INVALID_DATE_RANGE' | 'EXCESS_BACKFILL_DIMENSIONS' | 'BACKFILL_DATE_RANGE_NOT_FOUND' | 'COMPARE_TO_MISSING_PERIOD' | 'EXCESS_DIMENSIONS' | 'SYNTAX_FAILED_PREDICATE'


/** A range of ShopifyQL parsing errors. */
export interface ParseErrorRange {
    /** The ending position of the error. */
    end: ErrorPosition
    /** The starting position of the error. */
    start: ErrorPosition
    __typename: 'ParseErrorRange'
}


/** A payment customization. */
export interface PaymentCustomization {
    /** The enabled status of the payment customization. */
    enabled: Scalars['Boolean']
    /** The error history on the most recent version of the payment customization. */
    errorHistory?: FunctionsErrorHistory
    /** The ID of the Shopify Function implementing the payment customization. */
    functionId: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The Shopify Function implementing the payment customization. */
    shopifyFunction: ShopifyFunction
    /** The title of the payment customization. */
    title: Scalars['String']
    __typename: 'PaymentCustomization'
}


/** Return type for `paymentCustomizationActivation` mutation. */
export interface PaymentCustomizationActivationPayload {
    /** The IDs of the updated payment customizations. */
    ids?: Scalars['String'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentCustomizationError[]
    __typename: 'PaymentCustomizationActivationPayload'
}


/**
 * An auto-generated type for paginating through multiple PaymentCustomizations.
 * 
 */
export interface PaymentCustomizationConnection {
    /** A list of edges. */
    edges: PaymentCustomizationEdge[]
    /** A list of the nodes contained in PaymentCustomizationEdge. */
    nodes: PaymentCustomization[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PaymentCustomizationConnection'
}


/** Return type for `paymentCustomizationCreate` mutation. */
export interface PaymentCustomizationCreatePayload {
    /** Returns the created payment customization. */
    paymentCustomization?: PaymentCustomization
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentCustomizationError[]
    __typename: 'PaymentCustomizationCreatePayload'
}


/** Return type for `paymentCustomizationDelete` mutation. */
export interface PaymentCustomizationDeletePayload {
    /** Returns the deleted payment customization ID. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentCustomizationError[]
    __typename: 'PaymentCustomizationDeletePayload'
}


/**
 * An auto-generated type which holds one PaymentCustomization and a cursor during pagination.
 * 
 */
export interface PaymentCustomizationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PaymentCustomizationEdge. */
    node: PaymentCustomization
    __typename: 'PaymentCustomizationEdge'
}


/** An error that occurs during the execution of a payment customization mutation. */
export interface PaymentCustomizationError {
    /** The error code. */
    code?: PaymentCustomizationErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PaymentCustomizationError'
}


/** Possible error codes that can be returned by `PaymentCustomizationError`. */
export type PaymentCustomizationErrorCode = 'INVALID' | 'FUNCTION_NOT_FOUND' | 'PAYMENT_CUSTOMIZATION_NOT_FOUND' | 'PAYMENT_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE' | 'MAXIMUM_ACTIVE_PAYMENT_CUSTOMIZATIONS' | 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' | 'FUNCTION_DOES_NOT_IMPLEMENT' | 'FUNCTION_PENDING_DELETION' | 'FUNCTION_ID_CANNOT_BE_CHANGED' | 'REQUIRED_INPUT_FIELD' | 'INVALID_METAFIELDS'


/** Return type for `paymentCustomizationUpdate` mutation. */
export interface PaymentCustomizationUpdatePayload {
    /** Returns the updated payment customization. */
    paymentCustomization?: PaymentCustomization
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentCustomizationError[]
    __typename: 'PaymentCustomizationUpdatePayload'
}


/** Payment details related to a transaction. */
export type PaymentDetails = (CardPaymentDetails) & { __isUnion?: true }


/** All possible instrument outputs for Payment Mandates. */
export type PaymentInstrument = (VaultCreditCard | VaultPaypalBillingAgreement) & { __isUnion?: true }


/**
 * A payment instrument and the permission
 * the owner of the instrument gives to the merchant to debit it.
 * 
 */
export interface PaymentMandate {
    /** The unique ID of a payment mandate. */
    id: Scalars['ID']
    /** The outputs details of the payment instrument. */
    paymentInstrument: PaymentInstrument
    __typename: 'PaymentMandate'
}


/** Some of the payment methods used in Shopify. */
export type PaymentMethods = 'VISA' | 'MASTERCARD' | 'DISCOVER' | 'AMERICAN_EXPRESS' | 'DINERS_CLUB' | 'JCB' | 'UNIONPAY' | 'ELO' | 'DANKORT' | 'MAESTRO' | 'FORBRUGSFORENINGEN' | 'PAYPAL' | 'BOGUS' | 'BITCOIN' | 'LITECOIN' | 'DOGECOIN' | 'INTERAC' | 'EFTPOS'


/** Return type for `paymentReminderSend` mutation. */
export interface PaymentReminderSendPayload {
    /** Whether the payment reminder email was successfully sent. */
    success?: Scalars['Boolean']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentReminderSendUserError[]
    __typename: 'PaymentReminderSendPayload'
}


/** An error that occurs during the execution of `PaymentReminderSend`. */
export interface PaymentReminderSendUserError {
    /** The error code. */
    code?: PaymentReminderSendUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PaymentReminderSendUserError'
}


/** Possible error codes that can be returned by `PaymentReminderSendUserError`. */
export type PaymentReminderSendUserErrorCode = 'PAYMENT_REMINDER_SEND_UNSUCCESSFUL'


/** Represents the payment schedule for a single payment defined in the payment terms. */
export interface PaymentSchedule {
    /** Amount owed for this payment schedule. */
    amount: MoneyV2
    /** Date and time when the payment schedule is paid or fulfilled. */
    completedAt?: Scalars['DateTime']
    /** Date and time when the payment schedule is due. */
    dueAt?: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Date and time when the invoice is sent. */
    issuedAt?: Scalars['DateTime']
    /** The payment terms the payment schedule belongs to. */
    paymentTerms: PaymentTerms
    __typename: 'PaymentSchedule'
}


/**
 * An auto-generated type for paginating through multiple PaymentSchedules.
 * 
 */
export interface PaymentScheduleConnection {
    /** A list of edges. */
    edges: PaymentScheduleEdge[]
    /** A list of the nodes contained in PaymentScheduleEdge. */
    nodes: PaymentSchedule[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PaymentScheduleConnection'
}


/**
 * An auto-generated type which holds one PaymentSchedule and a cursor during pagination.
 * 
 */
export interface PaymentScheduleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PaymentScheduleEdge. */
    node: PaymentSchedule
    __typename: 'PaymentScheduleEdge'
}


/** Settings related to payments. */
export interface PaymentSettings {
    /** List of the digital wallets which the shop supports. */
    supportedDigitalWallets: DigitalWallet[]
    __typename: 'PaymentSettings'
}


/** Represents the payment terms for an order or draft order. */
export interface PaymentTerms {
    /** The draft order associated with the payment terms. */
    draftOrder?: DraftOrder
    /**
     * Duration of payment terms in days based on the payment terms template used to create the payment terms.
     * 
     */
    dueInDays?: Scalars['Int']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The order associated with the payment terms. */
    order?: Order
    /** Whether the payment terms have overdue payment schedules. */
    overdue: Scalars['Boolean']
    /** List of schedules for the payment terms. */
    paymentSchedules: PaymentScheduleConnection
    /** The name of the payment terms template used to create the payment terms. */
    paymentTermsName: Scalars['String']
    /** The payment terms template type used to create the payment terms. */
    paymentTermsType: PaymentTermsType
    /** The payment terms name, translated into the shop admin's preferred language. */
    translatedName: Scalars['String']
    __typename: 'PaymentTerms'
}


/** Return type for `paymentTermsCreate` mutation. */
export interface PaymentTermsCreatePayload {
    /** The created payment terms. */
    paymentTerms?: PaymentTerms
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentTermsCreateUserError[]
    __typename: 'PaymentTermsCreatePayload'
}


/** An error that occurs during the execution of `PaymentTermsCreate`. */
export interface PaymentTermsCreateUserError {
    /** The error code. */
    code?: PaymentTermsCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PaymentTermsCreateUserError'
}


/** Possible error codes that can be returned by `PaymentTermsCreateUserError`. */
export type PaymentTermsCreateUserErrorCode = 'PAYMENT_TERMS_CREATION_UNSUCCESSFUL'


/** Return type for `paymentTermsDelete` mutation. */
export interface PaymentTermsDeletePayload {
    /** The deleted payment terms ID. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentTermsDeleteUserError[]
    __typename: 'PaymentTermsDeletePayload'
}


/** An error that occurs during the execution of `PaymentTermsDelete`. */
export interface PaymentTermsDeleteUserError {
    /** The error code. */
    code?: PaymentTermsDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PaymentTermsDeleteUserError'
}


/** Possible error codes that can be returned by `PaymentTermsDeleteUserError`. */
export type PaymentTermsDeleteUserErrorCode = 'PAYMENT_TERMS_DELETE_UNSUCCESSFUL'


/** Represents the payment terms template object. */
export interface PaymentTermsTemplate {
    /** The description of the payment terms template. */
    description: Scalars['String']
    /** The number of days between the issued date and due date if this is the net type of payment terms. */
    dueInDays?: Scalars['Int']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the payment terms template. */
    name: Scalars['String']
    /** The type of the payment terms template. */
    paymentTermsType: PaymentTermsType
    /** The translated payment terms template name. */
    translatedName: Scalars['String']
    __typename: 'PaymentTermsTemplate'
}


/** The type of a payment terms or a payment terms template. */
export type PaymentTermsType = 'RECEIPT' | 'NET' | 'FIXED' | 'FULFILLMENT' | 'UNKNOWN'


/** Return type for `paymentTermsUpdate` mutation. */
export interface PaymentTermsUpdatePayload {
    /** The updated payment terms. */
    paymentTerms?: PaymentTerms
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PaymentTermsUpdateUserError[]
    __typename: 'PaymentTermsUpdatePayload'
}


/** An error that occurs during the execution of `PaymentTermsUpdate`. */
export interface PaymentTermsUpdateUserError {
    /** The error code. */
    code?: PaymentTermsUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PaymentTermsUpdateUserError'
}


/** Possible error codes that can be returned by `PaymentTermsUpdateUserError`. */
export type PaymentTermsUpdateUserErrorCode = 'PAYMENT_TERMS_UPDATE_UNSUCCESSFUL'


/** Represents a valid PayPal Express subscriptions gateway status. */
export type PaypalExpressSubscriptionsGatewayStatus = 'ENABLED' | 'DISABLED' | 'PENDING'


/** A PolarisViz data point structure for ShopifyQL query. */
export interface PolarisVizDataPoint {
    /** The data key. Typically a category, dimension, or other qualitative data. */
    key: Scalars['String']
    /** The data value is numeric and quantitative. */
    value?: Scalars['String']
    __typename: 'PolarisVizDataPoint'
}


/** The data series used for PolarisViz visualization. */
export interface PolarisVizDataSeries {
    /** An array of data points. */
    data: PolarisVizDataPoint[]
    /** Whether the series represents comparison data. */
    isComparison: Scalars['Boolean']
    /** The name of the series. */
    name: Scalars['String']
    __typename: 'PolarisVizDataSeries'
}


/** A PolarisViz response to a ShopifyQL query. */
export interface PolarisVizResponse {
    /** The PolarisViz visualization of data. */
    data: PolarisVizDataSeries[]
    /** A list of parse errors, if parsing fails. */
    parseErrors?: ParseError[]
    /**
     * The result in a tabular format with schema and row data.
     *                 It's always present even if query has a `VISUALIZE` keyword.
     */
    tableData?: TableData
    /** The type of visualization. For example, a line chart. */
    vizType: VisualizationType
    __typename: 'PolarisVizResponse'
}


/** How to caluclate the parent product variant's price while bulk updating variant relationships. */
export type PriceCalculationType = 'COMPONENTS_SUM' | 'FIXED' | 'NONE'


/**
 * Represents a price list, including information about related prices and eligibility rules.
 * You can use price lists to specify either fixed prices or adjusted relative prices that
 * override initial product variant prices. Price lists are applied to customers
 * using context rules, which determine price list eligibility.
 * 
 *   For more information on price lists, refer to
 *   [Support different pricing models](https://shopify.dev/apps/internationalization/product-price-lists).
 * 
 */
export interface PriceList {
    /** The catalog that the price list is associated with. */
    catalog?: Catalog
    /** The currency for fixed prices associated with this price list. */
    currency: CurrencyCode
    /** The number of fixed prices on the price list. */
    fixedPricesCount: Scalars['Int']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The unique name of the price list, used as a human-readable identifier. */
    name: Scalars['String']
    /** Relative adjustments to other prices. */
    parent?: PriceListParent
    /** A list of prices associated with the price list. */
    prices: PriceListPriceConnection
    /** A list of quantity rules associated with the price list, ordered by product variants. */
    quantityRules: QuantityRuleConnection
    __typename: 'PriceList'
}


/**
 * The type and value of a price list adjustment.
 * 
 * For more information on price lists, refer to
 * [Support different pricing models](https://shopify.dev/apps/internationalization/product-price-lists).
 * 
 */
export interface PriceListAdjustment {
    /** The type of price adjustment, such as percentage increase or decrease. */
    type: PriceListAdjustmentType
    /**
     * The value of price adjustment, where positive numbers reduce the prices and negative numbers
     * increase them.
     * 
     */
    value: Scalars['Float']
    __typename: 'PriceListAdjustment'
}


/** Represents the settings of price list adjustments. */
export interface PriceListAdjustmentSettings {
    /** The type of price list adjustment setting for compare at price. */
    compareAtMode: PriceListCompareAtMode
    __typename: 'PriceListAdjustmentSettings'
}


/** Represents a percentage price adjustment type. */
export type PriceListAdjustmentType = 'PERCENTAGE_DECREASE' | 'PERCENTAGE_INCREASE'


/** Represents how the compare at price will be determined for a price list. */
export type PriceListCompareAtMode = 'ADJUSTED' | 'NULLIFY'


/**
 * An auto-generated type for paginating through multiple PriceLists.
 * 
 */
export interface PriceListConnection {
    /** A list of edges. */
    edges: PriceListEdge[]
    /** A list of the nodes contained in PriceListEdge. */
    nodes: PriceList[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PriceListConnection'
}


/** Return type for `priceListCreate` mutation. */
export interface PriceListCreatePayload {
    /** The newly created price list. */
    priceList?: PriceList
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListUserError[]
    __typename: 'PriceListCreatePayload'
}


/** Return type for `priceListDelete` mutation. */
export interface PriceListDeletePayload {
    /** The ID of the deleted price list. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListUserError[]
    __typename: 'PriceListDeletePayload'
}


/**
 * An auto-generated type which holds one PriceList and a cursor during pagination.
 * 
 */
export interface PriceListEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PriceListEdge. */
    node: PriceList
    __typename: 'PriceListEdge'
}


/** Return type for `priceListFixedPricesAdd` mutation. */
export interface PriceListFixedPricesAddPayload {
    /** The list of fixed prices that were added to or updated in the price list. */
    prices?: PriceListPrice[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListPriceUserError[]
    __typename: 'PriceListFixedPricesAddPayload'
}


/** Error codes for failed price list fixed prices by product bulk update operations. */
export interface PriceListFixedPricesByProductBulkUpdateUserError {
    /** The error code. */
    code?: PriceListFixedPricesByProductBulkUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PriceListFixedPricesByProductBulkUpdateUserError'
}


/** Possible error codes that can be returned by `PriceListFixedPricesByProductBulkUpdateUserError`. */
export type PriceListFixedPricesByProductBulkUpdateUserErrorCode = 'NO_UPDATE_OPERATIONS_SPECIFIED' | 'PRICES_TO_ADD_CURRENCY_MISMATCH' | 'PRICE_LIST_DOES_NOT_EXIST' | 'DUPLICATE_ID_IN_INPUT' | 'ID_MUST_BE_MUTUALLY_EXCLUSIVE' | 'PRODUCT_DOES_NOT_EXIST' | 'PRICE_LIMIT_EXCEEDED'


/** Return type for `priceListFixedPricesByProductUpdate` mutation. */
export interface PriceListFixedPricesByProductUpdatePayload {
    /** The price list for which the fixed prices were modified. */
    priceList?: PriceList
    /** The product for which the fixed prices were added. */
    pricesToAddProducts?: Product[]
    /** The product for which the fixed prices were deleted. */
    pricesToDeleteProducts?: Product[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListFixedPricesByProductBulkUpdateUserError[]
    __typename: 'PriceListFixedPricesByProductUpdatePayload'
}


/** Return type for `priceListFixedPricesDelete` mutation. */
export interface PriceListFixedPricesDeletePayload {
    /** A list of product variant IDs whose fixed prices were removed from the price list. */
    deletedFixedPriceVariantIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListPriceUserError[]
    __typename: 'PriceListFixedPricesDeletePayload'
}


/** Return type for `priceListFixedPricesUpdate` mutation. */
export interface PriceListFixedPricesUpdatePayload {
    /** A list of deleted variant IDs for prices. */
    deletedFixedPriceVariantIds?: Scalars['ID'][]
    /** The price list for which the fixed prices were modified. */
    priceList?: PriceList
    /** The prices that were added to the price list. */
    pricesAdded?: PriceListPrice[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListPriceUserError[]
    __typename: 'PriceListFixedPricesUpdatePayload'
}


/**
 * Represents relative adjustments from one price list to other prices.
 *   You can use a `PriceListParent` to specify an adjusted relative price using a percentage-based
 *   adjustment. Adjusted prices work in conjunction with exchange rules and rounding.
 * 
 *   [Adjustment types](https://shopify.dev/api/admin-graphql/latest/enums/pricelistadjustmenttype)
 *   support both percentage increases and decreases.
 * 
 */
export interface PriceListParent {
    /** A price list adjustment. */
    adjustment: PriceListAdjustment
    /** A price list's settings for adjustment. */
    settings: PriceListAdjustmentSettings
    __typename: 'PriceListParent'
}


/**
 * Represents information about pricing for a product variant
 *         as defined on a price list, such as the price, compare at price, and origin type. You can use a PriceListPrice to specify a fixed price for a specific product variant.
 */
export interface PriceListPrice {
    /** The compare-at price of the product variant on this price list. */
    compareAtPrice?: MoneyV2
    /**
     * The origin of a price, either fixed (defined on the price list) or relative (calculated using a price list adjustment configuration).
     * 
     */
    originType: PriceListPriceOriginType
    /** The price of the product variant on this price list. */
    price: MoneyV2
    /** The product variant associated with this price. */
    variant: ProductVariant
    __typename: 'PriceListPrice'
}


/**
 * An auto-generated type for paginating through multiple PriceListPrices.
 * 
 */
export interface PriceListPriceConnection {
    /** A list of edges. */
    edges: PriceListPriceEdge[]
    /** A list of the nodes contained in PriceListPriceEdge. */
    nodes: PriceListPrice[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PriceListPriceConnection'
}


/**
 * An auto-generated type which holds one PriceListPrice and a cursor during pagination.
 * 
 */
export interface PriceListPriceEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PriceListPriceEdge. */
    node: PriceListPrice
    __typename: 'PriceListPriceEdge'
}


/**
 * Represents the origin of a price, either fixed (defined on the price list) or relative (calculated using a price list adjustment configuration).
 * 
 */
export type PriceListPriceOriginType = 'FIXED' | 'RELATIVE'


/** An error for a failed price list price operation. */
export interface PriceListPriceUserError {
    /** The error code. */
    code?: PriceListPriceUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PriceListPriceUserError'
}


/** Possible error codes that can be returned by `PriceListPriceUserError`. */
export type PriceListPriceUserErrorCode = 'BLANK' | 'PRICE_LIST_NOT_FOUND' | 'PRICE_LIST_CURRENCY_MISMATCH' | 'VARIANT_NOT_FOUND' | 'PRICE_NOT_FIXED'


/** The set of valid sort keys for the PriceList query. */
export type PriceListSortKeys = 'NAME' | 'ID' | 'RELEVANCE'


/** Return type for `priceListUpdate` mutation. */
export interface PriceListUpdatePayload {
    /** The updated price list. */
    priceList?: PriceList
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PriceListUserError[]
    __typename: 'PriceListUpdatePayload'
}


/** Error codes for failed contextual pricing operations. */
export interface PriceListUserError {
    /** The error code. */
    code?: PriceListUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PriceListUserError'
}


/** Possible error codes that can be returned by `PriceListUserError`. */
export type PriceListUserErrorCode = 'TAKEN' | 'BLANK' | 'INCLUSION' | 'TOO_LONG' | 'PRICE_LIST_NOT_FOUND' | 'PRICE_LIST_LOCKED' | 'CONTEXT_RULE_LIMIT_REACHED' | 'CONTEXT_RULE_COUNTRIES_LIMIT' | 'CURRENCY_COUNTRY_MISMATCH' | 'COUNTRY_CURRENCY_MISMATCH' | 'CURRENCY_MARKET_MISMATCH' | 'MARKET_CURRENCY_MISMATCH' | 'INVALID_ADJUSTMENT_VALUE' | 'INVALID_ADJUSTMENT_MIN_VALUE' | 'INVALID_ADJUSTMENT_MAX_VALUE' | 'CONTEXT_RULE_COUNTRY_TAKEN' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' | 'CONTEXT_RULE_LIMIT_ONE_OPTION' | 'CONTEXT_RULE_MARKET_NOT_FOUND' | 'CONTEXT_RULE_MARKET_TAKEN' | 'CURRENCY_NOT_SUPPORTED' | 'PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET' | 'CATALOG_ASSIGNMENT_NOT_ALLOWED' | 'CATALOG_DOES_NOT_EXIST' | 'CATALOG_CANNOT_CHANGE_CONTEXT_TYPE' | 'CATALOG_MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH' | 'CATALOG_TAKEN' | 'COUNTRY_PRICE_LIST_ASSIGNMENT' | 'APP_CATALOG_PRICE_LIST_ASSIGNMENT' | 'GENERIC_ERROR'


/**
 * Price rules are a set of conditions, including entitlements and prerequisites, that must be met in order for a discount code to apply.
 * 
 * We recommend using the types and queries detailed at [Getting started with discounts](https://shopify.dev/docs/apps/selling-strategies/discounts/getting-started) instead. These will replace the GraphQL `PriceRule` object and REST Admin `PriceRule` and `DiscountCode` resources.
 * 
 */
export interface PriceRule {
    /** The maximum number of times that the price rule can be allocated onto an order. */
    allocationLimit?: Scalars['Int']
    /** The method by which the price rule's value is allocated to its entitled items. */
    allocationMethod: PriceRuleAllocationMethod
    /** The application that created the price rule. */
    app?: App
    /** Determines which discount classes the discount can combine with. */
    combinesWith: DiscountCombinesWith
    /** The date and time when the price rule was created. */
    createdAt: Scalars['DateTime']
    /** The customers that can use this price rule. */
    customerSelection: PriceRuleCustomerSelection
    /** The class of the discount for combining purposes. */
    discountClass: DiscountClass
    /** List of the price rule's discount codes. */
    discountCodes: PriceRuleDiscountCodeConnection
    /** How many discount codes associated with the price rule. */
    discountCodesCount: Scalars['Int']
    /** The date and time when the price rule ends. For open-ended price rules, use `null`. */
    endsAt?: Scalars['DateTime']
    /**
     * @deprecated Use `prerequisiteToEntitlementQuantityRatio` instead.
     * Quantity of prerequisite items required for the price rule to be applicable,  compared to quantity of entitled items.
     */
    entitlementToPrerequisiteQuantityRatio?: PriceRuleEntitlementToPrerequisiteQuantityRatio
    /** The paginated list of events associated with the price rule. */
    events: EventConnection
    /** A list of the price rule's features. */
    features: PriceRuleFeature[]
    /** Indicates whether there are any timeline comments on the price rule. */
    hasTimelineComment: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The items to which the price rule applies. */
    itemEntitlements: PriceRuleItemEntitlements
    /** The items required for the price rule to be applicable. */
    itemPrerequisites: PriceRuleLineItemPrerequisites
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** Whether the price rule can be applied only once per customer. */
    oncePerCustomer: Scalars['Boolean']
    /** The number of the entitled items must fall within this range for the price rule to be applicable. */
    prerequisiteQuantityRange?: PriceRuleQuantityRange
    /** The shipping cost must fall within this range for the price rule to be applicable. */
    prerequisiteShippingPriceRange?: PriceRuleMoneyRange
    /** The sum of the entitled items subtotal prices must fall within this range for the price rule to be applicable. */
    prerequisiteSubtotalRange?: PriceRuleMoneyRange
    /** Quantity of prerequisite items required for the price rule to be applicable,  compared to quantity of entitled items. */
    prerequisiteToEntitlementQuantityRatio?: PriceRulePrerequisiteToEntitlementQuantityRatio
    /** URLs that can be used to share the discount. */
    shareableUrls: PriceRuleShareableUrl[]
    /** The shipping lines to which the price rule applies. */
    shippingEntitlements: PriceRuleShippingLineEntitlements
    /** The date and time when the price rule starts. */
    startsAt: Scalars['DateTime']
    /** The status of the price rule. */
    status: PriceRuleStatus
    /** A detailed summary of the price rule. */
    summary?: Scalars['String']
    /** The type of lines (line_item or shipping_line) to which the price rule applies. */
    target: PriceRuleTarget
    /** The title of the price rule. */
    title: Scalars['String']
    /** The total sales from orders where the price rule was used. */
    totalSales?: MoneyV2
    /**
     * @deprecated Use `features` instead.
     * A list of the price rule's features.
     */
    traits: PriceRuleTrait[]
    /** The number of times that the price rule has been used. This value is updated asynchronously and can be different than the actual usage count. */
    usageCount: Scalars['Int']
    /** The maximum number of times that the price rule can be used in total. */
    usageLimit?: Scalars['Int']
    /** A time period during which a price rule is applicable. */
    validityPeriod: PriceRuleValidityPeriod
    /**
     * @deprecated Use `valueV2` instead.
     * The value of the price rule.
     */
    value: PriceRuleValue
    /** The value of the price rule. */
    valueV2: PricingValue
    __typename: 'PriceRule'
}


/** Return type for `priceRuleActivate` mutation. */
export interface PriceRuleActivatePayload {
    /** The activated price rule. */
    priceRule?: PriceRule
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleActivatePayload'
}


/** The method by which the price rule's value is allocated to its entitled items. */
export type PriceRuleAllocationMethod = 'EACH' | 'ACROSS'


/**
 * An auto-generated type for paginating through multiple PriceRules.
 * 
 */
export interface PriceRuleConnection {
    /** A list of edges. */
    edges: PriceRuleEdge[]
    /** A list of the nodes contained in PriceRuleEdge. */
    nodes: PriceRule[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PriceRuleConnection'
}


/** Return type for `priceRuleCreate` mutation. */
export interface PriceRuleCreatePayload {
    /** The newly created price rule. */
    priceRule?: PriceRule
    /** The newly created discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCode
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleCreatePayload'
}


/** A selection of customers for whom the price rule applies. */
export interface PriceRuleCustomerSelection {
    /** List of customers to whom the price rule applies. */
    customers: CustomerConnection
    /** Whether the price rule applies to all customers. */
    forAllCustomers: Scalars['Boolean']
    /** A list of customer segments that contain the customers who can use the price rule. */
    segments: Segment[]
    __typename: 'PriceRuleCustomerSelection'
}


/** Return type for `priceRuleDeactivate` mutation. */
export interface PriceRuleDeactivatePayload {
    /** The deactivated price rule. */
    priceRule?: PriceRule
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleDeactivatePayload'
}


/** Return type for `priceRuleDelete` mutation. */
export interface PriceRuleDeletePayload {
    /** The ID price of the deleted price rule. */
    deletedPriceRuleId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /** The shop of the deleted price rule. */
    shop: Shop
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleDeletePayload'
}


/** A discount code of a price rule. */
export interface PriceRuleDiscountCode {
    /** The application that created the discount code. */
    app?: App
    /** The code to apply the discount. */
    code: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The number of times that the price rule has been used. This value is updated asynchronously and can be different than the actual usage count. */
    usageCount: Scalars['Int']
    __typename: 'PriceRuleDiscountCode'
}


/**
 * An auto-generated type for paginating through multiple PriceRuleDiscountCodes.
 * 
 */
export interface PriceRuleDiscountCodeConnection {
    /** A list of edges. */
    edges: PriceRuleDiscountCodeEdge[]
    /** A list of the nodes contained in PriceRuleDiscountCodeEdge. */
    nodes: PriceRuleDiscountCode[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PriceRuleDiscountCodeConnection'
}


/** Return type for `priceRuleDiscountCodeCreate` mutation. */
export interface PriceRuleDiscountCodeCreatePayload {
    /** The updated price rule. */
    priceRule?: PriceRule
    /** The newly created discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCode
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleDiscountCodeCreatePayload'
}


/**
 * An auto-generated type which holds one PriceRuleDiscountCode and a cursor during pagination.
 * 
 */
export interface PriceRuleDiscountCodeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PriceRuleDiscountCodeEdge. */
    node: PriceRuleDiscountCode
    __typename: 'PriceRuleDiscountCodeEdge'
}


/** Return type for `priceRuleDiscountCodeUpdate` mutation. */
export interface PriceRuleDiscountCodeUpdatePayload {
    /** The updated price rule. */
    priceRule?: PriceRule
    /** The updated discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCode
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleDiscountCodeUpdatePayload'
}


/**
 * An auto-generated type which holds one PriceRule and a cursor during pagination.
 * 
 */
export interface PriceRuleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PriceRuleEdge. */
    node: PriceRule
    __typename: 'PriceRuleEdge'
}


/** Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
export interface PriceRuleEntitlementToPrerequisiteQuantityRatio {
    /** The quantity of entitled items in the ratio. */
    entitlementQuantity: Scalars['Int']
    /** The quantity of prerequisite items in the ratio. */
    prerequisiteQuantity: Scalars['Int']
    __typename: 'PriceRuleEntitlementToPrerequisiteQuantityRatio'
}


/** Possible error codes that could be returned by a price rule mutation. */
export type PriceRuleErrorCode = 'BLANK' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INVALID' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'INTERNAL_ERROR' | 'TOO_MANY_ARGUMENTS' | 'MISSING_ARGUMENT' | 'EXCEEDED_MAX' | 'PRICE_RULE_ALLOCATION_LIMIT_ON_NON_BOGO' | 'PRICE_RULE_ALLOCATION_LIMIT_IS_ZERO' | 'PRICE_RULE_EXCEEDED_MAX_DISCOUNT_CODE' | 'SHOP_EXCEEDED_MAX_PRICE_RULES' | 'END_DATE_BEFORE_START_DATE' | 'PRICE_RULE_PERCENTAGE_VALUE_OUTSIDE_RANGE' | 'PREREQUISITE_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT' | 'ALLOCATION_METHOD_MUST_BE_ACROSS_FOR_GIVEN_TARGET_SELECTION' | 'APPLIES_ON_NOTHING' | 'MULTIPLE_RECURRING_CYCLE_LIMIT_FOR_NON_SUBSCRIPTION_ITEMS' | 'BOGO_INVALID_TARGET_SELECTION' | 'BOGO_INVALID_TARGET_TYPE' | 'BOGO_INVALID_VALUE_TYPE' | 'DISCOUNT_CODE_DUPLICATE' | 'BOTH_CUSTOMER_AND_SAVED_SEARCH_PREREQUISITES_SELECTED' | 'CUSTOMER_SAVED_SEARCH_DUPLICATE' | 'CUSTOMER_SAVED_SEARCH_EXCEEDED_MAX' | 'CUSTOMER_SAVED_SEARCH_INVALID' | 'CUSTOMER_PREREQUISITES_EXCEEDED_MAX' | 'CUSTOMER_PREREQUISITES_INVALID_SELECTION' | 'CUSTOMER_PREREQUISITE_DUPLICATE' | 'CUSTOMER_PREREQUISITES_MISSING' | 'BOTH_CUSTOMER_AND_SEGMENT_PREREQUISITES_SELECTED' | 'BOTH_SAVED_SEARCH_AND_SEGMENT_PREREQUISITES_SELECTED' | 'CUSTOMER_SEGMENT_EXCEEDED_MAX' | 'CUSTOMER_SEGMENT_INVALID' | 'CUSTOMER_SEGMENT_PREREQUISITE_DUPLICATE' | 'CANNOT_PREREQUISITE_COLLECTION_WITH_PRODUCT_OR_VARIANTS' | 'ITEM_PREREQUISITES_DUPLICATE_COLLECTION' | 'ITEM_PREREQUISITES_DUPLICATE_PRODUCT' | 'ITEM_PREREQUISITES_DUPLICATE_VARIANT' | 'ITEM_PREREQUISITES_EXCEEDED_MAX' | 'ITEM_PREREQUISITES_INVALID_COLLECTION' | 'ITEM_PREREQUISITES_INVALID_TYPE' | 'ITEM_PREREQUISITES_INVALID_PRODUCT' | 'ITEM_PREREQUISITES_INVALID_VARIANT' | 'ITEM_PREREQUISITES_MUST_BE_EMPTY' | 'ITEM_PREREQUISITES_MISSING' | 'CANNOT_ENTITLE_COLLECTIONS_WITH_PRODUCTS_OR_VARIANTS' | 'ITEM_ENTITLEMENTS_DUPLICATE_COLLECTION' | 'ITEM_ENTITLEMENTS_DUPLICATE_PRODUCT' | 'ITEM_ENTITLEMENTS_DUPLICATE_VARIANT' | 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_COLLECTION' | 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_PRODUCT' | 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_VARIANT' | 'ITEM_ENTITLEMENT_INVALID_TYPE' | 'ITEM_ENTITLEMENTS_INVALID_COLLECTION' | 'ITEM_ENTITLEMENTS_INVALID_PRODUCT' | 'ITEM_ENTITLEMENTS_INVALID_VARIANT' | 'ITEM_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION' | 'ITEM_ENTITLEMENTS_MISSING' | 'VARIANT_ALREADY_ENTITLED_THROUGH_PRODUCT' | 'SHIPPING_ENTITLEMENTS_DUPLICATE_COUNTRY' | 'SHIPPING_ENTITLEMENTS_EXCEEDED_MAX' | 'SHIPPING_ENTITLEMENTS_INVALID_COUNTRY' | 'SHIPPING_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION' | 'SHIPPING_ENTITLEMENTS_MISSING' | 'SHIPPING_ENTITLEMENTS_UNSUPPORTED_DESTINATION_TYPE' | 'INVALID_TARGET_TYPE_PREREQUISITE_SHIPPING_PRICE_RANGE' | 'INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS' | 'INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE'


/** The list of features that can be supported by a price rule. */
export type PriceRuleFeature = 'BUY_ONE_GET_ONE' | 'BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT' | 'BULK' | 'SPECIFIC_CUSTOMERS' | 'QUANTITY_DISCOUNTS'


/** The value of a fixed amount price rule. */
export interface PriceRuleFixedAmountValue {
    /** The monetary value of the price rule. */
    amount: Scalars['Money']
    __typename: 'PriceRuleFixedAmountValue'
}


/** The items to which this price rule applies. This may be multiple products, product variants, collections or combinations of the aforementioned. */
export interface PriceRuleItemEntitlements {
    /** The collections to which the price rule applies. */
    collections: CollectionConnection
    /** The product variants to which the price rule applies. */
    productVariants: ProductVariantConnection
    /** The products to which the price rule applies. */
    products: ProductConnection
    /** Whether the price rule applies to all line items. */
    targetAllLineItems: Scalars['Boolean']
    __typename: 'PriceRuleItemEntitlements'
}


/** Single or multiple line item products, product variants or collections required for the price rule to be applicable, can also be provided in combination. */
export interface PriceRuleLineItemPrerequisites {
    /** The collections required for the price rule to be applicable. */
    collections: CollectionConnection
    /** The product variants required for the price rule to be applicable. */
    productVariants: ProductVariantConnection
    /** The products required for the price rule to be applicable. */
    products: ProductConnection
    __typename: 'PriceRuleLineItemPrerequisites'
}


/** A money range within which the price rule is applicable. */
export interface PriceRuleMoneyRange {
    /** The lower bound of the money range. */
    greaterThan?: Scalars['Money']
    /** The lower bound or equal of the money range. */
    greaterThanOrEqualTo?: Scalars['Money']
    /** The upper bound of the money range. */
    lessThan?: Scalars['Money']
    /** The upper bound or equal of the money range. */
    lessThanOrEqualTo?: Scalars['Money']
    __typename: 'PriceRuleMoneyRange'
}


/** The value of a percent price rule. */
export interface PriceRulePercentValue {
    /** The percent value of the price rule. */
    percentage: Scalars['Float']
    __typename: 'PriceRulePercentValue'
}


/** Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
export interface PriceRulePrerequisiteToEntitlementQuantityRatio {
    /** The quantity of entitled items in the ratio. */
    entitlementQuantity: Scalars['Int']
    /** The quantity of prerequisite items in the ratio. */
    prerequisiteQuantity: Scalars['Int']
    __typename: 'PriceRulePrerequisiteToEntitlementQuantityRatio'
}


/** A quantity range within which the price rule is applicable. */
export interface PriceRuleQuantityRange {
    /** The lower bound of the quantity range. */
    greaterThan?: Scalars['Int']
    /** The lower bound or equal of the quantity range. */
    greaterThanOrEqualTo?: Scalars['Int']
    /** The upper bound of the quantity range. */
    lessThan?: Scalars['Int']
    /** The upper bound or equal of the quantity range. */
    lessThanOrEqualTo?: Scalars['Int']
    __typename: 'PriceRuleQuantityRange'
}


/** Shareable URL for the discount code associated with the price rule. */
export interface PriceRuleShareableUrl {
    /** The image URL of the item (product or collection) to which the discount applies. */
    targetItemImage?: Image
    /** The type of page that's associated with the URL. */
    targetType: PriceRuleShareableUrlTargetType
    /** The title of the page that's associated with the URL. */
    title: Scalars['String']
    /** The URL for the discount code. */
    url: Scalars['URL']
    __typename: 'PriceRuleShareableUrl'
}


/** The type of page where a shareable price rule URL lands. */
export type PriceRuleShareableUrlTargetType = 'HOME' | 'PRODUCT' | 'COLLECTION'


/** The shipping lines to which the price rule applies to. */
export interface PriceRuleShippingLineEntitlements {
    /** The codes for the countries to which the price rule applies to. */
    countryCodes: CountryCode[]
    /** Whether the price rule is applicable to countries that have not been defined in the shop's shipping zones. */
    includeRestOfWorld: Scalars['Boolean']
    /** Whether the price rule applies to all shipping lines. */
    targetAllShippingLines: Scalars['Boolean']
    __typename: 'PriceRuleShippingLineEntitlements'
}


/** The set of valid sort keys for the PriceRule query. */
export type PriceRuleSortKeys = 'STARTS_AT' | 'ENDS_AT' | 'TITLE' | 'CREATED_AT' | 'UPDATED_AT' | 'ID' | 'RELEVANCE'


/** The status of the price rule. */
export type PriceRuleStatus = 'ACTIVE' | 'EXPIRED' | 'SCHEDULED'


/** The type of lines (line_item or shipping_line) to which the price rule applies. */
export type PriceRuleTarget = 'LINE_ITEM' | 'SHIPPING_LINE'


/** The list of features that can be supported by a price rule. */
export type PriceRuleTrait = 'BUY_ONE_GET_ONE' | 'BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT' | 'BULK' | 'SPECIFIC_CUSTOMERS' | 'QUANTITY_DISCOUNTS'


/** Return type for `priceRuleUpdate` mutation. */
export interface PriceRuleUpdatePayload {
    /** The updated price rule. */
    priceRule?: PriceRule
    /** The updated discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCode
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors: PriceRuleUserError[]
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'PriceRuleUpdatePayload'
}


/** Represents an error that happens during execution of a price rule mutation. */
export interface PriceRuleUserError {
    /** Error code to uniquely identify the error. */
    code?: PriceRuleErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PriceRuleUserError'
}


/** A time period during which a price rule is applicable. */
export interface PriceRuleValidityPeriod {
    /** The time after which the price rule becomes invalid. */
    end?: Scalars['DateTime']
    /** The time after which the price rule is valid. */
    start: Scalars['DateTime']
    __typename: 'PriceRuleValidityPeriod'
}


/** The type of the price rule value. The price rule value might be a percentage value, or a fixed amount. */
export type PriceRuleValue = (PriceRuleFixedAmountValue | PriceRulePercentValue) & { __isUnion?: true }


/**
 * One type of value given to a customer when a discount is applied to an order.
 * The application of a discount with this value gives the customer the specified percentage off a specified item.
 * 
 */
export interface PricingPercentageValue {
    /**
     * The percentage value of the object. This is a number between -100 (free) and 0 (no discount).
     * 
     */
    percentage: Scalars['Float']
    __typename: 'PricingPercentageValue'
}


/** The type of value given to a customer when a discount is applied to an order. For example, the application of the discount might give the customer a percentage off a specified item. Alternatively, the application of the discount might give the customer a monetary value in a given currency off an order. */
export type PricingValue = (MoneyV2 | PricingPercentageValue) & { __isUnion?: true }


/**
 * Private metafields represent custom metadata that is attached to a resource.
 * Private metafields are accessible only by the application that created them and only from the GraphQL Admin API.
 * 
 * An application can create a maximum of 10 private metafields per shop resource.
 * 
 */
export interface PrivateMetafield {
    /** The date and time when the private metafield was created. */
    createdAt: Scalars['DateTime']
    /** The ID of the private metafield. */
    id: Scalars['ID']
    /** The key name of the private metafield. */
    key: Scalars['String']
    /** The namespace of the private metafield. */
    namespace: Scalars['String']
    /** The date and time when the private metafield was updated. */
    updatedAt: Scalars['DateTime']
    /** The value of a private metafield. */
    value: Scalars['String']
    /** Represents the private metafield value type. */
    valueType: PrivateMetafieldValueType
    __typename: 'PrivateMetafield'
}


/**
 * An auto-generated type for paginating through multiple PrivateMetafields.
 * 
 */
export interface PrivateMetafieldConnection {
    /** A list of edges. */
    edges: PrivateMetafieldEdge[]
    /** A list of the nodes contained in PrivateMetafieldEdge. */
    nodes: PrivateMetafield[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PrivateMetafieldConnection'
}


/** Return type for `privateMetafieldDelete` mutation. */
export interface PrivateMetafieldDeletePayload {
    /** The ID of private metafield that was deleted. */
    deletedPrivateMetafieldId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'PrivateMetafieldDeletePayload'
}


/**
 * An auto-generated type which holds one PrivateMetafield and a cursor during pagination.
 * 
 */
export interface PrivateMetafieldEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PrivateMetafieldEdge. */
    node: PrivateMetafield
    __typename: 'PrivateMetafieldEdge'
}


/** Return type for `privateMetafieldUpsert` mutation. */
export interface PrivateMetafieldUpsertPayload {
    /** The private metafield that was created or updated. */
    privateMetafield?: PrivateMetafield
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'PrivateMetafieldUpsertPayload'
}


/** Supported private metafield value types. */
export type PrivateMetafieldValueType = 'STRING' | 'INTEGER' | 'JSON_STRING'


/** The Product resource lets you manage products in a merchant’s store. You can use [ProductVariants](https://shopify.dev/api/admin-graphql/latest/objects/productvariant) to create or update different versions of the same product. You can also add or update product [Media](https://shopify.dev/api/admin-graphql/latest/interfaces/media). Products can be organized by grouping them into a [Collection](https://shopify.dev/api/admin-graphql/latest/objects/collection). */
export interface Product {
    /** The number of publications a resource is published to without feedback errors. */
    availablePublicationCount: Scalars['Int']
    /**
     * @deprecated Use `descriptionHtml` instead.
     * The description of the product, complete with HTML formatting.
     */
    bodyHtml?: Scalars['String']
    /** A list of the collections that include the product. */
    collections: CollectionConnection
    /** The pricing that applies for a customer in a given context. */
    contextualPricing: ProductContextualPricing
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was created.
     * 
     */
    createdAt: Scalars['DateTime']
    /**
     * @deprecated Deprecated in API version 2022-10. Use `productType` instead.
     * The custom product type specified by the merchant.
     */
    customProductType?: Scalars['String']
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** A stripped description of the product, single line with HTML tags removed. */
    description: Scalars['String']
    /** The description of the product, complete with HTML formatting. */
    descriptionHtml: Scalars['HTML']
    /**
     * @deprecated Use `description` instead.
     * Stripped description of the product, single line with HTML tags removed.
     * Truncated to 60 characters.
     * 
     */
    descriptionPlainSummary: Scalars['String']
    /** The featured image for the product. */
    featuredImage?: Image
    /** The featured media for the product. */
    featuredMedia?: Media
    /** Information about the product that's provided through resource feedback. */
    feedback?: ResourceFeedback
    /** The theme template used when viewing the gift card in a store. */
    giftCardTemplateSuffix?: Scalars['String']
    /** A unique human-friendly string of the product's title. */
    handle: Scalars['String']
    /** Whether the product has only a single variant with the default option and value. */
    hasOnlyDefaultVariant: Scalars['Boolean']
    /** Whether the product has out of stock variants. */
    hasOutOfStockVariants: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The images associated with the product. */
    images: ImageConnection
    /** Whether the product is in a given collection. */
    inCollection: Scalars['Boolean']
    /** Whether the product is a gift card. */
    isGiftCard: Scalars['Boolean']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The media associated with the product. This can include images, 3D models, or videos. */
    media: MediaConnection
    /** Total count of media belonging to a product. */
    mediaCount: Scalars['Int']
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The online store preview URL. */
    onlineStorePreviewUrl?: Scalars['URL']
    /**
     * The online store URL for the product.
     * A value of `null` indicates that the product is not published to the Online Store sales channel.
     * 
     */
    onlineStoreUrl?: Scalars['URL']
    /** A list of product options. The limit is specified by Shop.resourceLimits.maxProductOptions. */
    options: ProductOption[]
    /**
     * @deprecated Deprecated in API version 2020-10. Use `priceRangeV2` instead.
     * The price range of the product.
     */
    priceRange: ProductPriceRange
    /** The price range of the product with prices formatted as decimals. */
    priceRangeV2: ProductPriceRangeV2
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The product category specified by the merchant. */
    productCategory?: ProductCategory
    /**
     * @deprecated Use `resourcePublications` instead.
     * A list of the channels where the product is published.
     */
    productPublications: ProductPublicationConnection
    /** The product type specified by the merchant. */
    productType: Scalars['String']
    /** The number of publications a resource is published on. */
    publicationCount: Scalars['Int']
    /**
     * @deprecated Use `resourcePublications` instead.
     * A list of the channels where the product is published.
     */
    publications: ProductPublicationConnection
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was published to the Online Store.
     * 
     */
    publishedAt?: Scalars['DateTime']
    /** Whether or not the product is published for a customer in the given context. */
    publishedInContext: Scalars['Boolean']
    /**
     * @deprecated Use `publishedOnPublication` instead.
     * Check to see whether the resource is published to a given channel.
     */
    publishedOnChannel: Scalars['Boolean']
    /**
     * @deprecated Use `publishedOnCurrentPublication` instead.
     * Check to see whether the resource is published to the calling app's channel.
     */
    publishedOnCurrentChannel: Scalars['Boolean']
    /** Check to see whether the resource is published to the calling app's publication. */
    publishedOnCurrentPublication: Scalars['Boolean']
    /** Check to see whether the resource is published to a given publication. */
    publishedOnPublication: Scalars['Boolean']
    /** Whether the product can only be purchased with a selling plan (subscription). Products that are sold on subscription (`requiresSellingPlan: true`) can be updated only for online stores. If you update a product to be subscription only, then the product is unpublished from all channels except the online store. */
    requiresSellingPlan: Scalars['Boolean']
    /** The resource that is either published or staged to be published to the calling app's publication. Requires the `read_product_listings` scope. */
    resourcePublicationOnCurrentPublication?: ResourcePublicationV2
    /** The list of resources that are published to a publication. */
    resourcePublications: ResourcePublicationConnection
    /** The list of resources that are either published or staged to be published to a publication. */
    resourcePublicationsV2: ResourcePublicationV2Connection
    /** Count of selling plan groups associated with the product. */
    sellingPlanGroupCount: Scalars['Int']
    /** A list of all selling plan groups defined in the current shop associated with the product either directly or through any of its variants. */
    sellingPlanGroups: SellingPlanGroupConnection
    /** SEO information of the product. */
    seo: SEO
    /**
     * @deprecated Deprecated in API version 2022-10. Use `productCategory` instead.
     * The standardized product type in the Shopify product taxonomy.
     */
    standardizedProductType?: StandardizedProductType
    /** The product status. This controls visibility across all channels. */
    status: ProductStatus
    /**
     * @deprecated Use `id` instead.
     * The Storefront GraphQL API ID of the `Product`.
     * 
     * As of the `2022-04` version release, the Storefront GraphQL API will no longer return Base64 encoded IDs to match the behavior of the Admin GraphQL API. Therefore, you can safely use the `id` field's value instead.
     * 
     */
    storefrontId: Scalars['StorefrontID']
    /**
     * A comma separated list of tags associated with the product. Updating `tags` overwrites
     * any existing tags that were previously added to the product. To add new tags without overwriting
     * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
     * mutation.
     * 
     */
    tags: Scalars['String'][]
    /** The theme template used when viewing the product in a store. */
    templateSuffix?: Scalars['String']
    /** The title of the product. */
    title: Scalars['String']
    /** The quantity of inventory in stock. */
    totalInventory: Scalars['Int']
    /** The number of variants that are associated with the product. */
    totalVariants: Scalars['Int']
    /** Whether inventory tracking has been enabled for the product. */
    tracksInventory: Scalars['Boolean']
    /** The translations associated with the resource. */
    translations: Translation[]
    /**
     * @deprecated Use `unpublishedPublications` instead.
     * The list of channels that the resource is not published to.
     */
    unpublishedChannels: ChannelConnection
    /** The list of publications that the resource is not published to. */
    unpublishedPublications: PublicationConnection
    /**
     * The date and time when the product was last modified.
     * A product's `updatedAt` value can change for different reasons. For example, if an order
     * is placed for a product that has inventory tracking set up, then the inventory adjustment
     * is counted as an update.
     * 
     */
    updatedAt: Scalars['DateTime']
    /** A list of variants associated with the product. */
    variants: ProductVariantConnection
    /** The name of the product's vendor. */
    vendor: Scalars['String']
    __typename: 'Product'
}


/** Return type for `productAppendImages` mutation. */
export interface ProductAppendImagesPayload {
    /** List of new images appended to the product. */
    newImages?: Image[]
    /** The product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductAppendImagesPayload'
}


/** The details of a specific product category within the [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt). */
export interface ProductCategory {
    /** The product taxonomy node associated with the product category. */
    productTaxonomyNode?: ProductTaxonomyNode
    __typename: 'ProductCategory'
}


/** Return type for `productChangeStatus` mutation. */
export interface ProductChangeStatusPayload {
    /** The product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductChangeStatusUserError[]
    __typename: 'ProductChangeStatusPayload'
}


/** An error that occurs during the execution of `ProductChangeStatus`. */
export interface ProductChangeStatusUserError {
    /** The error code. */
    code?: ProductChangeStatusUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductChangeStatusUserError'
}


/** Possible error codes that can be returned by `ProductChangeStatusUserError`. */
export type ProductChangeStatusUserErrorCode = 'PRODUCT_NOT_FOUND'


/** The set of valid sort keys for the ProductCollection query. */
export type ProductCollectionSortKeys = 'TITLE' | 'PRICE' | 'BEST_SELLING' | 'CREATED' | 'ID' | 'MANUAL' | 'COLLECTION_DEFAULT' | 'RELEVANCE'


/**
 * An auto-generated type for paginating through multiple Products.
 * 
 */
export interface ProductConnection {
    /** A list of edges. */
    edges: ProductEdge[]
    /** A list of the nodes contained in ProductEdge. */
    nodes: Product[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ProductConnection'
}


/**
 * The price of a product in a specific country.
 * Prices vary between countries.
 * 
 */
export interface ProductContextualPricing {
    /** The number of fixed quantity rules for the product's variants on the price list. */
    fixedQuantityRulesCount: Scalars['Int']
    /** The pricing of the variant with the highest price in the given context. */
    maxVariantPricing?: ProductVariantContextualPricing
    /** The pricing of the variant with the lowest price in the given context. */
    minVariantPricing?: ProductVariantContextualPricing
    /** The price range of the product with prices formatted as decimals. */
    priceRange: ProductPriceRangeV2
    __typename: 'ProductContextualPricing'
}


/** Return type for `productCreateMedia` mutation. */
export interface ProductCreateMediaPayload {
    /** The newly created media. */
    media?: Media[]
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors: MediaUserError[]
    /** The product associated with the media. */
    product?: Product
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'ProductCreateMediaPayload'
}


/** Return type for `productCreate` mutation. */
export interface ProductCreatePayload {
    /** The product object. */
    product?: Product
    /** The shop associated with the product. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductCreatePayload'
}


/** Return type for `productDeleteAsync` mutation. */
export interface ProductDeleteAsyncPayload {
    /** The ID of the product that was requested to be deleted. */
    deleteProductId?: Scalars['ID']
    /** The background job that will delete the product and its associated variants and media. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductDeleteUserError[]
    __typename: 'ProductDeleteAsyncPayload'
}


/** Return type for `productDeleteImages` mutation. */
export interface ProductDeleteImagesPayload {
    /** The array of image IDs to delete. */
    deletedImageIds: Scalars['ID'][]
    /** The product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductDeleteImagesPayload'
}


/** Return type for `productDeleteMedia` mutation. */
export interface ProductDeleteMediaPayload {
    /** List of media IDs which were deleted. */
    deletedMediaIds?: Scalars['ID'][]
    /** List of product image IDs which were deleted. */
    deletedProductImageIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors: MediaUserError[]
    /** The product associated with the deleted media. */
    product?: Product
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'ProductDeleteMediaPayload'
}


/** Return type for `productDelete` mutation. */
export interface ProductDeletePayload {
    /** The ID of the deleted product. */
    deletedProductId?: Scalars['ID']
    /** The shop associated with the product. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductDeletePayload'
}


/** An error that occurred while setting the activation status of an inventory item. */
export interface ProductDeleteUserError {
    /** The error code. */
    code?: ProductDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductDeleteUserError'
}


/** Possible error codes that can be returned by `ProductDeleteUserError`. */
export type ProductDeleteUserErrorCode = 'PRODUCT_DOES_NOT_EXIST' | 'GENERIC_ERROR'


/** Return type for `productDuplicateAsync` mutation. */
export interface ProductDuplicateAsyncPayload {
    /** The duplicated product ID. */
    duplicatedProductId?: Scalars['ID']
    /** The asynchronous job for duplicating the products. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductDuplicateUserError[]
    __typename: 'ProductDuplicateAsyncPayload'
}


/** Return type for `productDuplicateAsyncV2` mutation. */
export interface ProductDuplicateAsyncV2Payload {
    /** The duplicated product ID. */
    duplicatedProductId?: Scalars['ID']
    /** The asynchronous job for duplicating the product. */
    productDuplicateJobId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductDuplicateUserError[]
    __typename: 'ProductDuplicateAsyncV2Payload'
}


/** Represents a product duplication job. */
export interface ProductDuplicateJob {
    /** This indicates if the job is still queued or has been run. */
    done: Scalars['Boolean']
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id: Scalars['ID']
    __typename: 'ProductDuplicateJob'
}


/** Return type for `productDuplicate` mutation. */
export interface ProductDuplicatePayload {
    /** The asynchronous job that duplicates the product images. */
    imageJob?: Job
    /** The duplicated product. */
    newProduct?: Product
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductDuplicatePayload'
}


/** An error that occurred while duplicating the product. */
export interface ProductDuplicateUserError {
    /** The error code. */
    code?: ProductDuplicateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductDuplicateUserError'
}


/** Possible error codes that can be returned by `ProductDuplicateUserError`. */
export type ProductDuplicateUserErrorCode = 'PRODUCT_DOES_NOT_EXIST' | 'EMPTY_VARIANT' | 'EMPTY_TITLE' | 'GENERIC_ERROR' | 'FAILED_TO_SAVE'


/**
 * An auto-generated type which holds one Product and a cursor during pagination.
 * 
 */
export interface ProductEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ProductEdge. */
    node: Product
    __typename: 'ProductEdge'
}


/** A product feed. */
export interface ProductFeed {
    /** The country of the product feed. */
    country?: CountryCode
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The language of the product feed. */
    language?: LanguageCode
    /** The status of the product feed. */
    status: ProductFeedStatus
    __typename: 'ProductFeed'
}


/**
 * An auto-generated type for paginating through multiple ProductFeeds.
 * 
 */
export interface ProductFeedConnection {
    /** A list of edges. */
    edges: ProductFeedEdge[]
    /** A list of the nodes contained in ProductFeedEdge. */
    nodes: ProductFeed[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ProductFeedConnection'
}


/** Return type for `productFeedCreate` mutation. */
export interface ProductFeedCreatePayload {
    /** The newly created product feed. */
    productFeed?: ProductFeed
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductFeedCreateUserError[]
    __typename: 'ProductFeedCreatePayload'
}


/** An error that occurs during the execution of `ProductFeedCreate`. */
export interface ProductFeedCreateUserError {
    /** The error code. */
    code?: ProductFeedCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductFeedCreateUserError'
}


/** Possible error codes that can be returned by `ProductFeedCreateUserError`. */
export type ProductFeedCreateUserErrorCode = 'INVALID' | 'TAKEN'


/** Return type for `productFeedDelete` mutation. */
export interface ProductFeedDeletePayload {
    /** The ID of the product feed that was deleted. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductFeedDeleteUserError[]
    __typename: 'ProductFeedDeletePayload'
}


/** An error that occurs during the execution of `ProductFeedDelete`. */
export interface ProductFeedDeleteUserError {
    /** The error code. */
    code?: ProductFeedDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductFeedDeleteUserError'
}


/** Possible error codes that can be returned by `ProductFeedDeleteUserError`. */
export type ProductFeedDeleteUserErrorCode = 'INVALID'


/**
 * An auto-generated type which holds one ProductFeed and a cursor during pagination.
 * 
 */
export interface ProductFeedEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ProductFeedEdge. */
    node: ProductFeed
    __typename: 'ProductFeedEdge'
}


/** The valid values for the status of product feed. */
export type ProductFeedStatus = 'ACTIVE' | 'INACTIVE'


/** Return type for `productFullSync` mutation. */
export interface ProductFullSyncPayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductFullSyncUserError[]
    __typename: 'ProductFullSyncPayload'
}


/** An error that occurs during the execution of `ProductFullSync`. */
export interface ProductFullSyncUserError {
    /** The error code. */
    code?: ProductFullSyncUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductFullSyncUserError'
}


/** Possible error codes that can be returned by `ProductFullSyncUserError`. */
export type ProductFullSyncUserErrorCode = 'INVALID'


/** The set of valid sort keys for the ProductImage query. */
export type ProductImageSortKeys = 'CREATED_AT' | 'POSITION' | 'ID' | 'RELEVANCE'


/** Return type for `productImageUpdate` mutation. */
export interface ProductImageUpdatePayload {
    /** The image that has been updated. */
    image?: Image
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductImageUpdatePayload'
}


/** Return type for `productJoinSellingPlanGroups` mutation. */
export interface ProductJoinSellingPlanGroupsPayload {
    /** The product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'ProductJoinSellingPlanGroupsPayload'
}


/** Return type for `productLeaveSellingPlanGroups` mutation. */
export interface ProductLeaveSellingPlanGroupsPayload {
    /** The product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'ProductLeaveSellingPlanGroupsPayload'
}


/** The set of valid sort keys for the ProductMedia query. */
export type ProductMediaSortKeys = 'POSITION' | 'ID' | 'RELEVANCE'


/**
 * The product property names. For example, "Size", "Color", and "Material".
 * Variants are selected based on permutations of these options.
 * The limit for each product property name is 255 characters.
 * 
 */
export interface ProductOption {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The product option’s name. */
    name: Scalars['String']
    /** The product option's position. */
    position: Scalars['Int']
    /** The translations associated with the resource. */
    translations: Translation[]
    /** The corresponding value to the product option name. */
    values: Scalars['String'][]
    __typename: 'ProductOption'
}


/** The price range of the product. */
export interface ProductPriceRange {
    /** The highest variant's price. */
    maxVariantPrice: MoneyV2
    /** The lowest variant's price. */
    minVariantPrice: MoneyV2
    __typename: 'ProductPriceRange'
}


/** The price range of the product. */
export interface ProductPriceRangeV2 {
    /** The highest variant's price. */
    maxVariantPrice: MoneyV2
    /** The lowest variant's price. */
    minVariantPrice: MoneyV2
    __typename: 'ProductPriceRangeV2'
}


/** Represents the channels where a product is published. */
export interface ProductPublication {
    /** The channel where the product was or is published. */
    channel: Channel
    /** Whether the publication is published or not. */
    isPublished: Scalars['Boolean']
    /** The product that was or is going to be published on the channel. */
    product: Product
    /** The date that the product was or is going to be published on the channel. */
    publishDate?: Scalars['DateTime']
    __typename: 'ProductPublication'
}


/**
 * An auto-generated type for paginating through multiple ProductPublications.
 * 
 */
export interface ProductPublicationConnection {
    /** A list of edges. */
    edges: ProductPublicationEdge[]
    /** A list of the nodes contained in ProductPublicationEdge. */
    nodes: ProductPublication[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ProductPublicationConnection'
}


/**
 * An auto-generated type which holds one ProductPublication and a cursor during pagination.
 * 
 */
export interface ProductPublicationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ProductPublicationEdge. */
    node: ProductPublication
    __typename: 'ProductPublicationEdge'
}


/** Return type for `productPublish` mutation. */
export interface ProductPublishPayload {
    /** The product that has been published. */
    product?: Product
    /**
     * @deprecated Use Product.publications instead.
     * The channels where the product is published.
     */
    productPublications?: ProductPublication[]
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductPublishPayload'
}


/** Return type for `productReorderImages` mutation. */
export interface ProductReorderImagesPayload {
    /** The asynchronous job which reorders the images. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductReorderImagesPayload'
}


/** Return type for `productReorderMedia` mutation. */
export interface ProductReorderMediaPayload {
    /** The asynchronous job which reorders the media. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors: MediaUserError[]
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'ProductReorderMediaPayload'
}


/**
 * Reports the status of product for a Sales Channel or Storefront API.
 * This might include why a product is not available in a Sales Channel
 * and how a merchant might fix this.
 * 
 */
export interface ProductResourceFeedback {
    /**
     * The time when the feedback was generated. Used to help determine whether
     * incoming feedback is outdated compared to existing feedback.
     * 
     */
    feedbackGeneratedAt: Scalars['DateTime']
    /** The feedback messages presented to the merchant. */
    messages: Scalars['String'][]
    /** The ID of the product associated with the feedback. */
    productId: Scalars['ID']
    /** The timestamp of the product associated with the feedback. */
    productUpdatedAt: Scalars['DateTime']
    /** Conveys the state of the feedback and whether it requires merchant action or not. */
    state: ResourceFeedbackState
    __typename: 'ProductResourceFeedback'
}


/** A sale associated with a product. */
export interface ProductSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line item for the associated sale. */
    lineItem: LineItem
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'ProductSale'
}


/** The set of valid sort keys for the Product query. */
export type ProductSortKeys = 'TITLE' | 'PRODUCT_TYPE' | 'VENDOR' | 'INVENTORY_TOTAL' | 'UPDATED_AT' | 'CREATED_AT' | 'PUBLISHED_AT' | 'ID' | 'RELEVANCE'


/** The possible product statuses. */
export type ProductStatus = 'ACTIVE' | 'ARCHIVED' | 'DRAFT'


/** Represents a [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt) node. */
export interface ProductTaxonomyNode {
    /** The full name of the product taxonomy node. For example,  Animals & Pet Supplies > Pet Supplies > Dog Supplies > Dog Beds. */
    fullName: Scalars['String']
    /** The ID of the product taxonomy node. */
    id: Scalars['ID']
    /** Whether the node is a leaf node. */
    isLeaf: Scalars['Boolean']
    /** Whether the node is a root node. */
    isRoot: Scalars['Boolean']
    /** The name of the product taxonomy node. For example, Dog Beds. */
    name: Scalars['String']
    __typename: 'ProductTaxonomyNode'
}


/** Return type for `productUnpublish` mutation. */
export interface ProductUnpublishPayload {
    /** The product that has been unpublished. */
    product?: Product
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductUnpublishPayload'
}


/** Return type for `productUpdateMedia` mutation. */
export interface ProductUpdateMediaPayload {
    /** The updated media object. */
    media?: Media[]
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors: MediaUserError[]
    /** The product on which media was updated. */
    product?: Product
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors: UserError[]
    __typename: 'ProductUpdateMediaPayload'
}


/** Return type for `productUpdate` mutation. */
export interface ProductUpdatePayload {
    /** The updated product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductUpdatePayload'
}


/** Represents a product variant. */
export interface ProductVariant {
    /** Whether the product variant is available for sale. */
    availableForSale: Scalars['Boolean']
    /** The value of the barcode associated with the product. */
    barcode?: Scalars['String']
    /** The compare-at price of the variant in the default shop currency. */
    compareAtPrice?: Scalars['Money']
    /** The pricing that applies for a customer in a given context. */
    contextualPricing: ProductVariantContextualPricing
    /** The date and time when the variant was created. */
    createdAt: Scalars['DateTime']
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor: Scalars['String']
    /** The delivery profile for the variant. */
    deliveryProfile?: DeliveryProfile
    /** Display name of the variant, based on product's title + variant's title. */
    displayName: Scalars['String']
    /**
     * @deprecated  The [relationship between a product variant and a fulfillment service was changed in the `2022-07` API version](/changelog/fulfillment-service-sku-sharing). A [ProductVariant](/api/admin-graphql/latest/objects/ProductVariant) can be stocked by multiple fulfillment services. As a result, we recommend that you use the [inventoryItem field](/api/admin-graphql/latest/objects/ProductVariant#field-productvariant-inventoryitem) if you need to determine where a product variant is stocked.  If you need to determine whether a product is a gift card, then you should continue to use this field until an alternative is available.  Learn more about [managing inventory quantities and states](/apps/fulfillment/inventory-management-apps/quantities-states). 
     * The fulfillment service that stocks a product variant.
     * 
     * This is a third-party fulfillment service if the following conditions are met:
     * - The product variant is stocked by a single fulfillment service.
     * - The [FulfillmentService](/api/admin-graphql/latest/objects/FulfillmentService) is a third-party fulfillment service. Third-party fulfillment services don't have a handle with the value `manual`.
     * - The fulfillment service has not [opted into SKU sharing](/api/admin-graphql/latest/objects/FulfillmentService#field-fulfillmentservice-permitsskusharing).
     * 
     * If the conditions aren't met, then the fulfillment service has the `manual` handle.
     * 
     */
    fulfillmentService?: FulfillmentService
    /** Whether changes to the fulfillment service for the product variant are allowed. */
    fulfillmentServiceEditable: EditableProperty
    /**
     * @deprecated Use `InventoryItem.harmonizedSystemCode` instead.
     * The Harmonized System Code (or HS Tariff Code) for the variant.
     */
    harmonizedSystemCode?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The featured image for the variant. */
    image?: Image
    /** The inventory item, which is used to query for inventory information. */
    inventoryItem: InventoryItem
    /**
     * @deprecated Use tracked attribute on `inventoryItem` instead.
     * The fulfillment service that tracks the number of items in stock for the product variant.
     */
    inventoryManagement: ProductVariantInventoryManagement
    /** Whether customers are allowed to place an order for the product variant when it's out of stock. */
    inventoryPolicy: ProductVariantInventoryPolicy
    /** The total sellable quantity of the variant. */
    inventoryQuantity?: Scalars['Int']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The media associated with the product variant. */
    media: MediaConnection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /**
     * The order of the product variant in the list of product variants. The first position in the list is 1.
     * 
     */
    position: Scalars['Int']
    /**
     * @deprecated Use `contextualPricing` instead.
     * List of prices and compare-at prices in the presentment currencies for this shop.
     */
    presentmentPrices: ProductVariantPricePairConnection
    /** The price of the product variant in the default shop currency. */
    price: Scalars['Money']
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /** The product that this variant belongs to. */
    product: Product
    /** A list of the product variant components. */
    productVariantComponents: ProductVariantComponentConnection
    /**
     * Whether a product variant requires components. The default value is `false`.
     * If `true`, then the product variant can only be purchased as a parent bundle with components and it will be omitted
     * from channels that don't support bundles.
     * 
     */
    requiresComponents: Scalars['Boolean']
    /**
     * @deprecated Use `InventoryItem.requiresShipping` instead.
     * Whether a customer needs to provide a shipping address when placing an order for the product variant.
     * 
     */
    requiresShipping: Scalars['Boolean']
    /** List of product options applied to the variant. */
    selectedOptions: SelectedOption[]
    /**
     * The total sellable quantity of the variant for online channels.
     * This doesn't represent the total available inventory or capture
     * [limitations based on customer location](https://help.shopify.com/manual/markets/inventory_and_fulfillment).
     * 
     */
    sellableOnlineQuantity: Scalars['Int']
    /** Count of selling plan groups associated with the product variant. */
    sellingPlanGroupCount: Scalars['Int']
    /** A list of all selling plan groups defined in the current shop associated with the product variant. */
    sellingPlanGroups: SellingPlanGroupConnection
    /**
     * A case-sensitive identifier for the product variant in the shop.
     * Required in order to connect to a fulfillment service.
     * 
     */
    sku?: Scalars['String']
    /**
     * @deprecated Use `id` instead.
     * The Storefront GraphQL API ID of the `ProductVariant`.
     * 
     * As of the `2022-04` version release, the Storefront GraphQL API will no longer return Base64 encoded IDs to match the behavior of the Admin GraphQL API. Therefore, you can safely use the `id` field's value instead.
     * 
     */
    storefrontId: Scalars['StorefrontID']
    /** The tax code for the product variant. */
    taxCode?: Scalars['String']
    /** Whether a tax is charged when the product variant is sold. */
    taxable: Scalars['Boolean']
    /** The title of the product variant. */
    title: Scalars['String']
    /** The translations associated with the resource. */
    translations: Translation[]
    /**
     * The date and time (ISO 8601 format) when the product variant was last modified.
     * 
     */
    updatedAt: Scalars['DateTime']
    /** The weight of the product variant in the unit system specified with weight_unit. */
    weight?: Scalars['Float']
    /**
     * The unit of measurement that applies to the product variant's weight. If you don't specify a value for weight_unit, then the shop's default unit of measurement is applied. Valid values: `g`, `kg`, `oz`, `lb`.
     * 
     */
    weightUnit: WeightUnit
    __typename: 'ProductVariant'
}


/** Return type for `productVariantAppendMedia` mutation. */
export interface ProductVariantAppendMediaPayload {
    /** The product associated with the variants and media. */
    product?: Product
    /** The product variants that were updated. */
    productVariants?: ProductVariant[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MediaUserError[]
    __typename: 'ProductVariantAppendMediaPayload'
}


/** A product variant component associated with a product variant. */
export interface ProductVariantComponent {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The product variant associated with the component. */
    productVariant: ProductVariant
    /** The required quantity of the component. */
    quantity: Scalars['Int']
    __typename: 'ProductVariantComponent'
}


/**
 * An auto-generated type for paginating through multiple ProductVariantComponents.
 * 
 */
export interface ProductVariantComponentConnection {
    /** A list of edges. */
    edges: ProductVariantComponentEdge[]
    /** A list of the nodes contained in ProductVariantComponentEdge. */
    nodes: ProductVariantComponent[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ProductVariantComponentConnection'
}


/**
 * An auto-generated type which holds one ProductVariantComponent and a cursor during pagination.
 * 
 */
export interface ProductVariantComponentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ProductVariantComponentEdge. */
    node: ProductVariantComponent
    __typename: 'ProductVariantComponentEdge'
}


/**
 * An auto-generated type for paginating through multiple ProductVariants.
 * 
 */
export interface ProductVariantConnection {
    /** A list of edges. */
    edges: ProductVariantEdge[]
    /** A list of the nodes contained in ProductVariantEdge. */
    nodes: ProductVariant[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ProductVariantConnection'
}


/**
 * The price of a product variant in a specific country.
 * Prices vary between countries.
 * 
 */
export interface ProductVariantContextualPricing {
    /** The final compare-at price after all adjustments are applied. */
    compareAtPrice?: MoneyV2
    /** The final price after all adjustments are applied. */
    price: MoneyV2
    /** The quantity rule applied for a given context. */
    quantityRule: QuantityRule
    __typename: 'ProductVariantContextualPricing'
}


/** Return type for `productVariantCreate` mutation. */
export interface ProductVariantCreatePayload {
    /** The product associated with the variant. */
    product?: Product
    /** The successfully created variant. */
    productVariant?: ProductVariant
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductVariantCreatePayload'
}


/** Return type for `productVariantDelete` mutation. */
export interface ProductVariantDeletePayload {
    /** The ID of the deleted product variant. */
    deletedProductVariantId?: Scalars['ID']
    /** The product associated with the deleted product variant. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductVariantDeletePayload'
}


/** Return type for `productVariantDetachMedia` mutation. */
export interface ProductVariantDetachMediaPayload {
    /** The product associated with the variants and media. */
    product?: Product
    /** The product variants that were updated. */
    productVariants?: ProductVariant[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MediaUserError[]
    __typename: 'ProductVariantDetachMediaPayload'
}


/**
 * An auto-generated type which holds one ProductVariant and a cursor during pagination.
 * 
 */
export interface ProductVariantEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ProductVariantEdge. */
    node: ProductVariant
    __typename: 'ProductVariantEdge'
}


/** The valid values for the method of inventory tracking for a product variant. */
export type ProductVariantInventoryManagement = 'SHOPIFY' | 'NOT_MANAGED' | 'FULFILLMENT_SERVICE'


/**
 * The valid values for the inventory policy of a product variant once it is out of stock.
 * 
 */
export type ProductVariantInventoryPolicy = 'DENY' | 'CONTINUE'


/** Return type for `productVariantJoinSellingPlanGroups` mutation. */
export interface ProductVariantJoinSellingPlanGroupsPayload {
    /** The product variant object. */
    productVariant?: ProductVariant
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'ProductVariantJoinSellingPlanGroupsPayload'
}


/** Return type for `productVariantLeaveSellingPlanGroups` mutation. */
export interface ProductVariantLeaveSellingPlanGroupsPayload {
    /** The product variant object. */
    productVariant?: ProductVariant
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'ProductVariantLeaveSellingPlanGroupsPayload'
}


/**
 * The compare-at price and price of a variant sharing a currency.
 * 
 */
export interface ProductVariantPricePair {
    /** The compare-at price of the variant with associated currency. */
    compareAtPrice?: MoneyV2
    /** The price of the variant with associated currency. */
    price: MoneyV2
    __typename: 'ProductVariantPricePair'
}


/**
 * An auto-generated type for paginating through multiple ProductVariantPricePairs.
 * 
 */
export interface ProductVariantPricePairConnection {
    /** A list of edges. */
    edges: ProductVariantPricePairEdge[]
    /** A list of the nodes contained in ProductVariantPricePairEdge. */
    nodes: ProductVariantPricePair[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ProductVariantPricePairConnection'
}


/**
 * An auto-generated type which holds one ProductVariantPricePair and a cursor during pagination.
 * 
 */
export interface ProductVariantPricePairEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ProductVariantPricePairEdge. */
    node: ProductVariantPricePair
    __typename: 'ProductVariantPricePairEdge'
}


/** Return type for `productVariantRelationshipBulkUpdate` mutation. */
export interface ProductVariantRelationshipBulkUpdatePayload {
    /** The product variants with successfully updated product variant relationships. */
    parentProductVariants?: ProductVariant[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductVariantRelationshipBulkUpdateUserError[]
    __typename: 'ProductVariantRelationshipBulkUpdatePayload'
}


/** An error that occurs during the execution of `ProductVariantRelationshipBulkUpdate`. */
export interface ProductVariantRelationshipBulkUpdateUserError {
    /** The error code. */
    code?: ProductVariantRelationshipBulkUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductVariantRelationshipBulkUpdateUserError'
}


/** Possible error codes that can be returned by `ProductVariantRelationshipBulkUpdateUserError`. */
export type ProductVariantRelationshipBulkUpdateUserErrorCode = 'PARENT_REQUIRED' | 'FAILED_TO_CREATE' | 'PRODUCT_VARIANTS_NOT_FOUND' | 'CIRCULAR_REFERENCE' | 'NESTED_PARENT_PRODUCT_VARIANT' | 'INVALID_QUANTITY' | 'DUPLICATE_PRODUCT_VARIANT_RELATIONSHIP' | 'EXCEEDED_PRODUCT_VARIANT_RELATIONSHIP_LIMIT' | 'PRODUCT_VARIANT_RELATIONSHIP_TYPE_CONFLICT' | 'UNEXPECTED_ERROR' | 'FAILED_TO_REMOVE' | 'MUST_SPECIFY_COMPONENTS' | 'FAILED_TO_UPDATE' | 'FAILED_TO_UPDATE_PARENT_PRODUCT_VARIANT_PRICE' | 'UPDATE_PARENT_VARIANT_PRICE_REQUIRED' | 'PRODUCT_VARIANTS_NOT_COMPONENTS' | 'PRODUCT_EXPANDER_APP_OWNERSHIP_ALREADY_EXISTS' | 'UNSUPPORTED_MULTIPACK_RELATIONSHIP' | 'PARENT_PRODUCT_VARIANT_CANNOT_BE_GIFT_CARD' | 'PARENT_PRODUCT_VARIANT_CANNOT_REQUIRE_SELLING_PLAN'


/** The set of valid sort keys for the ProductVariant query. */
export type ProductVariantSortKeys = 'TITLE' | 'NAME' | 'SKU' | 'INVENTORY_QUANTITY' | 'INVENTORY_MANAGEMENT' | 'INVENTORY_LEVELS_AVAILABLE' | 'INVENTORY_POLICY' | 'FULL_TITLE' | 'POPULAR' | 'POSITION' | 'ID' | 'RELEVANCE'


/** Return type for `productVariantUpdate` mutation. */
export interface ProductVariantUpdatePayload {
    /** The product associated with the variant. */
    product?: Product
    /** The updated variant. */
    productVariant?: ProductVariant
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ProductVariantUpdatePayload'
}


/** Return type for `productVariantsBulkCreate` mutation. */
export interface ProductVariantsBulkCreatePayload {
    /** The updated product object. */
    product?: Product
    /** The newly created variants. */
    productVariants?: ProductVariant[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductVariantsBulkCreateUserError[]
    __typename: 'ProductVariantsBulkCreatePayload'
}


/** Error codes for failed product variant bulk create mutations. */
export interface ProductVariantsBulkCreateUserError {
    /** The error code. */
    code?: ProductVariantsBulkCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductVariantsBulkCreateUserError'
}


/** Possible error codes that can be returned by `ProductVariantsBulkCreateUserError`. */
export type ProductVariantsBulkCreateUserErrorCode = 'PRODUCT_DOES_NOT_EXIST' | 'NO_KEY_ON_CREATE' | 'VARIANT_ALREADY_EXISTS' | 'GREATER_THAN_OR_EQUAL_TO' | 'NEED_TO_ADD_OPTION_VALUES' | 'OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS' | 'TOO_MANY_INVENTORY_LOCATIONS' | 'SUBSCRIPTION_VIOLATION' | 'VARIANT_ALREADY_EXISTS_CHANGE_OPTION_VALUE' | 'TRACKED_VARIANT_LOCATION_NOT_FOUND' | 'MUST_BE_FOR_THIS_PRODUCT' | 'NOT_DEFINED_FOR_SHOP' | 'INVALID' | 'NEGATIVE_PRICE_VALUE'


/** Return type for `productVariantsBulkDelete` mutation. */
export interface ProductVariantsBulkDeletePayload {
    /** The updated product object. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductVariantsBulkDeleteUserError[]
    __typename: 'ProductVariantsBulkDeletePayload'
}


/** Error codes for failed bulk variant delete mutations. */
export interface ProductVariantsBulkDeleteUserError {
    /** The error code. */
    code?: ProductVariantsBulkDeleteUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductVariantsBulkDeleteUserError'
}


/** Possible error codes that can be returned by `ProductVariantsBulkDeleteUserError`. */
export type ProductVariantsBulkDeleteUserErrorCode = 'PRODUCT_DOES_NOT_EXIST' | 'CANNOT_DELETE_LAST_VARIANT' | 'AT_LEAST_ONE_VARIANT_DOES_NOT_BELONG_TO_THE_PRODUCT'


/** Return type for `productVariantsBulkReorder` mutation. */
export interface ProductVariantsBulkReorderPayload {
    /** The updated product. */
    product?: Product
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductVariantsBulkReorderUserError[]
    __typename: 'ProductVariantsBulkReorderPayload'
}


/** Error codes for failed bulk product variants reorder operation. */
export interface ProductVariantsBulkReorderUserError {
    /** The error code. */
    code?: ProductVariantsBulkReorderUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductVariantsBulkReorderUserError'
}


/** Possible error codes that can be returned by `ProductVariantsBulkReorderUserError`. */
export type ProductVariantsBulkReorderUserErrorCode = 'PRODUCT_DOES_NOT_EXIST' | 'MISSING_VARIANT' | 'INVALID_POSITION' | 'DUPLICATED_VARIANT_ID'


/** Return type for `productVariantsBulkUpdate` mutation. */
export interface ProductVariantsBulkUpdatePayload {
    /** The updated product object. */
    product?: Product
    /** The updated variants. */
    productVariants?: ProductVariant[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ProductVariantsBulkUpdateUserError[]
    __typename: 'ProductVariantsBulkUpdatePayload'
}


/** Error codes for failed variant bulk update mutations. */
export interface ProductVariantsBulkUpdateUserError {
    /** The error code. */
    code?: ProductVariantsBulkUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ProductVariantsBulkUpdateUserError'
}


/** Possible error codes that can be returned by `ProductVariantsBulkUpdateUserError`. */
export type ProductVariantsBulkUpdateUserErrorCode = 'PRODUCT_DOES_NOT_EXIST' | 'PRODUCT_VARIANT_ID_MISSING' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'NO_INVENTORY_QUANTITIES_ON_VARIANTS_UPDATE' | 'VARIANT_ALREADY_EXISTS' | 'GREATER_THAN_OR_EQUAL_TO' | 'NEED_TO_ADD_OPTION_VALUES' | 'OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS' | 'SUBSCRIPTION_VIOLATION' | 'NO_INVENTORY_QUANTITES_DURING_UPDATE' | 'NEGATIVE_PRICE_VALUE'


/** The set of valid sort keys for the ProfileItem query. */
export type ProfileItemSortKeys = 'TITLE' | 'PRODUCT_TYPE' | 'VENDOR' | 'INVENTORY_TOTAL' | 'UPDATED_AT' | 'CREATED_AT' | 'PUBLISHED_AT' | 'ID' | 'RELEVANCE'


/** Return type for `pubSubServerPixelUpdate` mutation. */
export interface PubSubServerPixelUpdatePayload {
    /** The server pixel as configured by the mutation. */
    serverPixel?: ServerPixel
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsServerPixelUserError[]
    __typename: 'PubSubServerPixelUpdatePayload'
}


/** Return type for `pubSubWebhookSubscriptionCreate` mutation. */
export interface PubSubWebhookSubscriptionCreatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PubSubWebhookSubscriptionCreateUserError[]
    /** The webhook subscription that was created. */
    webhookSubscription?: WebhookSubscription
    __typename: 'PubSubWebhookSubscriptionCreatePayload'
}


/** An error that occurs during the execution of `PubSubWebhookSubscriptionCreate`. */
export interface PubSubWebhookSubscriptionCreateUserError {
    /** The error code. */
    code?: PubSubWebhookSubscriptionCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PubSubWebhookSubscriptionCreateUserError'
}


/** Possible error codes that can be returned by `PubSubWebhookSubscriptionCreateUserError`. */
export type PubSubWebhookSubscriptionCreateUserErrorCode = 'INVALID_PARAMETERS'


/** Return type for `pubSubWebhookSubscriptionUpdate` mutation. */
export interface PubSubWebhookSubscriptionUpdatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PubSubWebhookSubscriptionUpdateUserError[]
    /** The webhook subscription that was updated. */
    webhookSubscription?: WebhookSubscription
    __typename: 'PubSubWebhookSubscriptionUpdatePayload'
}


/** An error that occurs during the execution of `PubSubWebhookSubscriptionUpdate`. */
export interface PubSubWebhookSubscriptionUpdateUserError {
    /** The error code. */
    code?: PubSubWebhookSubscriptionUpdateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PubSubWebhookSubscriptionUpdateUserError'
}


/** Possible error codes that can be returned by `PubSubWebhookSubscriptionUpdateUserError`. */
export type PubSubWebhookSubscriptionUpdateUserErrorCode = 'INVALID_PARAMETERS'


/**
 * A publication is a group of products and collections that is published to an app.
 * 
 */
export interface Publication {
    /**
     * @deprecated Use [AppCatalog.apps](https://shopify.dev/api/admin-graphql/unstable/objects/AppCatalog#connection-appcatalog-apps) instead.
     * The app associated with the publication.
     */
    app: App
    /** Whether new products are automatically published to this publication. */
    autoPublish: Scalars['Boolean']
    /** The catalog associated with the publication. */
    catalog?: Catalog
    /** The collection publications for the list of collections published to the publication. */
    collectionPublicationsV3: ResourcePublicationConnection
    /** The list of collections published to the publication. */
    collections: CollectionConnection
    /** Whether the collection is available to the publication. */
    hasCollection: Scalars['Boolean']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * @deprecated Use [Catalog.title](https://shopify.dev/api/admin-graphql/unstable/interfaces/Catalog#field-catalog-title) instead.
     * Name of the publication.
     */
    name: Scalars['String']
    /** A background operation associated with this publication. */
    operation?: PublicationOperation
    /** The product publications for the list of products published to the publication. */
    productPublicationsV3: ResourcePublicationConnection
    /** The list of products published to the publication. */
    products: ProductConnection
    /** Whether the publication supports future publishing. */
    supportsFuturePublishing: Scalars['Boolean']
    __typename: 'Publication'
}


/**
 * An auto-generated type for paginating through multiple Publications.
 * 
 */
export interface PublicationConnection {
    /** A list of edges. */
    edges: PublicationEdge[]
    /** A list of the nodes contained in PublicationEdge. */
    nodes: Publication[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'PublicationConnection'
}


/** The input fields for the possible values for the default state of a publication. */
export type PublicationCreateInputPublicationDefaultState = 'EMPTY' | 'ALL_PRODUCTS'


/** Return type for `publicationCreate` mutation. */
export interface PublicationCreatePayload {
    /** The publication that's been created. */
    publication?: Publication
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PublicationUserError[]
    __typename: 'PublicationCreatePayload'
}


/** Return type for `publicationDelete` mutation. */
export interface PublicationDeletePayload {
    /** The ID of the publication that was deleted. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PublicationUserError[]
    __typename: 'PublicationDeletePayload'
}


/**
 * An auto-generated type which holds one Publication and a cursor during pagination.
 * 
 */
export interface PublicationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of PublicationEdge. */
    node: Publication
    __typename: 'PublicationEdge'
}


/** The possible types of publication operations. */
export type PublicationOperation = (AddAllProductsOperation | CatalogCsvOperation | PublicationResourceOperation) & { __isUnion?: true }


/** A bulk update operation on a publication. */
export interface PublicationResourceOperation {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: Scalars['Int']
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCount
    /** The status of this operation. */
    status: ResourceOperationStatus
    __typename: 'PublicationResourceOperation'
}


/** Return type for `publicationUpdate` mutation. */
export interface PublicationUpdatePayload {
    /** The publication that's been updated. */
    publication?: Publication
    /** The list of errors that occurred from executing the mutation. */
    userErrors: PublicationUserError[]
    __typename: 'PublicationUpdatePayload'
}


/**
 * Defines errors encountered while managing a publication.
 * 
 */
export interface PublicationUserError {
    /** The error code. */
    code?: PublicationUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'PublicationUserError'
}


/** Possible error codes that can be returned by `PublicationUserError`. */
export type PublicationUserErrorCode = 'UNSUPPORTED_PUBLICATION_ACTION' | 'PUBLICATION_NOT_FOUND' | 'PUBLICATION_LOCKED' | 'UNSUPPORTED_PUBLISHABLE_TYPE' | 'INVALID_PUBLISHABLE_ID' | 'MARKET_NOT_FOUND' | 'CATALOG_NOT_FOUND' | 'CANNOT_MODIFY_APP_CATALOG_PUBLICATION' | 'CANNOT_MODIFY_MARKET_CATALOG_PUBLICATION' | 'CANNOT_MODIFY_APP_CATALOG' | 'CANNOT_MODIFY_MARKET_CATALOG' | 'INVALID' | 'TAKEN' | 'TOO_LONG' | 'TOO_SHORT' | 'BLANK' | 'PRODUCT_TYPE_INCOMPATIBLE_WITH_CATALOG_TYPE' | 'PUBLICATION_UPDATE_LIMIT_EXCEEDED'


/**
 * Represents a resource that can be published to a channel.
 * A publishable resource can be either a Product or Collection.
 * 
 */
export type Publishable = (Collection | Product) & { __isUnion?: true }


/** Return type for `publishablePublish` mutation. */
export interface PublishablePublishPayload {
    /** Resource that has been published. */
    publishable?: Publishable
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'PublishablePublishPayload'
}


/** Return type for `publishablePublishToCurrentChannel` mutation. */
export interface PublishablePublishToCurrentChannelPayload {
    /** Resource that has been published. */
    publishable?: Publishable
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'PublishablePublishToCurrentChannelPayload'
}


/** Return type for `publishableUnpublish` mutation. */
export interface PublishableUnpublishPayload {
    /** Resource that has been unpublished. */
    publishable?: Publishable
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'PublishableUnpublishPayload'
}


/** Return type for `publishableUnpublishToCurrentChannel` mutation. */
export interface PublishableUnpublishToCurrentChannelPayload {
    /** Resource that has been unpublished. */
    publishable?: Publishable
    /** The user's shop. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'PublishableUnpublishToCurrentChannelPayload'
}


/**
 * Represents information about the purchasing company for the order or draft order.
 * 
 */
export interface PurchasingCompany {
    /** The company associated to the order or draft order. */
    company: Company
    /** The company contact associated to the order or draft order. */
    contact?: CompanyContact
    /** The company location associated to the order or draft order. */
    location: CompanyLocation
    __typename: 'PurchasingCompany'
}


/**
 * Represents information about the purchasing entity for the order or draft order.
 * 
 */
export type PurchasingEntity = (Customer | PurchasingCompany) & { __isUnion?: true }


/**
 * The quantity rule for the product variant in a given context.
 * 
 */
export interface QuantityRule {
    /**
     * The value that specifies the quantity increment between minimum and maximum of the rule.
     * Only quantities divisible by this value will be considered valid.
     * 
     * The increment must be lower than or equal to the minimum and the maximum, and both minimum and maximum
     * must be divisible by this value.
     * 
     */
    increment: Scalars['Int']
    /** Whether the quantity rule fields match one increment, one minimum and no maximum. */
    isDefault: Scalars['Boolean']
    /**
     * An optional value that defines the highest allowed quantity purchased by the customer.
     * If defined, maximum must be lower than or equal to the minimum and must be a multiple of the increment.
     * 
     */
    maximum?: Scalars['Int']
    /**
     * The value that defines the lowest allowed quantity purchased by the customer.
     * The minimum must be a multiple of the quantity rule's increment.
     * 
     */
    minimum: Scalars['Int']
    /** Whether the values of the quantity rule were explicitly set. */
    originType: QuantityRuleOriginType
    /** The product variant for which the quantity rule is applied. */
    productVariant: ProductVariant
    __typename: 'QuantityRule'
}


/**
 * An auto-generated type for paginating through multiple QuantityRules.
 * 
 */
export interface QuantityRuleConnection {
    /** A list of edges. */
    edges: QuantityRuleEdge[]
    /** A list of the nodes contained in QuantityRuleEdge. */
    nodes: QuantityRule[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /** The total count of QuantityRules. Note: The maximum count limit is 10000. */
    totalCount: Scalars['UnsignedInt64']
    __typename: 'QuantityRuleConnection'
}


/**
 * An auto-generated type which holds one QuantityRule and a cursor during pagination.
 * 
 */
export interface QuantityRuleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of QuantityRuleEdge. */
    node: QuantityRule
    __typename: 'QuantityRuleEdge'
}


/** The origin of quantity rule on a price list. */
export type QuantityRuleOriginType = 'FIXED' | 'RELATIVE'


/**
 * An error for a failed quantity rule operation.
 * 
 */
export interface QuantityRuleUserError {
    /** The error code. */
    code?: QuantityRuleUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'QuantityRuleUserError'
}


/** Possible error codes that can be returned by `QuantityRuleUserError`. */
export type QuantityRuleUserErrorCode = 'BLANK' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'PRICE_LIST_DOES_NOT_EXIST' | 'VARIANT_QUANTITY_RULE_DOES_NOT_EXIST' | 'MINIMUM_IS_GREATER_THAN_MAXIMUM' | 'INCREMENT_IS_GREATER_THAN_MINIMUM' | 'GREATER_THAN_OR_EQUAL_TO' | 'MAXIMUM_NOT_MULTIPLE_OF_INCREMENT' | 'MINIMUM_NOT_MULTIPLE_OF_INCREMENT' | 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' | 'GENERIC_ERROR'


/** Return type for `quantityRulesAdd` mutation. */
export interface QuantityRulesAddPayload {
    /** The list of quantity rules that were added to or updated in the price list. */
    quantityRules?: QuantityRule[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: QuantityRuleUserError[]
    __typename: 'QuantityRulesAddPayload'
}


/** Return type for `quantityRulesDelete` mutation. */
export interface QuantityRulesDeletePayload {
    /**
     * A list of product variant IDs whose quantity rules were removed from the price list.
     * 
     */
    deletedQuantityRulesVariantIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: QuantityRuleUserError[]
    __typename: 'QuantityRulesDeletePayload'
}


/** The schema's entry-point for queries. This acts as the public, top-level API from which all queries must start. */
export interface QueryRoot {
    /** Returns an abandonment by ID. */
    abandonment?: Abandonment
    /** Returns an Abandonment by the Abandoned Checkout ID. */
    abandonmentByAbandonedCheckoutId?: Abandonment
    /** Lookup an App by ID or return the currently authenticated App. */
    app?: App
    /**
     * Fetches app by handle.
     * Returns null if the app doesn't exist.
     * 
     */
    appByHandle?: App
    /**
     * Fetches an app by its client ID.
     * Returns null if the app doesn't exist.
     * 
     */
    appByKey?: App
    /**
     * An app discount type.
     * 
     */
    appDiscountType?: AppDiscountType
    /**
     * A list of app discount types installed by apps.
     * 
     */
    appDiscountTypes: AppDiscountType[]
    /** Lookup an AppInstallation by ID or return the AppInstallation for the currently authenticated App. */
    appInstallation?: AppInstallation
    /** List of app installations. */
    appInstallations: AppInstallationConnection
    /**
     * @deprecated Use `automaticDiscountNode` instead.
     * Returns an automatic discount resource by ID.
     */
    automaticDiscount?: DiscountAutomatic
    /** Returns an automatic discount resource by ID. */
    automaticDiscountNode?: DiscountAutomaticNode
    /** List of automatic discounts. */
    automaticDiscountNodes: DiscountAutomaticNodeConnection
    /** List of the shop's automatic discount saved searches. */
    automaticDiscountSavedSearches: SavedSearchConnection
    /**
     * @deprecated Use `automaticDiscountNodes` instead.
     * List of automatic discounts.
     */
    automaticDiscounts: DiscountAutomaticConnection
    /** Returns a list of activated carrier services and associated shop locations that support them. */
    availableCarrierServices: DeliveryCarrierServiceAndLocations[]
    /** A list of available locales. */
    availableLocales: Locale[]
    /** Returns a `DeliveryCarrierService` object by ID. */
    carrierService?: DeliveryCarrierService
    /** List of Cart transform objects owned by the current API client. */
    cartTransforms: CartTransformConnection
    /** Returns a Catalog resource by ID. */
    catalog?: Catalog
    /** Returns the most recent catalog operations for the shop. */
    catalogOperations: ResourceOperation[]
    /** The catalogs belonging to the shop. */
    catalogs: CatalogConnection
    /**
     * @deprecated Use `publication` instead.
     * Lookup a channel by ID.
     */
    channel?: Channel
    /**
     * @deprecated Use `publications` instead.
     * List of the active sales channels.
     */
    channels: ChannelConnection
    /** A checkout profile on a shop. */
    checkoutProfile?: CheckoutProfile
    /** List of checkout profiles on a shop. */
    checkoutProfiles: CheckoutProfileConnection
    /** Returns a code discount resource by ID. */
    codeDiscountNode?: DiscountCodeNode
    /** Returns a code discount identified by its discount code. */
    codeDiscountNodeByCode?: DiscountCodeNode
    /**
     * List of code discounts. Special fields for query params:
     *  * status: active, expired, scheduled
     *  * discount_type: bogo, fixed_amount, free_shipping, percentage.
     */
    codeDiscountNodes: DiscountCodeNodeConnection
    /** List of the shop's code discount saved searches. */
    codeDiscountSavedSearches: SavedSearchConnection
    /** Returns a Collection resource by ID. */
    collection?: Collection
    /**
     * Return a collection by its handle.
     * 
     */
    collectionByHandle?: Collection
    /** Lists all rules that can be used to create smart collections. */
    collectionRulesConditions: CollectionRuleConditions[]
    /** Returns a list of the shop's collection saved searches. */
    collectionSavedSearches: SavedSearchConnection
    /** Returns a list of collections. */
    collections: CollectionConnection
    /** Returns the list of companies in the shop. */
    companies: CompanyConnection
    /** Returns a `Company` object by ID. */
    company?: Company
    /** Returns a `CompanyContact` object by ID. */
    companyContact?: CompanyContact
    /** Returns a `CompanyContactRole` object by ID. */
    companyContactRole?: CompanyContactRole
    /** The number of companies for a shop. */
    companyCount: Scalars['Int']
    /** Returns a `CompanyLocation` object by ID. */
    companyLocation?: CompanyLocation
    /** Returns the list of company locations in the shop. */
    companyLocations: CompanyLocationConnection
    /** Return the AppInstallation for the currently authenticated App. */
    currentAppInstallation: AppInstallation
    /** Returns the current app's most recent BulkOperation. Apps can run one bulk query and one bulk mutation operation at a time, by shop. */
    currentBulkOperation?: BulkOperation
    /** Returns a Customer resource by ID. */
    customer?: Customer
    /** Returns the status of a customer merge request job. */
    customerMergeJobStatus?: CustomerMergeRequest
    /** Returns a preview of a customer merge request. */
    customerMergePreview: CustomerMergePreview
    /** Returns a CustomerPaymentMethod resource by its ID. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The list of members, such as customers, that's associated with an individual segment. */
    customerSegmentMembers: CustomerSegmentMemberConnection
    /** Returns a segment members query resource by ID. */
    customerSegmentMembersQuery?: CustomerSegmentMembersQuery
    /** Whether a member, which is a customer, belongs to a segment. */
    customerSegmentMembership: SegmentMembershipResponse
    /** List of customers. */
    customers: CustomerConnection
    /** The paginated list of deletion events. */
    deletionEvents: DeletionEventConnection
    /** The delivery customization. */
    deliveryCustomization?: DeliveryCustomization
    /** The delivery customizations. */
    deliveryCustomizations: DeliveryCustomizationConnection
    /** Returns a Delivery Profile resource by ID. */
    deliveryProfile?: DeliveryProfile
    /** Returns a list of saved delivery profiles. */
    deliveryProfiles: DeliveryProfileConnection
    /** Returns the shop-wide shipping settings. */
    deliverySettings?: DeliverySetting
    /** The total number of discount codes for the shop. */
    discountCodeCount: Scalars['Int']
    /** Returns a discount resource by ID. */
    discountNode?: DiscountNode
    /** List of discounts. */
    discountNodes: DiscountNodeConnection
    /** Returns a bulk code creation resource by ID. */
    discountRedeemCodeBulkCreation?: DiscountRedeemCodeBulkCreation
    /** List of the shop's redeemed discount code saved searches. */
    discountRedeemCodeSavedSearches: SavedSearchConnection
    /** Returns dispute details based on ID. */
    dispute?: ShopifyPaymentsDispute
    /** Returns dispute evidence details based on ID. */
    disputeEvidence?: ShopifyPaymentsDisputeEvidence
    /** Lookup a Domain by ID. */
    domain?: Domain
    /** Returns a DraftOrder resource by ID. */
    draftOrder?: DraftOrder
    /** List of the shop's draft order saved searches. */
    draftOrderSavedSearches: SavedSearchConnection
    /** Returns a DraftOrderTag resource by ID. */
    draftOrderTag?: DraftOrderTag
    /** List of saved draft orders. */
    draftOrders: DraftOrderConnection
    /** A list of the shop's file saved searches. */
    fileSavedSearches: SavedSearchConnection
    /** Returns a paginated list of files that have been uploaded to Shopify. */
    files: FileConnection
    /** Returns a Fulfillment resource by ID. */
    fulfillment?: Fulfillment
    /** Returns a Fulfillment order resource by ID. */
    fulfillmentOrder?: FulfillmentOrder
    /**
     * The paginated list of all fulfillment orders.
     * The returned fulfillment orders are filtered according to the
     * [fulfillment order access scopes](https://shopify.dev/api/admin-graphql/latest/objects/fulfillmentorder#api-access-scopes)
     * granted to the app.
     * 
     * Use this query to retrieve fulfillment orders assigned to merchant-managed locations,
     * third-party fulfillment service locations, or all kinds of locations together.
     * 
     * For fetching only the fulfillment orders assigned to the app's locations, use the
     * [Shop.assignedFulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/objects/Shop#connection-shop-assignedfulfillmentorders)
     * connection.
     * 
     */
    fulfillmentOrders: FulfillmentOrderConnection
    /** Returns a FulfillmentService resource by ID. */
    fulfillmentService?: FulfillmentService
    /** Returns a gift card resource by ID. */
    giftCard?: GiftCard
    /** Returns a list of gift cards. */
    giftCards: GiftCardConnection
    /** The total number of gift cards issued for the shop. */
    giftCardsCount: Scalars['UnsignedInt64']
    /** Returns an `InventoryItem` object by ID. */
    inventoryItem?: InventoryItem
    /** Returns a list of inventory items. */
    inventoryItems: InventoryItemConnection
    /** Returns an `InventoryLevel` object by ID. */
    inventoryLevel?: InventoryLevel
    /** General inventory properties for the shop. */
    inventoryProperties: InventoryProperties
    /**
     * Returns a Job resource by ID. Used to check the status of internal jobs and any applicable changes.
     * 
     */
    job?: Job
    /** Returns an inventory Location resource by ID. */
    location?: Location
    /** Returns a list of active inventory locations. */
    locations: LocationConnection
    /**
     * @deprecated Use `locationsAvailableForDeliveryProfilesConnection` instead.
     * Returns a list of all origin locations available for a delivery profile.
     */
    locationsAvailableForDeliveryProfiles?: Location[]
    /** Returns a list of all origin locations available for a delivery profile. */
    locationsAvailableForDeliveryProfilesConnection: LocationConnection
    /** Returns a list of fulfillment orders that are on hold. */
    manualHoldsFulfillmentOrders: FulfillmentOrderConnection
    /** Returns a market resource by ID. */
    market?: Market
    /** Returns the applicable market for a customer based on where they are in the world. */
    marketByGeography?: Market
    /** A resource that can have localized values for different markets. */
    marketLocalizableResource?: MarketLocalizableResource
    /** Resources that can have localized values for different markets. */
    marketLocalizableResources: MarketLocalizableResourceConnection
    /** Resources that can have localized values for different markets. */
    marketLocalizableResourcesByIds: MarketLocalizableResourceConnection
    /** A list of marketing activities associated with the marketing app. */
    marketingActivities: MarketingActivityConnection
    /** Returns a MarketingActivity resource by ID. */
    marketingActivity?: MarketingActivity
    /** Returns a MarketingEvent resource by ID. */
    marketingEvent?: MarketingEvent
    /** A list of marketing events associated with the marketing app. */
    marketingEvents: MarketingEventConnection
    /** The markets configured for the shop. */
    markets: MarketConnection
    /** Returns a metafield by ID. */
    metafield?: Metafield
    /** Returns a metafield definition by ID. */
    metafieldDefinition?: MetafieldDefinition
    /**
     * Each metafield definition has a type, which defines the type of information that it can store.
     * This type is enforced across every instance of the resource that owns the metafield definition.
     * 
     * Refer to the [list of supported metafield types](https://shopify.dev/apps/metafields/types).
     * 
     */
    metafieldDefinitionTypes: MetafieldDefinitionType[]
    /** List of metafield definitions. */
    metafieldDefinitions: MetafieldDefinitionConnection
    /** List of the `MetafieldStorefrontVisibility` records. */
    metafieldStorefrontVisibilities: MetafieldStorefrontVisibilityConnection
    /**
     * Returns a `MetafieldStorefrontVisibility` record by ID. A `MetafieldStorefrontVisibility` record lists the
     * metafields to make visible in the Storefront API.
     * 
     */
    metafieldStorefrontVisibility?: MetafieldStorefrontVisibility
    /** Retrieves a metaobject by ID. */
    metaobject?: Metaobject
    /** Retrieves a metaobject by handle. */
    metaobjectByHandle?: Metaobject
    /** Retrieves a metaobject definition by ID. */
    metaobjectDefinition?: MetaobjectDefinition
    /** Finds a metaobject definition by type. */
    metaobjectDefinitionByType?: MetaobjectDefinition
    /** All metaobject definitions. */
    metaobjectDefinitions: MetaobjectDefinitionConnection
    /** All metaobjects for the shop. */
    metaobjects: MetaobjectConnection
    /**
     * Returns a specific node (any object that implements the
     * [Node](https://shopify.dev/api/admin-graphql/latest/interfaces/Node)
     * interface) by ID, in accordance with the
     * [Relay specification](https://relay.dev/docs/guides/graphql-server-specification/#object-identification).
     * This field is commonly used for refetching an object.
     * 
     */
    node?: Node
    /**
     * Returns the list of nodes (any objects that implement the
     * [Node](https://shopify.dev/api/admin-graphql/latest/interfaces/Node)
     * interface) with the given IDs, in accordance with the
     * [Relay specification](https://relay.dev/docs/guides/graphql-server-specification/#object-identification).
     * 
     */
    nodes: (Node | undefined)[]
    /** Returns an Order resource by ID. */
    order?: Order
    /** Returns a payment status by payment reference ID. Used to check the status of a deferred payment. */
    orderPaymentStatus?: OrderPaymentStatus
    /** List of the shop's order saved searches. */
    orderSavedSearches: SavedSearchConnection
    /** Returns a list of orders placed. */
    orders: OrderConnection
    /** The payment customization. */
    paymentCustomization?: PaymentCustomization
    /** The payment customizations. */
    paymentCustomizations: PaymentCustomizationConnection
    /** The list of payment terms templates eligible for all shops and users. */
    paymentTermsTemplates: PaymentTermsTemplate[]
    /** Returns a price list resource by ID. */
    priceList?: PriceList
    /** All price lists for a shop. */
    priceLists: PriceListConnection
    /**
     * @deprecated Use `codeDiscountNode` instead.
     * Returns a code price rule resource by ID.
     */
    priceRule?: PriceRule
    /** List of the shop's price rule saved searches. */
    priceRuleSavedSearches: SavedSearchConnection
    /**
     * @deprecated Use `codeDiscountNodes` instead.
     * Returns a list of price rule resources that have at least one associated discount code.
     */
    priceRules: PriceRuleConnection
    /** The primary market of the shop. */
    primaryMarket: Market
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by ID.
     * Private metafields are accessible only by the application that created them.
     * 
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a list of private metafields associated to a resource.
     * 
     */
    privateMetafields: PrivateMetafieldConnection
    /** Returns a Product resource by ID. */
    product?: Product
    /**
     * Return a product by its handle.
     * 
     */
    productByHandle?: Product
    /** Returns the product duplicate job. */
    productDuplicateJob: ProductDuplicateJob
    /** Returns a ProductFeed resource by ID. */
    productFeed?: ProductFeed
    /** The product feeds for the shop. */
    productFeeds: ProductFeedConnection
    /**
     * Returns the product resource feedback for the currently authenticated app.
     * 
     */
    productResourceFeedback?: ProductResourceFeedback
    /** Returns a list of the shop's product saved searches. */
    productSavedSearches: SavedSearchConnection
    /** Returns a ProductVariant resource by ID. */
    productVariant?: ProductVariant
    /** List of the product variants. */
    productVariants: ProductVariantConnection
    /** List of products. */
    products: ProductConnection
    /** The list of publicly-accessible Admin API versions, including supported versions, the release candidate, and unstable versions. */
    publicApiVersions: ApiVersion[]
    /**
     * Lookup a publication by ID.
     * 
     */
    publication?: Publication
    /** List of publications. */
    publications: PublicationConnection
    /** Returns a Refund resource by ID. */
    refund?: Refund
    /** Returns a Return resource by ID. */
    return?: Return
    /** Lookup a returnable fulfillment by ID. */
    returnableFulfillment?: ReturnableFulfillment
    /** List of returnable fulfillments. */
    returnableFulfillments: ReturnableFulfillmentConnection
    /** Lookup a reverse delivery by ID. */
    reverseDelivery?: ReverseDelivery
    /** Lookup a reverse fulfillment order by ID. */
    reverseFulfillmentOrder?: ReverseFulfillmentOrder
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Lookup a script tag resource by ID.
     * 
     */
    scriptTag?: ScriptTag
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * A list of script tags.
     * 
     */
    scriptTags: ScriptTagConnection
    /** The Customer Segment. */
    segment?: Segment
    /** The number of segments for a shop. */
    segmentCount: Scalars['Int']
    /** A list of filter suggestions associated with a segment. A segment is a group of members (commonly customers) that meet specific criteria. */
    segmentFilterSuggestions: SegmentFilterConnection
    /** A list of filters. */
    segmentFilters: SegmentFilterConnection
    /** A list of a shop's segment migrations. */
    segmentMigrations: SegmentMigrationConnection
    /** The list of suggested values corresponding to a particular filter for a segment. A segment is a group of members, such as customers, that meet specific criteria. */
    segmentValueSuggestions: SegmentValueConnection
    /** A list of a shop's segments. */
    segments: SegmentConnection
    /** Returns a Selling Plan Group resource by ID. */
    sellingPlanGroup?: SellingPlanGroup
    /** List Selling Plan Groups. */
    sellingPlanGroups: SellingPlanGroupConnection
    /** The server pixel configured by the app. */
    serverPixel?: ServerPixel
    /**
     * Returns the Shop resource corresponding to the access token used in the request. The Shop resource contains
     * business and store management settings for the shop.
     * 
     */
    shop: Shop
    /** The shop's billing preferences. */
    shopBillingPreferences: ShopBillingPreferences
    /** A list of locales available on a shop. */
    shopLocales: ShopLocale[]
    /** The Shopify Function. */
    shopifyFunction?: ShopifyFunction
    /** Returns the Shopify Functions for apps installed on the shop. */
    shopifyFunctions: ShopifyFunctionConnection
    /** Shopify Payments account information, including balances and payouts. */
    shopifyPaymentsAccount?: ShopifyPaymentsAccount
    /** Returns the results of a ShopifyQL query. Refer to the [ShopifyQL documentation](https://shopify.dev/api/shopifyql) for more information. */
    shopifyqlQuery?: ShopifyqlResponse
    /** The StaffMember resource, by ID. */
    staffMember?: StaffMember
    /**
     * Standard metafield definitions are intended for specific, common use cases. Their namespace and keys reflect these use cases and are reserved.
     * 
     * Refer to all available [`Standard Metafield Definition Templates`](https://shopify.dev/api/admin-graphql/latest/objects/StandardMetafieldDefinitionTemplate).
     * 
     */
    standardMetafieldDefinitionTemplates: StandardMetafieldDefinitionTemplateConnection
    /** Returns a SubscriptionBillingAttempt by ID. */
    subscriptionBillingAttempt?: SubscriptionBillingAttempt
    /** Returns subscription billing attempts on a store. */
    subscriptionBillingAttempts: SubscriptionBillingAttemptConnection
    /** Returns a subscription billing cycle found either by cycle index or date. */
    subscriptionBillingCycle?: SubscriptionBillingCycle
    /** Returns subscription billing cycles for a contract ID. */
    subscriptionBillingCycles: SubscriptionBillingCycleConnection
    /** Returns a Subscription Contract resource by ID. */
    subscriptionContract?: SubscriptionContract
    /** List Subscription Contracts. */
    subscriptionContracts: SubscriptionContractConnection
    /** Returns a Subscription Draft resource by ID. */
    subscriptionDraft?: SubscriptionDraft
    /** Returns a list of TenderTransactions associated with the shop. */
    tenderTransactions: TenderTransactionConnection
    /** A resource that can have localized values for different languages. */
    translatableResource?: TranslatableResource
    /** Resources that can have localized values for different languages. */
    translatableResources: TranslatableResourceConnection
    /** Resources that can have localized values for different languages. */
    translatableResourcesByIds: TranslatableResourceConnection
    /** Returns a redirect resource by ID. */
    urlRedirect?: UrlRedirect
    /** Returns a redirect import resource by ID. */
    urlRedirectImport?: UrlRedirectImport
    /** A list of the shop's URL redirect saved searches. */
    urlRedirectSavedSearches: SavedSearchConnection
    /** A list of redirects for a shop. */
    urlRedirects: UrlRedirectConnection
    /** The web pixel configured by the app. */
    webPixel?: WebPixel
    /** Returns a webhook subscription by ID. */
    webhookSubscription?: WebhookSubscription
    /** Returns a list of webhook subscriptions. */
    webhookSubscriptions: WebhookSubscriptionConnection
    __typename: 'QueryRoot'
}


/** The record of the line items and transactions that were refunded to a customer, along with restocking instructions for refunded line items. */
export interface Refund {
    /** The date and time when the refund was created. */
    createdAt?: Scalars['DateTime']
    /** A list of the refunded duties as part of this refund. */
    duties?: RefundDuty[]
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The optional note associated with the refund. */
    note?: Scalars['String']
    /** The order associated with the refund. */
    order: Order
    /** The `RefundLineItem` resources attached to the refund. */
    refundLineItems: RefundLineItemConnection
    /** The return associated with the refund. */
    return?: Return
    /** The staff member who created the refund. */
    staffMember?: StaffMember
    /**
     * @deprecated Use `totalRefundedSet` instead.
     * The total amount across all transactions for the refund.
     */
    totalRefunded: MoneyV2
    /** The total amount across all transactions for the refund, in shop and presentment currencies. */
    totalRefundedSet: MoneyBag
    /** The transactions associated with the refund. */
    transactions: OrderTransactionConnection
    /** The date and time when the refund was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'Refund'
}


/** An agreement between the merchant and customer to refund all or a portion of the order. */
export interface RefundAgreement {
    /** The application that created the agreement. */
    app?: App
    /** The date and time at which the agreement occured. */
    happenedAt: Scalars['DateTime']
    /** The unique ID for the agreement. */
    id: Scalars['ID']
    /** The reason the agremeent was created. */
    reason: OrderActionType
    /** The refund associated with the agreement. */
    refund: Refund
    /** The sales associated with the agreement. */
    sales: SaleConnection
    /** The staff member associated with the agreement. */
    user?: StaffMember
    __typename: 'RefundAgreement'
}


/**
 * An auto-generated type for paginating through multiple Refunds.
 * 
 */
export interface RefundConnection {
    /** A list of edges. */
    edges: RefundEdge[]
    /** A list of the nodes contained in RefundEdge. */
    nodes: Refund[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'RefundConnection'
}


/** Return type for `refundCreate` mutation. */
export interface RefundCreatePayload {
    /** The order associated with the created refund. */
    order?: Order
    /** The created refund. */
    refund?: Refund
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'RefundCreatePayload'
}


/** Represents a refunded duty. */
export interface RefundDuty {
    /** The amount of a refunded duty in shop and presentment currencies. */
    amountSet: MoneyBag
    /** The duty associated with this refunded duty. */
    originalDuty?: Duty
    __typename: 'RefundDuty'
}


/** The type of refund to perform for a particular refund duty. */
export type RefundDutyRefundType = 'PROPORTIONAL' | 'FULL'


/**
 * An auto-generated type which holds one Refund and a cursor during pagination.
 * 
 */
export interface RefundEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of RefundEdge. */
    node: Refund
    __typename: 'RefundEdge'
}


/** A line item that's included in a refund. */
export interface RefundLineItem {
    /** The `LineItem` resource associated to the refunded line item. */
    lineItem: LineItem
    /** The inventory restock location. */
    location?: Location
    /**
     * @deprecated Use `priceSet` instead.
     * The price of a refunded line item.
     */
    price: Scalars['Money']
    /** The price of a refunded line item in shop and presentment currencies. */
    priceSet: MoneyBag
    /** The quantity of a refunded line item. */
    quantity: Scalars['Int']
    /** The type of restock for the refunded line item. */
    restockType: RefundLineItemRestockType
    /** Whether the refunded line item was restocked. Not applicable in the context of a SuggestedRefund. */
    restocked: Scalars['Boolean']
    /**
     * @deprecated Use `subtotalSet` instead.
     * The subtotal price of a refunded line item.
     */
    subtotal: Scalars['Money']
    /** The subtotal price of a refunded line item in shop and presentment currencies. */
    subtotalSet: MoneyBag
    /**
     * @deprecated Use `totalTaxSet` instead.
     * The total tax charged on a refunded line item.
     */
    totalTax: Scalars['Money']
    /** The total tax charged on a refunded line item in shop and presentment currencies. */
    totalTaxSet: MoneyBag
    __typename: 'RefundLineItem'
}


/**
 * An auto-generated type for paginating through multiple RefundLineItems.
 * 
 */
export interface RefundLineItemConnection {
    /** A list of edges. */
    edges: RefundLineItemEdge[]
    /** A list of the nodes contained in RefundLineItemEdge. */
    nodes: RefundLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'RefundLineItemConnection'
}


/**
 * An auto-generated type which holds one RefundLineItem and a cursor during pagination.
 * 
 */
export interface RefundLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of RefundLineItemEdge. */
    node: RefundLineItem
    __typename: 'RefundLineItemEdge'
}


/** The type of restock performed for a particular refund line item. */
export type RefundLineItemRestockType = 'RETURN' | 'CANCEL' | 'LEGACY_RESTOCK' | 'NO_RESTOCK'


/**
 * An alert message that appears in the Shopify admin about a problem with a store resource, with 1 or more actions to take. For example, you could use an alert to indicate that you're not charging taxes on some product variants.
 * They can optionally have a specific icon and be dismissed by merchants.
 * 
 */
export interface ResourceAlert {
    /**
     * Buttons in the alert that link to related information.
     * For example, _Edit variants_.
     * 
     */
    actions: ResourceAlertAction[]
    /**
     * The secondary text in the alert that includes further information or instructions about how to solve a problem.
     * 
     */
    content: Scalars['HTML']
    /**
     * Unique identifier that appears when an alert is manually closed by the merchant.
     * Most alerts cannot be manually closed.
     * 
     */
    dismissibleHandle?: Scalars['String']
    /** An icon that is optionally displayed with the alert. */
    icon?: ResourceAlertIcon
    /** Indication of how important the alert is. */
    severity: ResourceAlertSeverity
    /** The primary text in the alert that includes information or describes the problem. */
    title: Scalars['String']
    __typename: 'ResourceAlert'
}


/** An action associated to a resource alert, such as editing variants. */
export interface ResourceAlertAction {
    /** Whether the action appears as a button or as a link. */
    primary: Scalars['Boolean']
    /** Resource for the action to show. */
    show?: Scalars['String']
    /** The text for the button in the alert. For example, _Edit variants_. */
    title: Scalars['String']
    /** The target URL that the button links to. */
    url: Scalars['URL']
    __typename: 'ResourceAlertAction'
}


/** The available icons for resource alerts. */
export type ResourceAlertIcon = 'CHECKMARK_CIRCLE' | 'INFORMATION_CIRCLE'


/** The possible severity levels for a resource alert. */
export type ResourceAlertSeverity = 'DEFAULT' | 'INFO' | 'WARNING' | 'SUCCESS' | 'CRITICAL' | 'ERROR'


/**
 * Represents feedback from apps about a resource, and the steps required to set up the apps on the shop.
 * 
 */
export interface ResourceFeedback {
    /**
     * @deprecated Use `details` instead.
     * Feedback from an app about the steps a merchant needs to take to set up the app on their store.
     */
    appFeedback: AppFeedback[]
    /** List of AppFeedback detailing issues regarding a resource. */
    details: AppFeedback[]
    /** Summary of resource feedback pertaining to the resource. */
    summary: Scalars['String']
    __typename: 'ResourceFeedback'
}


/** The state of the resource feedback. */
export type ResourceFeedbackState = 'ACCEPTED' | 'REQUIRES_ACTION'


/** A resource limit represents the limits that the resource has. */
export interface ResourceLimit {
    /** Whether the resource is available. */
    available: Scalars['Boolean']
    /** Quantity available. If null the quantity available is unlimited. */
    quantityAvailable?: Scalars['Int']
    /** Quantity limit of the resource. If null the quantity is unlimited. */
    quantityLimit?: Scalars['Int']
    /** Quantity used of the resource. If null the quantity used cannot be retrieved. */
    quantityUsed?: Scalars['Int']
    __typename: 'ResourceLimit'
}


/** Represents a merchandising background operation interface. */
export type ResourceOperation = (AddAllProductsOperation | CatalogCsvOperation | PublicationResourceOperation) & { __isUnion?: true }


/** Represents the state of this catalog operation. */
export type ResourceOperationStatus = 'CREATED' | 'ACTIVE' | 'COMPLETE'


/**
 * A resource publication represents information about the publication of a resource.
 * An instance of `ResourcePublication`, unlike `ResourcePublicationV2`, can be neither published or scheduled to be published.
 * 
 * See [ResourcePublicationV2](/api/admin-graphql/latest/objects/ResourcePublicationV2) for more context.
 * 
 */
export interface ResourcePublication {
    /**
     * @deprecated Use `publication` instead.
     * The channel the resource publication is published to.
     */
    channel: Channel
    /**
     * Whether the resource publication is published. Also returns true if the resource publication is scheduled to be published.
     * If false, then the resource publication is neither published nor scheduled to be published.
     * 
     */
    isPublished: Scalars['Boolean']
    /** The publication the resource publication is published to. */
    publication: Publication
    /**
     * The date that the resource publication was or is going to be published to the publication.
     * If the product isn't published, then this field returns an epoch timestamp.
     * 
     */
    publishDate: Scalars['DateTime']
    /** The resource published to the publication. */
    publishable: Publishable
    __typename: 'ResourcePublication'
}


/**
 * An auto-generated type for paginating through multiple ResourcePublications.
 * 
 */
export interface ResourcePublicationConnection {
    /** A list of edges. */
    edges: ResourcePublicationEdge[]
    /** A list of the nodes contained in ResourcePublicationEdge. */
    nodes: ResourcePublication[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ResourcePublicationConnection'
}


/**
 * An auto-generated type which holds one ResourcePublication and a cursor during pagination.
 * 
 */
export interface ResourcePublicationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ResourcePublicationEdge. */
    node: ResourcePublication
    __typename: 'ResourcePublicationEdge'
}


/**
 * A resource publication represents information about the publication of a resource.
 * Unlike `ResourcePublication`, an instance of `ResourcePublicationV2` can't be unpublished. It must either be published or scheduled to be published.
 * 
 * See [ResourcePublication](/api/admin-graphql/latest/objects/ResourcePublication) for more context.
 * 
 */
export interface ResourcePublicationV2 {
    /**
     * Whether the resource publication is published. If true, then the resource publication is published to the publication.
     * If false, then the resource publication is staged to be published to the publication.
     * 
     */
    isPublished: Scalars['Boolean']
    /** The publication the resource publication is published to. */
    publication: Publication
    /** The date that the resource publication was or is going to be published to the publication. */
    publishDate?: Scalars['DateTime']
    /** The resource published to the publication. */
    publishable: Publishable
    __typename: 'ResourcePublicationV2'
}


/**
 * An auto-generated type for paginating through multiple ResourcePublicationV2s.
 * 
 */
export interface ResourcePublicationV2Connection {
    /** A list of edges. */
    edges: ResourcePublicationV2Edge[]
    /** A list of the nodes contained in ResourcePublicationV2Edge. */
    nodes: ResourcePublicationV2[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ResourcePublicationV2Connection'
}


/**
 * An auto-generated type which holds one ResourcePublicationV2 and a cursor during pagination.
 * 
 */
export interface ResourcePublicationV2Edge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ResourcePublicationV2Edge. */
    node: ResourcePublicationV2
    __typename: 'ResourcePublicationV2Edge'
}


/** Represents a return. */
export interface Return {
    /** Additional information about the declined return. */
    decline?: ReturnDecline
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the return. */
    name: Scalars['String']
    /** The order that the return belongs to. */
    order: Order
    /** The list of refunds associated with the return. */
    refunds: RefundConnection
    /** The return line items attached to the return. */
    returnLineItems: ReturnLineItemConnection
    /** The list of reverse fulfillment orders for the return. */
    reverseFulfillmentOrders: ReverseFulfillmentOrderConnection
    /** The status of the return. */
    status: ReturnStatus
    /** A suggested refund for the return. */
    suggestedRefund?: SuggestedReturnRefund
    /** The sum of all line item quantities for the return. */
    totalQuantity: Scalars['Int']
    __typename: 'Return'
}


/** Return type for `returnApproveRequest` mutation. */
export interface ReturnApproveRequestPayload {
    /** The approved return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnApproveRequestPayload'
}


/** Return type for `returnCancel` mutation. */
export interface ReturnCancelPayload {
    /** The canceled return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnCancelPayload'
}


/** Return type for `returnClose` mutation. */
export interface ReturnClosePayload {
    /** The closed return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnClosePayload'
}


/**
 * An auto-generated type for paginating through multiple Returns.
 * 
 */
export interface ReturnConnection {
    /** A list of edges. */
    edges: ReturnEdge[]
    /** A list of the nodes contained in ReturnEdge. */
    nodes: Return[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReturnConnection'
}


/** Return type for `returnCreate` mutation. */
export interface ReturnCreatePayload {
    /** The created return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnCreatePayload'
}


/** Additional information about why a merchant declined the customer's return request. */
export interface ReturnDecline {
    /**
     * The notification message sent to the customer about their declined return request.
     * Maximum length: 500 characters.
     * 
     */
    note?: Scalars['String']
    /** The reason the customer's return request was declined. */
    reason: ReturnDeclineReason
    __typename: 'ReturnDecline'
}


/** The reason why the merchant declined a customer's return request. */
export type ReturnDeclineReason = 'RETURN_PERIOD_ENDED' | 'FINAL_SALE' | 'OTHER'


/** Return type for `returnDeclineRequest` mutation. */
export interface ReturnDeclineRequestPayload {
    /** The declined return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnDeclineRequestPayload'
}


/**
 * An auto-generated type which holds one Return and a cursor during pagination.
 * 
 */
export interface ReturnEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReturnEdge. */
    node: Return
    __typename: 'ReturnEdge'
}


/** Possible error codes that can be returned by `ReturnUserError`. */
export type ReturnErrorCode = 'INTERNAL_ERROR' | 'TOO_MANY_ARGUMENTS' | 'BLANK' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INCLUSION' | 'INVALID' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'NOT_A_NUMBER' | 'PRESENT' | 'TAKEN' | 'TOO_BIG' | 'TOO_LONG' | 'TOO_SHORT' | 'WRONG_LENGTH' | 'ALREADY_EXISTS' | 'CREATION_FAILED' | 'FEATURE_NOT_ENABLED' | 'INVALID_STATE' | 'NOTIFICATION_FAILED' | 'NOT_EDITABLE' | 'NOT_FOUND'


/** A return line item. */
export interface ReturnLineItem {
    /** A note from the customer that describes the item to be returned. Maximum length: 300 characters. */
    customerNote?: Scalars['String']
    /** The fulfillment line item from which items are returned. */
    fulfillmentLineItem: FulfillmentLineItem
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The quantity being returned. */
    quantity: Scalars['Int']
    /** The quantity that can be refunded. */
    refundableQuantity: Scalars['Int']
    /** The quantity that was refunded. */
    refundedQuantity: Scalars['Int']
    /** The reason for returning the item. */
    returnReason: ReturnReason
    /** Additional information about the reason for the return. Maximum length: 255 characters. */
    returnReasonNote: Scalars['String']
    /** The total weight of the item. */
    totalWeight?: Weight
    /** The total line price after all discounts on the line item, including both line item level discounts and code-based line item discounts, are applied. */
    withCodeDiscountedTotalPriceSet: MoneyBag
    __typename: 'ReturnLineItem'
}


/**
 * An auto-generated type for paginating through multiple ReturnLineItems.
 * 
 */
export interface ReturnLineItemConnection {
    /** A list of edges. */
    edges: ReturnLineItemEdge[]
    /** A list of the nodes contained in ReturnLineItemEdge. */
    nodes: ReturnLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReturnLineItemConnection'
}


/**
 * An auto-generated type which holds one ReturnLineItem and a cursor during pagination.
 * 
 */
export interface ReturnLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReturnLineItemEdge. */
    node: ReturnLineItem
    __typename: 'ReturnLineItemEdge'
}


/** The reason for returning the return line item. */
export type ReturnReason = 'SIZE_TOO_SMALL' | 'SIZE_TOO_LARGE' | 'UNWANTED' | 'NOT_AS_DESCRIBED' | 'WRONG_ITEM' | 'DEFECTIVE' | 'STYLE' | 'COLOR' | 'OTHER' | 'UNKNOWN'


/** Return type for `returnRefund` mutation. */
export interface ReturnRefundPayload {
    /** The created refund. */
    refund?: Refund
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnRefundPayload'
}


/** Return type for `returnReopen` mutation. */
export interface ReturnReopenPayload {
    /** The reopened return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnReopenPayload'
}


/** Return type for `returnRequest` mutation. */
export interface ReturnRequestPayload {
    /** The requested return. */
    return?: Return
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReturnRequestPayload'
}


/** The status of a return. */
export type ReturnStatus = 'CANCELED' | 'CLOSED' | 'OPEN' | 'REQUESTED' | 'DECLINED'


/** An error that occurs during the execution of a return mutation. */
export interface ReturnUserError {
    /** The error code. */
    code?: ReturnErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ReturnUserError'
}


/**
 * A returnable fulfillment, which is an order that has been delivered
 * and is eligible to be returned to the merchant.
 * 
 */
export interface ReturnableFulfillment {
    /** The fulfillment that the returnable fulfillment refers to. */
    fulfillment: Fulfillment
    /** The unique ID of the Returnable Fulfillment. */
    id: Scalars['ID']
    /** The list of returnable fulfillment line items. */
    returnableFulfillmentLineItems: ReturnableFulfillmentLineItemConnection
    __typename: 'ReturnableFulfillment'
}


/**
 * An auto-generated type for paginating through multiple ReturnableFulfillments.
 * 
 */
export interface ReturnableFulfillmentConnection {
    /** A list of edges. */
    edges: ReturnableFulfillmentEdge[]
    /** A list of the nodes contained in ReturnableFulfillmentEdge. */
    nodes: ReturnableFulfillment[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReturnableFulfillmentConnection'
}


/**
 * An auto-generated type which holds one ReturnableFulfillment and a cursor during pagination.
 * 
 */
export interface ReturnableFulfillmentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReturnableFulfillmentEdge. */
    node: ReturnableFulfillment
    __typename: 'ReturnableFulfillmentEdge'
}


/** A returnable fulfillment line item. */
export interface ReturnableFulfillmentLineItem {
    /** The fulfillment line item that can be returned. */
    fulfillmentLineItem: FulfillmentLineItem
    /** The quantity available to be returned. */
    quantity: Scalars['Int']
    __typename: 'ReturnableFulfillmentLineItem'
}


/**
 * An auto-generated type for paginating through multiple ReturnableFulfillmentLineItems.
 * 
 */
export interface ReturnableFulfillmentLineItemConnection {
    /** A list of edges. */
    edges: ReturnableFulfillmentLineItemEdge[]
    /** A list of the nodes contained in ReturnableFulfillmentLineItemEdge. */
    nodes: ReturnableFulfillmentLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReturnableFulfillmentLineItemConnection'
}


/**
 * An auto-generated type which holds one ReturnableFulfillmentLineItem and a cursor during pagination.
 * 
 */
export interface ReturnableFulfillmentLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReturnableFulfillmentLineItemEdge. */
    node: ReturnableFulfillmentLineItem
    __typename: 'ReturnableFulfillmentLineItemEdge'
}


/**
 * A reverse delivery is a post-fulfillment object that represents a buyer sending a package to a merchant.
 * For example, a buyer requests a return, and a merchant sends the buyer a shipping label.
 * The reverse delivery contains the context of the items sent back, how they're being sent back
 * (for example, a shipping label), and the current state of the delivery (tracking information).
 * 
 */
export interface ReverseDelivery {
    /** The deliverable associated with the reverse delivery. */
    deliverable?: ReverseDeliveryDeliverable
    /** The ID of the reverse delivery. */
    id: Scalars['ID']
    /** The reverse delivery line items attached to the reverse delivery. */
    reverseDeliveryLineItems: ReverseDeliveryLineItemConnection
    /** The `ReverseFulfillmentOrder` associated with the reverse delivery. */
    reverseFulfillmentOrder: ReverseFulfillmentOrder
    __typename: 'ReverseDelivery'
}


/**
 * An auto-generated type for paginating through multiple ReverseDeliveries.
 * 
 */
export interface ReverseDeliveryConnection {
    /** A list of edges. */
    edges: ReverseDeliveryEdge[]
    /** A list of the nodes contained in ReverseDeliveryEdge. */
    nodes: ReverseDelivery[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReverseDeliveryConnection'
}


/** Return type for `reverseDeliveryCreateWithShipping` mutation. */
export interface ReverseDeliveryCreateWithShippingPayload {
    /** The created reverse delivery. */
    reverseDelivery?: ReverseDelivery
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReverseDeliveryCreateWithShippingPayload'
}


/** The delivery method and artifacts associated with a reverse delivery. */
export type ReverseDeliveryDeliverable = (ReverseDeliveryShippingDeliverable) & { __isUnion?: true }


/** Return type for `reverseDeliveryDispose` mutation. */
export interface ReverseDeliveryDisposePayload {
    /** The disposed reverse delivery line items. */
    reverseDeliveryLineItems?: ReverseDeliveryLineItem[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReverseDeliveryDisposePayload'
}


/**
 * An auto-generated type which holds one ReverseDelivery and a cursor during pagination.
 * 
 */
export interface ReverseDeliveryEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReverseDeliveryEdge. */
    node: ReverseDelivery
    __typename: 'ReverseDeliveryEdge'
}


/** The return label file information for a reverse delivery. */
export interface ReverseDeliveryLabelV2 {
    /** The date and time when the reverse delivery label was created. */
    createdAt: Scalars['DateTime']
    /** A public link that can be used to download the label image. */
    publicFileUrl?: Scalars['URL']
    /** The date and time when the reverse delivery label was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'ReverseDeliveryLabelV2'
}


/** The details about a reverse delivery line item. */
export interface ReverseDeliveryLineItem {
    /** The dispositions of the item. */
    dispositions: ReverseFulfillmentOrderDisposition[]
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The expected number of units. */
    quantity: Scalars['Int']
    /** The corresponding reverse fulfillment order line item. */
    reverseFulfillmentOrderLineItem: ReverseFulfillmentOrderLineItem
    __typename: 'ReverseDeliveryLineItem'
}


/**
 * An auto-generated type for paginating through multiple ReverseDeliveryLineItems.
 * 
 */
export interface ReverseDeliveryLineItemConnection {
    /** A list of edges. */
    edges: ReverseDeliveryLineItemEdge[]
    /** A list of the nodes contained in ReverseDeliveryLineItemEdge. */
    nodes: ReverseDeliveryLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReverseDeliveryLineItemConnection'
}


/**
 * An auto-generated type which holds one ReverseDeliveryLineItem and a cursor during pagination.
 * 
 */
export interface ReverseDeliveryLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReverseDeliveryLineItemEdge. */
    node: ReverseDeliveryLineItem
    __typename: 'ReverseDeliveryLineItemEdge'
}


/** A reverse shipping deliverable that may include a label and tracking information. */
export interface ReverseDeliveryShippingDeliverable {
    /** The return label attached to the reverse delivery. */
    label?: ReverseDeliveryLabelV2
    /** The information to track the reverse delivery. */
    tracking?: ReverseDeliveryTrackingV2
    __typename: 'ReverseDeliveryShippingDeliverable'
}


/** Return type for `reverseDeliveryShippingUpdate` mutation. */
export interface ReverseDeliveryShippingUpdatePayload {
    /** The updated reverse delivery. */
    reverseDelivery?: ReverseDelivery
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReverseDeliveryShippingUpdatePayload'
}


/** Represents the information used to track a reverse delivery. */
export interface ReverseDeliveryTrackingV2 {
    /** The provider of the tracking information, in a human-readable format for display purposes. */
    carrierName?: Scalars['String']
    /** The identifier used by the courier to identify the shipment. */
    number?: Scalars['String']
    /** The URL to track a shipment. */
    url?: Scalars['URL']
    __typename: 'ReverseDeliveryTrackingV2'
}


/**
 * A group of one or more items in a return that will be processed at a fulfillment service.
 * There can be more than one reverse fulfillment order for a return at a given location.
 * 
 */
export interface ReverseFulfillmentOrder {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The list of reverse fulfillment order line items for the reverse fulfillment order. */
    lineItems: ReverseFulfillmentOrderLineItemConnection
    /** The order associated with the reverse fulfillment order. */
    order: Order
    /** The list of reverse deliveries for the reverse fulfillment order. */
    reverseDeliveries: ReverseDeliveryConnection
    /** The status of the reverse fulfillment order. */
    status: ReverseFulfillmentOrderStatus
    /**
     * The current confirmation for the reverse fulfillment order from a third-party logistics service. 
     * If no third-party service is involved, then this value is `nil`.
     * 
     */
    thirdPartyConfirmation?: ReverseFulfillmentOrderThirdPartyConfirmation
    __typename: 'ReverseFulfillmentOrder'
}


/**
 * An auto-generated type for paginating through multiple ReverseFulfillmentOrders.
 * 
 */
export interface ReverseFulfillmentOrderConnection {
    /** A list of edges. */
    edges: ReverseFulfillmentOrderEdge[]
    /** A list of the nodes contained in ReverseFulfillmentOrderEdge. */
    nodes: ReverseFulfillmentOrder[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReverseFulfillmentOrderConnection'
}


/** Return type for `reverseFulfillmentOrderDispose` mutation. */
export interface ReverseFulfillmentOrderDisposePayload {
    /** The disposed reverse fulfillment order line items. */
    reverseFulfillmentOrderLineItems?: ReverseFulfillmentOrderLineItem[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ReturnUserError[]
    __typename: 'ReverseFulfillmentOrderDisposePayload'
}


/** The details of the arrangement of an item. */
export interface ReverseFulfillmentOrderDisposition {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The location where the disposition occurred. */
    location?: Location
    /** The number of disposed units. */
    quantity: Scalars['Int']
    /** The final arrangement of an item. */
    type: ReverseFulfillmentOrderDispositionType
    __typename: 'ReverseFulfillmentOrderDisposition'
}


/** The final arrangement of an item from a reverse fulfillment order. */
export type ReverseFulfillmentOrderDispositionType = 'RESTOCKED' | 'PROCESSING_REQUIRED' | 'NOT_RESTOCKED' | 'MISSING'


/**
 * An auto-generated type which holds one ReverseFulfillmentOrder and a cursor during pagination.
 * 
 */
export interface ReverseFulfillmentOrderEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReverseFulfillmentOrderEdge. */
    node: ReverseFulfillmentOrder
    __typename: 'ReverseFulfillmentOrderEdge'
}


/**
 * The details about a reverse fulfillment order line item.
 * 
 */
export interface ReverseFulfillmentOrderLineItem {
    /** The dispositions of the item. */
    dispositions: ReverseFulfillmentOrderDisposition[]
    /** The corresponding fulfillment line item for a reverse fulfillment order line item. */
    fulfillmentLineItem: FulfillmentLineItem
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The total number of units to be processed. */
    totalQuantity: Scalars['Int']
    __typename: 'ReverseFulfillmentOrderLineItem'
}


/**
 * An auto-generated type for paginating through multiple ReverseFulfillmentOrderLineItems.
 * 
 */
export interface ReverseFulfillmentOrderLineItemConnection {
    /** A list of edges. */
    edges: ReverseFulfillmentOrderLineItemEdge[]
    /** A list of the nodes contained in ReverseFulfillmentOrderLineItemEdge. */
    nodes: ReverseFulfillmentOrderLineItem[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ReverseFulfillmentOrderLineItemConnection'
}


/**
 * An auto-generated type which holds one ReverseFulfillmentOrderLineItem and a cursor during pagination.
 * 
 */
export interface ReverseFulfillmentOrderLineItemEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ReverseFulfillmentOrderLineItemEdge. */
    node: ReverseFulfillmentOrderLineItem
    __typename: 'ReverseFulfillmentOrderLineItemEdge'
}


/** The status of a reverse fulfillment order. */
export type ReverseFulfillmentOrderStatus = 'CANCELED' | 'CLOSED' | 'OPEN'


/** The third-party confirmation of a reverse fulfillment order. */
export interface ReverseFulfillmentOrderThirdPartyConfirmation {
    /** The status of the reverse fulfillment order third-party confirmation. */
    status: ReverseFulfillmentOrderThirdPartyConfirmationStatus
    __typename: 'ReverseFulfillmentOrderThirdPartyConfirmation'
}


/** The status of a reverse fulfillment order third-party confirmation. */
export type ReverseFulfillmentOrderThirdPartyConfirmationStatus = 'ACCEPTED' | 'CANCEL_ACCEPTED' | 'CANCEL_REJECTED' | 'PENDING_ACCEPTANCE' | 'PENDING_CANCELATION' | 'REJECTED'


/** A row count represents rows on background operation. */
export interface RowCount {
    /** Estimated number of rows contained within this background operation. */
    count: Scalars['Int']
    /** Whether the operation exceeds max number of reportable rows. */
    exceedsMax: Scalars['Boolean']
    __typename: 'RowCount'
}


/** SEO information. */
export interface SEO {
    /** SEO Description. */
    description?: Scalars['String']
    /** SEO Title. */
    title?: Scalars['String']
    __typename: 'SEO'
}


/** An individual sale record associated with a sales agreement. Every money value in an order's sales data is represented in the currency's smallest unit. When amounts are divided across multiple line items, such as taxes or order discounts, the amounts might not divide evenly across all of the line items on the order. To address this, the remaining currency units that couldn't be divided evenly are allocated one at a time, starting with the first line item, until they are all accounted for. In aggregate, the values sum up correctly. In isolation, one line item might have a different tax or discount amount than another line item of the same price, before taxes and discounts. This is because the amount could not be divided evenly across the items. The allocation of currency units across line items is immutable. After they are allocated, currency units are never reallocated or redistributed among the line items. */
export type Sale = (AdditionalFeeSale | AdjustmentSale | DutySale | GiftCardSale | ProductSale | ShippingLineSale | TipSale | UnknownSale) & { __isUnion?: true }


/** The possible order action types for a sale. */
export type SaleActionType = 'ORDER' | 'RETURN' | 'UPDATE' | 'UNKNOWN'


/** The additional fee details for a line item. */
export interface SaleAdditionalFee {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The name of the additional fee. */
    name: Scalars['String']
    /** The price of the additional fee. */
    price: MoneyBag
    /** A list of taxes charged on the additional fee. */
    taxLines: TaxLine[]
    __typename: 'SaleAdditionalFee'
}


/**
 * An auto-generated type for paginating through multiple Sales.
 * 
 */
export interface SaleConnection {
    /** A list of edges. */
    edges: SaleEdge[]
    /** A list of the nodes contained in SaleEdge. */
    nodes: Sale[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SaleConnection'
}


/**
 * An auto-generated type which holds one Sale and a cursor during pagination.
 * 
 */
export interface SaleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SaleEdge. */
    node: Sale
    __typename: 'SaleEdge'
}


/** The possible line types for a sale record. One of the possible order line types for a sale is an adjustment. Sales adjustments occur when a refund is issued for a line item that is either more or less than the total value of the line item. Examples are restocking fees and goodwill payments. When this happens, Shopify produces a sales agreement with sale records for each line item that is returned or refunded and an additional sale record for the adjustment (for example, a restocking fee). The sales records for the returned or refunded items represent the reversal of the original line item sale value. The additional adjustment sale record represents the difference between the original total value of all line items that were refunded, and the actual amount refunded. */
export type SaleLineType = 'PRODUCT' | 'TIP' | 'GIFT_CARD' | 'SHIPPING' | 'DUTY' | 'ADDITIONAL_FEE' | 'UNKNOWN' | 'ADJUSTMENT'


/** The tax allocated to a sale from a single tax line. */
export interface SaleTax {
    /** The portion of the total tax amount on the related sale that comes from the associated tax line. */
    amount: MoneyBag
    /** The unique ID for the sale tax. */
    id: Scalars['ID']
    /** The tax line associated with the sale. */
    taxLine: TaxLine
    __typename: 'SaleTax'
}


/** A contract between a merchant and a customer to do business. Shopify creates a sales agreement whenever an order is placed, edited, or refunded. A sales agreement has one or more sales records, which provide itemized details about the initial agreement or subsequent changes made to the order. For example, when a customer places an order, Shopify creates the order, generates a sales agreement, and records a sale for each line item purchased in the order. A sale record is specific to a type of order line. Order lines can represent different things such as a purchased product, a tip added by a customer, shipping costs collected at checkout, and more. */
export type SalesAgreement = (OrderAgreement | OrderEditAgreement | RefundAgreement) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple SalesAgreements.
 * 
 */
export interface SalesAgreementConnection {
    /** A list of edges. */
    edges: SalesAgreementEdge[]
    /** A list of the nodes contained in SalesAgreementEdge. */
    nodes: SalesAgreement[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SalesAgreementConnection'
}


/**
 * An auto-generated type which holds one SalesAgreement and a cursor during pagination.
 * 
 */
export interface SalesAgreementEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SalesAgreementEdge. */
    node: SalesAgreement
    __typename: 'SalesAgreementEdge'
}


/** A saved search is a representation of a search query saved in the admin. */
export interface SavedSearch {
    /** The filters of a saved search. */
    filters: SearchFilter[]
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The name of a saved search. */
    name: Scalars['String']
    /** The query string of a saved search. This includes search terms and filters. */
    query: Scalars['String']
    /** The type of resource this saved search is searching in. */
    resourceType: SearchResultType
    /** The search terms of a saved search. */
    searchTerms: Scalars['String']
    __typename: 'SavedSearch'
}


/**
 * An auto-generated type for paginating through multiple SavedSearches.
 * 
 */
export interface SavedSearchConnection {
    /** A list of edges. */
    edges: SavedSearchEdge[]
    /** A list of the nodes contained in SavedSearchEdge. */
    nodes: SavedSearch[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SavedSearchConnection'
}


/** Return type for `savedSearchCreate` mutation. */
export interface SavedSearchCreatePayload {
    /** The saved search that was created. */
    savedSearch?: SavedSearch
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'SavedSearchCreatePayload'
}


/** Return type for `savedSearchDelete` mutation. */
export interface SavedSearchDeletePayload {
    /** The ID of the saved search that was deleted. */
    deletedSavedSearchId?: Scalars['ID']
    /** The shop of the saved search that was deleted. */
    shop: Shop
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'SavedSearchDeletePayload'
}


/**
 * An auto-generated type which holds one SavedSearch and a cursor during pagination.
 * 
 */
export interface SavedSearchEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SavedSearchEdge. */
    node: SavedSearch
    __typename: 'SavedSearchEdge'
}


/** Return type for `savedSearchUpdate` mutation. */
export interface SavedSearchUpdatePayload {
    /** The saved search that was updated. */
    savedSearch?: SavedSearch
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'SavedSearchUpdatePayload'
}


/**
 * Script discount applications capture the intentions of a discount that
 * was created by a Shopify Script for an order's line item or shipping line.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface ScriptDiscountApplication {
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod: DiscountApplicationAllocationMethod
    /**
     * @deprecated Use `title` instead.
     * The description of the application as defined by the Script.
     */
    description: Scalars['String']
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index: Scalars['Int']
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection: DiscountApplicationTargetSelection
    /** Whether the discount is applied on line items or shipping lines. */
    targetType: DiscountApplicationTargetType
    /** The title of the application as defined by the Script. */
    title: Scalars['String']
    /** The value of the discount application. */
    value: PricingValue
    __typename: 'ScriptDiscountApplication'
}


/**
 * <div class="note"><h4>Theme app extensions</h4>
 *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
 * 
 * 
 * A script tag represents remote JavaScript code that is loaded into the pages of a shop's storefront or the order status page of checkout.
 * 
 */
export interface ScriptTag {
    /**
     * Whether the Shopify CDN can cache and serve the script tag.
     * If `true`, then the script will be cached and served by the CDN.
     * The cache expires 15 minutes after the script tag is successfully returned.
     * If `false`, then the script will be served as is.
     * 
     */
    cache: Scalars['Boolean']
    /** The date and time when the script tag was created. */
    createdAt: Scalars['DateTime']
    /** The page or pages on the online store that the script should be included. */
    displayScope: ScriptTagDisplayScope
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The URL to the remote script. */
    src: Scalars['URL']
    /** The date and time when the script tag was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'ScriptTag'
}


/**
 * An auto-generated type for paginating through multiple ScriptTags.
 * 
 */
export interface ScriptTagConnection {
    /** A list of edges. */
    edges: ScriptTagEdge[]
    /** A list of the nodes contained in ScriptTagEdge. */
    nodes: ScriptTag[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ScriptTagConnection'
}


/** Return type for `scriptTagCreate` mutation. */
export interface ScriptTagCreatePayload {
    /** The script tag that was created. */
    scriptTag?: ScriptTag
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ScriptTagCreatePayload'
}


/** Return type for `scriptTagDelete` mutation. */
export interface ScriptTagDeletePayload {
    /** The ID of the deleted script tag. */
    deletedScriptTagId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ScriptTagDeletePayload'
}


/**
 * The page or pages on the online store where the script should be included.
 * 
 */
export type ScriptTagDisplayScope = 'ALL' | 'ORDER_STATUS' | 'ONLINE_STORE'


/**
 * An auto-generated type which holds one ScriptTag and a cursor during pagination.
 * 
 */
export interface ScriptTagEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ScriptTagEdge. */
    node: ScriptTag
    __typename: 'ScriptTagEdge'
}


/** Return type for `scriptTagUpdate` mutation. */
export interface ScriptTagUpdatePayload {
    /** The script tag that was updated. */
    scriptTag?: ScriptTag
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ScriptTagUpdatePayload'
}


/** A filter in a search query represented by a key value pair. */
export interface SearchFilter {
    /** The key of the search filter. */
    key: Scalars['String']
    /** The value of the search filter. */
    value: Scalars['String']
    __typename: 'SearchFilter'
}


/** A list of search filters along with their specific options in value and label pair for filtering. */
export interface SearchFilterOptions {
    /** A list of options that can be use to filter product availability. */
    productAvailability: FilterOption[]
    __typename: 'SearchFilterOptions'
}


/** Represents an individual result returned from a search. */
export interface SearchResult {
    /** Returns the search result description text. */
    description?: Scalars['String']
    /** Returns the Image resource presented to accompany a search result. */
    image?: Image
    /** Returns the ID of the resource returned in the search result. */
    reference: Node
    /** Returns the resource title. */
    title: Scalars['String']
    /** Returns the absolute URL to the resource in the search result. */
    url: Scalars['URL']
    __typename: 'SearchResult'
}


/** The connection type for SearchResult. */
export interface SearchResultConnection {
    /** A list of edges. */
    edges: SearchResultEdge[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    /**
     * @deprecated The provided information is not accurate.
     * Information to aid in pagination.
     */
    resultsAfterCount: Scalars['Int']
    __typename: 'SearchResultConnection'
}


/**
 * An auto-generated type which holds one SearchResult and a cursor during pagination.
 * 
 */
export interface SearchResultEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SearchResultEdge. */
    node: SearchResult
    __typename: 'SearchResultEdge'
}


/** Specifies the type of resources to be returned from a search. */
export type SearchResultType = 'CUSTOMER' | 'DRAFT_ORDER' | 'PRODUCT' | 'COLLECTION' | 'FILE' | 'ONLINE_STORE_PAGE' | 'ONLINE_STORE_BLOG' | 'ONLINE_STORE_ARTICLE' | 'URL_REDIRECT' | 'PRICE_RULE' | 'DISCOUNT_REDEEM_CODE' | 'ORDER'


/**
 * A dynamic collection of customers based on specific criteria.
 * 
 */
export interface Segment {
    /** The date and time when the segment was added to the store. */
    creationDate: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The date and time when the segment was last updated. */
    lastEditDate: Scalars['DateTime']
    /** The name of the segment. */
    name: Scalars['String']
    /** A precise definition of the segment. The definition is composed of a combination of conditions on facts about customers. */
    query: Scalars['String']
    __typename: 'Segment'
}


/** A filter that takes a value that's associated with an object. For example, the `tags` field is associated with the [`Customer`](/api/admin-graphql/latest/objects/Customer) object. */
export interface SegmentAssociationFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentAssociationFilter'
}


/** The statistics of a given attribute. */
export interface SegmentAttributeStatistics {
    /** The average of a given attribute. */
    average: Scalars['Float']
    /** The sum of a given attribute. */
    sum: Scalars['Float']
    __typename: 'SegmentAttributeStatistics'
}


/** A filter with a Boolean value that's been added to a segment query. */
export interface SegmentBooleanFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentBooleanFilter'
}


/**
 * An auto-generated type for paginating through multiple Segments.
 * 
 */
export interface SegmentConnection {
    /** A list of edges. */
    edges: SegmentEdge[]
    /** A list of the nodes contained in SegmentEdge. */
    nodes: Segment[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SegmentConnection'
}


/** Return type for `segmentCreate` mutation. */
export interface SegmentCreatePayload {
    /** The newly created segment. */
    segment?: Segment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'SegmentCreatePayload'
}


/** A filter with a date value that's been added to a segment query. */
export interface SegmentDateFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentDateFilter'
}


/** Return type for `segmentDelete` mutation. */
export interface SegmentDeletePayload {
    /** ID of the deleted segment. */
    deletedSegmentId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'SegmentDeletePayload'
}


/**
 * An auto-generated type which holds one Segment and a cursor during pagination.
 * 
 */
export interface SegmentEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SegmentEdge. */
    node: Segment
    __typename: 'SegmentEdge'
}


/** A filter with a set of possible values that's been added to a segment query. */
export interface SegmentEnumFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentEnumFilter'
}


/** A filter that's used to segment customers based on the date that an event occured. For example, the `product_bought` event filter allows you to segment customers based on what products they've bought. */
export interface SegmentEventFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The parameters for an event segment filter. */
    parameters: SegmentEventFilterParameter[]
    /** The query name of the filter. */
    queryName: Scalars['String']
    /** The return value type for an event segment filter. */
    returnValueType: Scalars['String']
    __typename: 'SegmentEventFilter'
}


/** The parameters for an event segment filter. */
export interface SegmentEventFilterParameter {
    /** Whether the parameter accepts a list of values. */
    acceptsMultipleValues: Scalars['Boolean']
    /** The localized description of the parameter. */
    localizedDescription: Scalars['String']
    /** The localized name of the parameter. */
    localizedName: Scalars['String']
    /** Whether the parameter is optional. */
    optional: Scalars['Boolean']
    /** The type of the parameter. */
    parameterType: Scalars['String']
    /** The query name of the parameter. */
    queryName: Scalars['String']
    __typename: 'SegmentEventFilterParameter'
}


/** The filters used in segment queries associated with a shop. */
export type SegmentFilter = (SegmentAssociationFilter | SegmentBooleanFilter | SegmentDateFilter | SegmentEnumFilter | SegmentEventFilter | SegmentFloatFilter | SegmentIntegerFilter | SegmentStringFilter) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple SegmentFilters.
 * 
 */
export interface SegmentFilterConnection {
    /** A list of edges. */
    edges: SegmentFilterEdge[]
    /** A list of the nodes contained in SegmentFilterEdge. */
    nodes: SegmentFilter[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SegmentFilterConnection'
}


/**
 * An auto-generated type which holds one SegmentFilter and a cursor during pagination.
 * 
 */
export interface SegmentFilterEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SegmentFilterEdge. */
    node: SegmentFilter
    __typename: 'SegmentFilterEdge'
}


/** A filter with a double-precision, floating-point value that's been added to a segment query. */
export interface SegmentFloatFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentFloatFilter'
}


/** A filter with an integer that's been added to a segment query. */
export interface SegmentIntegerFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentIntegerFilter'
}


/**
 * The response type for the `segmentMembership` object.
 * 
 */
export interface SegmentMembership {
    /** A Boolean that indicates whether or not the customer in the query is a member of the segment, which is identified using the `segmentId`. */
    isMember: Scalars['Boolean']
    /** A `segmentId` that is used for testing membership. */
    segmentId: Scalars['ID']
    __typename: 'SegmentMembership'
}


/**
 * A list of maps that contain `segmentId` IDs and `isMember` Booleans. The maps represent segment memberships.
 * 
 */
export interface SegmentMembershipResponse {
    /** The membership status for the given list of segments. */
    memberships: SegmentMembership[]
    __typename: 'SegmentMembershipResponse'
}


/**
 * A segment and its corresponding saved search. 
 * For example, you can use `SegmentMigration` to retrieve the segment ID that corresponds to a saved search ID.
 * 
 */
export interface SegmentMigration {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The ID of the saved search. */
    savedSearchId: Scalars['ID']
    /** The ID of the segment. */
    segmentId?: Scalars['ID']
    __typename: 'SegmentMigration'
}


/**
 * An auto-generated type for paginating through multiple SegmentMigrations.
 * 
 */
export interface SegmentMigrationConnection {
    /** A list of edges. */
    edges: SegmentMigrationEdge[]
    /** A list of the nodes contained in SegmentMigrationEdge. */
    nodes: SegmentMigration[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SegmentMigrationConnection'
}


/**
 * An auto-generated type which holds one SegmentMigration and a cursor during pagination.
 * 
 */
export interface SegmentMigrationEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SegmentMigrationEdge. */
    node: SegmentMigration
    __typename: 'SegmentMigrationEdge'
}


/** The set of valid sort keys for the Segment query. */
export type SegmentSortKeys = 'CREATION_DATE' | 'LAST_EDIT_DATE' | 'ID' | 'RELEVANCE'


/** The statistics of a given segment. */
export interface SegmentStatistics {
    /** The statistics of a given attribute. */
    attributeStatistics: SegmentAttributeStatistics
    __typename: 'SegmentStatistics'
}


/** A filter with a string that's been added to a segment query. */
export interface SegmentStringFilter {
    /** The localized name of the filter. */
    localizedName: Scalars['String']
    /** Whether a file can have multiple values for a single customer. */
    multiValue: Scalars['Boolean']
    /** The query name of the filter. */
    queryName: Scalars['String']
    __typename: 'SegmentStringFilter'
}


/** Return type for `segmentUpdate` mutation. */
export interface SegmentUpdatePayload {
    /** The updated segment. */
    segment?: Segment
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'SegmentUpdatePayload'
}


/**
 * A list of suggested values associated with an individual segment. A
 * segment is a group of members, such as customers, that meet specific
 * criteria.
 * 
 */
export interface SegmentValue {
    /** The localized version of the value's name. This name is displayed to the merchant. */
    localizedValue: Scalars['String']
    /** The name of the query associated with the suggestion. */
    queryName: Scalars['String']
    __typename: 'SegmentValue'
}


/**
 * An auto-generated type for paginating through multiple SegmentValues.
 * 
 */
export interface SegmentValueConnection {
    /** A list of edges. */
    edges: SegmentValueEdge[]
    /** A list of the nodes contained in SegmentValueEdge. */
    nodes: SegmentValue[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SegmentValueConnection'
}


/**
 * An auto-generated type which holds one SegmentValue and a cursor during pagination.
 * 
 */
export interface SegmentValueEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SegmentValueEdge. */
    node: SegmentValue
    __typename: 'SegmentValueEdge'
}


/**
 * Properties used by customers to select a product variant.
 * Products can have multiple options, like different sizes or colors.
 * 
 */
export interface SelectedOption {
    /** The product option’s name. */
    name: Scalars['String']
    /** The product option’s value. */
    value: Scalars['String']
    __typename: 'SelectedOption'
}


/**
 * Represents how a product can be sold and purchased. Selling plans and associated records (selling plan groups
 * and policies) are deleted 48 hours after a merchant uninstalls their subscriptions app. We recommend backing
 * up these records if you need to restore them later.
 * 
 * For more information on selling plans, refer to
 * [*Creating and managing selling plans*](https://shopify.dev/docs/apps/selling-strategies/subscriptions/selling-plans).
 * 
 */
export interface SellingPlan {
    /** A selling plan policy which describes the recurring billing details. */
    billingPolicy: SellingPlanBillingPolicy
    /** The category used to classify the selling plan for reporting purposes. */
    category?: SellingPlanCategory
    /** The date and time when the selling plan was created. */
    createdAt: Scalars['DateTime']
    /** A selling plan policy which describes the delivery details. */
    deliveryPolicy: SellingPlanDeliveryPolicy
    /** Buyer facing string which describes the selling plan commitment. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** When to reserve inventory for a selling plan. */
    inventoryPolicy?: SellingPlanInventoryPolicy
    /**
     * A customer-facing description of the selling plan.
     * 
     * If your store supports multiple currencies, then don't include country-specific pricing content, such as "Buy monthly, get 10$ CAD off". This field won't be converted to reflect different currencies.
     * 
     */
    name: Scalars['String']
    /** The values of all options available on the selling plan. Selling plans are grouped together in Liquid when they are created by the same app, and have the same `selling_plan_group.name` and `selling_plan_group.options` values. */
    options: Scalars['String'][]
    /** Relative position of the selling plan for display. A lower position will be displayed before a higher position. */
    position?: Scalars['Int']
    /** Selling plan pricing details. */
    pricingPolicies: SellingPlanPricingPolicy[]
    /** The translations associated with the resource. */
    translations: Translation[]
    __typename: 'SellingPlan'
}


/** Represents a selling plan policy anchor. */
export interface SellingPlanAnchor {
    /**
     * The cutoff day for the anchor.
     * 
     * If `type` is WEEKDAY, then the value must be between 1-7. Shopify interprets
     * the days of the week according to ISO 8601, where 1 is Monday.
     * 
     * If `type` is MONTHDAY, then the value must be between 1-31.
     * 
     * If `type` is YEARDAY, then the value must be `null`.
     * 
     */
    cutoffDay?: Scalars['Int']
    /**
     * The day of the anchor.
     * 
     * If `type` is WEEKDAY, then the value must be between 1-7. Shopify interprets
     * the days of the week according to ISO 8601, where 1 is Monday.
     * 
     * If `type` is not WEEKDAY, then the value must be between 1-31.
     * 
     */
    day: Scalars['Int']
    /**
     * The month of the anchor. If type is different than YEARDAY, then the value must
     * be `null` or between 1-12.
     * 
     */
    month?: Scalars['Int']
    /**
     * Represents the anchor type, it can be one one of WEEKDAY, MONTHDAY, YEARDAY.
     * 
     */
    type: SellingPlanAnchorType
    __typename: 'SellingPlanAnchor'
}


/** Represents the anchor type. */
export type SellingPlanAnchorType = 'WEEKDAY' | 'MONTHDAY' | 'YEARDAY'


/**
 * Represents the billing frequency associated to the selling plan (for example, bill every week, or bill every
 * three months). The selling plan billing policy and associated records (selling plan groups, selling plans, pricing
 * policies, and delivery policy) are deleted 48 hours after a merchant uninstalls their subscriptions app.
 * We recommend backing up these records if you need to restore them later.
 * 
 */
export type SellingPlanBillingPolicy = (SellingPlanFixedBillingPolicy | SellingPlanRecurringBillingPolicy) & { __isUnion?: true }


/**
 * The category of the selling plan. For the `OTHER` category,
 *          you must fill out our [request form](https://docs.google.com/forms/d/e/1FAIpQLSeU18Xmw0Q61V8wdH-dfGafFqIBfRchQKUO8WAF3yJTvgyyZQ/viewform),
 *          where we'll review your request for a new purchase option.
 */
export type SellingPlanCategory = 'OTHER' | 'PRE_ORDER' | 'SUBSCRIPTION' | 'TRY_BEFORE_YOU_BUY'


/** The amount charged at checkout when the full amount isn't charged at checkout. */
export interface SellingPlanCheckoutCharge {
    /** The charge type for the checkout charge. */
    type: SellingPlanCheckoutChargeType
    /** The charge value for the checkout charge. */
    value: SellingPlanCheckoutChargeValue
    __typename: 'SellingPlanCheckoutCharge'
}


/** The percentage value of the price used for checkout charge. */
export interface SellingPlanCheckoutChargePercentageValue {
    /** The percentage value of the price used for checkout charge. */
    percentage: Scalars['Float']
    __typename: 'SellingPlanCheckoutChargePercentageValue'
}


/** The checkout charge when the full amount isn't charged at checkout. */
export type SellingPlanCheckoutChargeType = 'PERCENTAGE' | 'PRICE'


/** The portion of the price to be charged at checkout. */
export type SellingPlanCheckoutChargeValue = (MoneyV2 | SellingPlanCheckoutChargePercentageValue) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple SellingPlans.
 * 
 */
export interface SellingPlanConnection {
    /** A list of edges. */
    edges: SellingPlanEdge[]
    /** A list of the nodes contained in SellingPlanEdge. */
    nodes: SellingPlan[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SellingPlanConnection'
}


/**
 * Represents the delivery frequency associated to the selling plan (for example, deliver every month, or deliver
 * every other week). The selling plan delivery policy and associated records (selling plan groups, selling plans,
 * pricing policies, and billing policy) are deleted 48 hours after a merchant uninstalls their subscriptions app.
 * We recommend backing up these records if you need to restore them later.
 * 
 */
export type SellingPlanDeliveryPolicy = (SellingPlanFixedDeliveryPolicy | SellingPlanRecurringDeliveryPolicy) & { __isUnion?: true }


/**
 * An auto-generated type which holds one SellingPlan and a cursor during pagination.
 * 
 */
export interface SellingPlanEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SellingPlanEdge. */
    node: SellingPlan
    __typename: 'SellingPlanEdge'
}


/** The fixed selling plan billing policy. */
export interface SellingPlanFixedBillingPolicy {
    /** The checkout charge when the full amount isn't charged at checkout. */
    checkoutCharge: SellingPlanCheckoutCharge
    /** The exact time when to capture the full payment. */
    remainingBalanceChargeExactTime?: Scalars['DateTime']
    /**
     * The period after remaining_balance_charge_trigger, before capturing the full payment. Expressed as an ISO8601 duration.
     * 
     */
    remainingBalanceChargeTimeAfterCheckout?: Scalars['String']
    /** When to capture payment for amount due. */
    remainingBalanceChargeTrigger: SellingPlanRemainingBalanceChargeTrigger
    __typename: 'SellingPlanFixedBillingPolicy'
}


/** Represents a fixed selling plan delivery policy. */
export interface SellingPlanFixedDeliveryPolicy {
    /** The specific anchor dates upon which the delivery interval calculations should be made. */
    anchors: SellingPlanAnchor[]
    /** A buffer period for orders to be included in next fulfillment anchor. */
    cutoff?: Scalars['Int']
    /** The date and time when the fulfillment should trigger. */
    fulfillmentExactTime?: Scalars['DateTime']
    /** What triggers the fulfillment. The value must be one of ANCHOR, ASAP, EXACT_TIME, or UNKNOWN. */
    fulfillmentTrigger: SellingPlanFulfillmentTrigger
    /**
     * Whether the delivery policy is merchant or buyer-centric.
     * Buyer-centric delivery policies state the time when the buyer will receive the goods.
     * Merchant-centric delivery policies state the time when the fulfillment should be started.
     * Currently, only merchant-centric delivery policies are supported.
     * 
     */
    intent: SellingPlanFixedDeliveryPolicyIntent
    /** The fulfillment or delivery behavior of the first fulfillment when the order is placed before the anchor. The default value for this field is `ASAP`. */
    preAnchorBehavior: SellingPlanFixedDeliveryPolicyPreAnchorBehavior
    __typename: 'SellingPlanFixedDeliveryPolicy'
}


/** Possible intentions of a Delivery Policy. */
export type SellingPlanFixedDeliveryPolicyIntent = 'FULFILLMENT_BEGIN'


/** The fulfillment or delivery behavior of the first fulfillment when the orderis placed before the anchor. */
export type SellingPlanFixedDeliveryPolicyPreAnchorBehavior = 'ASAP' | 'NEXT'


/** Represents a fixed selling plan pricing policy. */
export interface SellingPlanFixedPricingPolicy {
    /** The price adjustment type. */
    adjustmentType: SellingPlanPricingPolicyAdjustmentType
    /** The price adjustment value. */
    adjustmentValue: SellingPlanPricingPolicyAdjustmentValue
    /** The date and time when the fixed selling plan pricing policy was created. */
    createdAt: Scalars['DateTime']
    __typename: 'SellingPlanFixedPricingPolicy'
}


/** Describes what triggers fulfillment. */
export type SellingPlanFulfillmentTrigger = 'ANCHOR' | 'ASAP' | 'EXACT_TIME' | 'UNKNOWN'


/**
 * Represents a selling method (for example, "Subscribe and save" or "Pre-paid"). Selling plan groups
 * and associated records (selling plans and policies) are deleted 48 hours after a merchant
 * uninstalls their subscriptions app. We recommend backing up these records if you need to restore them later.
 * 
 */
export interface SellingPlanGroup {
    /** The ID for app, exposed in Liquid and product JSON. */
    appId?: Scalars['String']
    /** Whether the given product is directly associated to the selling plan group. */
    appliesToProduct: Scalars['Boolean']
    /** Whether the given product variant is directly associated to the selling plan group. */
    appliesToProductVariant: Scalars['Boolean']
    /**
     * Whether any of the product variants of the given product are associated to the selling plan group.
     * 
     */
    appliesToProductVariants: Scalars['Boolean']
    /** The date and time when the selling plan group was created. */
    createdAt: Scalars['DateTime']
    /** The merchant-facing description of the selling plan group. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The merchant-facing label of the selling plan group. */
    merchantCode: Scalars['String']
    /** The buyer-facing label of the selling plan group. */
    name: Scalars['String']
    /** The values of all options available on the selling plan group. Selling plans are grouped together in Liquid when they are created by the same app, and have the same `selling_plan_group.name` and `selling_plan_group.options` values. */
    options: Scalars['String'][]
    /** The relative position of the selling plan group for display. */
    position?: Scalars['Int']
    /** A count of products associated to the selling plan group. */
    productCount: Scalars['Int']
    /** A count of product variants associated to the selling plan group. */
    productVariantCount: Scalars['Int']
    /** Product variants associated to the selling plan group. */
    productVariants: ProductVariantConnection
    /** Products associated to the selling plan group. */
    products: ProductConnection
    /** Selling plans associated to the selling plan group. */
    sellingPlans: SellingPlanConnection
    /** A summary of the policies associated to the selling plan group. */
    summary?: Scalars['String']
    /** The translations associated with the resource. */
    translations: Translation[]
    __typename: 'SellingPlanGroup'
}


/** Return type for `sellingPlanGroupAddProductVariants` mutation. */
export interface SellingPlanGroupAddProductVariantsPayload {
    /** The updated selling plan group. */
    sellingPlanGroup?: SellingPlanGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupAddProductVariantsPayload'
}


/** Return type for `sellingPlanGroupAddProducts` mutation. */
export interface SellingPlanGroupAddProductsPayload {
    /** The updated selling plan group. */
    sellingPlanGroup?: SellingPlanGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupAddProductsPayload'
}


/**
 * An auto-generated type for paginating through multiple SellingPlanGroups.
 * 
 */
export interface SellingPlanGroupConnection {
    /** A list of edges. */
    edges: SellingPlanGroupEdge[]
    /** A list of the nodes contained in SellingPlanGroupEdge. */
    nodes: SellingPlanGroup[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SellingPlanGroupConnection'
}


/** Return type for `sellingPlanGroupCreate` mutation. */
export interface SellingPlanGroupCreatePayload {
    /** The created selling plan group object. */
    sellingPlanGroup?: SellingPlanGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupCreatePayload'
}


/** Return type for `sellingPlanGroupDelete` mutation. */
export interface SellingPlanGroupDeletePayload {
    /** The ID of the deleted selling plan group object. */
    deletedSellingPlanGroupId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupDeletePayload'
}


/**
 * An auto-generated type which holds one SellingPlanGroup and a cursor during pagination.
 * 
 */
export interface SellingPlanGroupEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SellingPlanGroupEdge. */
    node: SellingPlanGroup
    __typename: 'SellingPlanGroupEdge'
}


/** Return type for `sellingPlanGroupRemoveProductVariants` mutation. */
export interface SellingPlanGroupRemoveProductVariantsPayload {
    /** The removed product variant ids. */
    removedProductVariantIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupRemoveProductVariantsPayload'
}


/** Return type for `sellingPlanGroupRemoveProducts` mutation. */
export interface SellingPlanGroupRemoveProductsPayload {
    /** The removed product ids. */
    removedProductIds?: Scalars['ID'][]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupRemoveProductsPayload'
}


/** The set of valid sort keys for the SellingPlanGroup query. */
export type SellingPlanGroupSortKeys = 'NAME' | 'UPDATED_AT' | 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** Return type for `sellingPlanGroupUpdate` mutation. */
export interface SellingPlanGroupUpdatePayload {
    /** The IDs of the deleted Subscription Plans. */
    deletedSellingPlanIds?: Scalars['ID'][]
    /** The updated Selling Plan Group. */
    sellingPlanGroup?: SellingPlanGroup
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SellingPlanGroupUserError[]
    __typename: 'SellingPlanGroupUpdatePayload'
}


/**
 * Represents a selling plan group custom error.
 * 
 */
export interface SellingPlanGroupUserError {
    /** The error code. */
    code?: SellingPlanGroupUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'SellingPlanGroupUserError'
}


/** Possible error codes that can be returned by `SellingPlanGroupUserError`. */
export type SellingPlanGroupUserErrorCode = 'BLANK' | 'EQUAL_TO' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'INCLUSION' | 'INVALID' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'NOT_A_NUMBER' | 'NOT_FOUND' | 'PRESENT' | 'TAKEN' | 'TOO_BIG' | 'TOO_LONG' | 'TOO_SHORT' | 'WRONG_LENGTH' | 'SELLING_PLAN_COUNT_UPPER_BOUND' | 'SELLING_PLAN_COUNT_LOWER_BOUND' | 'SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES' | 'SELLING_PLAN_BILLING_AND_DELIVERY_POLICY_ANCHORS_MUST_BE_EQUAL' | 'SELLING_PLAN_BILLING_CYCLE_MUST_BE_A_MULTIPLE_OF_DELIVERY_CYCLE' | 'SELLING_PLAN_PRICING_POLICIES_MUST_CONTAIN_A_FIXED_PRICING_POLICY' | 'SELLING_PLAN_MISSING_OPTION2_LABEL_ON_PARENT_GROUP' | 'SELLING_PLAN_MISSING_OPTION3_LABEL_ON_PARENT_GROUP' | 'SELLING_PLAN_OPTION2_REQUIRED_AS_DEFINED_ON_PARENT_GROUP' | 'SELLING_PLAN_OPTION3_REQUIRED_AS_DEFINED_ON_PARENT_GROUP' | 'SELLING_PLAN_PRICING_POLICIES_LIMIT' | 'RESOURCE_LIST_CONTAINS_INVALID_IDS' | 'PRODUCT_VARIANT_DOES_NOT_EXIST' | 'PRODUCT_DOES_NOT_EXIST' | 'GROUP_DOES_NOT_EXIST' | 'GROUP_COULD_NOT_BE_DELETED' | 'ERROR_ADDING_RESOURCE_TO_GROUP' | 'SELLING_PLAN_DELIVERY_POLICY_MISSING' | 'SELLING_PLAN_BILLING_POLICY_MISSING' | 'PLAN_DOES_NOT_EXIST' | 'PLAN_ID_MUST_BE_SPECIFIED_TO_UPDATE' | 'ONLY_NEED_ONE_BILLING_POLICY_TYPE' | 'ONLY_NEED_ONE_DELIVERY_POLICY_TYPE' | 'ONLY_NEED_ONE_PRICING_POLICY_TYPE' | 'BILLING_AND_DELIVERY_POLICY_TYPES_MUST_BE_THE_SAME' | 'ONLY_NEED_ONE_PRICING_POLICY_VALUE' | 'PRICING_POLICY_ADJUSTMENT_VALUE_AND_TYPE_MUST_MATCH' | 'SELLING_PLAN_DUPLICATE_NAME' | 'SELLING_PLAN_DUPLICATE_OPTIONS' | 'SELLING_PLAN_FIXED_PRICING_POLICIES_LIMIT' | 'REMAINING_BALANCE_CHARGE_EXACT_TIME_REQUIRED' | 'CHECKOUT_CHARGE_VALUE_AND_TYPE_MUST_MATCH' | 'ONLY_NEED_ONE_CHECKOUT_CHARGE_VALUE' | 'REMAINING_BALANCE_CHARGE_EXACT_TIME_NOT_ALLOWED' | 'REMAINING_BALANCE_CHARGE_TIME_AFTER_CHECKOUT_MUST_BE_GREATER_THAN_ZERO' | 'REMAINING_BALANCE_CHARGE_TRIGGER_ON_FULL_CHECKOUT' | 'REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PARTIAL_PERCENTAGE_CHECKOUT_CHARGE' | 'REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PRICE_CHECKOUT_CHARGE' | 'FULFILLMENT_EXACT_TIME_REQUIRED' | 'FULFILLMENT_EXACT_TIME_NOT_ALLOWED' | 'SELLING_PLAN_ANCHORS_NOT_ALLOWED' | 'SELLING_PLAN_ANCHORS_REQUIRED' | 'ONLY_ONE_OF_FIXED_OR_RECURRING_BILLING' | 'ONLY_ONE_OF_FIXED_OR_RECURRING_DELIVERY'


/** Represents valid selling plan interval. */
export type SellingPlanInterval = 'DAY' | 'WEEK' | 'MONTH' | 'YEAR'


/** The selling plan inventory policy. */
export interface SellingPlanInventoryPolicy {
    /** When to reserve inventory for the order. */
    reserve: SellingPlanReserve
    __typename: 'SellingPlanInventoryPolicy'
}


/**
 * Represents the type of pricing associated to the selling plan (for example, a $10 or 20% discount that is set
 * for a limited period or that is fixed for the duration of the subscription). Selling plan pricing policies and
 * associated records (selling plan groups, selling plans, billing policy, and delivery policy) are deleted 48
 * hours after a merchant uninstalls their subscriptions app. We recommend backing up these records if you need
 * to restore them later.
 * 
 */
export type SellingPlanPricingPolicy = (SellingPlanFixedPricingPolicy | SellingPlanRecurringPricingPolicy) & { __isUnion?: true }


/** Represents a selling plan pricing policy adjustment type. */
export type SellingPlanPricingPolicyAdjustmentType = 'PERCENTAGE' | 'FIXED_AMOUNT' | 'PRICE'


/** Represents a selling plan pricing policy adjustment value type. */
export type SellingPlanPricingPolicyAdjustmentValue = (MoneyV2 | SellingPlanPricingPolicyPercentageValue) & { __isUnion?: true }


/** Represents selling plan pricing policy common fields. */
export type SellingPlanPricingPolicyBase = (SellingPlanFixedPricingPolicy | SellingPlanRecurringPricingPolicy) & { __isUnion?: true }


/** The percentage value of a selling plan pricing policy percentage type. */
export interface SellingPlanPricingPolicyPercentageValue {
    /** The percentage value. */
    percentage: Scalars['Float']
    __typename: 'SellingPlanPricingPolicyPercentageValue'
}


/** Represents a recurring selling plan billing policy. */
export interface SellingPlanRecurringBillingPolicy {
    /** Specific anchor dates upon which the billing interval calculations should be made. */
    anchors: SellingPlanAnchor[]
    /** The date and time when the selling plan billing policy was created. */
    createdAt: Scalars['DateTime']
    /** The billing frequency, it can be either: day, week, month or year. */
    interval: SellingPlanInterval
    /** The number of intervals between billings. */
    intervalCount: Scalars['Int']
    /** Maximum number of billing iterations. */
    maxCycles?: Scalars['Int']
    /** Minimum number of billing iterations. */
    minCycles?: Scalars['Int']
    __typename: 'SellingPlanRecurringBillingPolicy'
}


/** Represents a recurring selling plan delivery policy. */
export interface SellingPlanRecurringDeliveryPolicy {
    /** The specific anchor dates upon which the delivery interval calculations should be made. */
    anchors: SellingPlanAnchor[]
    /** The date and time when the selling plan delivery policy was created. */
    createdAt: Scalars['DateTime']
    /** Number of days which represent a buffer period for orders to be included in a cycle. */
    cutoff?: Scalars['Int']
    /**
     * Whether the delivery policy is merchant or buyer-centric.
     * Buyer-centric delivery policies state the time when the buyer will receive the goods.
     * Merchant-centric delivery policies state the time when the fulfillment should be started.
     * Currently, only merchant-centric delivery policies are supported.
     * 
     */
    intent: SellingPlanRecurringDeliveryPolicyIntent
    /** The delivery frequency, it can be either: day, week, month or year. */
    interval: SellingPlanInterval
    /** The number of intervals between deliveries. */
    intervalCount: Scalars['Int']
    /** The fulfillment or delivery behavior of the first fulfillment when the order is placed before the anchor. The default value for this field is `ASAP`. */
    preAnchorBehavior: SellingPlanRecurringDeliveryPolicyPreAnchorBehavior
    __typename: 'SellingPlanRecurringDeliveryPolicy'
}


/** Whether the delivery policy is merchant or buyer-centric. */
export type SellingPlanRecurringDeliveryPolicyIntent = 'FULFILLMENT_BEGIN'


/** The fulfillment or delivery behaviors of the first fulfillment when the orderis placed before the anchor. */
export type SellingPlanRecurringDeliveryPolicyPreAnchorBehavior = 'ASAP' | 'NEXT'


/** Represents a recurring selling plan pricing policy. */
export interface SellingPlanRecurringPricingPolicy {
    /** The price adjustment type. */
    adjustmentType: SellingPlanPricingPolicyAdjustmentType
    /** The price adjustment value. */
    adjustmentValue: SellingPlanPricingPolicyAdjustmentValue
    /** Cycle after which this pricing policy applies. */
    afterCycle?: Scalars['Int']
    /** The date and time when the recurring selling plan pricing policy was created. */
    createdAt: Scalars['DateTime']
    __typename: 'SellingPlanRecurringPricingPolicy'
}


/** When to capture the payment for the remaining amount due. */
export type SellingPlanRemainingBalanceChargeTrigger = 'NO_REMAINING_BALANCE' | 'EXACT_TIME' | 'TIME_AFTER_CHECKOUT'


/** When to reserve inventory for a selling plan. */
export type SellingPlanReserve = 'ON_FULFILLMENT' | 'ON_SALE'


/** A server pixel stores configuration for streaming customer interactions to an EventBridge or PubSub endpoint. */
export interface ServerPixel {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The current state of this server pixel. */
    status?: ServerPixelStatus
    /** Address of the EventBridge or PubSub endpoint. */
    webhookEndpointAddress?: Scalars['String']
    __typename: 'ServerPixel'
}


/** Return type for `serverPixelCreate` mutation. */
export interface ServerPixelCreatePayload {
    /** The new server pixel. */
    serverPixel?: ServerPixel
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsServerPixelUserError[]
    __typename: 'ServerPixelCreatePayload'
}


/** Return type for `serverPixelDelete` mutation. */
export interface ServerPixelDeletePayload {
    /** The ID of the server pixel that was deleted, if one was deleted. */
    deletedServerPixelId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsServerPixelUserError[]
    __typename: 'ServerPixelDeletePayload'
}


/** The current state of a server pixel. */
export type ServerPixelStatus = 'CONNECTED' | 'DISCONNECTED_UNCONFIGURED' | 'DISCONNECTED_CONFIGURED'


/** The class of the discount for combining purposes. */
export type ShippingDiscountClass = 'SHIPPING'


/** Represents the shipping details that the customer chose for their order. */
export interface ShippingLine {
    /**
     * A reference to the carrier service that provided the rate.
     * Present when the rate was computed by a third-party carrier service.
     * 
     */
    carrierIdentifier?: Scalars['String']
    /** A reference to the shipping method. */
    code?: Scalars['String']
    /** Whether the shipping line is custom or not. */
    custom: Scalars['Boolean']
    /** The general classification of the delivery method. */
    deliveryCategory?: Scalars['String']
    /**
     * The discounts that have been allocated to the shipping line.
     * 
     */
    discountAllocations: DiscountAllocation[]
    /**
     * @deprecated Use `discountedPriceSet` instead.
     * The pre-tax shipping price with discounts applied.
     */
    discountedPrice: MoneyV2
    /** The pre-tax shipping price with discounts applied. */
    discountedPriceSet: MoneyBag
    /** A globally-unique ID. */
    id?: Scalars['ID']
    /**
     * @deprecated Use `originalPriceSet` instead.
     * The pre-tax shipping price without any discounts applied.
     */
    originalPrice: MoneyV2
    /** The pre-tax shipping price without any discounts applied. */
    originalPriceSet: MoneyBag
    /** The phone number at the shipping address. */
    phone?: Scalars['String']
    /**
     * @deprecated Use `originalPriceSet` instead.
     * Returns the price of the shipping line.
     */
    price: Scalars['Money']
    /**
     * The fulfillment service requested for the shipping method.
     * Present if the shipping method requires processing by a third party fulfillment service.
     * 
     */
    requestedFulfillmentService?: FulfillmentService
    /** A unique identifier for the shipping rate. The format can change without notice and is not meant to be shown to users. */
    shippingRateHandle?: Scalars['String']
    /** Returns the rate source for the shipping line. */
    source?: Scalars['String']
    /** The TaxLine objects connected to this shipping line. */
    taxLines: TaxLine[]
    /** Returns the title of the shipping line. */
    title: Scalars['String']
    __typename: 'ShippingLine'
}


/**
 * An auto-generated type for paginating through multiple ShippingLines.
 * 
 */
export interface ShippingLineConnection {
    /** A list of edges. */
    edges: ShippingLineEdge[]
    /** A list of the nodes contained in ShippingLineEdge. */
    nodes: ShippingLine[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ShippingLineConnection'
}


/**
 * An auto-generated type which holds one ShippingLine and a cursor during pagination.
 * 
 */
export interface ShippingLineEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ShippingLineEdge. */
    node: ShippingLine
    __typename: 'ShippingLineEdge'
}


/** A sale associated with a shipping charge. */
export interface ShippingLineSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** The shipping line item for the associated sale. `shippingLine` is not available if the `SaleActionType` is a return. */
    shippingLine?: ShippingLine
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'ShippingLineSale'
}


/**
 * The shipping method for the delivery. Customers will see applicable shipping methods in the shipping section of checkout.
 * 
 */
export interface ShippingMethod {
    /** A unique code associated with the rate. For example: `expedited_mail` */
    code: Scalars['String']
    /**
     * A description of the rate, which customers will see at checkout.
     * For example: `Local delivery`, `Free Express Worldwide`, `Includes tracking and insurance`.
     * 
     */
    label: Scalars['String']
    __typename: 'ShippingMethod'
}


/** Return type for `shippingPackageDelete` mutation. */
export interface ShippingPackageDeletePayload {
    /** The ID of the deleted shipping package. */
    deletedId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ShippingPackageDeletePayload'
}


/** Return type for `shippingPackageMakeDefault` mutation. */
export interface ShippingPackageMakeDefaultPayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ShippingPackageMakeDefaultPayload'
}


/** Type of a shipping package. */
export type ShippingPackageType = 'BOX' | 'FLAT_RATE' | 'ENVELOPE' | 'SOFT_PACK'


/** Return type for `shippingPackageUpdate` mutation. */
export interface ShippingPackageUpdatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ShippingPackageUpdatePayload'
}


/** A shipping rate is an additional cost added to the cost of the products that were ordered. */
export interface ShippingRate {
    /** Human-readable unique identifier for this shipping rate. */
    handle: Scalars['String']
    /** The cost associated with the shipping rate. */
    price: MoneyV2
    /** The name of the shipping rate. */
    title: Scalars['String']
    __typename: 'ShippingRate'
}


/** Represents the shipping costs refunded on the Refund. */
export interface ShippingRefund {
    /**
     * @deprecated Use `amountSet` instead.
     * The monetary value of the shipping fees to be refunded.
     */
    amount: Scalars['Money']
    /** The monetary value of the shipping fees to be refunded in shop and presentment currencies. */
    amountSet: MoneyBag
    /**
     * @deprecated Use `maximumRefundableSet` instead.
     * The maximum amount of shipping fees currently refundable.
     */
    maximumRefundable: Scalars['Money']
    /** The maximum amount of shipping fees currently refundable in shop and presentment currencies. */
    maximumRefundableSet: MoneyBag
    /**
     * @deprecated Use `taxSet` instead.
     * The monetary value of the tax allocated to shipping fees to be refunded.
     */
    tax: Scalars['Money']
    /** The monetary value of the tax allocated to shipping fees to be refunded in shop and presentment currencies. */
    taxSet: MoneyBag
    __typename: 'ShippingRefund'
}


/**
 * Represents a collection of general settings and information about the shop.
 * 
 */
export interface Shop {
    /** A list of the shop's active alert messages that appear in the Shopify admin. */
    alerts: ShopAlert[]
    /** A list of the shop's product categories. Limit: 1000 product categories. */
    allProductCategories: ProductCategory[]
    /**
     * @deprecated Not supported anymore.
     * The token required to query the shop's reports or dashboards.
     */
    analyticsToken: Scalars['String']
    /**
     * The paginated list of fulfillment orders assigned to the shop locations owned by the app.
     * 
     * Assigned fulfillment orders are fulfillment orders that are set to be fulfilled from locations
     * managed by
     * [fulfillment services](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentService)
     * that are registered by the app.
     * One app (api_client) can host multiple fulfillment services on a shop.
     * Each fulfillment service manages a dedicated location on a shop.
     * Assigned fulfillment orders can have associated
     * [fulfillment requests](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderRequestStatus),
     * or might currently not be requested to be fulfilled.
     * 
     * The app must have `read_assigned_fulfillment_orders`
     * [access scope](https://shopify.dev/docs/api/usage/access-scopes)
     * to be able to retrieve fulfillment orders assigned to its locations.
     * 
     * All assigned fulfillment orders (except those with the `CLOSED` status) will be returned by default.
     * Perform filtering with the `assignmentStatus` argument
     * to receive only fulfillment orders that have been requested to be fulfilled.
     * 
     */
    assignedFulfillmentOrders: FulfillmentOrderConnection
    /** The list of sales channels not currently installed on the shop. */
    availableChannelApps: AppConnection
    /** The shop's billing address information. */
    billingAddress: ShopAddress
    /**
     * @deprecated Use `publicationCount` instead.
     * Exposes the number of channels.
     */
    channelCount: Scalars['Int']
    /** List of all channel definitions associated with a shop. */
    channelDefinitionsForInstalledChannels: AvailableChannelDefinitionsByChannel[]
    /**
     * @deprecated Use `QueryRoot.channels` instead.
     * List of the shop's active sales channels.
     */
    channels: ChannelConnection
    /** Specifies whether the shop supports checkouts via Checkout API. */
    checkoutApiSupported: Scalars['Boolean']
    /**
     * @deprecated Use `QueryRoot.collectionByHandle` instead.
     * Return a collection by its handle.
     */
    collectionByHandle?: Collection
    /**
     * @deprecated Use `QueryRoot.collectionSavedSearches` instead.
     * List of the shop's collection saved searches.
     */
    collectionSavedSearches: SavedSearchConnection
    /**
     * @deprecated Use `QueryRoot.collections` instead.
     * List of the shop's collections.
     */
    collections: CollectionConnection
    /**
     * The public-facing contact email address for the shop.
     * Customers will use this email to communicate with the shop owner.
     * 
     */
    contactEmail: Scalars['String']
    /** Countries that have been defined in shipping zones for the shop. */
    countriesInShippingZones: CountriesInShippingZones
    /** The three letter code for the currency that the shop sells in. */
    currencyCode: CurrencyCode
    /** How currencies are displayed on your store. */
    currencyFormats: CurrencyFormats
    /** The presentment currency settings for the shop excluding the shop's own currency. */
    currencySettings: CurrencySettingConnection
    /** Whether customer accounts are required, optional, or disabled for the shop. */
    customerAccounts: ShopCustomerAccountsSetting
    /**
     * @deprecated Use `QueryRoot.customerSavedSearches` instead.
     * List of the shop's customer saved searches.
     */
    customerSavedSearches: SavedSearchConnection
    /** A list of tags that have been added to customer accounts. */
    customerTags: StringConnection
    /**
     * @deprecated Use `QueryRoot.customers` instead.
     * Customer accounts associated to the shop.
     */
    customers: CustomerConnection
    /** The shop's meta description used in search engine results. */
    description?: Scalars['String']
    /**
     * @deprecated Use `domainsPaginated` instead.
     * The domains configured for the shop.
     */
    domains: Domain[]
    /**
     * @deprecated Use `QueryRoot.draftOrderSavedSearches` instead.
     * List of the shop's draft order saved searches.
     */
    draftOrderSavedSearches: SavedSearchConnection
    /** A list of tags that have been added to draft orders. */
    draftOrderTags: StringConnection
    /**
     * @deprecated Use `QueryRoot.draftOrders` instead.
     * List of saved draft orders on the shop.
     */
    draftOrders: DraftOrderConnection
    /**
     * The shop owner's email address.
     * Shopify will use this email address to communicate with the shop owner.
     * 
     */
    email: Scalars['String']
    /** The presentment currencies enabled for the shop. */
    enabledPresentmentCurrencies: CurrencyCode[]
    /** The set of features enabled for the shop. */
    features: ShopFeatures
    /**
     * @deprecated Use `QueryRoot.fulfillmentOrders` instead.
     * The paginated list of merchant-managed and third-party fulfillment orders.
     */
    fulfillmentOrders: FulfillmentOrderConnection
    /** List of the shop's installed fulfillment services. */
    fulfillmentServices: FulfillmentService[]
    /** The shop's time zone as defined by the IANA. */
    ianaTimezone: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * @deprecated Use `QueryRoot.inventoryItems` instead.
     * List of the shop's inventory items.
     */
    inventoryItems: InventoryItemConnection
    /**
     * The number of pendings orders on the shop.
     * Limited to a maximum of 10000.
     * 
     */
    limitedPendingOrderCount: LimitedPendingOrderCount
    /**
     * @deprecated Use `QueryRoot.locations` instead.
     * List of active locations of the shop.
     */
    locations: LocationConnection
    /**
     * @deprecated Use `QueryRoot.marketingEvents` instead.
     * List of a shop's marketing events.
     */
    marketingEvents: MarketingEventConnection
    /** The approval signals for a shop to support onboarding to channel apps. */
    merchantApprovalSignals?: MerchantApprovalSignals
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: Metafield
    /** List of metafields that belong to the resource. */
    metafields: MetafieldConnection
    /** The shop's .myshopify.com domain name. */
    myshopifyDomain: Scalars['String']
    /** The shop's name. */
    name: Scalars['String']
    /** The shop's settings related to navigation. */
    navigationSettings: NavigationItem[]
    /** The prefix that appears before order numbers. */
    orderNumberFormatPrefix: Scalars['String']
    /** The suffix that appears after order numbers. */
    orderNumberFormatSuffix: Scalars['String']
    /**
     * @deprecated Use `QueryRoot.orderSavedSearches` instead.
     * List of the shop's order saved searches.
     */
    orderSavedSearches: SavedSearchConnection
    /** A list of tags that have been added to orders. */
    orderTags: StringConnection
    /**
     * @deprecated Use `QueryRoot.orders` instead.
     * A list of the shop's orders.
     */
    orders: OrderConnection
    /** The shop's settings related to payments. */
    paymentSettings: PaymentSettings
    /**
     * @deprecated Use `limitedPendingOrderCount` instead.
     * Number of pending orders on the shop.
     */
    pendingOrderCount: Scalars['Int']
    /** The shop's billing plan. */
    plan: ShopPlan
    /**
     * @deprecated Use `QueryRoot.priceRuleSavedSearches` instead.
     * List of the shop's price rule saved searches.
     */
    priceRuleSavedSearches: SavedSearchConnection
    /**
     * @deprecated Use `QueryRoot.priceRules` instead.
     * List of the shop’s price rules.
     */
    priceRules: PriceRuleConnection
    /** The primary domain of the shop's online store. */
    primaryDomain: Domain
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: PrivateMetafield
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields: PrivateMetafieldConnection
    /**
     * @deprecated Use `QueryRoot.productByHandle` instead.
     * Return a product by its handle.
     */
    productByHandle?: Product
    /** The list of all images of all products for the shop. */
    productImages: ImageConnection
    /**
     * @deprecated Use `QueryRoot.productSavedSearches` instead.
     * List of the shop's product saved searches.
     */
    productSavedSearches: SavedSearchConnection
    /** A list of tags that have been added to products. */
    productTags: StringConnection
    /** The list of types added to products. */
    productTypes: StringConnection
    /**
     * @deprecated Use `QueryRoot.productVariants` instead.
     * List of the shop's product variants.
     */
    productVariants: ProductVariantConnection
    /** The list of vendors added to products. */
    productVendors: StringConnection
    /**
     * @deprecated Use `QueryRoot.products`.
     * List of the shop's products.
     */
    products: ProductConnection
    /** The number of publications for the shop. */
    publicationCount: Scalars['Int']
    /** The shop's limits for specific resources. For example, the maximum number ofvariants allowed per product, or the maximum number of locations allowed. */
    resourceLimits: ShopResourceLimits
    /** The URL of the rich text editor that can be used for mobile devices. */
    richTextEditorUrl: Scalars['URL']
    /** Fetches a list of admin search results by a specified query. */
    search: SearchResultConnection
    /** The list of search filter options for the shop. These can be used to filter productvisibility for the shop. */
    searchFilters: SearchFilterOptions
    /** Whether the shop has outstanding setup steps. */
    setupRequired: Scalars['Boolean']
    /** The list of countries that the shop ships to. */
    shipsToCountries: CountryCode[]
    /** The list of all legal policies associated with a shop. */
    shopPolicies: ShopPolicy[]
    /**
     * @deprecated Use `QueryRoot.shopifyPaymentsAccount` instead.
     * Shopify Payments account information, including balances and payouts.
     */
    shopifyPaymentsAccount?: ShopifyPaymentsAccount
    /** The paginated list of the shop's staff members. */
    staffMembers: StaffMemberConnection
    /** The storefront access token of a private application. These are scoped per-application. */
    storefrontAccessTokens: StorefrontAccessTokenConnection
    /**
     * @deprecated Use `url` instead.
     * The URL of the shop's storefront.
     */
    storefrontUrl: Scalars['URL']
    /** Whether the shop charges taxes for shipping. */
    taxShipping: Scalars['Boolean']
    /** Whether applicable taxes are included in the shop's product prices. */
    taxesIncluded: Scalars['Boolean']
    /** The shop's time zone abbreviation. */
    timezoneAbbreviation: Scalars['String']
    /** The shop's time zone offset. */
    timezoneOffset: Scalars['String']
    /** The shop's time zone offset expressed as a number of minutes. */
    timezoneOffsetMinutes: Scalars['Int']
    /** Whether transactional SMS sent by Shopify have been disabled for a shop. */
    transactionalSmsDisabled: Scalars['Boolean']
    /** The translations associated with the resource. */
    translations: Translation[]
    /** The shop's unit system for weights and measures. */
    unitSystem: UnitSystem
    /** Fetches a list of images uploaded to the shop by their IDs. */
    uploadedImagesByIds: Image[]
    /** The URL of the shop's online store. */
    url: Scalars['URL']
    /** The shop's primary unit of weight for products and shipping. */
    weightUnit: WeightUnit
    __typename: 'Shop'
}


/** The shop's billing address. */
export interface ShopAddress {
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: Scalars['String']
    /**
     * The second line of the address. Typically the number of the apartment, suite, or unit.
     * 
     */
    address2?: Scalars['String']
    /**
     * The name of the city, district, village, or town.
     * 
     */
    city?: Scalars['String']
    /** The name of the company or organization. */
    company?: Scalars['String']
    /** Whether the address coordinates are valid. */
    coordinatesValidated: Scalars['Boolean']
    /**
     * The name of the country.
     * 
     */
    country?: Scalars['String']
    /**
     * @deprecated Use `countryCodeV2` instead.
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCode?: Scalars['String']
    /**
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCodeV2?: CountryCode
    /**
     * @deprecated Always null in this context.
     * The first name.
     */
    firstName?: Scalars['String']
    /** A formatted version of the address, customized by the provided arguments. */
    formatted: Scalars['String'][]
    /** A comma-separated list of the values for city, province, and country. */
    formattedArea?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * @deprecated Always null in this context.
     * The last name.
     */
    lastName?: Scalars['String']
    /** The latitude coordinate of the address. */
    latitude?: Scalars['Float']
    /** The longitude coordinate of the address. */
    longitude?: Scalars['Float']
    /**
     * @deprecated Always null in this context.
     * The full name, based on firstName and lastName.
     * 
     */
    name?: Scalars['String']
    /**
     * A phone number associated with the address.
     * 
     * Formatted using E.164 standard. For example, _+16135551111_.
     * 
     */
    phone?: Scalars['String']
    /** The region of the address, such as the province, state, or district. */
    province?: Scalars['String']
    /**
     * The two-letter code for the region.
     * 
     * For example, ON.
     * 
     */
    provinceCode?: Scalars['String']
    /** The zip or postal code of the address. */
    zip?: Scalars['String']
    __typename: 'ShopAddress'
}


/**
 * An alert message that appears in the Shopify admin about a problem with a store setting, with an action to take. For example, you could show an alert to ask the merchant to enter their billing information to activate Shopify Plus.
 * 
 */
export interface ShopAlert {
    /**
     * The text for the button in the alert that links to related information. For example, _Add credit card_.
     * 
     */
    action: ShopAlertAction
    /** A description of the alert and further information, such as whether the merchant will be charged. */
    description: Scalars['String']
    __typename: 'ShopAlert'
}


/** An action associated to a shop alert, such as adding a credit card. */
export interface ShopAlertAction {
    /** The text for the button in the alert. For example, _Add credit card_. */
    title: Scalars['String']
    /** The target URL that the button links to. */
    url: Scalars['URL']
    __typename: 'ShopAlertAction'
}


/** Billing preferences for the shop. */
export interface ShopBillingPreferences {
    /** The currency the shop uses to pay for apps and services. */
    currency: CurrencyCode
    __typename: 'ShopBillingPreferences'
}


/**
 * Possible branding of a shop.
 * Branding can be used to define the look of a shop including its styling and logo in the Shopify Admin.
 * 
 */
export type ShopBranding = 'SHOPIFY_GOLD' | 'SHOPIFY_PLUS' | 'ROGERS' | 'SHOPIFY'


/**
 * Represents the shop's customer account requirement preference.
 * 
 */
export type ShopCustomerAccountsSetting = 'REQUIRED' | 'OPTIONAL' | 'DISABLED'


/**
 * Represents the feature set available to the shop.
 * Most fields specify whether a feature is enabled for a shop, and some fields return information
 * related to specific features.
 * 
 */
export interface ShopFeatures {
    /** Whether a shop has access to Avalara AvaTax. */
    avalaraAvatax: Scalars['Boolean']
    /** The branding of the shop, which influences its look and feel in the Shopify admin. */
    branding: ShopBranding
    /** Represents the Bundles feature configuration for the shop. */
    bundles: BundlesFeature
    /** Whether a shop's online store can have CAPTCHA protection. */
    captcha: Scalars['Boolean']
    /** Whether a shop's online store can have CAPTCHA protection for domains not managed by Shopify. */
    captchaExternalDomains: Scalars['Boolean']
    /**
     * @deprecated Delivery profiles are now 100% enabled across Shopify.
     * Whether the delivery profiles functionality is enabled for this shop.
     */
    deliveryProfiles: Scalars['Boolean']
    /** Whether a shop has access to the Google Analytics dynamic remarketing feature. */
    dynamicRemarketing: Scalars['Boolean']
    /** Whether a shop can be migrated to use Shopify subscriptions. */
    eligibleForSubscriptionMigration: Scalars['Boolean']
    /** Whether a shop is configured properly to sell subscriptions. */
    eligibleForSubscriptions: Scalars['Boolean']
    /** Whether a shop can create gift cards. */
    giftCards: Scalars['Boolean']
    /**
     * Whether a shop displays Harmonized System codes on products. This is used for customs when shipping
     * internationally.
     * 
     */
    harmonizedSystemCode: Scalars['Boolean']
    /** Whether a shop can enable international domains. */
    internationalDomains: Scalars['Boolean']
    /** Whether a shop can enable international price overrides. */
    internationalPriceOverrides: Scalars['Boolean']
    /** Whether a shop can enable international price rules. */
    internationalPriceRules: Scalars['Boolean']
    /** Whether a shop has enabled a legacy subscription gateway to handle older subscriptions. */
    legacySubscriptionGatewayEnabled: Scalars['Boolean']
    /**
     * Whether to show the Live View metrics in the Shopify admin. Live view is hidden from merchants that are on a trial
     * or don't have a storefront.
     * 
     */
    liveView: Scalars['Boolean']
    /**
     * @deprecated All shops support multi-location inventory. Use `QueryRoot.locations` to determine whether shop has more than one location. 
     * Whether a shop has multi-location functionality.
     */
    multiLocation: Scalars['Boolean']
    /** Whether a shop has access to the onboarding visual. */
    onboardingVisual: Scalars['Boolean']
    /** Whether a shop is configured to sell subscriptions with PayPal Express. */
    paypalExpressSubscriptionGatewayStatus: PaypalExpressSubscriptionsGatewayStatus
    /** Whether a shop has access to all reporting features. */
    reports: Scalars['Boolean']
    /** Whether a shop has ever had subscription products. */
    sellsSubscriptions: Scalars['Boolean']
    /**
     * @deprecated Use Shop.plan.shopifyPlus instead.
     * Whether the shop has a Shopify Plus subscription.
     */
    shopifyPlus: Scalars['Boolean']
    /**
     * Whether to show metrics in the Shopify admin. Metrics are hidden for new merchants until they become meaningful.
     * 
     */
    showMetrics: Scalars['Boolean']
    /** Whether a shop has an online store. */
    storefront: Scalars['Boolean']
    /** Whether a shop is using Shopify Balance. */
    usingShopifyBalance: Scalars['Boolean']
    __typename: 'ShopFeatures'
}


/** A locale that's been enabled on a shop. */
export interface ShopLocale {
    /** The locale ISO code. */
    locale: Scalars['String']
    /** The market web presences that use the locale. */
    marketWebPresences: MarketWebPresence[]
    /** The human-readable locale name. */
    name: Scalars['String']
    /** Whether the locale is the default locale for the shop. */
    primary: Scalars['Boolean']
    /** Whether the locale is visible to buyers. */
    published: Scalars['Boolean']
    __typename: 'ShopLocale'
}


/** Return type for `shopLocaleDisable` mutation. */
export interface ShopLocaleDisablePayload {
    /** ISO code of the locale that was deleted. */
    locale?: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ShopLocaleDisablePayload'
}


/** Return type for `shopLocaleEnable` mutation. */
export interface ShopLocaleEnablePayload {
    /** ISO code of the locale that was enabled. */
    shopLocale?: ShopLocale
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ShopLocaleEnablePayload'
}


/** Return type for `shopLocaleUpdate` mutation. */
export interface ShopLocaleUpdatePayload {
    /** The locale that was updated. */
    shopLocale?: ShopLocale
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'ShopLocaleUpdatePayload'
}


/**
 * The billing plan of the shop.
 * 
 */
export interface ShopPlan {
    /** The name of the shop's billing plan. */
    displayName: Scalars['String']
    /** Whether the shop is a partner development shop for testing purposes. */
    partnerDevelopment: Scalars['Boolean']
    /** Whether the shop has a Shopify Plus subscription. */
    shopifyPlus: Scalars['Boolean']
    __typename: 'ShopPlan'
}


/** Policy that a merchant has configured for their store, such as their refund or privacy policy. */
export interface ShopPolicy {
    /** The text of the policy. The maximum size is 512kb. */
    body: Scalars['HTML']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The translations associated with the resource. */
    translations: Translation[]
    /** The shop policy type. */
    type: ShopPolicyType
    /** The public URL of the policy. */
    url: Scalars['URL']
    __typename: 'ShopPolicy'
}


/** Possible error codes that can be returned by `ShopPolicyUserError`. */
export type ShopPolicyErrorCode = 'TOO_BIG'


/** Available shop policy types. */
export type ShopPolicyType = 'REFUND_POLICY' | 'SHIPPING_POLICY' | 'PRIVACY_POLICY' | 'TERMS_OF_SERVICE' | 'TERMS_OF_SALE' | 'LEGAL_NOTICE' | 'SUBSCRIPTION_POLICY' | 'CONTACT_INFORMATION'


/** Return type for `shopPolicyUpdate` mutation. */
export interface ShopPolicyUpdatePayload {
    /** The shop policy that has been updated. */
    shopPolicy?: ShopPolicy
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ShopPolicyUserError[]
    __typename: 'ShopPolicyUpdatePayload'
}


/** An error that occurs during the execution of a shop policy mutation. */
export interface ShopPolicyUserError {
    /** The error code. */
    code?: ShopPolicyErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ShopPolicyUserError'
}


/** Return type for `shopResourceFeedbackCreate` mutation. */
export interface ShopResourceFeedbackCreatePayload {
    /** The shop feedback that's created. */
    feedback?: AppFeedback
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ShopResourceFeedbackCreateUserError[]
    __typename: 'ShopResourceFeedbackCreatePayload'
}


/** An error that occurs during the execution of `ShopResourceFeedbackCreate`. */
export interface ShopResourceFeedbackCreateUserError {
    /** The error code. */
    code?: ShopResourceFeedbackCreateUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'ShopResourceFeedbackCreateUserError'
}


/** Possible error codes that can be returned by `ShopResourceFeedbackCreateUserError`. */
export type ShopResourceFeedbackCreateUserErrorCode = 'OUTDATED_FEEDBACK' | 'INVALID' | 'BLANK' | 'PRESENT'


/** Resource limits of a shop. */
export interface ShopResourceLimits {
    /** Maximum number of locations allowed. */
    locationLimit: Scalars['Int']
    /** Maximum number of product options allowed. */
    maxProductOptions: Scalars['Int']
    /** The maximum number of variants allowed per product. */
    maxProductVariants: Scalars['Int']
    /** Whether the shop has reached the limit of the number of URL redirects it can make for resources. */
    redirectLimitReached: Scalars['Boolean']
    /** The maximum number of variants allowed per shop. If the shop has unlimited SKUs, then the quantity used cannot be retrieved. */
    skuResourceLimits: ResourceLimit
    __typename: 'ShopResourceLimits'
}


/** Possible sort of tags. */
export type ShopTagSort = 'ALPHABETICAL' | 'POPULAR'


/** A Shopify Function. */
export interface ShopifyFunction {
    /** The API type of the Shopify Function. */
    apiType: Scalars['String']
    /** The API version of the Shopify Function. */
    apiVersion: Scalars['String']
    /** The app that owns the Shopify Function. */
    app: App
    /** The App Bridge information for the Shopify Function. */
    appBridge: FunctionsAppBridge
    /** The client ID of the app that owns the Shopify Function. */
    appKey: Scalars['String']
    /** The description of the Shopify Function. */
    description?: Scalars['String']
    /** The ID of the Shopify Function. */
    id: Scalars['String']
    /** The input query of the Shopify Function. */
    inputQuery?: Scalars['String']
    /** The title of the Shopify Function. */
    title: Scalars['String']
    /** If the Shopify Function uses the creation UI in the Admin. */
    useCreationUi: Scalars['Boolean']
    __typename: 'ShopifyFunction'
}


/**
 * An auto-generated type for paginating through multiple ShopifyFunctions.
 * 
 */
export interface ShopifyFunctionConnection {
    /** A list of edges. */
    edges: ShopifyFunctionEdge[]
    /** A list of the nodes contained in ShopifyFunctionEdge. */
    nodes: ShopifyFunction[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ShopifyFunctionConnection'
}


/**
 * An auto-generated type which holds one ShopifyFunction and a cursor during pagination.
 * 
 */
export interface ShopifyFunctionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ShopifyFunctionEdge. */
    node: ShopifyFunction
    __typename: 'ShopifyFunctionEdge'
}


/**
 * Balance and payout information for a
 * [Shopify Payments](https://help.shopify.com/manual/payments/shopify-payments/getting-paid-with-shopify-payments)
 * account. Balance includes all balances for the currencies supported by the shop.
 * You can also query for a list of payouts, where each payout includes the corresponding currencyCode field.
 * 
 */
export interface ShopifyPaymentsAccount {
    /** Whether the Shopify Payments setup is completed. */
    activated: Scalars['Boolean']
    /** Current balances in all currencies for the account. */
    balance: MoneyV2[]
    /** All bank accounts configured for the Shopify Payments account. */
    bankAccounts: ShopifyPaymentsBankAccountConnection
    /**
     * @deprecated Use `chargeStatementDescriptors` instead.
     * The statement descriptor used for charges.
     * 
     * The statement descriptor appears on a customer's credit card or bank statement when they make a purchase.
     * 
     */
    chargeStatementDescriptor?: Scalars['String']
    /**
     * The statement descriptors used for charges.
     * 
     * These descriptors appear on a customer's credit card or bank statement when they make a purchase.
     * 
     */
    chargeStatementDescriptors?: ShopifyPaymentsChargeStatementDescriptor
    /** The Shopify Payments account country. */
    country: Scalars['String']
    /** The default payout currency for the Shopify Payments account. */
    defaultCurrency: CurrencyCode
    /** All disputes related to the Shopify Payments account. */
    disputes: ShopifyPaymentsDisputeConnection
    /** The fraud settings of the Shopify Payments account. */
    fraudSettings: ShopifyPaymentsFraudSettings
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The notifications settings for the account. */
    notificationSettings: ShopifyPaymentsNotificationSettings
    /** Whether the Shopify Payments account can be onboarded. */
    onboardable: Scalars['Boolean']
    /** The payout schedule for the account. */
    payoutSchedule: ShopifyPaymentsPayoutSchedule
    /**
     * The descriptor used for payouts.
     * 
     * The descriptor appears on a merchant's bank statement when they receive a payout.
     * 
     */
    payoutStatementDescriptor?: Scalars['String']
    /** All current and previous payouts made between the account and the bank account. */
    payouts: ShopifyPaymentsPayoutConnection
    /** The permitted documents for identity verification. */
    permittedVerificationDocuments: ShopifyPaymentsVerificationDocument[]
    /** The verifications necessary for this account. */
    verifications: ShopifyPaymentsVerification[]
    __typename: 'ShopifyPaymentsAccount'
}


/**
 * A bank account that can receive payouts.
 * 
 */
export interface ShopifyPaymentsBankAccount {
    /** The account number of the bank account. */
    accountNumber: Scalars['String']
    /** The last digits of the account number (the rest is redacted). */
    accountNumberLastDigits: Scalars['String']
    /**
     * The name of the bank.
     * 
     */
    bankName?: Scalars['String']
    /**
     * The country of the bank.
     * 
     */
    country: CountryCode
    /** The date that the bank account was created. */
    createdAt: Scalars['DateTime']
    /**
     * The currency of the bank account.
     * 
     */
    currency: CurrencyCode
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** All current and previous payouts made between the account and the bank account. */
    payouts: ShopifyPaymentsPayoutConnection
    /** The routing number of the bank account. */
    routingNumber: Scalars['String']
    /**
     * The status of the bank account.
     * 
     */
    status: ShopifyPaymentsBankAccountStatus
    __typename: 'ShopifyPaymentsBankAccount'
}


/**
 * An auto-generated type for paginating through multiple ShopifyPaymentsBankAccounts.
 * 
 */
export interface ShopifyPaymentsBankAccountConnection {
    /** A list of edges. */
    edges: ShopifyPaymentsBankAccountEdge[]
    /** A list of the nodes contained in ShopifyPaymentsBankAccountEdge. */
    nodes: ShopifyPaymentsBankAccount[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ShopifyPaymentsBankAccountConnection'
}


/**
 * An auto-generated type which holds one ShopifyPaymentsBankAccount and a cursor during pagination.
 * 
 */
export interface ShopifyPaymentsBankAccountEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ShopifyPaymentsBankAccountEdge. */
    node: ShopifyPaymentsBankAccount
    __typename: 'ShopifyPaymentsBankAccountEdge'
}


/** The bank account status. */
export type ShopifyPaymentsBankAccountStatus = 'NEW' | 'VALIDATED' | 'VERIFIED' | 'ERRORED'


/** The charge descriptors for a payments account. */
export type ShopifyPaymentsChargeStatementDescriptor = (ShopifyPaymentsDefaultChargeStatementDescriptor | ShopifyPaymentsJpChargeStatementDescriptor) & { __isUnion?: true }


/** The charge descriptors for a payments account. */
export interface ShopifyPaymentsDefaultChargeStatementDescriptor {
    /** The default charge statement descriptor. */
    default?: Scalars['String']
    /** The prefix of the statement descriptor. */
    prefix: Scalars['String']
    __typename: 'ShopifyPaymentsDefaultChargeStatementDescriptor'
}


/** A dispute occurs when a buyer questions the legitimacy of a charge with their financial institution. */
export interface ShopifyPaymentsDispute {
    /** The total amount disputed by the cardholder. */
    amount: MoneyV2
    /** The deadline for evidence submission. */
    evidenceDueBy?: Scalars['Date']
    /** The date when evidence was sent. Returns null if evidence has not yet been sent. */
    evidenceSentOn?: Scalars['Date']
    /** The date when this dispute was resolved. Returns null if the dispute is not yet resolved. */
    finalizedOn?: Scalars['Date']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The date when this dispute was initiated. */
    initiatedAt: Scalars['DateTime']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The order that contains the charge that is under dispute. */
    order?: Order
    /** The reason of the dispute. */
    reasonDetails: ShopifyPaymentsDisputeReasonDetails
    /** The current state of the dispute. */
    status: DisputeStatus
    /** Indicates if this dispute is still in the inquiry phase or has turned into a chargeback. */
    type: DisputeType
    __typename: 'ShopifyPaymentsDispute'
}


/**
 * An auto-generated type for paginating through multiple ShopifyPaymentsDisputes.
 * 
 */
export interface ShopifyPaymentsDisputeConnection {
    /** A list of edges. */
    edges: ShopifyPaymentsDisputeEdge[]
    /** A list of the nodes contained in ShopifyPaymentsDisputeEdge. */
    nodes: ShopifyPaymentsDispute[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ShopifyPaymentsDisputeConnection'
}


/**
 * An auto-generated type which holds one ShopifyPaymentsDispute and a cursor during pagination.
 * 
 */
export interface ShopifyPaymentsDisputeEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ShopifyPaymentsDisputeEdge. */
    node: ShopifyPaymentsDispute
    __typename: 'ShopifyPaymentsDisputeEdge'
}


/** The evidence associated with the dispute. */
export interface ShopifyPaymentsDisputeEvidence {
    /** The activity logs associated with the dispute evidence. */
    accessActivityLog?: Scalars['String']
    /** The billing address that is provided by the customer. */
    billingAddress?: MailingAddress
    /** The cancellation policy disclosure associated with the dispute evidence. */
    cancellationPolicyDisclosure?: Scalars['String']
    /** The cancellation policy file associated with the dispute evidence. */
    cancellationPolicyFile?: ShopifyPaymentsDisputeFileUpload
    /** The cancellation rebuttal associated with the dispute evidence. */
    cancellationRebuttal?: Scalars['String']
    /** The customer communication file associated with the dispute evidence. */
    customerCommunicationFile?: ShopifyPaymentsDisputeFileUpload
    /** The customer's email address. */
    customerEmailAddress?: Scalars['String']
    /** The customer's first name. */
    customerFirstName?: Scalars['String']
    /** The customer's last name. */
    customerLastName?: Scalars['String']
    /** The customer purchase ip for this dispute evidence. */
    customerPurchaseIp?: Scalars['String']
    /** The dispute associated with the evidence. */
    dispute: ShopifyPaymentsDispute
    /** The file uploads associated with the dispute evidence. */
    disputeFileUploads: ShopifyPaymentsDisputeFileUpload[]
    /** The fulfillments associated with the dispute evidence. */
    fulfillments: ShopifyPaymentsDisputeFulfillment[]
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The product description for this dispute evidence. */
    productDescription?: Scalars['String']
    /** The refund policy disclosure associated with the dispute evidence. */
    refundPolicyDisclosure?: Scalars['String']
    /** The refund policy file associated with the dispute evidence. */
    refundPolicyFile?: ShopifyPaymentsDisputeFileUpload
    /** The refund refusal explanation associated with dispute evidence. */
    refundRefusalExplanation?: Scalars['String']
    /** The service documentation file associated with the dispute evidence. */
    serviceDocumentationFile?: ShopifyPaymentsDisputeFileUpload
    /** The mailing address for shipping that is provided by the customer. */
    shippingAddress?: MailingAddress
    /** The shipping documentation file associated with the dispute evidence. */
    shippingDocumentationFile?: ShopifyPaymentsDisputeFileUpload
    /** Whether the dispute evidence is submitted. */
    submitted: Scalars['Boolean']
    /** The uncategorized file associated with the dispute evidence. */
    uncategorizedFile?: ShopifyPaymentsDisputeFileUpload
    /** The uncategorized text for the dispute evidence. */
    uncategorizedText?: Scalars['String']
    __typename: 'ShopifyPaymentsDisputeEvidence'
}


/** The possible dispute evidence file types. */
export type ShopifyPaymentsDisputeEvidenceFileType = 'CUSTOMER_COMMUNICATION_FILE' | 'REFUND_POLICY_FILE' | 'CANCELLATION_POLICY_FILE' | 'UNCATEGORIZED_FILE' | 'SHIPPING_DOCUMENTATION_FILE' | 'SERVICE_DOCUMENTATION_FILE'


/** The file upload associated with the dispute evidence. */
export interface ShopifyPaymentsDisputeFileUpload {
    /** The type of the file for the dispute evidence. */
    disputeEvidenceType?: ShopifyPaymentsDisputeEvidenceFileType
    /** The file size. */
    fileSize: Scalars['Int']
    /** The file type. */
    fileType: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The original file name. */
    originalFileName?: Scalars['String']
    /** The URL for accessing the file. */
    url: Scalars['URL']
    __typename: 'ShopifyPaymentsDisputeFileUpload'
}


/** The fulfillment associated with dispute evidence. */
export interface ShopifyPaymentsDisputeFulfillment {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The shipping carrier for this fulfillment. */
    shippingCarrier?: Scalars['String']
    /** The shipping date for this fulfillment. */
    shippingDate?: Scalars['Date']
    /** The shipping tracking number for this fulfillment. */
    shippingTrackingNumber?: Scalars['String']
    __typename: 'ShopifyPaymentsDisputeFulfillment'
}


/** The reason for the dispute provided by the cardholder's bank. */
export type ShopifyPaymentsDisputeReason = 'FRAUDULENT' | 'GENERAL' | 'UNRECOGNIZED' | 'DUPLICATE' | 'SUBSCRIPTION_CANCELLED' | 'PRODUCT_UNACCEPTABLE' | 'PRODUCT_NOT_RECEIVED' | 'CREDIT_NOT_PROCESSED' | 'INCORRECT_ACCOUNT_DETAILS' | 'INSUFFICIENT_FUNDS' | 'BANK_CANNOT_PROCESS' | 'DEBIT_NOT_AUTHORIZED' | 'CUSTOMER_INITIATED'


/** Details regarding a dispute reason. */
export interface ShopifyPaymentsDisputeReasonDetails {
    /** The raw code provided by the payment network. */
    networkReasonCode?: Scalars['String']
    /** The reason for the dispute provided by the cardholder's banks. */
    reason: ShopifyPaymentsDisputeReason
    __typename: 'ShopifyPaymentsDisputeReasonDetails'
}


/** Presents all Shopify Payments information related to an extended authorization. */
export interface ShopifyPaymentsExtendedAuthorization {
    /**
     * The time after which the extended authorization expires. After the expiry, the merchant is unable to capture the payment.
     * 
     */
    extendedAuthorizationExpiresAt: Scalars['DateTime']
    /**
     * The time after which capture will incur an additional fee.
     * 
     */
    standardAuthorizationExpiresAt: Scalars['DateTime']
    __typename: 'ShopifyPaymentsExtendedAuthorization'
}


/** The fraud settings of a payments account. */
export interface ShopifyPaymentsFraudSettings {
    /** Decline a charge if there is an AVS failure. */
    declineChargeOnAvsFailure: Scalars['Boolean']
    /** Decline a charge if there is an CVC failure. */
    declineChargeOnCvcFailure: Scalars['Boolean']
    __typename: 'ShopifyPaymentsFraudSettings'
}


/** The charge descriptors for a Japanese payments account. */
export interface ShopifyPaymentsJpChargeStatementDescriptor {
    /** The default charge statement descriptor. */
    default?: Scalars['String']
    /** The charge statement descriptor in kana. */
    kana?: Scalars['String']
    /** The charge statement descriptor in kanji. */
    kanji?: Scalars['String']
    /** The prefix of the statement descriptor. */
    prefix: Scalars['String']
    __typename: 'ShopifyPaymentsJpChargeStatementDescriptor'
}


/** The notification settings for the account. */
export interface ShopifyPaymentsNotificationSettings {
    /** Receive email notifications when new payouts are sent or payouts fail. */
    payouts: Scalars['Boolean']
    __typename: 'ShopifyPaymentsNotificationSettings'
}


/**
 * Payouts represent the movement of money between a merchant's Shopify
 * Payments balance and their bank account.
 * 
 */
export interface ShopifyPaymentsPayout {
    /** The bank account for the payout. */
    bankAccount?: ShopifyPaymentsBankAccount
    /**
     * @deprecated Use `net` instead.
     * The total amount and currency of the payout.
     */
    gross: MoneyV2
    /** A globally-unique ID. */
    id: Scalars['ID']
    /**
     * The exact time when the payout was issued. The payout only contains
     * balance transactions that were available at this time.
     * 
     */
    issuedAt: Scalars['DateTime']
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The total amount and currency of the payout. */
    net: MoneyV2
    /** The transfer status of the payout. */
    status: ShopifyPaymentsPayoutStatus
    /** The summary of the payout. */
    summary: ShopifyPaymentsPayoutSummary
    /** The direction of the payout. */
    transactionType: ShopifyPaymentsPayoutTransactionType
    __typename: 'ShopifyPaymentsPayout'
}


/**
 * An auto-generated type for paginating through multiple ShopifyPaymentsPayouts.
 * 
 */
export interface ShopifyPaymentsPayoutConnection {
    /** A list of edges. */
    edges: ShopifyPaymentsPayoutEdge[]
    /** A list of the nodes contained in ShopifyPaymentsPayoutEdge. */
    nodes: ShopifyPaymentsPayout[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'ShopifyPaymentsPayoutConnection'
}


/**
 * An auto-generated type which holds one ShopifyPaymentsPayout and a cursor during pagination.
 * 
 */
export interface ShopifyPaymentsPayoutEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of ShopifyPaymentsPayoutEdge. */
    node: ShopifyPaymentsPayout
    __typename: 'ShopifyPaymentsPayoutEdge'
}


/** The interval at which payouts are sent to the connected bank account. */
export type ShopifyPaymentsPayoutInterval = 'DAILY' | 'WEEKLY' | 'MONTHLY' | 'MANUAL'


/** The payment schedule for a payments account. */
export interface ShopifyPaymentsPayoutSchedule {
    /** The interval at which payouts are sent to the connected bank account. */
    interval: ShopifyPaymentsPayoutInterval
    /**
     * The day of the month funds will be paid out.
     * 
     * The value can be any day of the month from the 1st to the 31st.
     * If the payment interval is set to monthly, this value will be used.
     * Payouts scheduled between 29-31st of the month are sent on the last day of shorter months.
     * 
     */
    monthlyAnchor?: Scalars['Int']
    /**
     * The day of the week funds will be paid out.
     * 
     * The value can be any weekday from Monday to Friday.
     * If the payment interval is set to weekly, this value will be used.
     * 
     */
    weeklyAnchor?: DayOfTheWeek
    __typename: 'ShopifyPaymentsPayoutSchedule'
}


/** The transfer status of the payout. */
export type ShopifyPaymentsPayoutStatus = 'SCHEDULED' | 'IN_TRANSIT' | 'PAID' | 'FAILED' | 'CANCELED'


/**
 * Breakdown of the total fees and gross of each of the different types of transactions associated
 * with the payout.
 * 
 */
export interface ShopifyPaymentsPayoutSummary {
    /** Total fees for all adjustments including disputes. */
    adjustmentsFee: MoneyV2
    /** Total gross amount for all adjustments including disputes. */
    adjustmentsGross: MoneyV2
    /** Total fees for all charges. */
    chargesFee: MoneyV2
    /** Total gross amount for all charges. */
    chargesGross: MoneyV2
    /** Total fees for all refunds. */
    refundsFee: MoneyV2
    /** Total gross amount for all refunds. */
    refundsFeeGross: MoneyV2
    /** Total fees for all reserved funds. */
    reservedFundsFee: MoneyV2
    /** Total gross amount for all reserved funds. */
    reservedFundsGross: MoneyV2
    /** Total fees for all retried payouts. */
    retriedPayoutsFee: MoneyV2
    /** Total gross amount for all retried payouts. */
    retriedPayoutsGross: MoneyV2
    __typename: 'ShopifyPaymentsPayoutSummary'
}


/** The possible transaction types for a payout. */
export type ShopifyPaymentsPayoutTransactionType = 'DEPOSIT' | 'WITHDRAWAL'


/** Presents all Shopify Payments specific information related to an order refund. */
export interface ShopifyPaymentsRefundSet {
    /**
     * The acquirer reference number (ARN) code generated for Visa/Mastercard transactions.
     * 
     */
    acquirerReferenceNumber?: Scalars['String']
    __typename: 'ShopifyPaymentsRefundSet'
}


/** Presents all Shopify Payments specific information related to an order transaction. */
export interface ShopifyPaymentsTransactionSet {
    /**
     * Contains all fields related to an extended authorization.
     * 
     */
    extendedAuthorizationSet?: ShopifyPaymentsExtendedAuthorization
    /**
     * Contains all fields related to a refund.
     * 
     */
    refundSet?: ShopifyPaymentsRefundSet
    __typename: 'ShopifyPaymentsTransactionSet'
}


/**
 * Each subject (individual) of an account has a verification object giving
 *  information about the verification state.
 * 
 */
export interface ShopifyPaymentsVerification {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The status of the verification. */
    status: ShopifyPaymentsVerificationStatus
    /** The subject/individual who has to be verified. */
    subject: ShopifyPaymentsVerificationSubject
    __typename: 'ShopifyPaymentsVerification'
}


/** A document which can be used to verify an individual. */
export interface ShopifyPaymentsVerificationDocument {
    /** True if the back side of the document is required. */
    backRequired: Scalars['Boolean']
    /** True if the front side of the document is required. */
    frontRequired: Scalars['Boolean']
    /** The type of the document which can be used for verification. */
    type: ShopifyPaymentsVerificationDocumentType
    __typename: 'ShopifyPaymentsVerificationDocument'
}


/** The types of possible verification documents. */
export type ShopifyPaymentsVerificationDocumentType = 'DRIVERS_LICENSE' | 'GOVERNMENT_IDENTIFICATION' | 'PASSPORT'


/** The status of a verification. */
export type ShopifyPaymentsVerificationStatus = 'VERIFIED' | 'UNVERIFIED' | 'PENDING'


/** The verification subject represents an individual that has to be verified. */
export interface ShopifyPaymentsVerificationSubject {
    /** The family name of the individual to verify. */
    familyName: Scalars['String']
    /** The given name of the individual to verify. */
    givenName: Scalars['String']
    __typename: 'ShopifyPaymentsVerificationSubject'
}


/** A response to a ShopifyQL query. */
export type ShopifyqlResponse = (PolarisVizResponse | TableResponse) & { __isUnion?: true }


/**
 * Represents the data about a staff member's Shopify account. Merchants can use staff member data to get more information about the staff members in their store.
 * 
 */
export interface StaffMember {
    /** Whether the staff member is active. */
    active: Scalars['Boolean']
    /** The image used as the staff member's avatar in the Shopify admin. */
    avatar: Image
    /** The staff member's email address. */
    email: Scalars['String']
    /** Whether the staff member's account exists. */
    exists: Scalars['Boolean']
    /** The staff member's first name. */
    firstName?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The staff member's initials, if available. */
    initials?: Scalars['String'][]
    /** Whether the staff member is the shop owner. */
    isShopOwner: Scalars['Boolean']
    /** The staff member's last name. */
    lastName?: Scalars['String']
    /** The staff member's preferred locale. Locale values use the format `language` or `language-COUNTRY`, where `language` is a two-letter language code, and `COUNTRY` is a two-letter country code. For example: `en` or `en-US` */
    locale: Scalars['String']
    /** The staff member's full name. */
    name: Scalars['String']
    /** The staff member's phone number. */
    phone?: Scalars['String']
    /** The data used to customize the Shopify admin experience for the staff member. */
    privateData: StaffMemberPrivateData
    __typename: 'StaffMember'
}


/**
 * An auto-generated type for paginating through multiple StaffMembers.
 * 
 */
export interface StaffMemberConnection {
    /** A list of edges. */
    edges: StaffMemberEdge[]
    /** A list of the nodes contained in StaffMemberEdge. */
    nodes: StaffMember[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'StaffMemberConnection'
}


/** Represents the fallback avatar image for a staff member. This is used only if the staff member has no avatar image. */
export type StaffMemberDefaultImage = 'DEFAULT' | 'TRANSPARENT' | 'NOT_FOUND'


/**
 * An auto-generated type which holds one StaffMember and a cursor during pagination.
 * 
 */
export interface StaffMemberEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of StaffMemberEdge. */
    node: StaffMember
    __typename: 'StaffMemberEdge'
}


/** Represents access permissions for a staff member. */
export type StaffMemberPermission = 'APPLICATIONS' | 'CHANNELS' | 'CUSTOMERS' | 'DASHBOARD' | 'DOMAINS' | 'DRAFT_ORDERS' | 'EDIT_ORDERS' | 'FULL' | 'GIFT_CARDS' | 'LINKS' | 'LOCATIONS' | 'MARKETING' | 'MARKETING_SECTION' | 'ORDERS' | 'OVERVIEWS' | 'PAGES' | 'PAY_ORDERS_BY_VAULTED_CARD' | 'PREFERENCES' | 'PRODUCTS' | 'REPORTS' | 'THEMES' | 'TRANSLATIONS'


/** Represents the data used to customize the Shopify admin experience for a logged-in staff member. */
export interface StaffMemberPrivateData {
    /** The URL to the staff member's account settings page. */
    accountSettingsUrl: Scalars['URL']
    /** The date and time when the staff member was created. */
    createdAt: Scalars['DateTime']
    /**
     * @deprecated Use StaffMember.permissions.userPermissions instead
     * Access permissions for the staff member.
     */
    permissions: StaffMemberPermission[]
    __typename: 'StaffMemberPrivateData'
}


/**
 * Information about a staged upload target, which should be used to send a request to upload
 * the file.
 * 
 * For more information on the upload process, refer to
 * [Upload media to Shopify](https://shopify.dev/apps/online-store/media/products#step-1-upload-media-to-shopify).
 * 
 */
export interface StagedMediaUploadTarget {
    /** Parameters needed to authenticate a request to upload the file. */
    parameters: StagedUploadParameter[]
    /**
     * The URL to be passed as `originalSource` in
     * [CreateMediaInput](https://shopify.dev/api/admin-graphql/latest/input-objects/CreateMediaInput)
     * and [FileCreateInput](https://shopify.dev/api/admin-graphql/2022-04/input-objects/FileCreateInput)
     * for the [productCreateMedia](https://shopify.dev/api/admin-graphql/2022-04/mutations/productCreateMedia)
     * and [fileCreate](https://shopify.dev/api/admin-graphql/2022-04/mutations/fileCreate)
     * mutations.
     * 
     */
    resourceUrl?: Scalars['URL']
    /**
     * The URL to use when sending an request to upload the file. Should be used in conjunction with
     * the parameters field.
     * 
     */
    url?: Scalars['URL']
    __typename: 'StagedMediaUploadTarget'
}


/**
 * The possible HTTP methods that can be used when sending a request to upload a file using information from a
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget).
 * 
 */
export type StagedUploadHttpMethodType = 'POST' | 'PUT'


/**
 * The parameters required to authenticate a file upload request using a
 * [StagedMediaUploadTarget's url field](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget#field-stagedmediauploadtarget-url).
 * 
 * For more information on the upload process, refer to
 * [Upload media to Shopify](https://shopify.dev/apps/online-store/media/products#step-1-upload-media-to-shopify).
 * 
 */
export interface StagedUploadParameter {
    /** The parameter's name. */
    name: Scalars['String']
    /** The parameter's value. */
    value: Scalars['String']
    __typename: 'StagedUploadParameter'
}


/**
 * Information about the staged target.
 * 
 * Deprecated in favor of
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget),
 * which is returned by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface StagedUploadTarget {
    /** The parameters of an image to be uploaded. */
    parameters: ImageUploadParameter[]
    /** The image URL. */
    url: Scalars['String']
    __typename: 'StagedUploadTarget'
}


/** Return type for `stagedUploadTargetGenerate` mutation. */
export interface StagedUploadTargetGeneratePayload {
    /** The signed parameters that can be used to upload the asset. */
    parameters: MutationsStagedUploadTargetGenerateUploadParameter[]
    /** The signed URL where the asset can be uploaded. */
    url: Scalars['String']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'StagedUploadTargetGeneratePayload'
}


/** The resource type to receive. */
export type StagedUploadTargetGenerateUploadResource = 'COLLECTION_IMAGE' | 'FILE' | 'IMAGE' | 'MODEL_3D' | 'PRODUCT_IMAGE' | 'SHOP_IMAGE' | 'VIDEO' | 'BULK_MUTATION_VARIABLES' | 'RETURN_LABEL' | 'URL_REDIRECT_IMPORT'


/** Return type for `stagedUploadTargetsGenerate` mutation. */
export interface StagedUploadTargetsGeneratePayload {
    /** The staged upload targets that were generated. */
    urls?: StagedUploadTarget[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'StagedUploadTargetsGeneratePayload'
}


/** Return type for `stagedUploadsCreate` mutation. */
export interface StagedUploadsCreatePayload {
    /** The staged upload targets that were generated. */
    stagedTargets?: StagedMediaUploadTarget[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'StagedUploadsCreatePayload'
}


/** Return type for `standardMetafieldDefinitionEnable` mutation. */
export interface StandardMetafieldDefinitionEnablePayload {
    /** The metafield definition that was created. */
    createdDefinition?: MetafieldDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: StandardMetafieldDefinitionEnableUserError[]
    __typename: 'StandardMetafieldDefinitionEnablePayload'
}


/** An error that occurs during the execution of `StandardMetafieldDefinitionEnable`. */
export interface StandardMetafieldDefinitionEnableUserError {
    /** The error code. */
    code?: StandardMetafieldDefinitionEnableUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'StandardMetafieldDefinitionEnableUserError'
}


/** Possible error codes that can be returned by `StandardMetafieldDefinitionEnableUserError`. */
export type StandardMetafieldDefinitionEnableUserErrorCode = 'INVALID' | 'TAKEN' | 'TEMPLATE_NOT_FOUND' | 'LIMIT_EXCEEDED' | 'UNSTRUCTURED_ALREADY_EXISTS' | 'TYPE_NOT_ALLOWED_FOR_CONDITIONS'


/**
 * Standard metafield definition templates provide preset configurations to create metafield definitions.
 * Each template has a specific namespace and key that we've reserved to have specific meanings for common use cases.
 * 
 * Refer to the [list of standard metafield definitions](https://shopify.dev/apps/metafields/definitions/standard-definitions).
 * 
 */
export interface StandardMetafieldDefinitionTemplate {
    /** The description of the standard metafield definition. */
    description?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The key owned by the definition after the definition has been activated. */
    key: Scalars['String']
    /** The human-readable name for the standard metafield definition. */
    name: Scalars['String']
    /** The namespace owned by the definition after the definition has been activated. */
    namespace: Scalars['String']
    /** The list of resource types that the standard metafield definition can be applied to. */
    ownerTypes: MetafieldOwnerType[]
    /** The associated [metafield definition type](https://shopify.dev/apps/metafields/definitions/types) that the metafield stores. */
    type: MetafieldDefinitionType
    /** The configured validations for the standard metafield definition. */
    validations: MetafieldDefinitionValidation[]
    /**
     * Whether metafields for the definition are by default visible using the Storefront API.
     * 
     */
    visibleToStorefrontApi: Scalars['Boolean']
    __typename: 'StandardMetafieldDefinitionTemplate'
}


/**
 * An auto-generated type for paginating through multiple StandardMetafieldDefinitionTemplates.
 * 
 */
export interface StandardMetafieldDefinitionTemplateConnection {
    /** A list of edges. */
    edges: StandardMetafieldDefinitionTemplateEdge[]
    /** A list of the nodes contained in StandardMetafieldDefinitionTemplateEdge. */
    nodes: StandardMetafieldDefinitionTemplate[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'StandardMetafieldDefinitionTemplateConnection'
}


/**
 * An auto-generated type which holds one StandardMetafieldDefinitionTemplate and a cursor during pagination.
 * 
 */
export interface StandardMetafieldDefinitionTemplateEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of StandardMetafieldDefinitionTemplateEdge. */
    node: StandardMetafieldDefinitionTemplate
    __typename: 'StandardMetafieldDefinitionTemplateEdge'
}


/** Return type for `standardMetaobjectDefinitionEnable` mutation. */
export interface StandardMetaobjectDefinitionEnablePayload {
    /** The metaobject definition that was enabled using the standard template. */
    metaobjectDefinition?: MetaobjectDefinition
    /** The list of errors that occurred from executing the mutation. */
    userErrors: MetaobjectUserError[]
    __typename: 'StandardMetaobjectDefinitionEnablePayload'
}


/** Represents the details of a specific type of product within the [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt). */
export interface StandardizedProductType {
    /** The product taxonomy node associated with the standardized product type. */
    productTaxonomyNode?: ProductTaxonomyNode
    __typename: 'StandardizedProductType'
}


/**
 * A token that's used to delegate unauthenticated access scopes to clients that need to access
 * the unauthenticated Storefront API. An app can have a maximum of 100 active storefront access
 * tokens for each shop.
 * 
 */
export interface StorefrontAccessToken {
    /** List of permissions associated with the token. */
    accessScopes: AccessScope[]
    /** The issued public access token. */
    accessToken: Scalars['String']
    /** The date and time when the public access token was created. */
    createdAt: Scalars['DateTime']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** An arbitrary title for each token determined by the developer, used for reference         purposes. */
    title: Scalars['String']
    /** The date and time when the storefront access token was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'StorefrontAccessToken'
}


/**
 * An auto-generated type for paginating through multiple StorefrontAccessTokens.
 * 
 */
export interface StorefrontAccessTokenConnection {
    /** A list of edges. */
    edges: StorefrontAccessTokenEdge[]
    /** A list of the nodes contained in StorefrontAccessTokenEdge. */
    nodes: StorefrontAccessToken[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'StorefrontAccessTokenConnection'
}


/** Return type for `storefrontAccessTokenCreate` mutation. */
export interface StorefrontAccessTokenCreatePayload {
    /** The user's shop. */
    shop: Shop
    /** The storefront access token. */
    storefrontAccessToken?: StorefrontAccessToken
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'StorefrontAccessTokenCreatePayload'
}


/** Return type for `storefrontAccessTokenDelete` mutation. */
export interface StorefrontAccessTokenDeletePayload {
    /** The ID of the deleted storefront access token. */
    deletedStorefrontAccessTokenId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'StorefrontAccessTokenDeletePayload'
}


/**
 * An auto-generated type which holds one StorefrontAccessToken and a cursor during pagination.
 * 
 */
export interface StorefrontAccessTokenEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of StorefrontAccessTokenEdge. */
    node: StorefrontAccessToken
    __typename: 'StorefrontAccessTokenEdge'
}


/**
 * An auto-generated type for paginating through a list of Strings.
 * 
 */
export interface StringConnection {
    /** A list of edges. */
    edges: StringEdge[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'StringConnection'
}


/**
 * An auto-generated type which holds one String and a cursor during pagination.
 * 
 */
export interface StringEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of StringEdge. */
    node: Scalars['String']
    __typename: 'StringEdge'
}


/** Represents an applied code discount. */
export interface SubscriptionAppliedCodeDiscount {
    /** The unique ID. */
    id: Scalars['ID']
    /** The redeem code of the discount that applies on the subscription. */
    redeemCode: Scalars['String']
    /** The reason that the discount on the subscription draft is rejected. */
    rejectionReason?: SubscriptionDiscountRejectionReason
    __typename: 'SubscriptionAppliedCodeDiscount'
}


/**
 * A record of an execution of the subscription billing process. Billing attempts use
 * idempotency keys to avoid duplicate order creation. A successful billing attempt
 * will create an order.
 * 
 */
export interface SubscriptionBillingAttempt {
    /** The date and time when the billing attempt was completed. */
    completedAt?: Scalars['DateTime']
    /** The date and time when the billing attempt was created. */
    createdAt: Scalars['DateTime']
    /** A code corresponding to a payment error during processing. */
    errorCode?: SubscriptionBillingAttemptErrorCode
    /** A message describing a payment error during processing. */
    errorMessage?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** A unique key generated by the client to avoid duplicate payments. */
    idempotencyKey: Scalars['String']
    /**
     * The URL where the customer needs to be redirected so they can complete the 3D Secure payment flow.
     * 
     */
    nextActionUrl?: Scalars['URL']
    /** The result of this billing attempt if completed successfully. */
    order?: Order
    /**
     * The date and time used to calculate fulfillment intervals for a billing attempt that
     * successfully completed after the current anchor date. To prevent fulfillment from being
     * pushed to the next anchor date, this field can override the billing attempt date.
     * 
     */
    originTime?: Scalars['DateTime']
    /** Whether the billing attempt is still processing. */
    ready: Scalars['Boolean']
    /** The subscription contract. */
    subscriptionContract: SubscriptionContract
    __typename: 'SubscriptionBillingAttempt'
}


/**
 * An auto-generated type for paginating through multiple SubscriptionBillingAttempts.
 * 
 */
export interface SubscriptionBillingAttemptConnection {
    /** A list of edges. */
    edges: SubscriptionBillingAttemptEdge[]
    /** A list of the nodes contained in SubscriptionBillingAttemptEdge. */
    nodes: SubscriptionBillingAttempt[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SubscriptionBillingAttemptConnection'
}


/** Return type for `subscriptionBillingAttemptCreate` mutation. */
export interface SubscriptionBillingAttemptCreatePayload {
    /** The subscription billing attempt. */
    subscriptionBillingAttempt?: SubscriptionBillingAttempt
    /** The list of errors that occurred from executing the mutation. */
    userErrors: BillingAttemptUserError[]
    __typename: 'SubscriptionBillingAttemptCreatePayload'
}


/**
 * An auto-generated type which holds one SubscriptionBillingAttempt and a cursor during pagination.
 * 
 */
export interface SubscriptionBillingAttemptEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SubscriptionBillingAttemptEdge. */
    node: SubscriptionBillingAttempt
    __typename: 'SubscriptionBillingAttemptEdge'
}


/**
 * The possible error codes associated with making billing attempts. The error codes supplement the
 * `error_message` to provide consistent results and help with dunning management.
 * 
 */
export type SubscriptionBillingAttemptErrorCode = 'PAYMENT_METHOD_NOT_FOUND' | 'PAYMENT_PROVIDER_IS_NOT_ENABLED' | 'INVALID_PAYMENT_METHOD' | 'UNEXPECTED_ERROR' | 'EXPIRED_PAYMENT_METHOD' | 'PAYMENT_METHOD_DECLINED' | 'AUTHENTICATION_ERROR' | 'TEST_MODE' | 'BUYER_CANCELED_PAYMENT_METHOD' | 'CUSTOMER_NOT_FOUND' | 'CUSTOMER_INVALID' | 'INVALID_SHIPPING_ADDRESS' | 'INVALID_CUSTOMER_BILLING_AGREEMENT' | 'INVOICE_ALREADY_PAID' | 'PAYMENT_METHOD_INCOMPATIBLE_WITH_GATEWAY_CONFIG' | 'AMOUNT_TOO_SMALL' | 'INVENTORY_ALLOCATIONS_NOT_FOUND' | 'TRANSIENT_ERROR'


/** The set of valid sort keys for the SubscriptionBillingAttempts query. */
export type SubscriptionBillingAttemptsSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/** A subscription billing cycle. */
export interface SubscriptionBillingCycle {
    /** The date on which the billing attempt is expected to be made. */
    billingAttemptExpectedDate: Scalars['DateTime']
    /** The list of billing attempts associated with the billing cycle. */
    billingAttempts: SubscriptionBillingAttemptConnection
    /** The end date of the billing cycle. */
    cycleEndAt: Scalars['DateTime']
    /** The index of the billing cycle. */
    cycleIndex: Scalars['Int']
    /** The start date of the billing cycle. */
    cycleStartAt: Scalars['DateTime']
    /** Whether this billing cycle was edited. */
    edited: Scalars['Boolean']
    /** The active edited contract for the billing cycle. */
    editedContract?: SubscriptionBillingCycleEditedContract
    /** Whether this billing cycle was skipped. */
    skipped: Scalars['Boolean']
    /** The subscription contract that the billing cycle belongs to. */
    sourceContract: SubscriptionContract
    /** The status of the billing cycle. */
    status: SubscriptionBillingCycleBillingCycleStatus
    __typename: 'SubscriptionBillingCycle'
}


/** The possible status values of a subscription billing cycle. */
export type SubscriptionBillingCycleBillingCycleStatus = 'BILLED' | 'UNBILLED'


/**
 * An auto-generated type for paginating through multiple SubscriptionBillingCycles.
 * 
 */
export interface SubscriptionBillingCycleConnection {
    /** A list of edges. */
    edges: SubscriptionBillingCycleEdge[]
    /** A list of the nodes contained in SubscriptionBillingCycleEdge. */
    nodes: SubscriptionBillingCycle[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SubscriptionBillingCycleConnection'
}


/** Return type for `subscriptionBillingCycleContractDraftCommit` mutation. */
export interface SubscriptionBillingCycleContractDraftCommitPayload {
    /** The committed Subscription Billing Cycle Edited Contract object. */
    contract?: SubscriptionBillingCycleEditedContract
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionBillingCycleContractDraftCommitPayload'
}


/** Return type for `subscriptionBillingCycleContractDraftConcatenate` mutation. */
export interface SubscriptionBillingCycleContractDraftConcatenatePayload {
    /** The Subscription Draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionBillingCycleContractDraftConcatenatePayload'
}


/** Return type for `subscriptionBillingCycleContractEdit` mutation. */
export interface SubscriptionBillingCycleContractEditPayload {
    /** The draft subscription contract object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionBillingCycleContractEditPayload'
}


/**
 * An auto-generated type which holds one SubscriptionBillingCycle and a cursor during pagination.
 * 
 */
export interface SubscriptionBillingCycleEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SubscriptionBillingCycleEdge. */
    node: SubscriptionBillingCycle
    __typename: 'SubscriptionBillingCycleEdge'
}


/** Return type for `subscriptionBillingCycleEditDelete` mutation. */
export interface SubscriptionBillingCycleEditDeletePayload {
    /** The list of updated billing cycles. */
    billingCycles?: SubscriptionBillingCycle[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionBillingCycleUserError[]
    __typename: 'SubscriptionBillingCycleEditDeletePayload'
}


/** Represents a subscription contract with billing cycles. */
export interface SubscriptionBillingCycleEditedContract {
    /** The subscription app that the subscription contract is registered to. */
    app?: App
    /** The URL of the subscription contract page on the subscription app. */
    appAdminUrl?: Scalars['URL']
    /** The billing cycles that the edited contract belongs to. */
    billingCycles: SubscriptionBillingCycleConnection
    /** The date and time when the subscription contract was created. */
    createdAt: Scalars['DateTime']
    /** The currency that's used for the subscription contract. */
    currencyCode: CurrencyCode
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes: Attribute[]
    /** The customer to whom the subscription contract belongs. */
    customer?: Customer
    /** The customer payment method that's used for the subscription contract. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethod
    /** The delivery price for each billing of the subscription contract. */
    deliveryPrice: MoneyV2
    /** The list of subscription discounts associated with the subscription contract. */
    discounts: SubscriptionManualDiscountConnection
    /** The number of lines associated with the subscription contract. */
    lineCount: Scalars['Int']
    /** The list of subscription lines associated with the subscription contract. */
    lines: SubscriptionLineConnection
    /** The note field that will be applied to the generated orders. */
    note?: Scalars['String']
    /** A list of the subscription contract's orders. */
    orders: OrderConnection
    /** The date and time when the subscription contract was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'SubscriptionBillingCycleEditedContract'
}


/** Return type for `subscriptionBillingCycleEditsDelete` mutation. */
export interface SubscriptionBillingCycleEditsDeletePayload {
    /** The list of updated billing cycles. */
    billingCycles?: SubscriptionBillingCycle[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionBillingCycleUserError[]
    __typename: 'SubscriptionBillingCycleEditsDeletePayload'
}


/** Possible error codes that can be returned by `SubscriptionBillingCycleUserError`. */
export type SubscriptionBillingCycleErrorCode = 'INVALID' | 'CYCLE_NOT_FOUND' | 'NO_CYCLE_EDITS' | 'INVALID_CYCLE_INDEX' | 'INVALID_DATE' | 'EMPTY_BILLING_CYCLE_EDIT_SCHEDULE_INPUT' | 'BILLING_DATE_SET_ON_SKIPPED' | 'OUT_OF_BOUNDS' | 'UPCOMING_CYCLE_LIMIT_EXCEEDED' | 'CYCLE_INDEX_OUT_OF_RANGE' | 'CYCLE_START_DATE_OUT_OF_RANGE' | 'INCOMPLETE_BILLING_ATTEMPTS'


/** The input fields for possible reasons for editing the billing cycle's schedule. */
export type SubscriptionBillingCycleScheduleEditInputScheduleEditReason = 'BUYER_INITIATED' | 'MERCHANT_INITIATED' | 'DEV_INITIATED'


/** Return type for `subscriptionBillingCycleScheduleEdit` mutation. */
export interface SubscriptionBillingCycleScheduleEditPayload {
    /** The updated billing cycle. */
    billingCycle?: SubscriptionBillingCycle
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionBillingCycleUserError[]
    __typename: 'SubscriptionBillingCycleScheduleEditPayload'
}


/** The possible errors for a subscription billing cycle. */
export interface SubscriptionBillingCycleUserError {
    /** The error code. */
    code?: SubscriptionBillingCycleErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'SubscriptionBillingCycleUserError'
}


/** The set of valid sort keys for the SubscriptionBillingCycles query. */
export type SubscriptionBillingCyclesSortKeys = 'CYCLE_INDEX' | 'ID' | 'RELEVANCE'


/** Select subscription billing cycles to be targeted. */
export type SubscriptionBillingCyclesTargetSelection = 'ALL'


/** Represents a Subscription Billing Policy. */
export interface SubscriptionBillingPolicy {
    /** Specific anchor dates upon which the billing interval calculations should be made. */
    anchors: SellingPlanAnchor[]
    /** The kind of interval that is associated with this schedule (e.g. Monthly, Weekly, etc). */
    interval: SellingPlanInterval
    /** The number of billing intervals between invoices. */
    intervalCount: Scalars['Int']
    /** Maximum amount of cycles after which the subscription ends. */
    maxCycles?: Scalars['Int']
    /** Minimum amount of cycles required in the subscription. */
    minCycles?: Scalars['Int']
    __typename: 'SubscriptionBillingPolicy'
}


/** Represents a Subscription Contract. */
export interface SubscriptionContract {
    /** The subscription app that the subscription contract is registered to. */
    app?: App
    /** The URL of the subscription contract page on the subscription app. */
    appAdminUrl?: Scalars['URL']
    /** The list of billing attempts associated with the subscription contract. */
    billingAttempts: SubscriptionBillingAttemptConnection
    /** The billing policy associated with the subscription contract. */
    billingPolicy: SubscriptionBillingPolicy
    /** The date and time when the subscription contract was created. */
    createdAt: Scalars['DateTime']
    /** The currency that's used for the subscription contract. */
    currencyCode: CurrencyCode
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes: Attribute[]
    /** The customer to whom the subscription contract belongs. */
    customer?: Customer
    /** The customer payment method that's used for the subscription contract. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethod
    /** The delivery policy associated with the subscription contract. */
    deliveryPolicy: SubscriptionDeliveryPolicy
    /** The delivery price for each billing of the subscription contract. */
    deliveryPrice: MoneyV2
    /** The list of subscription discounts associated with the subscription contract. */
    discounts: SubscriptionManualDiscountConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The current status of the last payment. */
    lastPaymentStatus?: SubscriptionContractLastPaymentStatus
    /** The number of lines associated with the subscription contract. */
    lineCount: Scalars['Int']
    /** The list of subscription lines associated with the subscription contract. */
    lines: SubscriptionLineConnection
    /** The next billing date for the subscription contract. */
    nextBillingDate?: Scalars['DateTime']
    /** The note field that will be applied to the generated orders. */
    note?: Scalars['String']
    /** A list of the subscription contract's orders. */
    orders: OrderConnection
    /** The order from which this contract originated. */
    originOrder?: Order
    /** The revision id of the contract. */
    revisionId: Scalars['UnsignedInt64']
    /** The current status of the subscription contract. */
    status: SubscriptionContractSubscriptionStatus
    /** The date and time when the subscription contract was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'SubscriptionContract'
}


/** Return type for `subscriptionContractAtomicCreate` mutation. */
export interface SubscriptionContractAtomicCreatePayload {
    /** The new Subscription Contract object. */
    contract?: SubscriptionContract
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionContractAtomicCreatePayload'
}


/** Represents subscription contract common fields. */
export type SubscriptionContractBase = (SubscriptionBillingCycleEditedContract | SubscriptionContract) & { __isUnion?: true }


/**
 * An auto-generated type for paginating through multiple SubscriptionContracts.
 * 
 */
export interface SubscriptionContractConnection {
    /** A list of edges. */
    edges: SubscriptionContractEdge[]
    /** A list of the nodes contained in SubscriptionContractEdge. */
    nodes: SubscriptionContract[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SubscriptionContractConnection'
}


/** Return type for `subscriptionContractCreate` mutation. */
export interface SubscriptionContractCreatePayload {
    /** The Subscription Contract object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionContractCreatePayload'
}


/**
 * An auto-generated type which holds one SubscriptionContract and a cursor during pagination.
 * 
 */
export interface SubscriptionContractEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SubscriptionContractEdge. */
    node: SubscriptionContract
    __typename: 'SubscriptionContractEdge'
}


/** Possible error codes that can be returned by `SubscriptionContractUserError`. */
export type SubscriptionContractErrorCode = 'INVALID'


/** The possible status values of the last payment on a subscription contract. */
export type SubscriptionContractLastPaymentStatus = 'SUCCEEDED' | 'FAILED'


/** Return type for `subscriptionContractProductChange` mutation. */
export interface SubscriptionContractProductChangePayload {
    /** The new Subscription Contract object. */
    contract?: SubscriptionContract
    /** The updated Subscription Line. */
    lineUpdated?: SubscriptionLine
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionContractProductChangePayload'
}


/** Return type for `subscriptionContractSetNextBillingDate` mutation. */
export interface SubscriptionContractSetNextBillingDatePayload {
    /** The updated Subscription Contract object. */
    contract?: SubscriptionContract
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionContractUserError[]
    __typename: 'SubscriptionContractSetNextBillingDatePayload'
}


/** The possible status values of a subscription. */
export type SubscriptionContractSubscriptionStatus = 'ACTIVE' | 'PAUSED' | 'CANCELLED' | 'EXPIRED' | 'FAILED' | 'STALE'


/** Return type for `subscriptionContractUpdate` mutation. */
export interface SubscriptionContractUpdatePayload {
    /** The Subscription Contract object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionContractUpdatePayload'
}


/** Represents a Subscription Contract error. */
export interface SubscriptionContractUserError {
    /** The error code. */
    code?: SubscriptionContractErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'SubscriptionContractUserError'
}


/** Represents a Subscription Line Pricing Cycle Adjustment. */
export interface SubscriptionCyclePriceAdjustment {
    /** Price adjustment type. */
    adjustmentType: SellingPlanPricingPolicyAdjustmentType
    /** Price adjustment value. */
    adjustmentValue: SellingPlanPricingPolicyAdjustmentValue
    /** The number of cycles required before this pricing policy applies. */
    afterCycle: Scalars['Int']
    /** The computed price after the adjustments applied. */
    computedPrice: MoneyV2
    __typename: 'SubscriptionCyclePriceAdjustment'
}


/** Describes the delivery method to use to get the physical goods to the customer. */
export type SubscriptionDeliveryMethod = (SubscriptionDeliveryMethodLocalDelivery | SubscriptionDeliveryMethodPickup | SubscriptionDeliveryMethodShipping) & { __isUnion?: true }


/** A local delivery method, which includes a mailing address and a local delivery option. */
export interface SubscriptionDeliveryMethodLocalDelivery {
    /** The address to deliver to. */
    address: SubscriptionMailingAddress
    /** The details of the local delivery method to use. */
    localDeliveryOption: SubscriptionDeliveryMethodLocalDeliveryOption
    __typename: 'SubscriptionDeliveryMethodLocalDelivery'
}


/** The selected delivery option on a subscription contract. */
export interface SubscriptionDeliveryMethodLocalDeliveryOption {
    /** A custom reference to the delivery method for use with automations. */
    code?: Scalars['String']
    /** The details displayed to the customer to describe the local delivery option. */
    description?: Scalars['String']
    /** The delivery instructions that the customer can provide to the merchant. */
    instructions?: Scalars['String']
    /**
     * The phone number that the customer provided to the merchant.
     * Formatted using E.164 standard. For example, `+16135551111`.
     * 
     */
    phone: Scalars['String']
    /** The presentment title of the local delivery option. */
    presentmentTitle?: Scalars['String']
    /** The title of the local delivery option. */
    title?: Scalars['String']
    __typename: 'SubscriptionDeliveryMethodLocalDeliveryOption'
}


/** A delivery method with a pickup option. */
export interface SubscriptionDeliveryMethodPickup {
    /** The details of the pickup delivery method to use. */
    pickupOption: SubscriptionDeliveryMethodPickupOption
    __typename: 'SubscriptionDeliveryMethodPickup'
}


/** Represents the selected pickup option on a subscription contract. */
export interface SubscriptionDeliveryMethodPickupOption {
    /** A custom reference to the delivery method for use with automations. */
    code?: Scalars['String']
    /** The details displayed to the customer to describe the pickup option. */
    description?: Scalars['String']
    /** The location where the customer will pickup the merchandise. */
    location: Location
    /** The presentment title of the pickup option. */
    presentmentTitle?: Scalars['String']
    /** The title of the pickup option. */
    title?: Scalars['String']
    __typename: 'SubscriptionDeliveryMethodPickupOption'
}


/** Represents a shipping delivery method: a mailing address and a shipping option. */
export interface SubscriptionDeliveryMethodShipping {
    /** The address to ship to. */
    address: SubscriptionMailingAddress
    /** The details of the shipping method to use. */
    shippingOption: SubscriptionDeliveryMethodShippingOption
    __typename: 'SubscriptionDeliveryMethodShipping'
}


/** Represents the selected shipping option on a subscription contract. */
export interface SubscriptionDeliveryMethodShippingOption {
    /**
     * @deprecated This field has never been implemented.
     * The carrier service that is providing this shipping option.
     * This field isn't currently supported and returns null.
     * 
     */
    carrierService?: DeliveryCarrierService
    /** The code of the shipping option. */
    code?: Scalars['String']
    /** The description of the shipping option. */
    description?: Scalars['String']
    /** The presentment title of the shipping option. */
    presentmentTitle?: Scalars['String']
    /** The title of the shipping option. */
    title?: Scalars['String']
    __typename: 'SubscriptionDeliveryMethodShippingOption'
}


/** The delivery option for a subscription contract. */
export type SubscriptionDeliveryOption = (SubscriptionLocalDeliveryOption | SubscriptionPickupOption | SubscriptionShippingOption) & { __isUnion?: true }


/** The result of the query to fetch delivery options for the subscription contract. */
export type SubscriptionDeliveryOptionResult = (SubscriptionDeliveryOptionResultFailure | SubscriptionDeliveryOptionResultSuccess) & { __isUnion?: true }


/** A failure to find the available delivery options for a subscription contract. */
export interface SubscriptionDeliveryOptionResultFailure {
    /** The reason for the failure. */
    message?: Scalars['String']
    __typename: 'SubscriptionDeliveryOptionResultFailure'
}


/** The delivery option for a subscription contract. */
export interface SubscriptionDeliveryOptionResultSuccess {
    /** The available delivery options. */
    deliveryOptions: SubscriptionDeliveryOption[]
    __typename: 'SubscriptionDeliveryOptionResultSuccess'
}


/** Represents a Subscription Delivery Policy. */
export interface SubscriptionDeliveryPolicy {
    /** The specific anchor dates upon which the delivery interval calculations should be made. */
    anchors: SellingPlanAnchor[]
    /** The kind of interval that is associated with this schedule (e.g. Monthly, Weekly, etc). */
    interval: SellingPlanInterval
    /** The number of delivery intervals between deliveries. */
    intervalCount: Scalars['Int']
    __typename: 'SubscriptionDeliveryPolicy'
}


/** Subscription draft discount types. */
export type SubscriptionDiscount = (SubscriptionAppliedCodeDiscount | SubscriptionManualDiscount) & { __isUnion?: true }


/** Represents what a particular discount reduces from a line price. */
export interface SubscriptionDiscountAllocation {
    /** Allocation amount. */
    amount: MoneyV2
    /** Discount that created the allocation. */
    discount: SubscriptionDiscount
    __typename: 'SubscriptionDiscountAllocation'
}


/**
 * An auto-generated type for paginating through multiple SubscriptionDiscounts.
 * 
 */
export interface SubscriptionDiscountConnection {
    /** A list of edges. */
    edges: SubscriptionDiscountEdge[]
    /** A list of the nodes contained in SubscriptionDiscountEdge. */
    nodes: SubscriptionDiscount[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SubscriptionDiscountConnection'
}


/**
 * An auto-generated type which holds one SubscriptionDiscount and a cursor during pagination.
 * 
 */
export interface SubscriptionDiscountEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SubscriptionDiscountEdge. */
    node: SubscriptionDiscount
    __typename: 'SubscriptionDiscountEdge'
}


/** Represents the subscription lines the discount applies on. */
export interface SubscriptionDiscountEntitledLines {
    /** Specify whether the subscription discount will apply on all subscription lines. */
    all: Scalars['Boolean']
    /** The list of subscription lines associated with the subscription discount. */
    lines: SubscriptionLineConnection
    __typename: 'SubscriptionDiscountEntitledLines'
}


/** The value of the discount and how it will be applied. */
export interface SubscriptionDiscountFixedAmountValue {
    /** The fixed amount value of the discount. */
    amount: MoneyV2
    /** Whether the amount is applied per item. */
    appliesOnEachItem: Scalars['Boolean']
    __typename: 'SubscriptionDiscountFixedAmountValue'
}


/** The percentage value of the discount. */
export interface SubscriptionDiscountPercentageValue {
    /** The percentage value of the discount. */
    percentage: Scalars['Int']
    __typename: 'SubscriptionDiscountPercentageValue'
}


/** The reason a discount on a subscription draft was rejected. */
export type SubscriptionDiscountRejectionReason = 'NOT_FOUND' | 'NO_ENTITLED_LINE_ITEMS' | 'QUANTITY_NOT_IN_RANGE' | 'PURCHASE_NOT_IN_RANGE' | 'CUSTOMER_NOT_ELIGIBLE' | 'USAGE_LIMIT_REACHED' | 'CUSTOMER_USAGE_LIMIT_REACHED' | 'CURRENTLY_INACTIVE' | 'NO_ENTITLED_SHIPPING_LINES' | 'INCOMPATIBLE_PURCHASE_TYPE' | 'INTERNAL_ERROR'


/** The value of the discount and how it will be applied. */
export type SubscriptionDiscountValue = (SubscriptionDiscountFixedAmountValue | SubscriptionDiscountPercentageValue) & { __isUnion?: true }


/** Represents a Subscription Draft. */
export interface SubscriptionDraft {
    /** The billing cycle that the subscription contract will be associated with. */
    billingCycle?: SubscriptionBillingCycle
    /** The billing policy for the subscription contract. */
    billingPolicy: SubscriptionBillingPolicy
    /** The billing cycles of the contracts that will be concatenated to the subscription contract. */
    concatenatedBillingCycles: SubscriptionBillingCycleConnection
    /** The currency used for the subscription contract. */
    currencyCode: CurrencyCode
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes: Attribute[]
    /** The customer to whom the subscription contract belongs. */
    customer: Customer
    /** The customer payment method used for the subscription contract. */
    customerPaymentMethod?: CustomerPaymentMethod
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethod
    /**
     * The available delivery options for a given delivery address. Returns `null` for pending requests.
     * 
     */
    deliveryOptions?: SubscriptionDeliveryOptionResult
    /** The delivery policy for the subscription contract. */
    deliveryPolicy: SubscriptionDeliveryPolicy
    /** The delivery price for each billing the subscription contract. */
    deliveryPrice?: MoneyV2
    /** The list of subscription discounts which will be associated with the subscription contract. */
    discounts: SubscriptionDiscountConnection
    /** The list of subscription discounts to be added to the subscription contract. */
    discountsAdded: SubscriptionDiscountConnection
    /** The list of subscription discounts to be removed from the subscription contract. */
    discountsRemoved: SubscriptionDiscountConnection
    /** The list of subscription discounts to be updated on the subscription contract. */
    discountsUpdated: SubscriptionDiscountConnection
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The list of subscription lines which will be associated with the subscription contract. */
    lines: SubscriptionLineConnection
    /** The list of subscription lines to be added to the subscription contract. */
    linesAdded: SubscriptionLineConnection
    /** The list of subscription lines to be removed from the subscription contract. */
    linesRemoved: SubscriptionLineConnection
    /** The next billing date for the subscription contract. */
    nextBillingDate?: Scalars['DateTime']
    /** The note field that will be applied to the generated orders. */
    note?: Scalars['String']
    /** The original subscription contract. */
    originalContract?: SubscriptionContract
    /**
     * @deprecated Use `deliveryOptions` instead.
     * Available Shipping Options for a given delivery address. Returns NULL for pending requests.
     * 
     */
    shippingOptions?: SubscriptionShippingOptionResult
    /** The current status of the subscription contract. */
    status?: SubscriptionContractSubscriptionStatus
    __typename: 'SubscriptionDraft'
}


/** Return type for `subscriptionDraftCommit` mutation. */
export interface SubscriptionDraftCommitPayload {
    /** The updated Subscription Contract object. */
    contract?: SubscriptionContract
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftCommitPayload'
}


/** Return type for `subscriptionDraftDiscountAdd` mutation. */
export interface SubscriptionDraftDiscountAddPayload {
    /** The added Subscription Discount. */
    discountAdded?: SubscriptionManualDiscount
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftDiscountAddPayload'
}


/** Return type for `subscriptionDraftDiscountCodeApply` mutation. */
export interface SubscriptionDraftDiscountCodeApplyPayload {
    /** The added subscription discount. */
    appliedDiscount?: SubscriptionAppliedCodeDiscount
    /** The subscription contract draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftDiscountCodeApplyPayload'
}


/** Return type for `subscriptionDraftDiscountRemove` mutation. */
export interface SubscriptionDraftDiscountRemovePayload {
    /** The removed subscription draft discount. */
    discountRemoved?: SubscriptionDiscount
    /** The subscription contract draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftDiscountRemovePayload'
}


/** Return type for `subscriptionDraftDiscountUpdate` mutation. */
export interface SubscriptionDraftDiscountUpdatePayload {
    /** The updated Subscription Discount. */
    discountUpdated?: SubscriptionManualDiscount
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftDiscountUpdatePayload'
}


/** Possible error codes that can be returned by `SubscriptionDraftUserError`. */
export type SubscriptionDraftErrorCode = 'ALREADY_REMOVED' | 'PRESENCE' | 'COMMITTED' | 'NOT_IN_RANGE' | 'NOT_AN_INTEGER' | 'SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES' | 'DELIVERY_MUST_BE_MULTIPLE_OF_BILLING' | 'INVALID_BILLING_DATE' | 'INVALID_NOTE_LENGTH' | 'INVALID_LINES' | 'NO_ENTITLED_LINES' | 'CUSTOMER_DOES_NOT_EXIST' | 'CUSTOMER_MISMATCH' | 'DELIVERY_METHOD_REQUIRED' | 'MISSING_LOCAL_DELIVERY_OPTIONS' | 'CYCLE_DISCOUNTS_UNIQUE_AFTER_CYCLE' | 'INVALID_ADJUSTMENT_TYPE' | 'INVALID_ADJUSTMENT_VALUE' | 'STALE_CONTRACT' | 'CURRENCY_NOT_ENABLED' | 'HAS_FUTURE_EDITS' | 'BILLING_CYCLE_PRESENT' | 'BILLING_CYCLE_ABSENT' | 'BILLING_CYCLE_CONTRACT_DRAFT_DELIVERY_POLICY_INVALID' | 'BILLING_CYCLE_CONTRACT_DRAFT_BILLING_POLICY_INVALID' | 'CONCATENATION_BILLING_CYCLE_CONTRACT_DRAFT_REQUIRED' | 'DUPLICATE_CONCATENATED_CONTRACTS' | 'UPCOMING_CYCLE_LIMIT_EXCEEDED' | 'CYCLE_INDEX_OUT_OF_RANGE' | 'CYCLE_START_DATE_OUT_OF_RANGE' | 'CYCLE_SELECTOR_VALIDATE_ONE_OF' | 'EXCEEDED_MAX_CONCATENATED_CONTRACTS' | 'INVALID' | 'BLANK' | 'GREATER_THAN' | 'GREATER_THAN_OR_EQUAL_TO' | 'LESS_THAN' | 'LESS_THAN_OR_EQUAL_TO' | 'TOO_LONG' | 'TOO_SHORT'


/** Return type for `subscriptionDraftFreeShippingDiscountAdd` mutation. */
export interface SubscriptionDraftFreeShippingDiscountAddPayload {
    /** The added subscription free shipping discount. */
    discountAdded?: SubscriptionManualDiscount
    /** The subscription contract draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftFreeShippingDiscountAddPayload'
}


/** Return type for `subscriptionDraftFreeShippingDiscountUpdate` mutation. */
export interface SubscriptionDraftFreeShippingDiscountUpdatePayload {
    /** The updated Subscription Discount. */
    discountUpdated?: SubscriptionManualDiscount
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftFreeShippingDiscountUpdatePayload'
}


/** Return type for `subscriptionDraftLineAdd` mutation. */
export interface SubscriptionDraftLineAddPayload {
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraft
    /** The added Subscription Line. */
    lineAdded?: SubscriptionLine
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftLineAddPayload'
}


/** Return type for `subscriptionDraftLineRemove` mutation. */
export interface SubscriptionDraftLineRemovePayload {
    /** The list of updated subscription discounts impacted by the removed line. */
    discountsUpdated?: SubscriptionManualDiscount[]
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraft
    /** The removed Subscription Line. */
    lineRemoved?: SubscriptionLine
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftLineRemovePayload'
}


/** Return type for `subscriptionDraftLineUpdate` mutation. */
export interface SubscriptionDraftLineUpdatePayload {
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraft
    /** The updated Subscription Line. */
    lineUpdated?: SubscriptionLine
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftLineUpdatePayload'
}


/** Return type for `subscriptionDraftUpdate` mutation. */
export interface SubscriptionDraftUpdatePayload {
    /** The Subscription Draft object. */
    draft?: SubscriptionDraft
    /** The list of errors that occurred from executing the mutation. */
    userErrors: SubscriptionDraftUserError[]
    __typename: 'SubscriptionDraftUpdatePayload'
}


/** Represents a Subscription Draft error. */
export interface SubscriptionDraftUserError {
    /** The error code. */
    code?: SubscriptionDraftErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'SubscriptionDraftUserError'
}


/** Represents a Subscription Line. */
export interface SubscriptionLine {
    /** The price per unit for the subscription line in the contract's currency. */
    currentPrice: MoneyV2
    /** List of custom attributes associated to the line item. */
    customAttributes: Attribute[]
    /** Discount allocations. */
    discountAllocations: SubscriptionDiscountAllocation[]
    /** The unique ID. */
    id: Scalars['ID']
    /** Total line price including all discounts. */
    lineDiscountedPrice: MoneyV2
    /** Describe the price changes of the line over time. */
    pricingPolicy?: SubscriptionPricingPolicy
    /** The product ID associated with the subscription line. */
    productId?: Scalars['ID']
    /** The quantity of the unit selected for the subscription line. */
    quantity: Scalars['Int']
    /** Whether physical shipping is required for the variant. */
    requiresShipping: Scalars['Boolean']
    /**
     * The selling plan ID associated to the line.
     * 
     * Indicates which selling plan was used to create this
     * contract line initially. The selling plan ID is also used to
     * find the associated delivery profile.
     * 
     * The subscription contract, subscription line, or selling plan might have
     * changed. As a result, the selling plan's attributes might not
     * match the information on the contract.
     * 
     */
    sellingPlanId?: Scalars['ID']
    /**
     * The selling plan name associated to the line. This name describes
     * the order line items created from this subscription line
     * for both merchants and customers.
     * 
     * The value can be different from the selling plan's name, because both
     * the selling plan's name and the subscription line's selling_plan_name
     * attribute can be updated independently.
     * 
     */
    sellingPlanName?: Scalars['String']
    /** Variant SKU number of the item associated with the subscription line. */
    sku?: Scalars['String']
    /** Whether the variant is taxable. */
    taxable: Scalars['Boolean']
    /** Product title of the item associated with the subscription line. */
    title: Scalars['String']
    /** The product variant ID associated with the subscription line. */
    variantId?: Scalars['ID']
    /** The image associated with the line item's variant or product. */
    variantImage?: Image
    /** Product variant title of the item associated with the subscription line. */
    variantTitle?: Scalars['String']
    __typename: 'SubscriptionLine'
}


/**
 * An auto-generated type for paginating through multiple SubscriptionLines.
 * 
 */
export interface SubscriptionLineConnection {
    /** A list of edges. */
    edges: SubscriptionLineEdge[]
    /** A list of the nodes contained in SubscriptionLineEdge. */
    nodes: SubscriptionLine[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SubscriptionLineConnection'
}


/**
 * An auto-generated type which holds one SubscriptionLine and a cursor during pagination.
 * 
 */
export interface SubscriptionLineEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SubscriptionLineEdge. */
    node: SubscriptionLine
    __typename: 'SubscriptionLineEdge'
}


/** A local delivery option for a subscription contract. */
export interface SubscriptionLocalDeliveryOption {
    /** The code of the local delivery option. */
    code: Scalars['String']
    /** The description of the local delivery option. */
    description?: Scalars['String']
    /** Whether a phone number is required for the local delivery option. */
    phoneRequired: Scalars['Boolean']
    /** The presentment title of the local delivery option. */
    presentmentTitle?: Scalars['String']
    /** The price of the local delivery option. */
    price?: MoneyV2
    /** The title of the local delivery option. */
    title: Scalars['String']
    __typename: 'SubscriptionLocalDeliveryOption'
}


/** Represents a Mailing Address on a Subscription. */
export interface SubscriptionMailingAddress {
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: Scalars['String']
    /** The second line of the address. Typically the number of the apartment, suite, or unit. */
    address2?: Scalars['String']
    /** The name of the city, district, village, or town. */
    city?: Scalars['String']
    /** The name of the customer's company or organization. */
    company?: Scalars['String']
    /** The name of the country. */
    country?: Scalars['String']
    /**
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCode?: CountryCode
    /** The first name of the customer. */
    firstName?: Scalars['String']
    /** The last name of the customer. */
    lastName?: Scalars['String']
    /** The full name of the customer, based on firstName and lastName. */
    name?: Scalars['String']
    /** A unique phone number for the customer. Formatted using E.164 standard. For example, _+16135551111_. */
    phone?: Scalars['String']
    /** The region of the address, such as the province, state, or district. */
    province?: Scalars['String']
    /**
     * The two-letter code for the region.
     * 
     * For example, ON.
     * 
     */
    provinceCode?: Scalars['String']
    /** The zip or postal code of the address. */
    zip?: Scalars['String']
    __typename: 'SubscriptionMailingAddress'
}


/** Custom subscription discount. */
export interface SubscriptionManualDiscount {
    /** Entitled line items used to apply the subscription discount on. */
    entitledLines: SubscriptionDiscountEntitledLines
    /** The unique ID. */
    id: Scalars['ID']
    /** The maximum number of times the subscription discount will be applied on orders. */
    recurringCycleLimit?: Scalars['Int']
    /** The reason that the discount on the subscription draft is rejected. */
    rejectionReason?: SubscriptionDiscountRejectionReason
    /** Type of line the discount applies on. */
    targetType: DiscountTargetType
    /** The title associated with the subscription discount. */
    title?: Scalars['String']
    /** The type of the subscription discount. */
    type: DiscountType
    /** The number of times the discount was applied. */
    usageCount: Scalars['Int']
    /** The value of the subscription discount. */
    value: SubscriptionDiscountValue
    __typename: 'SubscriptionManualDiscount'
}


/**
 * An auto-generated type for paginating through multiple SubscriptionManualDiscounts.
 * 
 */
export interface SubscriptionManualDiscountConnection {
    /** A list of edges. */
    edges: SubscriptionManualDiscountEdge[]
    /** A list of the nodes contained in SubscriptionManualDiscountEdge. */
    nodes: SubscriptionManualDiscount[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'SubscriptionManualDiscountConnection'
}


/**
 * An auto-generated type which holds one SubscriptionManualDiscount and a cursor during pagination.
 * 
 */
export interface SubscriptionManualDiscountEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of SubscriptionManualDiscountEdge. */
    node: SubscriptionManualDiscount
    __typename: 'SubscriptionManualDiscountEdge'
}


/** A pickup option to deliver a subscription contract. */
export interface SubscriptionPickupOption {
    /** The code of the pickup option. */
    code: Scalars['String']
    /** The description of the pickup option. */
    description?: Scalars['String']
    /** The pickup location. */
    location: Location
    /** Whether a phone number is required for the pickup option. */
    phoneRequired: Scalars['Boolean']
    /** The estimated amount of time it takes for the pickup to be ready. For example, "Usually ready in 24 hours".). */
    pickupTime: Scalars['String']
    /** The presentment title of the pickup option. */
    presentmentTitle?: Scalars['String']
    /** The price of the pickup option. */
    price?: MoneyV2
    /** The title of the pickup option. */
    title: Scalars['String']
    __typename: 'SubscriptionPickupOption'
}


/** Represents a Subscription Line Pricing Policy. */
export interface SubscriptionPricingPolicy {
    /** The base price per unit for the subscription line in the contract's currency. */
    basePrice: MoneyV2
    /** The adjustments per cycle for the subscription line. */
    cycleDiscounts: SubscriptionCyclePriceAdjustment[]
    __typename: 'SubscriptionPricingPolicy'
}


/** A shipping option to deliver a subscription contract. */
export interface SubscriptionShippingOption {
    /**
     * @deprecated This field has never been implemented.
     * The carrier service that is providing this shipping option.
     * This field isn't currently supported and returns null.
     * 
     */
    carrierService?: DeliveryCarrierService
    /** The code of the shipping option. */
    code: Scalars['String']
    /** The description of the shipping option. */
    description?: Scalars['String']
    /** If a phone number is required for the shipping option. */
    phoneRequired?: Scalars['Boolean']
    /** The presentment title of the shipping option. */
    presentmentTitle?: Scalars['String']
    /** The price of the shipping option. */
    price?: MoneyV2
    /** The title of the shipping option. */
    title: Scalars['String']
    __typename: 'SubscriptionShippingOption'
}


/** The result of the query to fetch shipping options for the subscription contract. */
export type SubscriptionShippingOptionResult = (SubscriptionShippingOptionResultFailure | SubscriptionShippingOptionResultSuccess) & { __isUnion?: true }


/** Failure determining available shipping options for delivery of a subscription contract. */
export interface SubscriptionShippingOptionResultFailure {
    /** Failure reason. */
    message?: Scalars['String']
    __typename: 'SubscriptionShippingOptionResultFailure'
}


/** A shipping option for delivery of a subscription contract. */
export interface SubscriptionShippingOptionResultSuccess {
    /** Available shipping options. */
    shippingOptions: SubscriptionShippingOption[]
    __typename: 'SubscriptionShippingOptionResultSuccess'
}


/**
 * A suggested transaction. Suggested transaction are usually used in the context of refunds
 * and exchanges.
 * 
 */
export interface SuggestedOrderTransaction {
    /** The masked account number associated with the payment method. */
    accountNumber?: Scalars['String']
    /**
     * @deprecated Use `amountSet` instead.
     * The amount of the transaction.
     */
    amount: Scalars['Money']
    /** The amount and currency of the suggested order transaction in shop and presentment currencies. */
    amountSet: MoneyBag
    /** The human-readable payment gateway name suggested to process the transaction. */
    formattedGateway?: Scalars['String']
    /** The suggested payment gateway used to process the transaction. */
    gateway?: Scalars['String']
    /** Specifies the kind of the suggested order transaction. */
    kind: SuggestedOrderTransactionKind
    /**
     * @deprecated Use `maximumRefundableSet` instead.
     * Specifies the available amount to refund on the gateway. Only available within SuggestedRefund.
     */
    maximumRefundable?: Scalars['Money']
    /** Specifies the available amount to refund on the gateway in shop and presentment currencies. Only available within SuggestedRefund. */
    maximumRefundableSet?: MoneyBag
    /** The associated parent transaction, for example the authorization of a capture. */
    parentTransaction?: OrderTransaction
    __typename: 'SuggestedOrderTransaction'
}


/** Specifies the kind of the suggested order transaction. */
export type SuggestedOrderTransactionKind = 'SUGGESTED_REFUND'


/** Represents a refund suggested by Shopify based on the items being reimbursed. You can then use the suggested refund object to generate an actual refund. */
export interface SuggestedRefund {
    /**
     * @deprecated Use `amountSet` instead.
     * The total monetary value to be refunded.
     */
    amount: Scalars['Money']
    /** The total monetary value to be refunded in shop and presentment currencies. */
    amountSet: MoneyBag
    /** The sum of all the discounted prices of the line items being refunded. */
    discountedSubtotalSet: MoneyBag
    /**
     * @deprecated Use `maximumRefundableSet` instead.
     * The total monetary value available to refund.
     */
    maximumRefundable: Scalars['Money']
    /** The total monetary value available to refund in shop and presentment currencies. */
    maximumRefundableSet: MoneyBag
    /** A list of duties to be refunded from the order. */
    refundDuties: RefundDuty[]
    /** A list of line items to be refunded, along with restock instructions. */
    refundLineItems: RefundLineItem[]
    /** The shipping costs to be refunded from the order. */
    shipping: ShippingRefund
    /**
     * @deprecated Use `subtotalSet` instead.
     * The sum of all the prices of the line items being refunded.
     */
    subtotal: Scalars['Money']
    /** The sum of all the prices of the line items being refunded in shop and presentment currencies. */
    subtotalSet: MoneyBag
    /** A list of suggested order transactions. */
    suggestedTransactions: SuggestedOrderTransaction[]
    /** The total cart discount amount that was applied to all line items in this refund. */
    totalCartDiscountAmountSet: MoneyBag
    /** The sum of all the duties being refunded from the order in shop and presentment currencies. The value must be positive. */
    totalDutiesSet: MoneyBag
    /** The sum of the taxes being refunded from the order in shop and presentment currencies. The value must be positive. */
    totalTaxSet: MoneyBag
    /**
     * @deprecated Use `totalTaxSet` instead.
     * The sum of the taxes being refunded from the order. The value must be positive.
     */
    totalTaxes: Scalars['Money']
    __typename: 'SuggestedRefund'
}


/** Represents a return refund suggested by Shopify based on the items being reimbursed. You can then use the suggested refund object to generate an actual refund for the return. */
export interface SuggestedReturnRefund {
    /** The total monetary value to be refunded in shop and presentment currencies. */
    amount: MoneyBag
    /** The sum of all the discounted prices of the line items being refunded. */
    discountedSubtotal: MoneyBag
    /** The total monetary value available to refund in shop and presentment currencies. */
    maximumRefundable: MoneyBag
    /** A list of duties to be refunded from the order. */
    refundDuties: RefundDuty[]
    /** The shipping costs to be refunded from the order. */
    shipping: ShippingRefund
    /** The sum of all the prices of the line items being refunded in shop and presentment currencies. */
    subtotal: MoneyBag
    /** A list of suggested order transactions. */
    suggestedTransactions: SuggestedOrderTransaction[]
    /** The total cart discount amount that was applied to all line items in this refund. */
    totalCartDiscountAmount: MoneyBag
    /** The sum of all the duties being refunded from the order in shop and presentment currencies. The value must be positive. */
    totalDuties: MoneyBag
    /** The sum of the taxes being refunded in shop and presentment currencies. The value must be positive. */
    totalTax: MoneyBag
    __typename: 'SuggestedReturnRefund'
}


/** The result in a tabular format with schema information and formatted and unformatted row data. */
export interface TableData {
    /** The data table columns. */
    columns: TableDataColumn[]
    /** The formatted data values. */
    rowData: Scalars['String'][][]
    /** The unformatted data values. */
    unformattedData: Scalars['JSON']
    __typename: 'TableData'
}


/** A nested array representation of the data. An index in an array represents a row number. */
export interface TableDataColumn {
    /** For comparison columns, indicates the column to compare to. */
    comparedTo: Scalars['String']
    /** The data type of the column value. */
    dataType: Scalars['String']
    /** The display name of the column in the data model. */
    displayName: Scalars['String']
    /** The name of the column in the data model. */
    name: Scalars['String']
    __typename: 'TableDataColumn'
}


/** The default table response structure for a ShopifyQL query. */
export interface TableResponse {
    /** A list of parse errors, if parsing fails. */
    parseErrors?: ParseError[]
    /** The result in a tabular format with schema and row data. */
    tableData?: TableData
    __typename: 'TableResponse'
}


/** Return type for `tagsAdd` mutation. */
export interface TagsAddPayload {
    /** The object that was updated. */
    node?: Node
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'TagsAddPayload'
}


/** Return type for `tagsRemove` mutation. */
export interface TagsRemovePayload {
    /** The object that was updated. */
    node?: Node
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'TagsRemovePayload'
}


/** Tax app configuration of a merchant. */
export interface TaxAppConfiguration {
    /** State of the tax app configuration. */
    state: TaxPartnerState
    __typename: 'TaxAppConfiguration'
}


/** Return type for `taxAppConfigure` mutation. */
export interface TaxAppConfigurePayload {
    /** The updated tax app configuration. */
    taxAppConfiguration?: TaxAppConfiguration
    /** The list of errors that occurred from executing the mutation. */
    userErrors: TaxAppConfigureUserError[]
    __typename: 'TaxAppConfigurePayload'
}


/** An error that occurs during the execution of `TaxAppConfigure`. */
export interface TaxAppConfigureUserError {
    /** The error code. */
    code?: TaxAppConfigureUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'TaxAppConfigureUserError'
}


/** Possible error codes that can be returned by `TaxAppConfigureUserError`. */
export type TaxAppConfigureUserErrorCode = 'TAX_PARTNER_NOT_FOUND' | 'TAX_PARTNER_STATE_UPDATE_FAILED' | 'TAX_PARTNER_ALREADY_ACTIVE'


/** Available customer tax exemptions. */
export type TaxExemption = 'CA_STATUS_CARD_EXEMPTION' | 'CA_BC_RESELLER_EXEMPTION' | 'CA_MB_RESELLER_EXEMPTION' | 'CA_SK_RESELLER_EXEMPTION' | 'CA_DIPLOMAT_EXEMPTION' | 'CA_BC_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_MB_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_NS_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_PE_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_SK_COMMERCIAL_FISHERY_EXEMPTION' | 'CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION' | 'CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION' | 'CA_BC_SUB_CONTRACTOR_EXEMPTION' | 'CA_SK_SUB_CONTRACTOR_EXEMPTION' | 'CA_BC_CONTRACTOR_EXEMPTION' | 'CA_SK_CONTRACTOR_EXEMPTION' | 'CA_ON_PURCHASE_EXEMPTION' | 'CA_MB_FARMER_EXEMPTION' | 'CA_NS_FARMER_EXEMPTION' | 'CA_SK_FARMER_EXEMPTION' | 'EU_REVERSE_CHARGE_EXEMPTION_RULE' | 'US_AL_RESELLER_EXEMPTION' | 'US_AK_RESELLER_EXEMPTION' | 'US_AZ_RESELLER_EXEMPTION' | 'US_AR_RESELLER_EXEMPTION' | 'US_CA_RESELLER_EXEMPTION' | 'US_CO_RESELLER_EXEMPTION' | 'US_CT_RESELLER_EXEMPTION' | 'US_DE_RESELLER_EXEMPTION' | 'US_FL_RESELLER_EXEMPTION' | 'US_GA_RESELLER_EXEMPTION' | 'US_HI_RESELLER_EXEMPTION' | 'US_ID_RESELLER_EXEMPTION' | 'US_IL_RESELLER_EXEMPTION' | 'US_IN_RESELLER_EXEMPTION' | 'US_IA_RESELLER_EXEMPTION' | 'US_KS_RESELLER_EXEMPTION' | 'US_KY_RESELLER_EXEMPTION' | 'US_LA_RESELLER_EXEMPTION' | 'US_ME_RESELLER_EXEMPTION' | 'US_MD_RESELLER_EXEMPTION' | 'US_MA_RESELLER_EXEMPTION' | 'US_MI_RESELLER_EXEMPTION' | 'US_MN_RESELLER_EXEMPTION' | 'US_MS_RESELLER_EXEMPTION' | 'US_MO_RESELLER_EXEMPTION' | 'US_MT_RESELLER_EXEMPTION' | 'US_NE_RESELLER_EXEMPTION' | 'US_NV_RESELLER_EXEMPTION' | 'US_NH_RESELLER_EXEMPTION' | 'US_NJ_RESELLER_EXEMPTION' | 'US_NM_RESELLER_EXEMPTION' | 'US_NY_RESELLER_EXEMPTION' | 'US_NC_RESELLER_EXEMPTION' | 'US_ND_RESELLER_EXEMPTION' | 'US_OH_RESELLER_EXEMPTION' | 'US_OK_RESELLER_EXEMPTION' | 'US_OR_RESELLER_EXEMPTION' | 'US_PA_RESELLER_EXEMPTION' | 'US_RI_RESELLER_EXEMPTION' | 'US_SC_RESELLER_EXEMPTION' | 'US_SD_RESELLER_EXEMPTION' | 'US_TN_RESELLER_EXEMPTION' | 'US_TX_RESELLER_EXEMPTION' | 'US_UT_RESELLER_EXEMPTION' | 'US_VT_RESELLER_EXEMPTION' | 'US_VA_RESELLER_EXEMPTION' | 'US_WA_RESELLER_EXEMPTION' | 'US_WV_RESELLER_EXEMPTION' | 'US_WI_RESELLER_EXEMPTION' | 'US_WY_RESELLER_EXEMPTION' | 'US_DC_RESELLER_EXEMPTION'


/** Represents a single tax applied to the associated line item. */
export interface TaxLine {
    /** Whether the channel that submitted the tax line is liable for remitting. A value of null indicates unknown liability for this tax line. */
    channelLiable?: Scalars['Boolean']
    /**
     * @deprecated Use `priceSet` instead.
     * The amount of tax, in shop currency, after discounts and before returns.
     */
    price: Scalars['Money']
    /** The amount of tax, in shop and presentment currencies, after discounts and before returns. */
    priceSet: MoneyBag
    /** The proportion of the line item price that the tax represents as a decimal. */
    rate?: Scalars['Float']
    /** The proportion of the line item price that the tax represents as a percentage. */
    ratePercentage?: Scalars['Float']
    /** The name of the tax. */
    title: Scalars['String']
    __typename: 'TaxLine'
}


/** State of the tax app configuration. */
export type TaxPartnerState = 'PENDING' | 'READY' | 'ACTIVE'


/**
 * A TenderTransaction represents a transaction with financial impact on a shop's balance sheet. A tender transaction always
 * represents actual money movement between a buyer and a shop. TenderTransactions can be used instead of OrderTransactions
 * for reconciling a shop's cash flow. A TenderTransaction is immutable once created.
 * 
 */
export interface TenderTransaction {
    /** The amount and currency of the tender transaction. */
    amount: MoneyV2
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Information about the payment method used for the transaction. */
    paymentMethod?: Scalars['String']
    /** Date and time when the transaction was processed. */
    processedAt?: Scalars['DateTime']
    /** The remote gateway reference associated with the tender transaction. */
    remoteReference?: Scalars['String']
    /** Whether the transaction is a test transaction. */
    test: Scalars['Boolean']
    /** Information about the payment instrument used for the transaction. */
    transactionDetails?: TenderTransactionDetails
    /** The staff member who performed the transaction. */
    user?: StaffMember
    __typename: 'TenderTransaction'
}


/**
 * An auto-generated type for paginating through multiple TenderTransactions.
 * 
 */
export interface TenderTransactionConnection {
    /** A list of edges. */
    edges: TenderTransactionEdge[]
    /** A list of the nodes contained in TenderTransactionEdge. */
    nodes: TenderTransaction[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'TenderTransactionConnection'
}


/** Information about the credit card used for this transaction. */
export interface TenderTransactionCreditCardDetails {
    /** The name of the company that issued the customer's credit card. Example: `Visa`. */
    creditCardCompany?: Scalars['String']
    /** The customer's credit card number, with all digits except the last 4 redacted. Example: `•••• •••• •••• 1234` */
    creditCardNumber?: Scalars['String']
    __typename: 'TenderTransactionCreditCardDetails'
}


/** Information about the payment instrument used for this transaction. */
export type TenderTransactionDetails = (TenderTransactionCreditCardDetails) & { __isUnion?: true }


/**
 * An auto-generated type which holds one TenderTransaction and a cursor during pagination.
 * 
 */
export interface TenderTransactionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of TenderTransactionEdge. */
    node: TenderTransaction
    __typename: 'TenderTransactionEdge'
}


/** A sale associated with a tip. */
export interface TipSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line item for the associated sale. */
    lineItem: LineItem
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'TipSale'
}


/** Transaction fee related to an order transaction. */
export interface TransactionFee {
    /** Amount of the fee. */
    amount: MoneyV2
    /** Flat rate charge for a transaction. */
    flatFee: MoneyV2
    /** Name of the credit card flat fee. */
    flatFeeName?: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** Percentage charge. */
    rate: Scalars['Decimal']
    /** Name of the credit card rate. */
    rateName?: Scalars['String']
    /** Tax amount charged on the fee. */
    taxAmount: MoneyV2
    /** Name of the type of fee. */
    type: Scalars['String']
    __typename: 'TransactionFee'
}


/** Translatable content of a resource's field. */
export interface TranslatableContent {
    /** Hash digest representation of the content value. */
    digest?: Scalars['String']
    /** The resource field that is being translated. */
    key: Scalars['String']
    /** Locale of the content. */
    locale: Scalars['String']
    /** Type of the translatable content. */
    type: LocalizableContentType
    /** Content value. */
    value?: Scalars['String']
    __typename: 'TranslatableContent'
}


/** A resource that has translatable fields. */
export interface TranslatableResource {
    /** GID of the resource. */
    resourceId: Scalars['ID']
    /** Translatable content. */
    translatableContent: TranslatableContent[]
    /** Translatable content translations. */
    translations: Translation[]
    __typename: 'TranslatableResource'
}


/**
 * An auto-generated type for paginating through multiple TranslatableResources.
 * 
 */
export interface TranslatableResourceConnection {
    /** A list of edges. */
    edges: TranslatableResourceEdge[]
    /** A list of the nodes contained in TranslatableResourceEdge. */
    nodes: TranslatableResource[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'TranslatableResourceConnection'
}


/**
 * An auto-generated type which holds one TranslatableResource and a cursor during pagination.
 * 
 */
export interface TranslatableResourceEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of TranslatableResourceEdge. */
    node: TranslatableResource
    __typename: 'TranslatableResourceEdge'
}


/** Specifies the type of resources that are translatable. */
export type TranslatableResourceType = 'COLLECTION' | 'DELIVERY_METHOD_DEFINITION' | 'EMAIL_TEMPLATE' | 'FILTER' | 'LINK' | 'METAFIELD' | 'METAOBJECT' | 'ONLINE_STORE_ARTICLE' | 'ONLINE_STORE_BLOG' | 'ONLINE_STORE_MENU' | 'ONLINE_STORE_PAGE' | 'ONLINE_STORE_THEME' | 'PACKING_SLIP_TEMPLATE' | 'PAYMENT_GATEWAY' | 'PRODUCT' | 'PRODUCT_OPTION' | 'PRODUCT_VARIANT' | 'SELLING_PLAN' | 'SELLING_PLAN_GROUP' | 'SHOP' | 'SHOP_POLICY'


/** Translation of a field of a resource. */
export interface Translation {
    /** On the resource that this translation belongs to, the reference to the value being translated. */
    key: Scalars['String']
    /** ISO code of the translation locale. */
    locale: Scalars['String']
    /** The market that the translation is specific to. Null value means the translation is available in all markets. */
    market?: Market
    /** Whether the original content has changed since this translation was updated. */
    outdated: Scalars['Boolean']
    /** The date and time when the translation was updated. */
    updatedAt?: Scalars['DateTime']
    /** Translation value. */
    value?: Scalars['String']
    __typename: 'Translation'
}


/** Possible error codes that can be returned by `TranslationUserError`. */
export type TranslationErrorCode = 'BLANK' | 'INVALID' | 'RESOURCE_NOT_FOUND' | 'RESOURCE_NOT_TRANSLATABLE' | 'TOO_MANY_KEYS_FOR_RESOURCE' | 'INVALID_KEY_FOR_MODEL' | 'FAILS_RESOURCE_VALIDATION' | 'INVALID_TRANSLATABLE_CONTENT' | 'INVALID_MARKET_LOCALIZABLE_CONTENT' | 'INVALID_LOCALE_FOR_SHOP' | 'INVALID_CODE' | 'INVALID_FORMAT' | 'MARKET_CUSTOM_CONTENT_NOT_ALLOWED' | 'MARKET_DOES_NOT_EXIST' | 'MARKET_LOCALE_CREATION_FAILED' | 'RESOURCE_NOT_MARKET_CUSTOMIZABLE' | 'INVALID_LOCALE_FOR_MARKET' | 'INVALID_VALUE_FOR_HANDLE_TRANSLATION'


/** Represents an error that happens during the execution of a translation mutation. */
export interface TranslationUserError {
    /** The error code. */
    code?: TranslationErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'TranslationUserError'
}


/** Return type for `translationsRegister` mutation. */
export interface TranslationsRegisterPayload {
    /** The translations that were created or updated. */
    translations?: Translation[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: TranslationUserError[]
    __typename: 'TranslationsRegisterPayload'
}


/** Return type for `translationsRemove` mutation. */
export interface TranslationsRemovePayload {
    /** The translations that were deleted. */
    translations?: Translation[]
    /** The list of errors that occurred from executing the mutation. */
    userErrors: TranslationUserError[]
    __typename: 'TranslationsRemovePayload'
}


/** Represents a typed custom attribute. */
export interface TypedAttribute {
    /** Key or name of the attribute. */
    key: Scalars['String']
    /** Value of the attribute. */
    value: Scalars['String']
    __typename: 'TypedAttribute'
}


/** Represents a set of UTM parameters. */
export interface UTMParameters {
    /** The name of a marketing campaign. */
    campaign?: Scalars['String']
    /** Identifies specific content in a marketing campaign. Used to differentiate between similar content or links in a marketing campaign to determine which is the most effective. */
    content?: Scalars['String']
    /** The medium of a marketing campaign, such as a banner or email newsletter. */
    medium?: Scalars['String']
    /** The source of traffic to the merchant's store, such as Google or an email newsletter. */
    source?: Scalars['String']
    /** Paid search terms used by a marketing campaign. */
    term?: Scalars['String']
    __typename: 'UTMParameters'
}


/** Systems of weights and measures. */
export type UnitSystem = 'IMPERIAL_SYSTEM' | 'METRIC_SYSTEM'


/** This is represents new sale types that have been added in future API versions. You may update to a more recent API version to receive additional details about this sale. */
export interface UnknownSale {
    /** The type of order action that the sale represents. */
    actionType: SaleActionType
    /** The unique ID for the sale. */
    id: Scalars['ID']
    /** The line type assocated with the sale. */
    lineType: SaleLineType
    /** The number of units either ordered or intended to be returned. */
    quantity?: Scalars['Int']
    /** All individual taxes associated with the sale. */
    taxes: SaleTax[]
    /** The total sale amount after taxes and discounts. */
    totalAmount: MoneyBag
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes: MoneyBag
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes: MoneyBag
    /** The total amount of taxes for the sale. */
    totalTaxAmount: MoneyBag
    __typename: 'UnknownSale'
}


/** The URL redirect for the online store. */
export interface UrlRedirect {
    /** The ID of the URL redirect. */
    id: Scalars['ID']
    /** The old path to be redirected from. When the user visits this path, they will be redirected to the target location. */
    path: Scalars['String']
    /** The target location where the user will be redirected to. */
    target: Scalars['String']
    __typename: 'UrlRedirect'
}


/** Return type for `urlRedirectBulkDeleteAll` mutation. */
export interface UrlRedirectBulkDeleteAllPayload {
    /** The asynchronous job removing the redirects. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'UrlRedirectBulkDeleteAllPayload'
}


/** Return type for `urlRedirectBulkDeleteByIds` mutation. */
export interface UrlRedirectBulkDeleteByIdsPayload {
    /** The asynchronous job removing the redirects. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectBulkDeleteByIdsUserError[]
    __typename: 'UrlRedirectBulkDeleteByIdsPayload'
}


/** An error that occurs during the execution of `UrlRedirectBulkDeleteByIds`. */
export interface UrlRedirectBulkDeleteByIdsUserError {
    /** The error code. */
    code?: UrlRedirectBulkDeleteByIdsUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'UrlRedirectBulkDeleteByIdsUserError'
}


/** Possible error codes that can be returned by `UrlRedirectBulkDeleteByIdsUserError`. */
export type UrlRedirectBulkDeleteByIdsUserErrorCode = 'IDS_EMPTY'


/** Return type for `urlRedirectBulkDeleteBySavedSearch` mutation. */
export interface UrlRedirectBulkDeleteBySavedSearchPayload {
    /** The asynchronous job removing the redirects. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectBulkDeleteBySavedSearchUserError[]
    __typename: 'UrlRedirectBulkDeleteBySavedSearchPayload'
}


/** An error that occurs during the execution of `UrlRedirectBulkDeleteBySavedSearch`. */
export interface UrlRedirectBulkDeleteBySavedSearchUserError {
    /** The error code. */
    code?: UrlRedirectBulkDeleteBySavedSearchUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'UrlRedirectBulkDeleteBySavedSearchUserError'
}


/** Possible error codes that can be returned by `UrlRedirectBulkDeleteBySavedSearchUserError`. */
export type UrlRedirectBulkDeleteBySavedSearchUserErrorCode = 'SAVED_SEARCH_NOT_FOUND' | 'INVALID_SAVED_SEARCH_QUERY'


/** Return type for `urlRedirectBulkDeleteBySearch` mutation. */
export interface UrlRedirectBulkDeleteBySearchPayload {
    /** The asynchronous job removing the redirects. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectBulkDeleteBySearchUserError[]
    __typename: 'UrlRedirectBulkDeleteBySearchPayload'
}


/** An error that occurs during the execution of `UrlRedirectBulkDeleteBySearch`. */
export interface UrlRedirectBulkDeleteBySearchUserError {
    /** The error code. */
    code?: UrlRedirectBulkDeleteBySearchUserErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'UrlRedirectBulkDeleteBySearchUserError'
}


/** Possible error codes that can be returned by `UrlRedirectBulkDeleteBySearchUserError`. */
export type UrlRedirectBulkDeleteBySearchUserErrorCode = 'INVALID_SEARCH_ARGUMENT'


/**
 * An auto-generated type for paginating through multiple UrlRedirects.
 * 
 */
export interface UrlRedirectConnection {
    /** A list of edges. */
    edges: UrlRedirectEdge[]
    /** A list of the nodes contained in UrlRedirectEdge. */
    nodes: UrlRedirect[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'UrlRedirectConnection'
}


/** Return type for `urlRedirectCreate` mutation. */
export interface UrlRedirectCreatePayload {
    /** The created redirect. */
    urlRedirect?: UrlRedirect
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectUserError[]
    __typename: 'UrlRedirectCreatePayload'
}


/** Return type for `urlRedirectDelete` mutation. */
export interface UrlRedirectDeletePayload {
    /** The ID of the deleted redirect. */
    deletedUrlRedirectId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectUserError[]
    __typename: 'UrlRedirectDeletePayload'
}


/**
 * An auto-generated type which holds one UrlRedirect and a cursor during pagination.
 * 
 */
export interface UrlRedirectEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of UrlRedirectEdge. */
    node: UrlRedirect
    __typename: 'UrlRedirectEdge'
}


/** Possible error codes that can be returned by `UrlRedirectUserError`. */
export type UrlRedirectErrorCode = 'DOES_NOT_EXIST' | 'CREATE_FAILED' | 'UPDATE_FAILED' | 'DELETE_FAILED'


/**
 * A request to import a [`URLRedirect`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) object
 * into the Online Store channel. Apps can use this to query the state of an `UrlRedirectImport` request.
 * 
 * For more information, see [`url-redirect`](https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect)s.
 * 
 */
export interface UrlRedirectImport {
    /** The number of rows in the file. */
    count?: Scalars['Int']
    /** The number of redirects created from the import. */
    createdCount?: Scalars['Int']
    /** The number of redirects that failed to be imported. */
    failedCount?: Scalars['Int']
    /** Whether the import is finished. */
    finished: Scalars['Boolean']
    /** The date and time when the import finished. */
    finishedAt?: Scalars['DateTime']
    /** The ID of the `UrlRedirectImport` object. */
    id: Scalars['ID']
    /** A list of up to three previews of the URL redirects to be imported. */
    previewRedirects: UrlRedirectImportPreview[]
    /** The number of redirects updated during the import. */
    updatedCount?: Scalars['Int']
    __typename: 'UrlRedirectImport'
}


/** Return type for `urlRedirectImportCreate` mutation. */
export interface UrlRedirectImportCreatePayload {
    /** The created `URLRedirectImport` object. */
    urlRedirectImport?: UrlRedirectImport
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectImportUserError[]
    __typename: 'UrlRedirectImportCreatePayload'
}


/** Possible error codes that can be returned by `UrlRedirectImportUserError`. */
export type UrlRedirectImportErrorCode = 'FILE_DOES_NOT_EXIST' | 'NOT_FOUND' | 'ALREADY_IMPORTED' | 'IN_PROGRESS'


/** A preview of a URL redirect import row. */
export interface UrlRedirectImportPreview {
    /** The old path to be redirected from. When the user visits this path, they will be redirected to the target location. */
    path: Scalars['String']
    /** The target location where the user will be redirected to. */
    target: Scalars['String']
    __typename: 'UrlRedirectImportPreview'
}


/** Return type for `urlRedirectImportSubmit` mutation. */
export interface UrlRedirectImportSubmitPayload {
    /** The asynchronous job importing the redirects. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectImportUserError[]
    __typename: 'UrlRedirectImportSubmitPayload'
}


/** Represents an error that happens during execution of a redirect import mutation. */
export interface UrlRedirectImportUserError {
    /** The error code. */
    code?: UrlRedirectImportErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'UrlRedirectImportUserError'
}


/** The set of valid sort keys for the UrlRedirect query. */
export type UrlRedirectSortKeys = 'RELEVANCE' | 'PATH' | 'ID'


/** Return type for `urlRedirectUpdate` mutation. */
export interface UrlRedirectUpdatePayload {
    /** Returns the updated URL redirect. */
    urlRedirect?: UrlRedirect
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UrlRedirectUserError[]
    __typename: 'UrlRedirectUpdatePayload'
}


/** Represents an error that happens during execution of a redirect mutation. */
export interface UrlRedirectUserError {
    /** The error code. */
    code?: UrlRedirectErrorCode
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'UrlRedirectUserError'
}


/** Represents an error in the input of a mutation. */
export interface UserError {
    /** The path to the input field that caused the error. */
    field?: Scalars['String'][]
    /** The error message. */
    message: Scalars['String']
    __typename: 'UserError'
}


/** Represents a credit card payment instrument. */
export interface VaultCreditCard {
    /** The billing address of the card. */
    billingAddress?: CustomerCreditCardBillingAddress
    /** The brand for the card. */
    brand: Scalars['String']
    /** Whether the card has been expired. */
    expired: Scalars['Boolean']
    /** The expiry month of the card. */
    expiryMonth: Scalars['Int']
    /** The expiry year of the card. */
    expiryYear: Scalars['Int']
    /** The last four digits for the card. */
    lastDigits: Scalars['String']
    /** The name of the card holder. */
    name: Scalars['String']
    __typename: 'VaultCreditCard'
}


/** Represents a paypal billing agreement payment instrument. */
export interface VaultPaypalBillingAgreement {
    /** Whether the paypal billing agreement is inactive. */
    inactive: Scalars['Boolean']
    /** The paypal account name. */
    name: Scalars['String']
    /** The paypal account email address. */
    paypalAccountEmail: Scalars['String']
    __typename: 'VaultPaypalBillingAgreement'
}


/**
 * Representation of 3d vectors and points. It can represent
 * either the coordinates of a point in space, a direction, or
 * size. Presented as an object with three floating-point values.
 * 
 */
export interface Vector3 {
    /** The x coordinate of Vector3. */
    x: Scalars['Float']
    /** The y coordinate of Vector3. */
    y: Scalars['Float']
    /** The z coordinate of Vector3. */
    z: Scalars['Float']
    __typename: 'Vector3'
}


/**
 * Represents a Shopify hosted video.
 * 
 */
export interface Video {
    /** A word or phrase to share the nature or contents of a media. */
    alt?: Scalars['String']
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt: Scalars['DateTime']
    /**
     * The video's duration in milliseconds. This value is `null` unless the video's status field is
     * [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready).
     * 
     */
    duration?: Scalars['Int']
    /** Any errors that have occurred on the file. */
    fileErrors: FileError[]
    /** The status of the file. */
    fileStatus: FileStatus
    /** The video's filename. */
    filename: Scalars['String']
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The media content type. */
    mediaContentType: MediaContentType
    /** Any errors which have occurred on the media. */
    mediaErrors: MediaError[]
    /** The warnings attached to the media. */
    mediaWarnings: MediaWarning[]
    /**
     * The video's original source. This value is `null` unless the video's status field is
     * [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready).
     * 
     */
    originalSource?: VideoSource
    /** The preview image for the media. */
    preview?: MediaPreviewImage
    /**
     * The video's sources. This value is empty unless the video's status field is
     * [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready).
     * 
     */
    sources: VideoSource[]
    /** Current status of the media. */
    status: MediaStatus
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'Video'
}


/**
 * Represents a source for a Shopify hosted video.
 * 
 * Types of sources include the original video, lower resolution versions of the original video,
 * and an m3u8 playlist file.
 * 
 * Only [videos](https://shopify.dev/api/admin-graphql/latest/objects/video) with a status field
 * of [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready) have sources.
 * 
 */
export interface VideoSource {
    /** The video source's file size in bytes. */
    fileSize?: Scalars['Int']
    /** The video source's file format extension. */
    format: Scalars['String']
    /** The video source's height. */
    height: Scalars['Int']
    /** The video source's MIME type. */
    mimeType: Scalars['String']
    /** The video source's URL. */
    url: Scalars['String']
    /** The video source's width. */
    width: Scalars['Int']
    __typename: 'VideoSource'
}


/** A type of visualization. */
export type VisualizationType = 'LINE' | 'BAR'


/** A web pixel settings. */
export interface WebPixel {
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** The settings JSON object for the web pixel. */
    settings: Scalars['JSON']
    __typename: 'WebPixel'
}


/** Return type for `webPixelCreate` mutation. */
export interface WebPixelCreatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsWebPixelUserError[]
    /** The created web pixel settings. */
    webPixel?: WebPixel
    __typename: 'WebPixelCreatePayload'
}


/** Return type for `webPixelDelete` mutation. */
export interface WebPixelDeletePayload {
    /** The ID of the web pixel settings that was deleted. */
    deletedWebPixelId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsWebPixelUserError[]
    __typename: 'WebPixelDeletePayload'
}


/** Return type for `webPixelUpdate` mutation. */
export interface WebPixelUpdatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: ErrorsWebPixelUserError[]
    /** The updated web pixel settings. */
    webPixel?: WebPixel
    __typename: 'WebPixelUpdatePayload'
}


/** An Amazon EventBridge partner event source to which webhook subscriptions publish events. */
export interface WebhookEventBridgeEndpoint {
    /** The ARN of this EventBridge partner event source. */
    arn: Scalars['ARN']
    __typename: 'WebhookEventBridgeEndpoint'
}


/** An HTTPS endpoint to which webhook subscriptions send POST requests. */
export interface WebhookHttpEndpoint {
    /** The URL to which the webhooks events are sent. */
    callbackUrl: Scalars['URL']
    __typename: 'WebhookHttpEndpoint'
}


/** A Google Cloud Pub/Sub topic to which webhook subscriptions publish events. */
export interface WebhookPubSubEndpoint {
    /** The Google Cloud Pub/Sub project ID. */
    pubSubProject: Scalars['String']
    /** The Google Cloud Pub/Sub topic ID. */
    pubSubTopic: Scalars['String']
    __typename: 'WebhookPubSubEndpoint'
}


/**
 * A webhook subscription is a persisted data object created by an app using the REST Admin API or GraphQL Admin API.
 * It describes the topic that the app wants to receive, and a destination where Shopify should send webhooks of the specified topic.
 * When an event for a given topic occurs, the webhook subscription sends a relevant payload to the destination.
 * Learn more about the [webhooks system](https://shopify.dev/apps/webhooks).
 * 
 */
export interface WebhookSubscription {
    /** The Admin API version that Shopify uses to serialize webhook events. This value is inherited from the app that created the webhook subscription. */
    apiVersion: ApiVersion
    /**
     * @deprecated Use `endpoint` instead.
     * The destination URI to which the webhook subscription will send a message when an event occurs.
     */
    callbackUrl: Scalars['URL']
    /** The date and time when the webhook subscription was created. */
    createdAt: Scalars['DateTime']
    /** The endpoint to which the webhook subscription will send events. */
    endpoint: WebhookSubscriptionEndpoint
    /** The format in which the webhook subscription should send the data. */
    format: WebhookSubscriptionFormat
    /** A globally-unique ID. */
    id: Scalars['ID']
    /** An optional array of top-level resource fields that should be serialized and sent in the webhook message. If null, then all fields will be sent. */
    includeFields: Scalars['String'][]
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId: Scalars['UnsignedInt64']
    /** The list of namespaces for any metafields that should be included in the webhook subscription. */
    metafieldNamespaces: Scalars['String'][]
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * The list of namespaces for private metafields that should be included in the webhook subscription.
     */
    privateMetafieldNamespaces: Scalars['String'][]
    /** The type of event that triggers the webhook. The topic determines when the webhook subscription sends a webhook, as well as what class of data object that webhook contains. */
    topic: WebhookSubscriptionTopic
    /** The date and time when the webhook subscription was updated. */
    updatedAt: Scalars['DateTime']
    __typename: 'WebhookSubscription'
}


/**
 * An auto-generated type for paginating through multiple WebhookSubscriptions.
 * 
 */
export interface WebhookSubscriptionConnection {
    /** A list of edges. */
    edges: WebhookSubscriptionEdge[]
    /** A list of the nodes contained in WebhookSubscriptionEdge. */
    nodes: WebhookSubscription[]
    /** Information to aid in pagination. */
    pageInfo: PageInfo
    __typename: 'WebhookSubscriptionConnection'
}


/** Return type for `webhookSubscriptionCreate` mutation. */
export interface WebhookSubscriptionCreatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    /** The webhook subscription that was created. */
    webhookSubscription?: WebhookSubscription
    __typename: 'WebhookSubscriptionCreatePayload'
}


/** Return type for `webhookSubscriptionDelete` mutation. */
export interface WebhookSubscriptionDeletePayload {
    /** The ID of the deleted webhook subscription. */
    deletedWebhookSubscriptionId?: Scalars['ID']
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'WebhookSubscriptionDeletePayload'
}


/**
 * An auto-generated type which holds one WebhookSubscription and a cursor during pagination.
 * 
 */
export interface WebhookSubscriptionEdge {
    /** A cursor for use in pagination. */
    cursor: Scalars['String']
    /** The item at the end of WebhookSubscriptionEdge. */
    node: WebhookSubscription
    __typename: 'WebhookSubscriptionEdge'
}


/** An endpoint to which webhook subscriptions send webhooks events. */
export type WebhookSubscriptionEndpoint = (WebhookEventBridgeEndpoint | WebhookHttpEndpoint | WebhookPubSubEndpoint) & { __isUnion?: true }


/** The supported formats for webhook subscriptions. */
export type WebhookSubscriptionFormat = 'JSON' | 'XML'


/** The set of valid sort keys for the WebhookSubscription query. */
export type WebhookSubscriptionSortKeys = 'CREATED_AT' | 'ID' | 'RELEVANCE'


/**
 * The supported topics for webhook subscriptions. You can use webhook subscriptions to receive
 * notifications about particular events in a shop.
 * 
 * You don't create webhook subscriptions to
 * [mandatory webhooks](https://shopify.dev/apps/webhooks/configuration/mandatory-webhooks).
 * Instead, you configure mandatory webhooks in your Partner Dashboard as part of your app setup.
 * 
 */
export type WebhookSubscriptionTopic = 'APP_UNINSTALLED' | 'CARTS_CREATE' | 'CARTS_UPDATE' | 'CHANNELS_DELETE' | 'CHECKOUTS_CREATE' | 'CHECKOUTS_DELETE' | 'CHECKOUTS_UPDATE' | 'CUSTOMER_PAYMENT_METHODS_CREATE' | 'CUSTOMER_PAYMENT_METHODS_UPDATE' | 'CUSTOMER_PAYMENT_METHODS_REVOKE' | 'COLLECTION_LISTINGS_ADD' | 'COLLECTION_LISTINGS_REMOVE' | 'COLLECTION_LISTINGS_UPDATE' | 'COLLECTION_PUBLICATIONS_CREATE' | 'COLLECTION_PUBLICATIONS_DELETE' | 'COLLECTION_PUBLICATIONS_UPDATE' | 'COLLECTIONS_CREATE' | 'COLLECTIONS_DELETE' | 'COLLECTIONS_UPDATE' | 'CUSTOMER_GROUPS_CREATE' | 'CUSTOMER_GROUPS_DELETE' | 'CUSTOMER_GROUPS_UPDATE' | 'CUSTOMERS_CREATE' | 'CUSTOMERS_DELETE' | 'CUSTOMERS_DISABLE' | 'CUSTOMERS_ENABLE' | 'CUSTOMERS_UPDATE' | 'CUSTOMERS_MARKETING_CONSENT_UPDATE' | 'CUSTOMER_TAGS_ADDED' | 'CUSTOMER_TAGS_REMOVED' | 'CUSTOMERS_EMAIL_MARKETING_CONSENT_UPDATE' | 'DISPUTES_CREATE' | 'DISPUTES_UPDATE' | 'DRAFT_ORDERS_CREATE' | 'DRAFT_ORDERS_DELETE' | 'DRAFT_ORDERS_UPDATE' | 'FULFILLMENT_EVENTS_CREATE' | 'FULFILLMENT_EVENTS_DELETE' | 'FULFILLMENTS_CREATE' | 'FULFILLMENTS_UPDATE' | 'ATTRIBUTED_SESSIONS_FIRST' | 'ATTRIBUTED_SESSIONS_LAST' | 'ORDER_TRANSACTIONS_CREATE' | 'ORDERS_CANCELLED' | 'ORDERS_CREATE' | 'ORDERS_DELETE' | 'ORDERS_EDITED' | 'ORDERS_FULFILLED' | 'ORDERS_PAID' | 'ORDERS_PARTIALLY_FULFILLED' | 'ORDERS_UPDATED' | 'FULFILLMENT_ORDERS_MOVED' | 'FULFILLMENT_ORDERS_HOLD_RELEASED' | 'FULFILLMENT_ORDERS_SCHEDULED_FULFILLMENT_ORDER_READY' | 'FULFILLMENT_ORDERS_ORDER_ROUTING_COMPLETE' | 'FULFILLMENT_ORDERS_CANCELLED' | 'FULFILLMENT_ORDERS_FULFILLMENT_SERVICE_FAILED_TO_COMPLETE' | 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_REJECTED' | 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_SUBMITTED' | 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_ACCEPTED' | 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_REJECTED' | 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_SUBMITTED' | 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_ACCEPTED' | 'FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_LOCAL_DELIVERY' | 'FULFILLMENT_ORDERS_PLACED_ON_HOLD' | 'PRODUCT_LISTINGS_ADD' | 'PRODUCT_LISTINGS_REMOVE' | 'PRODUCT_LISTINGS_UPDATE' | 'SCHEDULED_PRODUCT_LISTINGS_ADD' | 'SCHEDULED_PRODUCT_LISTINGS_UPDATE' | 'SCHEDULED_PRODUCT_LISTINGS_REMOVE' | 'PRODUCT_PUBLICATIONS_CREATE' | 'PRODUCT_PUBLICATIONS_DELETE' | 'PRODUCT_PUBLICATIONS_UPDATE' | 'PRODUCTS_CREATE' | 'PRODUCTS_DELETE' | 'PRODUCTS_UPDATE' | 'REFUNDS_CREATE' | 'SEGMENTS_CREATE' | 'SEGMENTS_DELETE' | 'SEGMENTS_UPDATE' | 'SHIPPING_ADDRESSES_CREATE' | 'SHIPPING_ADDRESSES_UPDATE' | 'SHOP_UPDATE' | 'TAX_PARTNERS_UPDATE' | 'TAX_SERVICES_CREATE' | 'TAX_SERVICES_UPDATE' | 'THEMES_CREATE' | 'THEMES_DELETE' | 'THEMES_PUBLISH' | 'THEMES_UPDATE' | 'VARIANTS_IN_STOCK' | 'VARIANTS_OUT_OF_STOCK' | 'INVENTORY_LEVELS_CONNECT' | 'INVENTORY_LEVELS_UPDATE' | 'INVENTORY_LEVELS_DISCONNECT' | 'INVENTORY_ITEMS_CREATE' | 'INVENTORY_ITEMS_UPDATE' | 'INVENTORY_ITEMS_DELETE' | 'LOCATIONS_ACTIVATE' | 'LOCATIONS_DEACTIVATE' | 'LOCATIONS_CREATE' | 'LOCATIONS_UPDATE' | 'LOCATIONS_DELETE' | 'TENDER_TRANSACTIONS_CREATE' | 'APP_PURCHASES_ONE_TIME_UPDATE' | 'APP_SUBSCRIPTIONS_APPROACHING_CAPPED_AMOUNT' | 'APP_SUBSCRIPTIONS_UPDATE' | 'LOCALES_CREATE' | 'LOCALES_UPDATE' | 'DOMAINS_CREATE' | 'DOMAINS_UPDATE' | 'DOMAINS_DESTROY' | 'SUBSCRIPTION_CONTRACTS_CREATE' | 'SUBSCRIPTION_CONTRACTS_UPDATE' | 'SUBSCRIPTION_BILLING_CYCLE_EDITS_CREATE' | 'SUBSCRIPTION_BILLING_CYCLE_EDITS_UPDATE' | 'SUBSCRIPTION_BILLING_CYCLE_EDITS_DELETE' | 'PROFILES_CREATE' | 'PROFILES_UPDATE' | 'PROFILES_DELETE' | 'SUBSCRIPTION_BILLING_ATTEMPTS_SUCCESS' | 'SUBSCRIPTION_BILLING_ATTEMPTS_FAILURE' | 'SUBSCRIPTION_BILLING_ATTEMPTS_CHALLENGED' | 'RETURNS_CANCEL' | 'RETURNS_CLOSE' | 'RETURNS_REOPEN' | 'RETURNS_REQUEST' | 'RETURNS_APPROVE' | 'RETURNS_DECLINE' | 'REVERSE_DELIVERIES_ATTACH_DELIVERABLE' | 'REVERSE_FULFILLMENT_ORDERS_DISPOSE' | 'PAYMENT_TERMS_CREATE' | 'PAYMENT_TERMS_DELETE' | 'PAYMENT_TERMS_UPDATE' | 'PAYMENT_SCHEDULES_DUE' | 'SELLING_PLAN_GROUPS_CREATE' | 'SELLING_PLAN_GROUPS_UPDATE' | 'SELLING_PLAN_GROUPS_DELETE' | 'BULK_OPERATIONS_FINISH' | 'PRODUCT_FEEDS_CREATE' | 'PRODUCT_FEEDS_UPDATE' | 'PRODUCT_FEEDS_INCREMENTAL_SYNC' | 'PRODUCT_FEEDS_FULL_SYNC' | 'MARKETS_CREATE' | 'MARKETS_UPDATE' | 'MARKETS_DELETE' | 'FULFILLMENT_ORDERS_RESCHEDULED' | 'AUDIT_EVENTS_ADMIN_API_ACTIVITY' | 'FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_PICKUP' | 'COMPANIES_CREATE' | 'COMPANIES_UPDATE' | 'COMPANIES_DELETE' | 'COMPANY_LOCATIONS_CREATE' | 'COMPANY_LOCATIONS_UPDATE' | 'COMPANY_LOCATIONS_DELETE' | 'COMPANY_CONTACTS_CREATE' | 'COMPANY_CONTACTS_UPDATE' | 'COMPANY_CONTACTS_DELETE' | 'CUSTOMERS_MERGE' | 'COMPANY_CONTACT_ROLES_ASSIGN' | 'COMPANY_CONTACT_ROLES_REVOKE'


/** Return type for `webhookSubscriptionUpdate` mutation. */
export interface WebhookSubscriptionUpdatePayload {
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    /** The webhook subscription that was updated. */
    webhookSubscription?: WebhookSubscription
    __typename: 'WebhookSubscriptionUpdatePayload'
}


/** A weight, which includes a numeric value and a unit of measurement. */
export interface Weight {
    /** The unit of measurement for `value`. */
    unit: WeightUnit
    /** The weight value using the unit system specified with `unit`. */
    value: Scalars['Float']
    __typename: 'Weight'
}


/** Units of measurement for weight. */
export type WeightUnit = 'KILOGRAMS' | 'GRAMS' | 'POUNDS' | 'OUNCES'


/** Return type for `deliveryProfileCreate` mutation. */
export interface deliveryProfileCreatePayload {
    /** The delivery profile that was created. */
    profile?: DeliveryProfile
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'deliveryProfileCreatePayload'
}


/** Return type for `deliveryProfileRemove` mutation. */
export interface deliveryProfileRemovePayload {
    /** The delivery profile deletion job triggered by the mutation. */
    job?: Job
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'deliveryProfileRemovePayload'
}


/** Return type for `deliveryProfileUpdate` mutation. */
export interface deliveryProfileUpdatePayload {
    /** The delivery profile that was updated. */
    profile?: DeliveryProfile
    /** The list of errors that occurred from executing the mutation. */
    userErrors: UserError[]
    __typename: 'deliveryProfileUpdatePayload'
}

export type Query = QueryRoot


/** A checkout that was abandoned by the customer. */
export interface AbandonedCheckoutGenqlSelection{
    /** The URL for the buyer to recover their checkout. */
    abandonedCheckoutUrl?: boolean | number
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The number of products in the checkout. */
    lineItemsQuantity?: boolean | number
    /**
     * The sum of all items in the checkout, including discounts, shipping, taxes, and tips.
     * 
     */
    totalPriceSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A browse, cart, or checkout that was abandoned by a customer. */
export interface AbandonmentGenqlSelection{
    /** The abandonment payload for the abandoned checkout. */
    abandonedCheckoutPayload?: AbandonedCheckoutGenqlSelection
    /** The abandonment type. */
    abandonmentType?: boolean | number
    /** The app associated with an abandoned checkout. */
    app?: AppGenqlSelection
    /** Permalink to the cart page. */
    cartUrl?: boolean | number
    /** The date and time when the abandonment was created. */
    createdAt?: boolean | number
    /** The customer who abandoned this event. */
    customer?: CustomerGenqlSelection
    /** Whether the customer has completed an order since this checkout has been abandoned. */
    customerHasNoOrderSinceAbandonment?: boolean | number
    /** The number of days since the last abandonment email was sent to the customer. */
    daysSinceLastAbandonmentEmail?: boolean | number
    /** When the email was sent, if that is the case. */
    emailSentAt?: boolean | number
    /** The email state (e.g., sent or not sent). */
    emailState?: boolean | number
    /** The number of hours since the customer has last abandoned a checkout. */
    hoursSinceLastAbandonedCheckout?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Whether the products in abandonment are available. */
    inventoryAvailable?: boolean | number
    /** Whether the abandonment event comes from the Online Store sales channel. */
    isFromOnlineStore?: boolean | number
    /** Whether the abandonment event comes from the Shop app sales channel. */
    isFromShopApp?: boolean | number
    /** Whether the abandonment event comes from Shop Pay. */
    isFromShopPay?: boolean | number
    /** Whether the customer did not complete another most significant step since this abandonment. */
    isMostSignificantAbandonment?: boolean | number
    /** The date for the latest browse abandonment. */
    lastBrowseAbandonmentDate?: boolean | number
    /** The date for the latest cart abandonment. */
    lastCartAbandonmentDate?: boolean | number
    /** The date for the latest checkout abandonment. */
    lastCheckoutAbandonmentDate?: boolean | number
    /** The most recent step type. */
    mostRecentStep?: boolean | number
    /** The products added to the cart during the customer abandoned visit. */
    productsAddedToCart?: (CustomerVisitProductInfoConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The products viewed during the customer abandoned visit. */
    productsViewed?: (CustomerVisitProductInfoConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The date and time when the visit started. */
    visitStartedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `abandonmentEmailStateUpdate` mutation. */
export interface AbandonmentEmailStateUpdatePayloadGenqlSelection{
    /** The updated abandonment. */
    abandonment?: AbandonmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: AbandonmentEmailStateUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `AbandonmentEmailStateUpdate`. */
export interface AbandonmentEmailStateUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `abandonmentUpdateActivitiesDeliveryStatuses` mutation. */
export interface AbandonmentUpdateActivitiesDeliveryStatusesPayloadGenqlSelection{
    /** The updated abandonment. */
    abandonment?: AbandonmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: AbandonmentUpdateActivitiesDeliveryStatusesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `AbandonmentUpdateActivitiesDeliveryStatuses`. */
export interface AbandonmentUpdateActivitiesDeliveryStatusesUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The permission required to access a Shopify Admin API or Storefront API resource for a shop. Merchants grant access scopes that are requested by applications.
 * 
 */
export interface AccessScopeGenqlSelection{
    /** A description of the actions that the access scope allows an app to perform. */
    description?: boolean | number
    /**
     * A readable string that represents the access scope. The string usually follows the format `{action}_{resource}`. `{action}` is `read` or `write`, and `{resource}` is the resource that the action can be performed on. `{action}` and `{resource}` are separated by an underscore. For example, `read_orders` or `write_products`.
     * 
     */
    handle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an operation publishing all products to a publication. */
export interface AddAllProductsOperationGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: boolean | number
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCountGenqlSelection
    /** The status of this operation. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The additional fees that have been applied to the order. */
export interface AdditionalFeeGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the additional fee. */
    name?: boolean | number
    /** The price of the additional fee. */
    price?: MoneyBagGenqlSelection
    /** A list of taxes charged on the additional fee. */
    taxLines?: TaxLineGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sale associated with an additional fee charge. */
export interface AdditionalFeeSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The additional fees for the associated sale. */
    additionalFee?: SaleAdditionalFeeGenqlSelection
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sale associated with an order price adjustment. */
export interface AdjustmentSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Targets all items the cart for a specified discount. */
export interface AllDiscountItemsGenqlSelection{
    /** Whether all items are eligible for the discount. This value always returns `true`. */
    allItems?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A version of the API, as defined by [Shopify API versioning](https://shopify.dev/api/usage/versioning).
 * Versions are commonly referred to by their handle (for example, `2021-10`).
 * 
 */
export interface ApiVersionGenqlSelection{
    /** The human-readable name of the version. */
    displayName?: boolean | number
    /** The unique identifier of an ApiVersion. All supported API versions have a date-based (YYYY-MM) or `unstable` handle. */
    handle?: boolean | number
    /** Whether the version is actively supported by Shopify. Supported API versions are guaranteed to be stable. Unsupported API versions include unstable, release candidate, and end-of-life versions that are marked as unsupported. For more information, refer to [Versioning](https://shopify.dev/api/usage/versioning). */
    supported?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Shopify application. */
export interface AppGenqlSelection{
    /** A unique application API identifier. */
    apiKey?: boolean | number
    /** App store page URL of the app. */
    appStoreAppUrl?: boolean | number
    /** App store page URL of the developer who created the app. */
    appStoreDeveloperUrl?: boolean | number
    /** The access scopes available to the app. */
    availableAccessScopes?: AccessScopeGenqlSelection
    /** Banner image for the app. */
    banner?: ImageGenqlSelection
    /** Description of the app. */
    description?: boolean | number
    /** The name of the app developer. */
    developerName?: boolean | number
    /** The type of app developer. */
    developerType?: boolean | number
    /**
     * @deprecated Use `appStoreDeveloperUrl` instead.
     * Website of the developer who created the app.
     */
    developerUrl?: boolean | number
    /** Whether the app uses the Embedded App SDK. */
    embedded?: boolean | number
    /** Requirements that must be met before the app can be installed. */
    failedRequirements?: FailedRequirementGenqlSelection
    /** A list of app features that are shown in the Shopify App Store listing. */
    features?: boolean | number
    /** Feedback from this app about the store. */
    feedback?: AppFeedbackGenqlSelection
    /** Handle of the app. */
    handle?: boolean | number
    /** Icon that represents the app. */
    icon?: ImageGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** Webpage where you can install the app. */
    installUrl?: boolean | number
    /**
     * Corresponding AppInstallation for this shop and App.
     * Returns null if the App is not installed.
     * 
     */
    installation?: AppInstallationGenqlSelection
    /**
     * Whether the app is the [post purchase](https://shopify.dev/apps/checkout/post-purchase) app in use.
     * 
     */
    isPostPurchaseAppInUse?: boolean | number
    /**
     * @deprecated Use AppInstallation.launchUrl instead
     * Webpage that the app starts in.
     */
    launchUrl?: boolean | number
    /**
     * @deprecated Use AppInstallation.navigationItems instead
     * Menu items for the app, which also appear as submenu items in left navigation sidebar in the Shopify admin.
     * 
     */
    navigationItems?: NavigationItemGenqlSelection
    /** Whether the app was previously installed on the current shop. */
    previouslyInstalled?: boolean | number
    /** Detailed information about the app pricing. */
    pricingDetails?: boolean | number
    /** Summary of the app pricing details. */
    pricingDetailsSummary?: boolean | number
    /** Link to app privacy policy. */
    privacyPolicyUrl?: boolean | number
    /** The public category for the app. */
    publicCategory?: boolean | number
    /** Whether the app is published to the Shopify App Store. */
    published?: boolean | number
    /** The access scopes requested by the app. */
    requestedAccessScopes?: AccessScopeGenqlSelection
    /** Screenshots of the app. */
    screenshots?: ImageGenqlSelection
    /** Whether the app was developed by Shopify. */
    shopifyDeveloped?: boolean | number
    /** Name of the app. */
    title?: boolean | number
    /**
     * Message that appears when the app is uninstalled. For example:
     * By removing this app, you will no longer be able to publish products to MySocialSite or view this app in your Shopify admin. You can re-enable this channel at any time.
     * 
     */
    uninstallMessage?: boolean | number
    /**
     * @deprecated Use AppInstallation.uninstallUrl instead
     * Webpage where you can uninstall the app.
     */
    uninstallUrl?: boolean | number
    /** The webhook API version for the app. */
    webhookApiVersion?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A catalog that defines the publication associated with an app.
 * 
 */
export interface AppCatalogGenqlSelection{
    /** The apps associated with the catalog. */
    apps?: (AppConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** Most recent catalog operations. */
    operations?: ResourceOperationGenqlSelection
    /** The price list associated with the catalog. */
    priceList?: PriceListGenqlSelection
    /** A group of products and collections that's published to a catalog. */
    publication?: PublicationGenqlSelection
    /** The status of the catalog. */
    status?: boolean | number
    /** The name of the catalog. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Apps.
 * 
 */
export interface AppConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppEdgeGenqlSelection
    /** A list of the nodes contained in AppEdge. */
    nodes?: AppGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** App credits can be applied by the merchant towards future app purchases, subscriptions, or usage records in Shopify. */
export interface AppCreditGenqlSelection{
    /** The amount that can be used towards future app purchases in Shopify. */
    amount?: MoneyV2GenqlSelection
    /** The date and time when the app credit was created. */
    createdAt?: boolean | number
    /** The description of the app credit. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Whether the app credit is a test transaction. */
    test?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple AppCredits.
 * 
 */
export interface AppCreditConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppCreditEdgeGenqlSelection
    /** A list of the nodes contained in AppCreditEdge. */
    nodes?: AppCreditGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one AppCredit and a cursor during pagination.
 * 
 */
export interface AppCreditEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppCreditEdge. */
    node?: AppCreditGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A script that defines a discount type. */
export interface AppDiscountTypeGenqlSelection{
    /** The app providing the app discount type. */
    app?: AppGenqlSelection
    /** The App Bridge details for discount type configuration. */
    appBridge?: FunctionsAppBridgeGenqlSelection
    /** The client ID of the app providing the app discount type. */
    appKey?: boolean | number
    /** A description of the app discount type. */
    description?: boolean | number
    /** The class of the app discount type. */
    discountClass?: boolean | number
    /** The ID of the function providing the app discount type. */
    functionId?: boolean | number
    /** The target type of the app discount type. Possible values: `SHIPPING_LINE` and `LINE_ITEM`. */
    targetType?: boolean | number
    /** The title of the app discount type. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one App and a cursor during pagination.
 * 
 */
export interface AppEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppEdge. */
    node?: AppGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Reports the status of shops and their resources and displays this information
 * within Shopify admin. AppFeedback is used to notify merchants about steps they need to take
 * to set up an app on their store.
 * 
 */
export interface AppFeedbackGenqlSelection{
    /** The application associated to the feedback. */
    app?: AppGenqlSelection
    /** A link to where merchants can resolve errors. */
    link?: LinkGenqlSelection
    /** The feedback message presented to the merchant. */
    messages?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an installed application on a shop. */
export interface AppInstallationGenqlSelection{
    /** The access scopes granted to the application by a merchant during installation. */
    accessScopes?: AccessScopeGenqlSelection
    /** The active application subscriptions billed to the shop on a recurring basis. */
    activeSubscriptions?: AppSubscriptionGenqlSelection
    /** All subscriptions created for a shop. */
    allSubscriptions?: (AppSubscriptionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AppSubscriptionSortKeys | null)} })
    /** Application which is installed. */
    app?: AppGenqlSelection
    /**
     * @deprecated Use `publication` instead.
     * Channel associated with the installed application.
     */
    channel?: ChannelGenqlSelection
    /** Credits that can be used towards future app purchases. */
    credits?: (AppCreditConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AppTransactionSortKeys | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** The URL to launch the application. */
    launchUrl?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** One-time purchases to a shop. */
    oneTimePurchases?: (AppPurchaseOneTimeConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AppTransactionSortKeys | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The publication associated with the installed application. */
    publication?: PublicationGenqlSelection
    /** The records that track the externally-captured revenue for the app. The records are used for revenue attribution purposes. */
    revenueAttributionRecords?: (AppRevenueAttributionRecordConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AppRevenueAttributionRecordSortKeys | null)} })
    /**
     * @deprecated Use `activeSubscriptions` instead.
     * Subscriptions charge to a shop on a recurring basis.
     */
    subscriptions?: AppSubscriptionGenqlSelection
    /** The URL to uninstall the application. */
    uninstallUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple AppInstallations.
 * 
 */
export interface AppInstallationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppInstallationEdgeGenqlSelection
    /** A list of the nodes contained in AppInstallationEdge. */
    nodes?: AppInstallationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one AppInstallation and a cursor during pagination.
 * 
 */
export interface AppInstallationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppInstallationEdge. */
    node?: AppInstallationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The pricing model for the app subscription.
 * The pricing model input can be either `appRecurringPricingDetails` or `appUsagePricingDetails`.
 * 
 */
export interface AppPlanInput {
/** The pricing details for usage-based billing. */
appUsagePricingDetails?: (AppUsagePricingInput | null),
/** The pricing details for recurring billing. */
appRecurringPricingDetails?: (AppRecurringPricingInput | null)}


/** The app plan that the merchant is subscribed to. */
export interface AppPlanV2GenqlSelection{
    /** The plan billed to a shop on a recurring basis. */
    pricingDetails?: AppPricingDetailsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The information about the price that's charged to a shop every plan period.
 * The concrete type can be `AppRecurringPricing` for recurring billing or `AppUsagePricing` for usage-based billing.
 * 
 */
export interface AppPricingDetailsGenqlSelection{
    on_AppRecurringPricing?:AppRecurringPricingGenqlSelection,
    on_AppUsagePricing?:AppUsagePricingGenqlSelection,
    __typename?: boolean | number
}


/** Services and features purchased once by the store. */
export interface AppPurchaseGenqlSelection{
    /** The date and time when the app purchase occurred. */
    createdAt?: boolean | number
    /** The name of the app purchase. */
    name?: boolean | number
    /** The amount to be charged to the store for the app purchase. */
    price?: MoneyV2GenqlSelection
    /** The status of the app purchase. */
    status?: boolean | number
    /** Whether the app purchase is a test transaction. */
    test?: boolean | number
    on_AppPurchaseOneTime?: AppPurchaseOneTimeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Services and features purchased once by a store. */
export interface AppPurchaseOneTimeGenqlSelection{
    /** The date and time when the app purchase occurred. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the app purchase. */
    name?: boolean | number
    /** The amount to be charged to the store for the app purchase. */
    price?: MoneyV2GenqlSelection
    /** The status of the app purchase. */
    status?: boolean | number
    /** Whether the app purchase is a test transaction. */
    test?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple AppPurchaseOneTimes.
 * 
 */
export interface AppPurchaseOneTimeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppPurchaseOneTimeEdgeGenqlSelection
    /** A list of the nodes contained in AppPurchaseOneTimeEdge. */
    nodes?: AppPurchaseOneTimeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appPurchaseOneTimeCreate` mutation. */
export interface AppPurchaseOneTimeCreatePayloadGenqlSelection{
    /** The newly created app one-time purchase. */
    appPurchaseOneTime?: AppPurchaseOneTimeGenqlSelection
    /**
     * The URL that the merchant can access to approve or decline the newly created app one-time purchase.
     * 
     * If the merchant declines, then the merchant is redirected to the app and receives a notification message stating that the charge was declined.
     * If the merchant approves and they're successfully invoiced, then the state of the charge changes from `pending` to `active`.
     * 
     * You get paid after the charge is activated.
     * 
     */
    confirmationUrl?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one AppPurchaseOneTime and a cursor during pagination.
 * 
 */
export interface AppPurchaseOneTimeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppPurchaseOneTimeEdge. */
    node?: AppPurchaseOneTimeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The pricing information about a subscription app.
 * The object contains an interval (the frequency at which the shop is billed for an app subscription) and
 * a price (the amount to be charged to the subscribing shop at each interval).
 * 
 */
export interface AppRecurringPricingGenqlSelection{
    /** The discount applied to the subscription for a given number of billing intervals. */
    discount?: AppSubscriptionDiscountGenqlSelection
    /** The frequency at which the subscribing shop is billed for an app subscription. */
    interval?: boolean | number
    /** The amount and currency to be charged to the subscribing shop every billing interval. */
    price?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Instructs the app subscription to generate a fixed charge on a recurring basis. The frequency is specified by the billing interval. */
export interface AppRecurringPricingInput {
/** How often the app subscription generates a charge. */
interval?: (AppPricingInterval | null),
/** The amount to be charged to the store every billing interval. */
price: MoneyInput,
/** The discount applied to the subscription for a given number of billing intervals. */
discount?: (AppSubscriptionDiscountInput | null)}


/** Represents app revenue that was captured externally by the partner. */
export interface AppRevenueAttributionRecordGenqlSelection{
    /** The financial amount captured in this attribution. */
    amount?: MoneyV2GenqlSelection
    /** The timestamp when the financial amount was captured. */
    capturedAt?: boolean | number
    /** The timestamp at which this revenue attribution was issued. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * The unique value submitted during the creation of the app revenue attribution record.
     * For more information, refer to
     * [Idempotent requests](https://shopify.dev/api/usage/idempotent-requests).
     * 
     */
    idempotencyKey?: boolean | number
    /** Indicates whether this is a test submission. */
    test?: boolean | number
    /** The type of revenue attribution. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple AppRevenueAttributionRecords.
 * 
 */
export interface AppRevenueAttributionRecordConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppRevenueAttributionRecordEdgeGenqlSelection
    /** A list of the nodes contained in AppRevenueAttributionRecordEdge. */
    nodes?: AppRevenueAttributionRecordGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appRevenueAttributionRecordCreate` mutation. */
export interface AppRevenueAttributionRecordCreatePayloadGenqlSelection{
    /** The created app revenue attribution record. */
    appRevenueAttributionRecord?: AppRevenueAttributionRecordGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: AppRevenueAttributionRecordCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `AppRevenueAttributionRecordCreate`. */
export interface AppRevenueAttributionRecordCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appRevenueAttributionRecordDelete` mutation. */
export interface AppRevenueAttributionRecordDeletePayloadGenqlSelection{
    /** The ID of the revenue attribution that was deleted, if one was. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: AppRevenueAttributionRecordDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `AppRevenueAttributionRecordDelete`. */
export interface AppRevenueAttributionRecordDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one AppRevenueAttributionRecord and a cursor during pagination.
 * 
 */
export interface AppRevenueAttributionRecordEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppRevenueAttributionRecordEdge. */
    node?: AppRevenueAttributionRecordGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to supply an app revenue attribution record. */
export interface AppRevenueAttributionRecordInput {
/**
 * The unique value submitted during creation.
 * For more information, refer to
 * [Idempotent requests](https://shopify.dev/api/usage/idempotent-requests).
 * 
 */
idempotencyKey: Scalars['String'],
/** The timestamp when the financial amount was captured. */
capturedAt: Scalars['DateTime'],
/** The financial amount captured in this attribution. */
amount: MoneyInput,
/** The type of revenue attribution. */
type: AppRevenueAttributionType,
/** Indicates whether this is a test submission. */
test: Scalars['Boolean']}


/** Provides users access to services and/or features for a duration of time. */
export interface AppSubscriptionGenqlSelection{
    /** The date and time when the app subscription was created. */
    createdAt?: boolean | number
    /** The date and time when the current app subscription period ends. Returns `null` if the subscription isn't active. */
    currentPeriodEnd?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The plans attached to the app subscription. */
    lineItems?: AppSubscriptionLineItemGenqlSelection
    /** The name of the app subscription. */
    name?: boolean | number
    /** The URL that the merchant is redirected to after approving the app subscription. */
    returnUrl?: boolean | number
    /** The status of the app subscription. */
    status?: boolean | number
    /** Specifies whether the app subscription is a test transaction. */
    test?: boolean | number
    /** The number of free trial days, starting at the subscription's creation date, by which billing is delayed. */
    trialDays?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appSubscriptionCancel` mutation. */
export interface AppSubscriptionCancelPayloadGenqlSelection{
    /** The cancelled app subscription. */
    appSubscription?: AppSubscriptionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple AppSubscriptions.
 * 
 */
export interface AppSubscriptionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppSubscriptionEdgeGenqlSelection
    /** A list of the nodes contained in AppSubscriptionEdge. */
    nodes?: AppSubscriptionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appSubscriptionCreate` mutation. */
export interface AppSubscriptionCreatePayloadGenqlSelection{
    /** The newly-created app subscription. */
    appSubscription?: AppSubscriptionGenqlSelection
    /** The URL pointing to the page where the merchant approves or declines the charges for an app subscription. */
    confirmationUrl?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Discount applied to the recurring pricing portion of a subscription. */
export interface AppSubscriptionDiscountGenqlSelection{
    /**
     * The total number of billing intervals to which the discount will be applied.
     * The discount will be applied to an indefinite number of billing intervals if this value is blank.
     * 
     */
    durationLimitInIntervals?: boolean | number
    /** The price of the subscription after the discount is applied. */
    priceAfterDiscount?: MoneyV2GenqlSelection
    /** The remaining number of billing intervals to which the discount will be applied. */
    remainingDurationInIntervals?: boolean | number
    /** The value of the discount applied every billing interval. */
    value?: AppSubscriptionDiscountValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fixed amount value of a discount. */
export interface AppSubscriptionDiscountAmountGenqlSelection{
    /** The fixed amount value of a discount. */
    amount?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to specify a discount to the recurring pricing portion of a subscription over a number of billing intervals.
 * 
 */
export interface AppSubscriptionDiscountInput {
/** The value to be discounted every billing interval. */
value?: (AppSubscriptionDiscountValueInput | null),
/**
 * The total number of billing intervals to which the discount will be applied.
 * The discount will be applied to an indefinite number of billing intervals if this value is left blank.
 * 
 */
durationLimitInIntervals?: (Scalars['Int'] | null)}


/** The percentage value of a discount. */
export interface AppSubscriptionDiscountPercentageGenqlSelection{
    /** The percentage value of a discount. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The value of the discount. */
export interface AppSubscriptionDiscountValueGenqlSelection{
    on_AppSubscriptionDiscountAmount?:AppSubscriptionDiscountAmountGenqlSelection,
    on_AppSubscriptionDiscountPercentage?:AppSubscriptionDiscountPercentageGenqlSelection,
    __typename?: boolean | number
}


/** The input fields to specify the value discounted every billing interval. */
export interface AppSubscriptionDiscountValueInput {
/** The percentage value of a discount. */
percentage?: (Scalars['Float'] | null),
/** The monetary value of a discount. */
amount?: (Scalars['Decimal'] | null)}


/**
 * An auto-generated type which holds one AppSubscription and a cursor during pagination.
 * 
 */
export interface AppSubscriptionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppSubscriptionEdge. */
    node?: AppSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The plan attached to an app subscription. */
export interface AppSubscriptionLineItemGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The pricing model for the app subscription. */
    plan?: AppPlanV2GenqlSelection
    /** A list of the store's usage records for a usage pricing plan. */
    usageRecords?: (AppUsageRecordConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AppUsageRecordSortKeys | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to add more than one pricing plan to an app subscription. */
export interface AppSubscriptionLineItemInput {
/** The pricing model for the app subscription. */
plan: AppPlanInput}


/** Return type for `appSubscriptionLineItemUpdate` mutation. */
export interface AppSubscriptionLineItemUpdatePayloadGenqlSelection{
    /** The updated app subscription. */
    appSubscription?: AppSubscriptionGenqlSelection
    /** The URL where the merchant approves or declines the updated app subscription line item. */
    confirmationUrl?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appSubscriptionTrialExtend` mutation. */
export interface AppSubscriptionTrialExtendPayloadGenqlSelection{
    /** The app subscription that had its trial extended. */
    appSubscription?: AppSubscriptionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: AppSubscriptionTrialExtendUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `AppSubscriptionTrialExtend`. */
export interface AppSubscriptionTrialExtendUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Defines a usage pricing model for the app subscription.
 * These charges are variable based on how much the merchant uses the app.
 * 
 */
export interface AppUsagePricingGenqlSelection{
    /** The total usage records for interval. */
    balanceUsed?: MoneyV2GenqlSelection
    /**
     * The capped amount prevents the merchant from being charged for any usage over that amount during a billing period.
     * This prevents billing from exceeding a maximum threshold over the duration of the billing period.
     * For the merchant to continue using the app after exceeding a capped amount, they would need to agree to a new usage charge.
     * 
     */
    cappedAmount?: MoneyV2GenqlSelection
    /** The frequency with which the app usage records are billed. */
    interval?: boolean | number
    /**
     * The terms and conditions for app usage pricing.
     * Must be present in order to create usage charges.
     * The terms are presented to the merchant when they approve an app's usage charges.
     * 
     */
    terms?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to issue arbitrary charges for app usage associated with a subscription. */
export interface AppUsagePricingInput {
/** The maximum amount of usage charges that can be incurred within a subscription billing interval. */
cappedAmount: MoneyInput,
/** The terms and conditions for app usage. These terms stipulate the pricing model for the charges that an app creates. */
terms: Scalars['String']}


/** Store usage for app subscriptions with usage pricing. */
export interface AppUsageRecordGenqlSelection{
    /** The date and time when the usage record was created. */
    createdAt?: boolean | number
    /** The description of the app usage record. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * A unique key generated by the client to avoid duplicate charges.
     * 
     */
    idempotencyKey?: boolean | number
    /** The price of the usage record. */
    price?: MoneyV2GenqlSelection
    /** Defines the usage pricing plan the merchant is subscribed to. */
    subscriptionLineItem?: AppSubscriptionLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple AppUsageRecords.
 * 
 */
export interface AppUsageRecordConnectionGenqlSelection{
    /** A list of edges. */
    edges?: AppUsageRecordEdgeGenqlSelection
    /** A list of the nodes contained in AppUsageRecordEdge. */
    nodes?: AppUsageRecordGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `appUsageRecordCreate` mutation. */
export interface AppUsageRecordCreatePayloadGenqlSelection{
    /** The newly created app usage record. */
    appUsageRecord?: AppUsageRecordGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one AppUsageRecord and a cursor during pagination.
 * 
 */
export interface AppUsageRecordEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of AppUsageRecordEdge. */
    node?: AppUsageRecordGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a generic custom attribute. */
export interface AttributeGenqlSelection{
    /** Key or name of the attribute. */
    key?: boolean | number
    /** Value of the attribute. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for an attribute. */
export interface AttributeInput {
/** Key or name of the attribute. */
key: Scalars['String'],
/** Value of the attribute. */
value: Scalars['String']}


/**
 * Automatic discount applications capture the intentions of a discount that was automatically applied.
 * 
 */
export interface AutomaticDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod?: boolean | number
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The title of the discount application. */
    title?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents an object containing all information for channels available to a shop.
 * 
 */
export interface AvailableChannelDefinitionsByChannelGenqlSelection{
    /** The channel definitions for channels installed on a shop. */
    channelDefinitions?: ChannelDefinitionGenqlSelection
    /** The name of the channel. */
    channelName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Basic events chronicle resource activities such as the creation of an article, the fulfillment of an order, or
 * the addition of a product.
 * 
 */
export interface BasicEventGenqlSelection{
    /** The name of the app that created the event. */
    appTitle?: boolean | number
    /** Whether the event was created by an app. */
    attributeToApp?: boolean | number
    /** Whether the event was caused by an admin user. */
    attributeToUser?: boolean | number
    /** The date and time when the event was created. */
    createdAt?: boolean | number
    /** Whether the event is critical. */
    criticalAlert?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Human readable text that describes the event. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during the execution of a billing attempt mutation. */
export interface BillingAttemptUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during execution of a bulk mutation. */
export interface BulkMutationUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An asynchronous long-running operation to fetch data in bulk or to bulk import data.
 * 
 * Bulk operations are created using the `bulkOperationRunQuery` or `bulkOperationRunMutation` mutation. After
 * they are created, clients should poll the `status` field for updates. When `COMPLETED`, the `url` field contains
 * a link to the data in [JSONL](http://jsonlines.org/) format.
 * 
 * Refer to the [bulk operations guide](https://shopify.dev/api/usage/bulk-operations/imports) for more details.
 * 
 */
export interface BulkOperationGenqlSelection{
    /** When the bulk operation was successfully completed. */
    completedAt?: boolean | number
    /** When the bulk operation was created. */
    createdAt?: boolean | number
    /** Error code for failed operations. */
    errorCode?: boolean | number
    /** File size in bytes of the file in the `url` field. */
    fileSize?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * A running count of all the objects processed.
     * For example, when fetching all the products and their variants, this field counts both products and variants.
     * This field can be used to track operation progress.
     * 
     */
    objectCount?: boolean | number
    /**
     * The URL that points to the partial or incomplete response data (in [JSONL](http://jsonlines.org/) format) that was returned by a failed operation.
     * The URL expires 7 days after the operation fails. Returns `null` when there's no data available.
     * 
     */
    partialDataUrl?: boolean | number
    /** GraphQL query document specified in `bulkOperationRunQuery`. */
    query?: boolean | number
    /**
     * A running count of all the objects that are processed at the root of the query.
     * For example, when fetching all the products and their variants, this field only counts products.
     * This field can be used to track operation progress.
     * 
     */
    rootObjectCount?: boolean | number
    /** Status of the bulk operation. */
    status?: boolean | number
    /** The bulk operation's type. */
    type?: boolean | number
    /**
     * The URL that points to the response data in [JSONL](http://jsonlines.org/) format.
     * The URL expires 7 days after the operation completes.
     * 
     */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `bulkOperationCancel` mutation. */
export interface BulkOperationCancelPayloadGenqlSelection{
    /** The bulk operation to be canceled. */
    bulkOperation?: BulkOperationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `bulkOperationRunMutation` mutation. */
export interface BulkOperationRunMutationPayloadGenqlSelection{
    /** The newly created bulk operation. */
    bulkOperation?: BulkOperationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BulkMutationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `bulkOperationRunQuery` mutation. */
export interface BulkOperationRunQueryPayloadGenqlSelection{
    /** The newly created bulk operation. */
    bulkOperation?: BulkOperationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `bulkProductResourceFeedbackCreate` mutation. */
export interface BulkProductResourceFeedbackCreatePayloadGenqlSelection{
    /** The feedback that is created. */
    feedback?: ProductResourceFeedbackGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BulkProductResourceFeedbackCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `BulkProductResourceFeedbackCreate`. */
export interface BulkProductResourceFeedbackCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the Bundles feature configuration for the shop.
 * 
 */
export interface BundlesFeatureGenqlSelection{
    /** Whether a shop is configured properly to sell bundles. */
    eligibleForBundles?: boolean | number
    /** The reason why a shop is not eligible for bundles. */
    ineligibilityReason?: boolean | number
    /** Whether a shop has any fixed bundle products or has a cartTransform function installed. */
    sellsBundles?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that happens during the execution of a business customer mutation. */
export interface BusinessCustomerUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Settings describing the behavior of checkout for a B2B buyer. */
export interface BuyerExperienceConfigurationGenqlSelection{
    /** Whether to checkout to draft order for merchant review. */
    checkoutToDraft?: boolean | number
    /** Whether to allow customers to use editable shipping addresses. */
    editableShippingAddress?: boolean | number
    /**
     * Whether a buyer must pay at checkout or they can also choose to pay
     * later using net terms.
     * 
     */
    payNowOnly?: boolean | number
    /** Represents the merchant configured payment terms. */
    paymentTermsTemplate?: PaymentTermsTemplateGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields specifying the behavior of checkout for a B2B buyer. */
export interface BuyerExperienceConfigurationInput {
/** Whether to checkout to draft order for merchant review. */
checkoutToDraft?: (Scalars['Boolean'] | null),
/** Represents the merchant configured payment terms. */
paymentTermsTemplateId?: (Scalars['ID'] | null),
/** Whether to allow customers to edit their shipping address at checkout. */
editableShippingAddress?: (Scalars['Boolean'] | null)}


/**
 * A discount that is automatically applied to an order that is being edited.
 * 
 */
export interface CalculatedAutomaticDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod?: boolean | number
    /** The level at which the discount was applied. */
    appliedTo?: boolean | number
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An amount discounting the line that has been allocated by an associated discount application.
 * 
 */
export interface CalculatedDiscountAllocationGenqlSelection{
    /** The money amount that's allocated by the discount application in shop and presentment currencies. */
    allocatedAmountSet?: MoneyBagGenqlSelection
    /** The discount that the allocated amount originated from. */
    discountApplication?: CalculatedDiscountApplicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A [discount application](https://shopify.dev/api/admin-graphql/latest/interfaces/discountapplication) involved in order editing that might be newly added or have new changes applied.
 * 
 */
export interface CalculatedDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod?: boolean | number
    /** The level at which the discount was applied. */
    appliedTo?: boolean | number
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    on_CalculatedAutomaticDiscountApplication?: CalculatedAutomaticDiscountApplicationGenqlSelection
    on_CalculatedDiscountCodeApplication?: CalculatedDiscountCodeApplicationGenqlSelection
    on_CalculatedManualDiscountApplication?: CalculatedManualDiscountApplicationGenqlSelection
    on_CalculatedScriptDiscountApplication?: CalculatedScriptDiscountApplicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CalculatedDiscountApplications.
 * 
 */
export interface CalculatedDiscountApplicationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CalculatedDiscountApplicationEdgeGenqlSelection
    /** A list of the nodes contained in CalculatedDiscountApplicationEdge. */
    nodes?: CalculatedDiscountApplicationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CalculatedDiscountApplication and a cursor during pagination.
 * 
 */
export interface CalculatedDiscountApplicationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CalculatedDiscountApplicationEdge. */
    node?: CalculatedDiscountApplicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A discount code that is applied to an order that is being edited.
 * 
 */
export interface CalculatedDiscountCodeApplicationGenqlSelection{
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod?: boolean | number
    /** The level at which the discount was applied. */
    appliedTo?: boolean | number
    /** The string identifying the discount code that was used at the time of application. */
    code?: boolean | number
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The computed properties for a draft order. */
export interface CalculatedDraftOrderGenqlSelection{
    /** Order-level discount applied to the draft order. */
    appliedDiscount?: DraftOrderAppliedDiscountGenqlSelection
    /** The available shipping rates for the draft order. Requires a customer with a valid shipping address and at least one line item. */
    availableShippingRates?: ShippingRateGenqlSelection
    /** Whether the billing address matches the shipping address. */
    billingAddressMatchesShippingAddress?: boolean | number
    /** The currency of the store for this draft order. */
    currencyCode?: boolean | number
    /** Customer who will be sent an invoice for the draft order, if there is one. */
    customer?: CustomerGenqlSelection
    /** Line items in the draft order with their computed properties. */
    lineItems?: CalculatedDraftOrderLineItemGenqlSelection
    /** A subtotal of the line items and corresponding discounts. The subtotal doesn't include shipping charges, shipping discounts, taxes, or order discounts. */
    lineItemsSubtotalPrice?: MoneyBagGenqlSelection
    /** The name of the selected market. */
    marketName?: boolean | number
    /** The selected market region country code for the draft order. */
    marketRegionCountryCode?: boolean | number
    /** Phone number assigned to draft order. */
    phone?: boolean | number
    /** The payment currency of the customer for this draft order. */
    presentmentCurrencyCode?: boolean | number
    /** The purchasing entity for the draft order. */
    purchasingEntity?: PurchasingEntityGenqlSelection
    /** Line item that contains the shipping costs. */
    shippingLine?: ShippingLineGenqlSelection
    /**
     * Subtotal of the line items and their discounts (does not contain shipping charges or shipping discounts, or taxes).
     * 
     */
    subtotalPrice?: boolean | number
    /** Subtotal of the line items and their discounts (does not contain shipping charges or shipping discounts, or taxes). */
    subtotalPriceSet?: MoneyBagGenqlSelection
    /** Total amount of taxes charged for each line item and shipping line. */
    taxLines?: TaxLineGenqlSelection
    /** Total discounts for this draft order. */
    totalDiscountsSet?: MoneyBagGenqlSelection
    /** Total price of line items for this draft order. */
    totalLineItemsPriceSet?: MoneyBagGenqlSelection
    /** Total amount of the draft order (includes taxes, shipping charges, and discounts). */
    totalPrice?: boolean | number
    /** Total amount of the draft order(includes taxes, shipping charges, and discounts). */
    totalPriceSet?: MoneyBagGenqlSelection
    /** Total shipping charge for the draft order. */
    totalShippingPrice?: boolean | number
    /** Total shipping charge for the draft order. */
    totalShippingPriceSet?: MoneyBagGenqlSelection
    /** Total amount of taxes for the draft order. */
    totalTax?: boolean | number
    /** Total amount of taxes for the draft order. */
    totalTaxSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The computed line items for a draft order. */
export interface CalculatedDraftOrderLineItemGenqlSelection{
    /** The discount applied to the line item. */
    appliedDiscount?: DraftOrderAppliedDiscountGenqlSelection
    /** Whether the line item is a custom line item (`true`) or a product variant line item (`false`). */
    custom?: boolean | number
    /** A list of attributes that represent custom features or special requests. */
    customAttributes?: AttributeGenqlSelection
    /** Additional information (metafields) about the line item with the associated types. */
    customAttributesV2?: TypedAttributeGenqlSelection
    /** Total price with discounts applied. */
    discountedTotal?: MoneyV2GenqlSelection
    /** The total price with discounts applied. */
    discountedTotalSet?: MoneyBagGenqlSelection
    /** The unit price with discounts applied. */
    discountedUnitPrice?: MoneyV2GenqlSelection
    /** Unit price with discounts applied. */
    discountedUnitPriceSet?: MoneyBagGenqlSelection
    /**
     * Name of the service provider who fulfilled the order.
     * 
     * Valid values are either **manual** or the name of the provider.
     * For example, **amazon**, **shipwire**.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /** The image associated with the draft order line item. */
    image?: ImageGenqlSelection
    /** Whether the line item represents the purchase of a gift card. */
    isGiftCard?: boolean | number
    /** The name of the product. */
    name?: boolean | number
    /**
     * The total price (without discounts) of the line item, based on the original unit price of the variant x quantity.
     * 
     */
    originalTotal?: MoneyV2GenqlSelection
    /** The total price (without discounts) of the line item, based on the original unit price of the variant x quantity. */
    originalTotalSet?: MoneyBagGenqlSelection
    /** The variant price without any discounts applied. */
    originalUnitPrice?: MoneyV2GenqlSelection
    /** The variant price without any discounts applied. */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /** The product associated with the draft order line item. */
    product?: ProductGenqlSelection
    /** The number of variant items requested in the draft order. */
    quantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /** The SKU number of the product variant. */
    sku?: boolean | number
    /** Whether the variant is taxable. */
    taxable?: boolean | number
    /** The title of the product or variant. This field only applies to custom line items. */
    title?: boolean | number
    /** The total value of the discount. */
    totalDiscount?: MoneyV2GenqlSelection
    /** The total value of the discount. */
    totalDiscountSet?: MoneyBagGenqlSelection
    /** The variant associated with the draft order line item. */
    variant?: ProductVariantGenqlSelection
    /** The name of the variant. */
    variantTitle?: boolean | number
    /** The name of the vendor who created the product variant. */
    vendor?: boolean | number
    /** The weight unit and value for a draft order line item. */
    weight?: WeightGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A line item involved in order editing that may be newly added or have new changes applied.
 * 
 */
export interface CalculatedLineItemGenqlSelection{
    /** The discounts that have been allocated onto the line item by discount applications. */
    calculatedDiscountAllocations?: CalculatedDiscountAllocationGenqlSelection
    /** A list of attributes that represent custom features or special requests. */
    customAttributes?: AttributeGenqlSelection
    /**
     * @deprecated Use `calculatedDiscountAllocations` instead.
     * The discounts that have been allocated onto the line item by discount applications.
     */
    discountAllocations?: DiscountAllocationGenqlSelection
    /** The price of a single quantity of the line item with line item discounts applied, in shop and presentment currencies. Discounts applied to the entire order aren't included in this price. */
    discountedUnitPriceSet?: MoneyBagGenqlSelection
    /** The total number of items that can be edited. */
    editableQuantity?: boolean | number
    /** The editable quantity prior to any changes made in the current edit. */
    editableQuantityBeforeChanges?: boolean | number
    /** The total price of editable lines in shop and presentment currencies. */
    editableSubtotalSet?: MoneyBagGenqlSelection
    /** Whether the calculated line item has a staged discount. */
    hasStagedLineItemDiscount?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image object associated to the line item's variant. */
    image?: ImageGenqlSelection
    /** The variant unit price in shop and presentment currencies, without any discounts applied. */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /** The total number of items. */
    quantity?: boolean | number
    /** Whether the line item can be restocked or not. */
    restockable?: boolean | number
    /** Whether the changes on the line item will result in a restock. */
    restocking?: boolean | number
    /** The variant SKU number. */
    sku?: boolean | number
    /** A list of changes that affect this line item. */
    stagedChanges?: OrderStagedChangeGenqlSelection
    /** The title of the product. */
    title?: boolean | number
    /** The total price of uneditable lines in shop and presentment currencies. */
    uneditableSubtotalSet?: MoneyBagGenqlSelection
    /**
     * The product variant associated with this line item. The value is null for custom line items and items where
     * the variant has been deleted.
     * 
     */
    variant?: ProductVariantGenqlSelection
    /** The title of the variant. */
    variantTitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CalculatedLineItems.
 * 
 */
export interface CalculatedLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CalculatedLineItemEdgeGenqlSelection
    /** A list of the nodes contained in CalculatedLineItemEdge. */
    nodes?: CalculatedLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CalculatedLineItem and a cursor during pagination.
 * 
 */
export interface CalculatedLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CalculatedLineItemEdge. */
    node?: CalculatedLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a discount that was manually created for an order that is being edited.
 * 
 */
export interface CalculatedManualDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod?: boolean | number
    /** The level at which the discount was applied. */
    appliedTo?: boolean | number
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An order with edits applied but not saved.
 * 
 */
export interface CalculatedOrderGenqlSelection{
    /**
     * Returns only the new discount applications being added to the order in the current edit.
     * 
     */
    addedDiscountApplications?: (CalculatedDiscountApplicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * Returns only the new line items being added to the order during the current edit.
     * 
     */
    addedLineItems?: (CalculatedLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Amount of the order-level discount (does not contain any line item discounts) in shop and presentment currencies. */
    cartDiscountAmountSet?: MoneyBagGenqlSelection
    /** Whether the changes have been applied and saved to the order. */
    committed?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * Returns all items on the order that existed before starting the edit.
     * Will include any changes that have been made.
     * Will not include line items added during the current edit.
     * 
     */
    lineItems?: (CalculatedLineItemConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `editable`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The HTML of the customer notification for the order edit. */
    notificationPreviewHtml?: boolean | number
    /** The customer notification title. */
    notificationPreviewTitle?: boolean | number
    /**
     * @deprecated Use `originalOrder` instead.
     * The order without any changes applied.
     */
    order?: OrderGenqlSelection
    /**
     * The order without any changes applied.
     * 
     */
    originalOrder?: OrderGenqlSelection
    /**
     * List of changes made to the order during the current edit.
     * 
     */
    stagedChanges?: (OrderStagedChangeConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The sum of the quantities for the line items that contribute to the order's subtotal. */
    subtotalLineItemsQuantity?: boolean | number
    /** The subtotal of the line items, in shop and presentment currencies, after all the discounts are applied.  The subtotal does not include shipping.  The subtotal includes taxes for taxes-included orders and excludes taxes for taxes-excluded orders. */
    subtotalPriceSet?: MoneyBagGenqlSelection
    /** Taxes charged for the line item. */
    taxLines?: TaxLineGenqlSelection
    /** Total price of the order less the total amount received from the customer in shop and presentment currencies. */
    totalOutstandingSet?: MoneyBagGenqlSelection
    /** Total amount of the order (includes taxes and discounts) in shop and presentment currencies. */
    totalPriceSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A discount created by a Shopify script for an order that is being edited.
 * 
 */
export interface CalculatedScriptDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is allocated to its entitled items. */
    allocationMethod?: boolean | number
    /** The level at which the discount was applied. */
    appliedTo?: boolean | number
    /** The description of discount application. Indicates the reason why the discount was applied. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Card payment details related to a transaction. */
export interface CardPaymentDetailsGenqlSelection{
    /** The response code from the address verification system (AVS). The code is always a single letter. */
    avsResultCode?: boolean | number
    /** The issuer identification number (IIN), formerly known as bank identification number (BIN) of the customer's credit card. This is made up of the first few digits of the credit card number. */
    bin?: boolean | number
    /** The name of the company that issued the customer's credit card. */
    company?: boolean | number
    /** The response code from the credit card company indicating whether the customer entered the card security code, or card verification value, correctly. The code is a single letter or empty string. */
    cvvResultCode?: boolean | number
    /** The month in which the used credit card expires. */
    expirationMonth?: boolean | number
    /** The year in which the used credit card expires. */
    expirationYear?: boolean | number
    /** The holder of the credit card. */
    name?: boolean | number
    /** The customer's credit card number, with most of the leading digits redacted. */
    number?: boolean | number
    /** Digital wallet used for the payment. */
    wallet?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A Cart Transform Function to create [Customized Bundles.](https://shopify.dev/docs/apps/selling-strategies/bundles/add-a-customized-bundle).
 * 
 */
export interface CartTransformGenqlSelection{
    /** The ID for the Cart Transform function. */
    functionId?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CartTransforms.
 * 
 */
export interface CartTransformConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CartTransformEdgeGenqlSelection
    /** A list of the nodes contained in CartTransformEdge. */
    nodes?: CartTransformGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `cartTransformCreate` mutation. */
export interface CartTransformCreatePayloadGenqlSelection{
    /** The newly created cart transform function. */
    cartTransform?: CartTransformGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CartTransformCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CartTransformCreate`. */
export interface CartTransformCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `cartTransformDelete` mutation. */
export interface CartTransformDeletePayloadGenqlSelection{
    /** The globally-unique ID for the deleted cart transform. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CartTransformDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CartTransformDelete`. */
export interface CartTransformDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CartTransform and a cursor during pagination.
 * 
 */
export interface CartTransformEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CartTransformEdge. */
    node?: CartTransformGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A list of products with publishing and pricing information.
 * A catalog can be associated with a specific context, such as a [`Market`](https://shopify.dev/api/admin-graphql/current/objects/market), [`CompanyLocation`](https://shopify.dev/api/admin-graphql/current/objects/companylocation), or [`App`](https://shopify.dev/api/admin-graphql/current/objects/app).
 * 
 */
export interface CatalogGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** Most recent catalog operations. */
    operations?: ResourceOperationGenqlSelection
    /** The price list associated with the catalog. */
    priceList?: PriceListGenqlSelection
    /** A group of products and collections that's published to a catalog. */
    publication?: PublicationGenqlSelection
    /** The status of the catalog. */
    status?: boolean | number
    /** The name of the catalog. */
    title?: boolean | number
    on_AppCatalog?: AppCatalogGenqlSelection
    on_CompanyLocationCatalog?: CompanyLocationCatalogGenqlSelection
    on_MarketCatalog?: MarketCatalogGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Catalogs.
 * 
 */
export interface CatalogConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CatalogEdgeGenqlSelection
    /** A list of the nodes contained in CatalogEdge. */
    nodes?: CatalogGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The total count of Catalogs. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the context in which the catalog's publishing and pricing rules apply. */
export interface CatalogContextInput {
/** The IDs of the company locations to associate to the catalog. */
companyLocationIds?: (Scalars['ID'][] | null)}


/** Return type for `catalogContextUpdate` mutation. */
export interface CatalogContextUpdatePayloadGenqlSelection{
    /** The updated catalog. */
    catalog?: CatalogGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CatalogUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a catalog. */
export interface CatalogCreateInput {
/** The name of the catalog. */
title: Scalars['String'],
/** The status of the catalog. */
status: CatalogStatus,
/** The context associated with the catalog. */
context: CatalogContextInput,
/** The ID of the price list to associate to the catalog. */
priceListId?: (Scalars['ID'] | null),
/** The ID of the publication to associate to the catalog. */
publicationId?: (Scalars['ID'] | null)}


/** Return type for `catalogCreate` mutation. */
export interface CatalogCreatePayloadGenqlSelection{
    /** The newly created catalog. */
    catalog?: CatalogGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CatalogUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A catalog csv operation represents a CSV file import. */
export interface CatalogCsvOperationGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: boolean | number
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCountGenqlSelection
    /** The status of this operation. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `catalogDelete` mutation. */
export interface CatalogDeletePayloadGenqlSelection{
    /** The ID of the deleted catalog. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CatalogUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Catalog and a cursor during pagination.
 * 
 */
export interface CatalogEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CatalogEdge. */
    node?: CatalogGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to update a catalog. */
export interface CatalogUpdateInput {
/** The name of the catalog. */
title?: (Scalars['String'] | null),
/** The status of the catalog. */
status?: (CatalogStatus | null),
/** The context associated with the catalog. */
context?: (CatalogContextInput | null),
/** The ID of the price list to associate to the catalog. */
priceListId?: (Scalars['ID'] | null),
/** The ID of the publication to associate to the catalog. */
publicationId?: (Scalars['ID'] | null)}


/** Return type for `catalogUpdate` mutation. */
export interface CatalogUpdatePayloadGenqlSelection{
    /** The updated catalog. */
    catalog?: CatalogGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CatalogUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Defines errors encountered while managing a catalog.
 * 
 */
export interface CatalogUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A channel represents an app where you sell a group of products and collections.
 * A channel can be a platform or marketplace such as Facebook or Pinterest, an online store, or POS.
 * 
 */
export interface ChannelGenqlSelection{
    /** The underlying app used by the channel. */
    app?: AppGenqlSelection
    /** The collection publications for the list of collections published to the channel. */
    collectionPublicationsV3?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of collections published to the channel. */
    collections?: (CollectionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `id` instead.
     * The unique identifier for the channel.
     */
    handle?: boolean | number
    /** Whether the collection is available to the channel. */
    hasCollection?: { __args: {
    /** The collection ID to check. */
    id: Scalars['ID']} }
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the channel. */
    name?: boolean | number
    /**
     * @deprecated Use [AppInstallation.navigationItems](           https://shopify.dev/api/admin-graphql/current/objects/AppInstallation#field-appinstallation-navigationitems) instead.
     * The menu items for the channel, which also appear as submenu items in the left navigation sidebar in the Shopify admin.
     * 
     */
    navigationItems?: NavigationItemGenqlSelection
    /**
     * @deprecated Use [AppInstallation.launchUrl](           https://shopify.dev/api/admin-graphql/current/objects/AppInstallation#field-appinstallation-launchurl) instead.
     * Home page for the channel.
     */
    overviewPath?: boolean | number
    /**
     * @deprecated Use `productPublicationsV3` instead.
     * The product publications for the products published to the channel.
     */
    productPublications?: (ProductPublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The product publications for the list of products published to the channel. */
    productPublicationsV3?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of products published to the channel. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Whether the channel supports future publishing. */
    supportsFuturePublishing?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Channels.
 * 
 */
export interface ChannelConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ChannelEdgeGenqlSelection
    /** A list of the nodes contained in ChannelEdge. */
    nodes?: ChannelGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A channel definition represents channels surfaces on the platform.
 * A channel definition can be a platform or a subsegment of it such as Facebook Home, Instagram Live, Instagram Shops, or WhatsApp chat.
 * 
 */
export interface ChannelDefinitionGenqlSelection{
    /** Name of the channel that this sub channel belongs to. */
    channelName?: boolean | number
    /** Unique string used as a public identifier for the channel definition. */
    handle?: boolean | number
    /** The unique ID for the channel definition. */
    id?: boolean | number
    /** Whether this channel definition represents a marketplace. */
    isMarketplace?: boolean | number
    /** Name of the sub channel (e.g. Online Store, Instagram Shopping, TikTok Live). */
    subChannelName?: boolean | number
    /** Icon displayed when showing the channel in admin. */
    svgIcon?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Channel and a cursor during pagination.
 * 
 */
export interface ChannelEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ChannelEdge. */
    node?: ChannelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Contains the information for a given sales channel.
 * 
 */
export interface ChannelInformationGenqlSelection{
    /** The app associated with the channel. */
    app?: AppGenqlSelection
    /** The channel definition associated with the channel. */
    channelDefinition?: ChannelDefinitionGenqlSelection
    /** The unique ID for the channel. */
    channelId?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A checkout profile defines the branding settings and the UI extensions for a store's checkout. A checkout profile could be published or draft. A store might have at most one published checkout profile, which is used to render their live checkout. The store could also have multiple draft profiles that were created, previewed, and published using the admin checkout editor. */
export interface CheckoutProfileGenqlSelection{
    /** The date and time when the checkout profile was created. */
    createdAt?: boolean | number
    /** The date and time when the checkout profile was last edited. */
    editedAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Whether the checkout profile is published or not. */
    isPublished?: boolean | number
    /** The profile name. */
    name?: boolean | number
    /** The date and time when the checkout profile was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CheckoutProfiles.
 * 
 */
export interface CheckoutProfileConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CheckoutProfileEdgeGenqlSelection
    /** A list of the nodes contained in CheckoutProfileEdge. */
    nodes?: CheckoutProfileGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CheckoutProfile and a cursor during pagination.
 * 
 */
export interface CheckoutProfileEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CheckoutProfileEdge. */
    node?: CheckoutProfileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a group of products that can be displayed in online stores and other sales channels in categories, which makes it easy for customers to find them. For example, an athletics store might create different collections for running attire, shoes, and accessories.
 * 
 * Collections can be defined by conditions, such as whether they match certain product tags. These are called smart or automated collections.
 * 
 * Collections can also be created for a custom group of products. These are called custom or manual collections.
 * 
 */
export interface CollectionGenqlSelection{
    /** The number of publications a resource is published to without feedback errors. */
    availablePublicationCount?: boolean | number
    /**
     * A single-line, text-only description of the collection, stripped of any HTML tags and formatting that were included in the description.
     * 
     */
    description?: { __args: {
    /** Truncates string after the given length. */
    truncateAt?: (Scalars['Int'] | null)} } | boolean | number
    /**
     * The description of the collection, including any HTML tags and formatting. This content is typically displayed to customers, such as on an online store, depending on the theme.
     * 
     */
    descriptionHtml?: boolean | number
    /** Information about the collection that's provided through resource feedback. */
    feedback?: ResourceFeedbackGenqlSelection
    /**
     * A unique string that identifies the collection. If a handle isn't specified when a collection is created, it's automatically generated from the collection's original title, and typically includes words from the title separated by hyphens. For example, a collection that was created with the title `Summer Catalog 2022` might have the handle `summer-catalog-2022`.
     * 
     * If the title is changed, the handle doesn't automatically change.
     * 
     * The handle can be used in themes by the Liquid templating language to refer to the collection, but using the ID is preferred because it never changes.
     * 
     */
    handle?: boolean | number
    /** Whether the collection includes the specified product. */
    hasProduct?: { __args: {
    /** The ID of the product to check. */
    id: Scalars['ID']} }
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image associated with the collection. */
    image?: ImageGenqlSelection
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The products that are included in the collection. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductCollectionSortKeys | null)} })
    /** The number of products in the collection. */
    productsCount?: boolean | number
    /** The number of publications a resource is published on. */
    publicationCount?: { __args: {
    /** Include only the resource's publications that are published. If false, then return all the resource's publications including future publications. */
    onlyPublished?: (Scalars['Boolean'] | null)} } | boolean | number
    /**
     * @deprecated Use `resourcePublications` instead.
     * The channels where the collection is published.
     */
    publications?: (CollectionPublicationConnectionGenqlSelection & { __args?: {
    /** Whether or not to return only the collection publications that are published. */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `publishedOnPublication` instead.
     * Check to see whether the resource is published to a given channel.
     */
    publishedOnChannel?: { __args: {
    /** The ID of the channel to check. */
    channelId: Scalars['ID']} }
    /**
     * @deprecated Use `publishedOnCurrentPublication` instead.
     * Check to see whether the resource is published to the calling app's channel.
     */
    publishedOnCurrentChannel?: boolean | number
    /** Check to see whether the resource is published to the calling app's publication. */
    publishedOnCurrentPublication?: boolean | number
    /** Check to see whether the resource is published to a given publication. */
    publishedOnPublication?: { __args: {
    /** The ID of the publication to check. */
    publicationId: Scalars['ID']} }
    /** The list of resources that are published to a publication. */
    resourcePublications?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /**
     * Whether to return only the resources that are currently published. If false, then also returns the resources that are scheduled to be published.
     * 
     */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of resources that are either published or staged to be published to a publication. */
    resourcePublicationsV2?: (ResourcePublicationV2ConnectionGenqlSelection & { __args?: {
    /**
     * Whether to return only the resources that are currently published. If false, then also returns the resources that are scheduled or staged to be published.
     * 
     */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Filter publications by catalog type. */
    catalogType?: (CatalogType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * For a smart (automated) collection, specifies the rules that determine whether a product is included.
     * 
     */
    ruleSet?: CollectionRuleSetGenqlSelection
    /**
     * If the default SEO fields for page title and description have been modified, contains the modified information.
     * 
     */
    seo?: SEOGenqlSelection
    /**
     * The order in which the products in the collection are displayed by default in the Shopify admin and in sales channels, such as an online store.
     * 
     */
    sortOrder?: boolean | number
    /**
     * @deprecated Use `id` instead.
     * The Storefront GraphQL API ID of the `Collection`.
     * 
     * As of the `2022-04` version release, the Storefront GraphQL API will no longer return Base64 encoded IDs to match the behavior of the Admin GraphQL API. Therefore, you can safely use the `id` field's value instead.
     * 
     */
    storefrontId?: boolean | number
    /**
     * The suffix of the Liquid template being used to show the collection in an online store. For example, if the value is `custom`, then the collection is using the `collection.custom.liquid` template. If the value is `null`, then the collection is using the default `collection.liquid` template.
     * 
     */
    templateSuffix?: boolean | number
    /**
     * The name of the collection. It's displayed in the Shopify admin and is typically displayed in sales channels, such as an online store.
     * 
     */
    title?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /**
     * @deprecated Use `unpublishedPublications` instead.
     * The list of channels that the resource is not published to.
     */
    unpublishedChannels?: (ChannelConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of publications that the resource is not published to. */
    unpublishedPublications?: (PublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the collection was last modified.
     * 
     */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `collectionAddProducts` mutation. */
export interface CollectionAddProductsPayloadGenqlSelection{
    /** The updated collection. Returns `null` if an error is raised. */
    collection?: CollectionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `collectionAddProductsV2` mutation. */
export interface CollectionAddProductsV2PayloadGenqlSelection{
    /** The asynchronous job adding the products. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CollectionAddProductsV2UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CollectionAddProductsV2`. */
export interface CollectionAddProductsV2UserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Collections.
 * 
 */
export interface CollectionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CollectionEdgeGenqlSelection
    /** A list of the nodes contained in CollectionEdge. */
    nodes?: CollectionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `collectionCreate` mutation. */
export interface CollectionCreatePayloadGenqlSelection{
    /** The collection that has been created. */
    collection?: CollectionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying the collection to delete. */
export interface CollectionDeleteInput {
/** The ID of the collection to be deleted. */
id: Scalars['ID']}


/** Return type for `collectionDelete` mutation. */
export interface CollectionDeletePayloadGenqlSelection{
    /** The ID of the collection that was deleted. Returns `null` if the collection doesn't exist. */
    deletedCollectionId?: boolean | number
    /** The shop associated with the collection. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Collection and a cursor during pagination.
 * 
 */
export interface CollectionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CollectionEdge. */
    node?: CollectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a collection. */
export interface CollectionInput {
/** The description of the collection, in HTML format. */
descriptionHtml?: (Scalars['String'] | null),
/**
 * A unique human-friendly string for the collection. Automatically generated from the collection's title.
 * 
 */
handle?: (Scalars['String'] | null),
/**
 * Specifies the collection to update or create a new collection if absent. Required for updating a collection.
 * 
 */
id?: (Scalars['ID'] | null),
/** The image associated with the collection. */
image?: (ImageInput | null),
/** Initial list of collection products. Only valid with `collectionCreate` and without rules. */
products?: (Scalars['ID'][] | null),
/**
 * The rules used to assign products to the collection.
 * 
 */
ruleSet?: (CollectionRuleSetInput | null),
/** The theme template used when viewing the collection in a store. */
templateSuffix?: (Scalars['String'] | null),
/** The order in which the collection's products are sorted. */
sortOrder?: (CollectionSortOrder | null),
/** The title of the collection. Required for creating a new collection. */
title?: (Scalars['String'] | null),
/** The metafields to associate with the collection. */
metafields?: (MetafieldInput[] | null),
/** SEO information for the collection. */
seo?: (SEOInput | null),
/**
 * Indicates whether a redirect is required after a new handle has been provided.
 * If true, then the old handle is redirected to the new one automatically.
 * 
 */
redirectNewHandle?: (Scalars['Boolean'] | null)}


/** Represents the publications where a collection is published. */
export interface CollectionPublicationGenqlSelection{
    /**
     * @deprecated Use `publication` instead.
     * The channel where the collection will be published.
     */
    channel?: ChannelGenqlSelection
    /** The collection to be published on the publication. */
    collection?: CollectionGenqlSelection
    /** Whether the publication is published or not. */
    isPublished?: boolean | number
    /** The publication where the collection will be published. */
    publication?: PublicationGenqlSelection
    /** The date that the publication was or is going to be published. */
    publishDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CollectionPublications.
 * 
 */
export interface CollectionPublicationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CollectionPublicationEdgeGenqlSelection
    /** A list of the nodes contained in CollectionPublicationEdge. */
    nodes?: CollectionPublicationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CollectionPublication and a cursor during pagination.
 * 
 */
export interface CollectionPublicationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CollectionPublicationEdge. */
    node?: CollectionPublicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for publications to which a collection will be published. */
export interface CollectionPublicationInput {
/** The ID of the publication. */
publicationId?: (Scalars['ID'] | null)}


/** The input fields for specifying a collection to publish and the sales channels to publish it to. */
export interface CollectionPublishInput {
/** The collection to create or update publications for. */
id: Scalars['ID'],
/** The channels where the collection will be published. */
collectionPublications: CollectionPublicationInput[]}


/** Return type for `collectionPublish` mutation. */
export interface CollectionPublishPayloadGenqlSelection{
    /** The published collection. */
    collection?: CollectionGenqlSelection
    /** The channels where the collection has been published. */
    collectionPublications?: CollectionPublicationGenqlSelection
    /** The shop associated with the collection. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `collectionRemoveProducts` mutation. */
export interface CollectionRemoveProductsPayloadGenqlSelection{
    /** The asynchronous job removing the products. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `collectionReorderProducts` mutation. */
export interface CollectionReorderProductsPayloadGenqlSelection{
    /** The asynchronous job reordering the products. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents at rule that's used to assign products to a collection. */
export interface CollectionRuleGenqlSelection{
    /** The attribute that the rule focuses on. For example, `title` or `product_type`. */
    column?: boolean | number
    /** The value that the operator is applied to. For example, `Hats`. */
    condition?: boolean | number
    /** The value that the operator is applied to. */
    conditionObject?: CollectionRuleConditionObjectGenqlSelection
    /**
     * The type of operator that the rule is based on. For example, `equals`, `contains`, or `not_equals`.
     * 
     */
    relation?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies object for the condition of the rule. */
export interface CollectionRuleConditionObjectGenqlSelection{
    on_CollectionRuleMetafieldCondition?:CollectionRuleMetafieldConditionGenqlSelection,
    on_CollectionRuleProductCategoryCondition?:CollectionRuleProductCategoryConditionGenqlSelection,
    on_CollectionRuleTextCondition?:CollectionRuleTextConditionGenqlSelection,
    __typename?: boolean | number
}


/** This object defines all columns and allowed relations that can be used in rules for smart collections to automatically include the matching products. */
export interface CollectionRuleConditionsGenqlSelection{
    /** Allowed relations of the rule. */
    allowedRelations?: boolean | number
    /** Most commonly used relation for this rule. */
    defaultRelation?: boolean | number
    /** Additional attributes defining the rule. */
    ruleObject?: CollectionRuleConditionsRuleObjectGenqlSelection
    /** Type of the rule. */
    ruleType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies object with additional rule attributes. */
export interface CollectionRuleConditionsRuleObjectGenqlSelection{
    on_CollectionRuleMetafieldCondition?:CollectionRuleMetafieldConditionGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for a rule to associate with a collection. */
export interface CollectionRuleInput {
/** The attribute that the rule focuses on. For example, `title` or `product_type`. */
column: CollectionRuleColumn,
/**
 * The type of operator that the rule is based on. For example, `equals`, `contains`, or `not_equals`.
 * 
 */
relation: CollectionRuleRelation,
/** The value that the operator is applied to. For example, `Hats`. */
condition: Scalars['String'],
/**
 * The object ID that points to additional attributes for the collection rule.
 * This is only required when using metafield definition rules.
 * 
 */
conditionObjectId?: (Scalars['ID'] | null)}


/** Identifies a metafield definition used as a rule for the smart collection. */
export interface CollectionRuleMetafieldConditionGenqlSelection{
    /** The metafield definition associated with the condition. */
    metafieldDefinition?: MetafieldDefinitionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies the condition for a Product Category field. */
export interface CollectionRuleProductCategoryConditionGenqlSelection{
    /** The value of the condition. */
    value?: ProductTaxonomyNodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The set of rules that are used to determine which products are included in the collection. */
export interface CollectionRuleSetGenqlSelection{
    /**
     * Whether products must match any or all of the rules to be included in the collection.
     * If true, then products must match at least one of the rules to be included in the collection.
     * If false, then products must match all of the rules to be included in the collection.
     * 
     */
    appliedDisjunctively?: boolean | number
    /** The rules used to assign products to the collection. */
    rules?: CollectionRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a rule set of the collection. */
export interface CollectionRuleSetInput {
/**
 * Whether products must match any or all of the rules to be included in the collection.
 * If true, then products must match at least one of the rules to be included in the collection.
 * If false, then products must match all of the rules to be included in the collection.
 * 
 */
appliedDisjunctively: Scalars['Boolean'],
/** The rules used to assign products to the collection. */
rules?: (CollectionRuleInput[] | null)}


/** Specifies the condition for a text field. */
export interface CollectionRuleTextConditionGenqlSelection{
    /** The value of the condition. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for specifying the collection to unpublish and the sales channels to remove it from.
 * 
 */
export interface CollectionUnpublishInput {
/** The collection to create or update publications for. */
id: Scalars['ID'],
/** The channels where the collection is published. */
collectionPublications: CollectionPublicationInput[]}


/** Return type for `collectionUnpublish` mutation. */
export interface CollectionUnpublishPayloadGenqlSelection{
    /** The collection that has been unpublished. */
    collection?: CollectionGenqlSelection
    /** The shop associated with the collection. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `collectionUpdate` mutation. */
export interface CollectionUpdatePayloadGenqlSelection{
    /** The updated collection. */
    collection?: CollectionGenqlSelection
    /** The asynchronous job updating the products based on the new rule set. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Comment events are generated by staff members of a shop.
 * They are created when a staff member adds a comment to the timeline of an order, draft order, customer, or transfer.
 * 
 */
export interface CommentEventGenqlSelection{
    /** The name of the app that created the event. */
    appTitle?: boolean | number
    /** The attachments associated with the comment event. */
    attachments?: CommentEventAttachmentGenqlSelection
    /** Whether the event was created by an app. */
    attributeToApp?: boolean | number
    /** Whether the event was caused by an admin user. */
    attributeToUser?: boolean | number
    /** The name of the user that authored the comment event. */
    author?: StaffMemberGenqlSelection
    /** Whether the comment event can be deleted. If true, then the comment event can be deleted. */
    canDelete?: boolean | number
    /** Whether the comment event can be edited. If true, then the comment event can be edited. */
    canEdit?: boolean | number
    /** The date and time when the event was created. */
    createdAt?: boolean | number
    /** Whether the event is critical. */
    criticalAlert?: boolean | number
    /** Whether the comment event has been edited. If true, then the comment event has been edited. */
    edited?: boolean | number
    /** The object reference associated with the comment event. For example, a product or discount). */
    embed?: CommentEventEmbedGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** Human readable text that describes the event. */
    message?: boolean | number
    /** The raw body of the comment event. */
    rawMessage?: boolean | number
    /** The parent subject to which the comment event belongs. */
    subject?: CommentEventSubjectGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A file attachment associated to a comment event. */
export interface CommentEventAttachmentGenqlSelection{
    /** The file extension of the comment event attachment, indicating the file format. */
    fileExtension?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image attached to the comment event. */
    image?: ImageGenqlSelection
    /** The filename of the comment event attachment. */
    name?: boolean | number
    /** The size of the attachment. */
    size?: boolean | number
    /** The URL of the attachment. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The main embed of a comment event. */
export interface CommentEventEmbedGenqlSelection{
    on_Customer?:CustomerGenqlSelection,
    on_DraftOrder?:DraftOrderGenqlSelection,
    on_Order?:OrderGenqlSelection,
    on_Product?:ProductGenqlSelection,
    on_ProductVariant?:ProductVariantGenqlSelection,
    on_CommentEventSubject?: CommentEventSubjectGenqlSelection,
    on_HasEvents?: HasEventsGenqlSelection,
    on_HasMetafieldDefinitions?: HasMetafieldDefinitionsGenqlSelection,
    on_HasMetafields?: HasMetafieldsGenqlSelection,
    on_LegacyInteroperability?: LegacyInteroperabilityGenqlSelection,
    on_Node?: NodeGenqlSelection,
    on_HasLocalizationExtensions?: HasLocalizationExtensionsGenqlSelection,
    on_Navigable?: NavigableGenqlSelection,
    on_HasPublishedTranslations?: HasPublishedTranslationsGenqlSelection,
    on_OnlineStorePreviewable?: OnlineStorePreviewableGenqlSelection,
    on_Publishable?: PublishableGenqlSelection,
    __typename?: boolean | number
}


/** The subject line of a comment event. */
export interface CommentEventSubjectGenqlSelection{
    /** Whether the timeline subject has a timeline comment. If true, then a timeline comment exists. */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    on_Company?: CompanyGenqlSelection
    on_CompanyLocation?: CompanyLocationGenqlSelection
    on_Customer?: CustomerGenqlSelection
    on_DraftOrder?: DraftOrderGenqlSelection
    on_Order?: OrderGenqlSelection
    on_PriceRule?: PriceRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companiesDelete` mutation. */
export interface CompaniesDeletePayloadGenqlSelection{
    /** A list of IDs of the deleted companies. */
    deletedCompanyIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents information about a company which is also a customer of the shop. */
export interface CompanyGenqlSelection{
    /** The number of contacts that belong to the company. */
    contactCount?: boolean | number
    /** The list of roles for the company contacts. */
    contactRoles?: (CompanyContactRoleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyContactRoleSortKeys | null)} })
    /** The list of contacts in the company. */
    contacts?: (CompanyContactConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyContactSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `company_id`
     *  - `company_location_id`
     *  - `created_at`
     *  - `email`
     *  - `location_name`
     *  - `name`
     *  - `role_name`
     *  - `status`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company was created in Shopify. */
    createdAt?: boolean | number
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company became the customer. */
    customerSince?: boolean | number
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** The role proposed by default for a contact at the company. */
    defaultRole?: CompanyContactRoleGenqlSelection
    /** The list of the company's draft orders. */
    draftOrders?: (DraftOrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DraftOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `customer_id`
     *  - `source`
     *  - `status`
     *  - `tag`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A unique externally-supplied ID for the company. */
    externalId?: boolean | number
    /** Whether the merchant added a timeline comment to the company. */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The lifetime duration of the company, since it became a customer of the shop. Examples: `2 days`, `3 months`, `1 year`. */
    lifetimeDuration?: boolean | number
    /** The number of locations that belong to the company. */
    locationCount?: boolean | number
    /** The list of locations in the company. */
    locations?: (CompanyLocationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyLocationSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `company_id`
     *  - `created_at`
     *  - `external_id`
     *  - `ids`
     *  - `name`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The main contact for the company. */
    mainContact?: CompanyContactGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The name of the company. */
    name?: boolean | number
    /** A note about the company. */
    note?: boolean | number
    /** The total number of orders placed for this company, across all its locations. */
    orderCount?: boolean | number
    /** The list of the company's orders. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The total amount spent by this company, across all its locations. */
    totalSpent?: MoneyV2GenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company was last modified. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a billing or shipping address for a company location. */
export interface CompanyAddressGenqlSelection{
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: boolean | number
    /** The second line of the address. Typically the number of the apartment, suite, or unit. */
    address2?: boolean | number
    /** The name of the city, district, village, or town. */
    city?: boolean | number
    /** The name of the company. */
    companyName?: boolean | number
    /** The name of the country. */
    country?: boolean | number
    /**
     * The two-letter code for the country of the address.
     * For example, US.
     * 
     */
    countryCode?: boolean | number
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company address was created.
     * 
     */
    createdAt?: boolean | number
    /** The formatted version of the address. */
    formattedAddress?: { __args: {
    /** Whether to include the recipient's name in the formatted address. */
    withName?: (Scalars['Boolean'] | null), 
    /** Whether to include the company name in the formatted address. */
    withCompanyName?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A comma-separated list of the values for city, province, and country. */
    formattedArea?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * A unique phone number for the customer.
     * Formatted using E.164 standard. For example, _+16135551111_.
     * 
     */
    phone?: boolean | number
    /** The region of the address, such as the province, state, or district. */
    province?: boolean | number
    /** The identity of the recipient e.g. 'Receiving Department'. */
    recipient?: boolean | number
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company address was last updated.
     * 
     */
    updatedAt?: boolean | number
    /** The zip or postal code of the address. */
    zip?: boolean | number
    /**
     * The two-letter code for the region.
     * For example, ON.
     * 
     */
    zoneCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyAddressDelete` mutation. */
export interface CompanyAddressDeletePayloadGenqlSelection{
    /** The ID of the deleted address. */
    deletedAddressId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update the address of a company location. */
export interface CompanyAddressInput {
/** The first line of the address. Typically the street address or PO Box number. */
address1?: (Scalars['String'] | null),
/** The second line of the address. Typically the number of the apartment, suite, or unit. */
address2?: (Scalars['String'] | null),
/** The name of the city, district, village, or town. */
city?: (Scalars['String'] | null),
/** The zip or postal code of the address. */
zip?: (Scalars['String'] | null),
/** The identity of the recipient e.g. 'Receiving Department'. */
recipient?: (Scalars['String'] | null),
/** A phone number for the recipient. Formatted using E.164 standard. For example, _+16135551111_. */
phone?: (Scalars['String'] | null),
/** The two-letter code ([ISO 3166-2 alpha-2]](https://en.wikipedia.org/wiki/ISO_3166-2) format) for the region of the address, such as the province, state, or district. For example, `ON` for Ontario, Canada. */
zoneCode?: (Scalars['String'] | null),
/** The two-letter code ([ISO 3166-1 alpha-2]](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format) for the country of the address. For example, `US`` for the United States. */
countryCode?: (CountryCode | null)}


/** Return type for `companyAssignCustomerAsContact` mutation. */
export interface CompanyAssignCustomerAsContactPayloadGenqlSelection{
    /** The created company contact. */
    companyContact?: CompanyContactGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyAssignMainContact` mutation. */
export interface CompanyAssignMainContactPayloadGenqlSelection{
    /** The company for which the main contact is assigned. */
    company?: CompanyGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Companies.
 * 
 */
export interface CompanyConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CompanyEdgeGenqlSelection
    /** A list of the nodes contained in CompanyEdge. */
    nodes?: CompanyGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A person that acts on behalf of company associated to [a customer](https://shopify.dev/api/admin-graphql/latest/objects/customer). */
export interface CompanyContactGenqlSelection{
    /** The company to which the contact belongs. */
    company?: CompanyGenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company contact was created at Shopify. */
    createdAt?: boolean | number
    /** The customer associated to this contact. */
    customer?: CustomerGenqlSelection
    /** The list of draft orders for the company contact. */
    draftOrders?: (DraftOrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DraftOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `customer_id`
     *  - `source`
     *  - `status`
     *  - `tag`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** Whether the contact is the main contact of the company. */
    isMainContact?: boolean | number
    /** The lifetime duration of the company contact, since its creation date on Shopify. Examples: `1 year`, `2 months`, `3 days`. */
    lifetimeDuration?: boolean | number
    /** The company contact's locale (language). */
    locale?: boolean | number
    /** The list of orders for the company contact. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null)} })
    /** The list of roles assigned to this company contact. */
    roleAssignments?: (CompanyContactRoleAssignmentConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyContactRoleAssignmentSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `company_contact_id`
     *  - `company_contact_role_id`
     *  - `company_id`
     *  - `company_location_id`
     *  - `created_at`
     *  - `location_name`
     *  - `role_name`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The company contact's job title. */
    title?: boolean | number
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company contact was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactAssignRole` mutation. */
export interface CompanyContactAssignRolePayloadGenqlSelection{
    /** The company contact role assignment. */
    companyContactRoleAssignment?: CompanyContactRoleAssignmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactAssignRoles` mutation. */
export interface CompanyContactAssignRolesPayloadGenqlSelection{
    /** A list of newly created assignments of company contacts to a company location. */
    roleAssignments?: CompanyContactRoleAssignmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CompanyContacts.
 * 
 */
export interface CompanyContactConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CompanyContactEdgeGenqlSelection
    /** A list of the nodes contained in CompanyContactEdge. */
    nodes?: CompanyContactGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactCreate` mutation. */
export interface CompanyContactCreatePayloadGenqlSelection{
    /** The created company contact. */
    companyContact?: CompanyContactGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactDelete` mutation. */
export interface CompanyContactDeletePayloadGenqlSelection{
    /** The ID of the deleted company contact. */
    deletedCompanyContactId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CompanyContact and a cursor during pagination.
 * 
 */
export interface CompanyContactEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CompanyContactEdge. */
    node?: CompanyContactGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for company contact attributes when creating or updating a company contact. */
export interface CompanyContactInput {
/** The company contact's first name. */
firstName?: (Scalars['String'] | null),
/** The company contact's last name. */
lastName?: (Scalars['String'] | null),
/** The unique email address of the company contact. */
email?: (Scalars['String'] | null),
/** The title of the company contact. */
title?: (Scalars['String'] | null),
/** The contact's locale. */
locale?: (Scalars['String'] | null),
/** The phone number of the company contact. */
phone?: (Scalars['String'] | null)}


/** Return type for `companyContactRemoveFromCompany` mutation. */
export interface CompanyContactRemoveFromCompanyPayloadGenqlSelection{
    /** The ID of the removed company contact. */
    removedCompanyContactId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactRevokeRole` mutation. */
export interface CompanyContactRevokeRolePayloadGenqlSelection{
    /** The role assignment that was revoked. */
    revokedCompanyContactRoleAssignmentId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactRevokeRoles` mutation. */
export interface CompanyContactRevokeRolesPayloadGenqlSelection{
    /** A list of role assignment IDs that were removed from the company contact. */
    revokedRoleAssignmentIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The role for a [company contact](https://shopify.dev/api/admin-graphql/latest/objects/companycontact). */
export interface CompanyContactRoleGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * The name of a role.
     * For example, `admin` or `buyer`.
     * 
     */
    name?: boolean | number
    /** A note for the role. */
    note?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the role and location to assign to a company contact.
 * 
 */
export interface CompanyContactRoleAssign {
/** The role ID. */
companyContactRoleId: Scalars['ID'],
/** The location. */
companyLocationId: Scalars['ID']}


/** The CompanyContactRoleAssignment describes the company and location associated to a company contact's role. */
export interface CompanyContactRoleAssignmentGenqlSelection{
    /** The company this role assignment belongs to. */
    company?: CompanyGenqlSelection
    /** The company contact for whom this role is assigned. */
    companyContact?: CompanyContactGenqlSelection
    /** The company location to which the role is assigned. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the assignment record was created. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The role that is assigned to the company contact. */
    role?: CompanyContactRoleGenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the assignment record was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CompanyContactRoleAssignments.
 * 
 */
export interface CompanyContactRoleAssignmentConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CompanyContactRoleAssignmentEdgeGenqlSelection
    /** A list of the nodes contained in CompanyContactRoleAssignmentEdge. */
    nodes?: CompanyContactRoleAssignmentGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CompanyContactRoleAssignment and a cursor during pagination.
 * 
 */
export interface CompanyContactRoleAssignmentEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CompanyContactRoleAssignmentEdge. */
    node?: CompanyContactRoleAssignmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CompanyContactRoles.
 * 
 */
export interface CompanyContactRoleConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CompanyContactRoleEdgeGenqlSelection
    /** A list of the nodes contained in CompanyContactRoleEdge. */
    nodes?: CompanyContactRoleGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CompanyContactRole and a cursor during pagination.
 * 
 */
export interface CompanyContactRoleEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CompanyContactRoleEdge. */
    node?: CompanyContactRoleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactSendWelcomeEmail` mutation. */
export interface CompanyContactSendWelcomeEmailPayloadGenqlSelection{
    /** The company contact to whom a welcome email was sent. */
    companyContact?: CompanyContactGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactUpdate` mutation. */
export interface CompanyContactUpdatePayloadGenqlSelection{
    /** The updated company contact. */
    companyContact?: CompanyContactGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyContactsDelete` mutation. */
export interface CompanyContactsDeletePayloadGenqlSelection{
    /** The list of IDs of the deleted company contacts. */
    deletedCompanyContactIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields and values for creating a company and its associated resources.
 * 
 */
export interface CompanyCreateInput {
/** The attributes for the company. */
company: CompanyInput,
/** The attributes for the company contact. */
companyContact?: (CompanyContactInput | null),
/** The attributes for the company location. */
companyLocation?: (CompanyLocationInput | null)}


/** Return type for `companyCreate` mutation. */
export interface CompanyCreatePayloadGenqlSelection{
    /** The created company. */
    company?: CompanyGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyDelete` mutation. */
export interface CompanyDeletePayloadGenqlSelection{
    /** The ID of the deleted company. */
    deletedCompanyId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Company and a cursor during pagination.
 * 
 */
export interface CompanyEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CompanyEdge. */
    node?: CompanyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for company attributes when creating or updating a company. */
export interface CompanyInput {
/** The name of the company. */
name?: (Scalars['String'] | null),
/** A note about the company. */
note?: (Scalars['String'] | null),
/** A unique externally-supplied ID for the company. */
externalId?: (Scalars['String'] | null),
/**
 * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at
 *           which the company became the customer.
 */
customerSince?: (Scalars['DateTime'] | null)}


/** A location or branch of a [company that's a customer](https://shopify.dev/api/admin-graphql/latest/objects/company) of the shop. Configuration of B2B relationship, for example prices lists and checkout settings, may be done for a location. */
export interface CompanyLocationGenqlSelection{
    /** The address used as billing address for the location. */
    billingAddress?: CompanyAddressGenqlSelection
    /** The configuration for the buyer's B2B checkout. */
    buyerExperienceConfiguration?: BuyerExperienceConfigurationGenqlSelection
    /** The list of catalogs associated with the company location. */
    catalogs?: (CatalogConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The company that the company location belongs to. */
    company?: CompanyGenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company location was created in Shopify. */
    createdAt?: boolean | number
    /** The location's currency based on the shipping address. If the shipping address is empty, then the value is the shop's primary market. */
    currency?: boolean | number
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** The list of draft orders for the company location. */
    draftOrders?: (DraftOrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DraftOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `customer_id`
     *  - `source`
     *  - `status`
     *  - `tag`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A unique externally-supplied ID for the company location. */
    externalId?: boolean | number
    /** Whether the merchant added a timeline comment to the company location. */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Whether the company location is assigned a specific catalog. */
    inCatalog?: { __args: {
    /** The ID of the catalog. */
    catalogId: Scalars['ID']} }
    /** The preferred locale of the company location. */
    locale?: boolean | number
    /** The market that includes the location's shipping address. If the shipping address is empty, then the value is the shop's primary market. */
    market?: MarketGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The name of the company location. */
    name?: boolean | number
    /** A note about the company location. */
    note?: boolean | number
    /** The total number of orders placed for the location. */
    orderCount?: boolean | number
    /** The list of orders for the company location. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null)} })
    /** The phone number of the company location. */
    phone?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of roles assigned to the company location. */
    roleAssignments?: (CompanyContactRoleAssignmentConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyContactRoleAssignmentSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `company_contact_id`
     *  - `company_contact_role_id`
     *  - `company_id`
     *  - `company_location_id`
     *  - `created_at`
     *  - `location_name`
     *  - `role_name`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The address used as shipping address for the location. */
    shippingAddress?: CompanyAddressGenqlSelection
    /** The list of tax exemptions applied to the location. */
    taxExemptions?: boolean | number
    /** The tax registration ID for the company location. */
    taxRegistrationId?: boolean | number
    /** The total amount spent by the location. */
    totalSpent?: MoneyV2GenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) at which the company location was last modified. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationAssignAddress` mutation. */
export interface CompanyLocationAssignAddressPayloadGenqlSelection{
    /** The list of updated addresses on the company location. */
    addresses?: CompanyAddressGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationAssignRoles` mutation. */
export interface CompanyLocationAssignRolesPayloadGenqlSelection{
    /** A list of newly created assignments of company contacts to a company location. */
    roleAssignments?: CompanyContactRoleAssignmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationAssignTaxExemptions` mutation. */
export interface CompanyLocationAssignTaxExemptionsPayloadGenqlSelection{
    /** The updated company location. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A list of products with publishing and pricing information associated with company locations.
 * 
 */
export interface CompanyLocationCatalogGenqlSelection{
    /** The company locations associated with the catalog. */
    companyLocations?: (CompanyLocationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyLocationSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `company_id`
     *  - `created_at`
     *  - `external_id`
     *  - `ids`
     *  - `name`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The number of company locations associated with the catalog. */
    companyLocationsCount?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Most recent catalog operations. */
    operations?: ResourceOperationGenqlSelection
    /** The price list associated with the catalog. */
    priceList?: PriceListGenqlSelection
    /** A group of products and collections that's published to a catalog. */
    publication?: PublicationGenqlSelection
    /** The status of the catalog. */
    status?: boolean | number
    /** The name of the catalog. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CompanyLocations.
 * 
 */
export interface CompanyLocationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CompanyLocationEdgeGenqlSelection
    /** A list of the nodes contained in CompanyLocationEdge. */
    nodes?: CompanyLocationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationCreate` mutation. */
export interface CompanyLocationCreatePayloadGenqlSelection{
    /** The created company location. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationCreateTaxRegistration` mutation. */
export interface CompanyLocationCreateTaxRegistrationPayloadGenqlSelection{
    /** The company location with the created tax registration. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationDelete` mutation. */
export interface CompanyLocationDeletePayloadGenqlSelection{
    /** The ID of the deleted company location. */
    deletedCompanyLocationId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CompanyLocation and a cursor during pagination.
 * 
 */
export interface CompanyLocationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CompanyLocationEdge. */
    node?: CompanyLocationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for company location when creating or updating a company location. */
export interface CompanyLocationInput {
/** The name of the company location. */
name?: (Scalars['String'] | null),
/** The phone number of the company location. */
phone?: (Scalars['String'] | null),
/** The preferred locale of the company location. */
locale?: (Scalars['String'] | null),
/** A unique externally-supplied ID for the company location. */
externalId?: (Scalars['String'] | null),
/** A note about the company location. */
note?: (Scalars['String'] | null),
/** The configuration for the buyer's checkout at the company location. */
buyerExperienceConfiguration?: (BuyerExperienceConfigurationInput | null),
/** The input fields to create or update the billing address for a company location. */
billingAddress?: (CompanyAddressInput | null),
/** The input fields to create or update the shipping address for a company location. */
shippingAddress?: (CompanyAddressInput | null),
/** Whether the billing address is the same as the shipping address. If the value is true, then the input for `billingAddress` is ignored. */
billingSameAsShipping?: (Scalars['Boolean'] | null),
/** The tax registration ID of the company location. */
taxRegistrationId?: (Scalars['String'] | null),
/** The list of tax exemptions to apply to the company location. */
taxExemptions?: (TaxExemption[] | null)}


/** Return type for `companyLocationRevokeRoles` mutation. */
export interface CompanyLocationRevokeRolesPayloadGenqlSelection{
    /** A list of role assignment IDs that were removed from the company location. */
    revokedRoleAssignmentIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationRevokeTaxExemptions` mutation. */
export interface CompanyLocationRevokeTaxExemptionsPayloadGenqlSelection{
    /** The updated company location. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationRevokeTaxRegistration` mutation. */
export interface CompanyLocationRevokeTaxRegistrationPayloadGenqlSelection{
    /** The updated company location. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the role and contact to assign on a location.
 * 
 */
export interface CompanyLocationRoleAssign {
/** The role ID. */
companyContactRoleId: Scalars['ID'],
/** The company contact ID.. */
companyContactId: Scalars['ID']}


/** The input fields for company location when creating or updating a company location. */
export interface CompanyLocationUpdateInput {
/** The name of the company location. */
name?: (Scalars['String'] | null),
/** The phone number of the company location. */
phone?: (Scalars['String'] | null),
/** The preferred locale of the company location. */
locale?: (Scalars['String'] | null),
/** A unique externally-supplied ID for the company location. */
externalId?: (Scalars['String'] | null),
/** A note about the company location. */
note?: (Scalars['String'] | null),
/** The configuration for the buyer's checkout at the company location. */
buyerExperienceConfiguration?: (BuyerExperienceConfigurationInput | null)}


/** Return type for `companyLocationUpdate` mutation. */
export interface CompanyLocationUpdatePayloadGenqlSelection{
    /** The updated company location. */
    companyLocation?: CompanyLocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyLocationsDelete` mutation. */
export interface CompanyLocationsDeletePayloadGenqlSelection{
    /** A list of IDs of the deleted company locations. */
    deletedCompanyLocationIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyRevokeMainContact` mutation. */
export interface CompanyRevokeMainContactPayloadGenqlSelection{
    /** The company from which the main contact is revoked. */
    company?: CompanyGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `companyUpdate` mutation. */
export interface CompanyUpdatePayloadGenqlSelection{
    /** The updated company. */
    company?: CompanyGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BusinessCustomerUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the context data that determines the pricing of a variant. */
export interface ContextualPricingContext {
/** The country code used to fetch country-specific prices. */
country?: (CountryCode | null),
/**
 * The CompanyLocation ID used to fetch company location specific prices.
 * 
 */
companyLocationId?: (Scalars['ID'] | null)}


/** The context data that determines the publication status of a product. */
export interface ContextualPublicationContext {
/** The country code used to fetch country-specific publication. */
country?: (CountryCode | null),
/** The company location ID used to fetch company-specific publication. */
companyLocationId?: (Scalars['ID'] | null)}


/** The list of all the countries from the combined shipping zones for the shop. */
export interface CountriesInShippingZonesGenqlSelection{
    /** The list of all the countries from all the combined shipping zones. */
    countryCodes?: boolean | number
    /** Whether 'Rest of World' has been defined in any of the shipping zones. */
    includeRestOfWorld?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The country-specific harmonized system code and ISO country code for an inventory item.
 * 
 */
export interface CountryHarmonizedSystemCodeGenqlSelection{
    /** The ISO 3166-1 alpha-2 country code for the country that issued the specified harmonized system code. */
    countryCode?: boolean | number
    /** The country-specific harmonized system code. These are usually longer than 6 digits. */
    harmonizedSystemCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CountryHarmonizedSystemCodes.
 * 
 */
export interface CountryHarmonizedSystemCodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CountryHarmonizedSystemCodeEdgeGenqlSelection
    /** A list of the nodes contained in CountryHarmonizedSystemCodeEdge. */
    nodes?: CountryHarmonizedSystemCodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CountryHarmonizedSystemCode and a cursor during pagination.
 * 
 */
export interface CountryHarmonizedSystemCodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CountryHarmonizedSystemCodeEdge. */
    node?: CountryHarmonizedSystemCodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields required to specify a harmonized system code.
 * 
 */
export interface CountryHarmonizedSystemCodeInput {
/** Country specific harmonized system code. */
harmonizedSystemCode: Scalars['String'],
/** The ISO 3166-1 alpha-2 country code for the country that issued the specified harmonized system code. */
countryCode: CountryCode}


/** The input fields required to create a media object. */
export interface CreateMediaInput {
/** The original source of the media object. This might be an external URL or a staged upload URL. */
originalSource: Scalars['String'],
/** The alt text associated with the media. */
alt?: (Scalars['String'] | null),
/** The media content type. */
mediaContentType: MediaContentType}


/** Currency formats configured for the merchant. These formats are available to use within Liquid. */
export interface CurrencyFormatsGenqlSelection{
    /** Money without currency in HTML. */
    moneyFormat?: boolean | number
    /** Money without currency in emails. */
    moneyInEmailsFormat?: boolean | number
    /** Money with currency in HTML. */
    moneyWithCurrencyFormat?: boolean | number
    /** Money with currency in emails. */
    moneyWithCurrencyInEmailsFormat?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A setting for a presentment currency. */
export interface CurrencySettingGenqlSelection{
    /** The currency's ISO code. */
    currencyCode?: boolean | number
    /** The full name of the currency. */
    currencyName?: boolean | number
    /** Whether the currency is enabled or not. An enabled currency setting is visible to buyers and allows orders to be generated with that currency as presentment. */
    enabled?: boolean | number
    /** The date and time when the active exchange rate for the currency was last modified. It can be the automatic rate's creation date, or the manual rate's last updated at date if active. */
    rateUpdatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CurrencySettings.
 * 
 */
export interface CurrencySettingConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CurrencySettingEdgeGenqlSelection
    /** A list of the nodes contained in CurrencySettingEdge. */
    nodes?: CurrencySettingGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CurrencySetting and a cursor during pagination.
 * 
 */
export interface CurrencySettingEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CurrencySettingEdge. */
    node?: CurrencySettingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a custom shipping package used to pack shipment. */
export interface CustomShippingPackageInput {
/** Weight of the empty shipping package. */
weight?: (WeightInput | null),
/** Outside dimensions of the empty shipping package. */
dimensions?: (ObjectDimensionsInput | null),
/** The default package is the one used to calculate shipping costs on checkout. */
default?: (Scalars['Boolean'] | null),
/** Descriptive name for the package. */
name?: (Scalars['String'] | null),
/** Type of package. */
type?: (ShippingPackageType | null)}


/**
 * Represents information about a customer of the shop, such as the customer's contact details, their order
 * history, and whether they've agreed to receive marketing material by email.
 * 
 * **Caution:** Only use this data if it's required for your app's functionality. Shopify will restrict [access to scopes](https://shopify.dev/api/usage/access-scopes) for apps that don't have a legitimate use for the associated data.
 * 
 */
export interface CustomerGenqlSelection{
    /**
     * @deprecated Use `emailMarketingConsent` instead.
     * Whether the customer has agreed to receive marketing material.
     */
    acceptsMarketing?: boolean | number
    /**
     * @deprecated Use `emailMarketingConsent` instead.
     * The date and time when the customer consented or objected to receiving marketing material by email.
     * 
     */
    acceptsMarketingUpdatedAt?: boolean | number
    /** A list of addresses associated with the customer. */
    addresses?: (MailingAddressGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /** The total amount that the customer has spent on orders in their lifetime. */
    amountSpent?: MoneyV2GenqlSelection
    /**
     * @deprecated Use `averageOrderAmountV2` instead.
     * The average amount that the customer spent per order.
     */
    averageOrderAmount?: boolean | number
    /** The average amount that the customer spent per order. */
    averageOrderAmountV2?: MoneyV2GenqlSelection
    /**
     * Whether the merchant can delete the customer from their store.
     * 
     * A customer can be deleted from a store only if they have not yet made an order. After a customer makes an
     * order, they can't be deleted from a store.
     * 
     */
    canDelete?: boolean | number
    /** A list of the customer's company contact profiles. */
    companyContactProfiles?: CompanyContactGenqlSelection
    /** The date and time when the customer was added to the store. */
    createdAt?: boolean | number
    /** The default address associated with the customer. */
    defaultAddress?: MailingAddressGenqlSelection
    /**
     * The full name of the customer, based on the values for first_name and last_name. If the first_name and
     * last_name are not available, then this falls back to the customer's email address, and if that is not available, the customer's phone number.
     * 
     */
    displayName?: boolean | number
    /** The customer's email address. */
    email?: boolean | number
    /**
     * The current email marketing state for the customer.
     * If the customer doesn't have an email address, then this property is `null`.
     * 
     */
    emailMarketingConsent?: CustomerEmailMarketingConsentStateGenqlSelection
    /** A list of events associated with the customer. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The customer's first name. */
    firstName?: boolean | number
    /**
     * @deprecated To query for comments on the timeline, use the events connection and a `query` argument containing `verb:comment`, or look for a `CommentEvent` in the `__typename` of events.
     * Whether the merchant has added timeline comments about the customer on the customer's page.
     */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image associated with the customer. */
    image?: ImageGenqlSelection
    /** The customer's last name. */
    lastName?: boolean | number
    /** The customer's last order. */
    lastOrder?: OrderGenqlSelection
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /**
     * The amount of time since the customer was first added to the store.
     * 
     * Example: 'about 12 years'.
     * 
     */
    lifetimeDuration?: boolean | number
    /** The customer's locale. */
    locale?: boolean | number
    /** The market that includes the customer’s default address. */
    market?: MarketGenqlSelection
    /**
     * @deprecated Use `emailMarketingConsent` instead.
     * The marketing subscription opt-in level, as described by the M3AAWG best practices guidelines, that the
     * customer gave when they consented to receive marketing material by email.
     * 
     * If the customer does not accept email marketing, then this property is `null`.
     * 
     */
    marketingOptInLevel?: boolean | number
    /** Whether the customer can be merged with another customer. */
    mergeable?: CustomerMergeableGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A unique identifier for the customer that's used with Multipass login. */
    multipassIdentifier?: boolean | number
    /** A note about the customer. */
    note?: boolean | number
    /** The number of orders that the customer has made at the store in their lifetime. */
    numberOfOrders?: boolean | number
    /** A list of the customer's orders. */
    orders?: (OrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `cart_token`
     *  - `channel`
     *  - `channel_id`
     *  - `chargeback_status`
     *  - `checkout_token`
     *  - `confirmation_number`
     *  - `created_at`
     *  - `credit_card_last4`
     *  - `customer_id`
     *  - `delivery_method`
     *  - `discount_code`
     *  - `earliest_fulfill_by`
     *  - `email`
     *  - `financial_status`
     *  - `fraud_protection_level`
     *  - `fulfillment_location_id`
     *  - `fulfillment_status`
     *  - `gateway`
     *  - `location_id`
     *  - `name`
     *  - `payment_id`
     *  - `payment_provider_id`
     *  - `po_number`
     *  - `processed_at`
     *  - `reference_location_id`
     *  - `return_status`
     *  - `risk_level`
     *  - `sales_channel`
     *  - `sku`
     *  - `source_identifier`
     *  - `source_name`
     *  - `status`
     *  - `tag`
     *  - `tag_not`
     *  - `test`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A list of the customer's payment methods. */
    paymentMethods?: (CustomerPaymentMethodConnectionGenqlSelection & { __args?: {
    /** Whether to show the customer's revoked payment method. */
    showRevoked?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The customer's phone number. */
    phone?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Possible subscriber states of a customer defined by their subscription contracts. */
    productSubscriberStatus?: boolean | number
    /**
     * The current SMS marketing state for the customer's phone number.
     * 
     * If the customer does not have a phone number, then this property is `null`.
     * 
     */
    smsMarketingConsent?: CustomerSmsMarketingConsentStateGenqlSelection
    /** The state of the customer's account with the shop. */
    state?: boolean | number
    /** The statistics for a given customer. */
    statistics?: CustomerStatisticsGenqlSelection
    /** A list of the customer's subscription contracts. */
    subscriptionContracts?: (SubscriptionContractConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A comma separated list of tags that have been added to the customer. */
    tags?: boolean | number
    /** Whether the customer is exempt from being charged taxes on their orders. */
    taxExempt?: boolean | number
    /** The list of tax exemptions applied to the customer. */
    taxExemptions?: boolean | number
    /** The URL to unsubscribe the customer from the mailing list. */
    unsubscribeUrl?: boolean | number
    /** The date and time when the customer was last updated. */
    updatedAt?: boolean | number
    /**
     * Whether the email address is formatted correctly.
     * 
     * Returns `true` when the email is formatted correctly and
     * belongs to an existing domain. This doesn't guarantee that
     * the email address actually exists.
     * 
     */
    validEmailAddress?: boolean | number
    /** Whether the customer has verified their email address. Defaults to `true` if the customer is created through the Shopify admin or API. */
    verifiedEmail?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerAddTaxExemptions` mutation. */
export interface CustomerAddTaxExemptionsPayloadGenqlSelection{
    /** The updated customer. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Customers.
 * 
 */
export interface CustomerConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CustomerEdgeGenqlSelection
    /** A list of the nodes contained in CustomerEdge. */
    nodes?: CustomerGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerCreate` mutation. */
export interface CustomerCreatePayloadGenqlSelection{
    /** The created customer. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a card instrument for customer payment method. */
export interface CustomerCreditCardGenqlSelection{
    /** The billing address of the card. */
    billingAddress?: CustomerCreditCardBillingAddressGenqlSelection
    /** The brand of the card. */
    brand?: boolean | number
    /** Whether the card is about to expire. */
    expiresSoon?: boolean | number
    /** The expiry month of the card. */
    expiryMonth?: boolean | number
    /** The expiry year of the card. */
    expiryYear?: boolean | number
    /** The card's BIN number. */
    firstDigits?: boolean | number
    /** The payment method can be revoked if there are no active subscription contracts. */
    isRevocable?: boolean | number
    /** The last 4 digits of the card. */
    lastDigits?: boolean | number
    /** The masked card number with only the last 4 digits displayed. */
    maskedNumber?: boolean | number
    /** The name of the card holder. */
    name?: boolean | number
    /** The source of the card if coming from a wallet such as Apple Pay. */
    source?: boolean | number
    /** The last 4 digits of the Device Account Number. */
    virtualLastDigits?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The billing address of a credit card payment instrument. */
export interface CustomerCreditCardBillingAddressGenqlSelection{
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: boolean | number
    /** The name of the city, district, village, or town. */
    city?: boolean | number
    /** The name of the country. */
    country?: boolean | number
    /**
     * The two-letter code for the country of the address.
     * For example, US.
     * 
     */
    countryCode?: boolean | number
    /** The first name in the billing address. */
    firstName?: boolean | number
    /** The last name in the billing address. */
    lastName?: boolean | number
    /** The region of the address, such as the province, state, or district. */
    province?: boolean | number
    /**
     * The two-letter code for the region.
     * For example, ON.
     * 
     */
    provinceCode?: boolean | number
    /** The zip or postal code of the address. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to delete a customer. */
export interface CustomerDeleteInput {
/** The ID of the customer to delete. */
id: Scalars['ID']}


/** Return type for `customerDelete` mutation. */
export interface CustomerDeletePayloadGenqlSelection{
    /** The ID of the deleted customer. */
    deletedCustomerId?: boolean | number
    /** The shop of the deleted customer. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Customer and a cursor during pagination.
 * 
 */
export interface CustomerEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CustomerEdge. */
    node?: CustomerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents an email address.
 * 
 */
export interface CustomerEmailAddressGenqlSelection{
    /** The customer's default email address. */
    emailAddress?: boolean | number
    /** Whether the customer has subscribed to email marketing. */
    marketingState?: boolean | number
    /** The URL to unsubscribe a member from all mailing lists. */
    marketingUnsubscribeUrl?: boolean | number
    /**
     * Whether the customer has opted in to having their opened emails tracked.
     * 
     */
    openTrackingLevel?: boolean | number
    /**
     * The URL that can be used to opt a customer in or out of email open tracking.
     * 
     */
    openTrackingUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Information that describes when a customer consented to
 *         receiving marketing material by email.
 */
export interface CustomerEmailMarketingConsentInput {
/** The customer opt-in level at the time of subscribing to marketing material. */
marketingOptInLevel?: (CustomerMarketingOptInLevel | null),
/**
 * The current marketing state associated with the customer's email.
 *           If the customer doesn't have an email, then this field is `null`.
 */
marketingState: CustomerEmailMarketingState,
/**
 * The latest date and time when the customer consented or objected to
 *           receiving marketing material by email.
 */
consentUpdatedAt?: (Scalars['DateTime'] | null)}


/**
 * The record of when a customer consented to receive marketing material by email.
 * 
 */
export interface CustomerEmailMarketingConsentStateGenqlSelection{
    /**
     * The date and time at which the customer consented to receive marketing material by email.
     * The customer's consent state reflects the consent record with the most recent `consent_updated_at` date.
     * If no date is provided, then the date and time at which the consent information was sent is used.
     * 
     */
    consentUpdatedAt?: boolean | number
    /**
     * The marketing subscription opt-in level, as described by the M3AAWG best practices guidelines,
     * that the customer gave when they consented to receive marketing material by email.
     * 
     */
    marketingOptInLevel?: boolean | number
    /** The current email marketing state for the customer. */
    marketingState?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the email consent information to update for a given customer ID.
 * 
 */
export interface CustomerEmailMarketingConsentUpdateInput {
/** The ID of the customer for which to update the email marketing consent information. The customer must have a unique email address associated to the record. If not, add the email address using the `customerUpdate` mutation first. */
customerId: Scalars['ID'],
/** The marketing consent information when the customer consented to receiving marketing material by email. */
emailMarketingConsent: CustomerEmailMarketingConsentInput}


/** Return type for `customerEmailMarketingConsentUpdate` mutation. */
export interface CustomerEmailMarketingConsentUpdatePayloadGenqlSelection{
    /**
     * The updated customer.
     * 
     */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerEmailMarketingConsentUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CustomerEmailMarketingConsentUpdate`. */
export interface CustomerEmailMarketingConsentUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerGenerateAccountActivationUrl` mutation. */
export interface CustomerGenerateAccountActivationUrlPayloadGenqlSelection{
    /** The generated account activation URL. */
    accountActivationUrl?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields and values to use when creating or updating a customer. */
export interface CustomerInput {
/** The addresses for a customer. */
addresses?: (MailingAddressInput[] | null),
/** The unique email address of the customer. */
email?: (Scalars['String'] | null),
/** The customer's first name. */
firstName?: (Scalars['String'] | null),
/** The ID of the customer to update. */
id?: (Scalars['ID'] | null),
/** The customer's last name. */
lastName?: (Scalars['String'] | null),
/** The customer's locale. */
locale?: (Scalars['String'] | null),
/** Additional metafields to associate to the customer. */
metafields?: (MetafieldInput[] | null),
/** A note about the customer. */
note?: (Scalars['String'] | null),
/** The unique phone number for the customer. */
phone?: (Scalars['String'] | null),
/**
 * A list of tags to associate with the customer. Can be an array or a comma-separated list. Example values: `["tag1", "tag2", "tag3"]`, `"tag1, tag2, tag3"`
 * 
 * Updating `tags` overwrites any existing tags that were previously added to the customer. To add new tags without overwriting
 * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
 * mutation.
 * 
 */
tags?: (Scalars['String'][] | null),
/**
 * Information that describes when the customer consented to receiving marketing
 *         material by email. The `email` field is required when creating a customer with email marketing
 *         consent information.
 */
emailMarketingConsent?: (CustomerEmailMarketingConsentInput | null),
/**
 * The marketing consent information when the customer consented to receiving marketing
 *         material by SMS. The `phone` field is required when creating a customer with SMS
 *         marketing consent information.
 */
smsMarketingConsent?: (CustomerSmsMarketingConsentInput | null),
/** Whether the customer is exempt from paying taxes on their order. */
taxExempt?: (Scalars['Boolean'] | null),
/** The list of tax exemptions to apply to the customer. */
taxExemptions?: (TaxExemption[] | null)}


/** Represents a customer's visiting activities on a shop's online store. */
export interface CustomerJourneyGenqlSelection{
    /** The position of the current order within the customer's order history. */
    customerOrderIndex?: boolean | number
    /** The amount of days between first session and order creation date. First session represents first session since the last order, or first session within the 30 day attribution window, if more than 30 days has passed since the last order. */
    daysToConversion?: boolean | number
    /** The customer's first session going into the shop. */
    firstVisit?: CustomerVisitGenqlSelection
    /** The last session before an order is made. */
    lastVisit?: CustomerVisitGenqlSelection
    /** Events preceding a customer order, such as shop sessions. */
    moments?: CustomerMomentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a customer's visiting activities on a shop's online store. */
export interface CustomerJourneySummaryGenqlSelection{
    /** The position of the current order within the customer's order history. Test orders aren't included. */
    customerOrderIndex?: boolean | number
    /** The number of days between the first session and the order creation date. The first session represents the first session since the last order, or the first session within the 30 day attribution window, if more than 30 days have passed since the last order. */
    daysToConversion?: boolean | number
    /** The customer's first session going into the shop. */
    firstVisit?: CustomerVisitGenqlSelection
    /** The last session before an order is made. */
    lastVisit?: CustomerVisitGenqlSelection
    /** The events preceding a customer's order, such as shop sessions. */
    moments?: (CustomerMomentConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The total number of customer moments associated with this order. Returns null if the order is still in the process of being attributed. */
    momentsCount?: boolean | number
    /** Whether the attributed sessions for the order have been created yet. */
    ready?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The error blocking a customer merge. */
export interface CustomerMergeErrorGenqlSelection{
    /** The list of fields preventing the customer from being merged. */
    errorFields?: boolean | number
    /** The customer merge error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to override default customer merge rules.
 * 
 */
export interface CustomerMergeOverrideFields {
/**
 * The ID of the customer whose first name will be kept.
 * 
 */
customerIdOfFirstNameToKeep?: (Scalars['ID'] | null),
/**
 * The ID of the customer whose last name will be kept.
 * 
 */
customerIdOfLastNameToKeep?: (Scalars['ID'] | null),
/**
 * The ID of the customer whose email will be kept.
 * 
 */
customerIdOfEmailToKeep?: (Scalars['ID'] | null),
/**
 * The ID of the customer whose phone number will be kept.
 * 
 */
customerIdOfPhoneNumberToKeep?: (Scalars['ID'] | null),
/**
 * The ID of the customer whose default address will be kept.
 * 
 */
customerIdOfDefaultAddressToKeep?: (Scalars['ID'] | null),
/** The note to keep. */
note?: (Scalars['String'] | null),
/** The tags to keep. */
tags?: (Scalars['String'][] | null)}


/** Return type for `customerMerge` mutation. */
export interface CustomerMergePayloadGenqlSelection{
    /** The asynchronous job for merging the customers. */
    job?: JobGenqlSelection
    /** The ID of the customer resulting from the merge. */
    resultingCustomerId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerMergeUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A preview of the results of a customer merge request. */
export interface CustomerMergePreviewGenqlSelection{
    /** The fields that can be used to override the default fields. */
    alternateFields?: CustomerMergePreviewAlternateFieldsGenqlSelection
    /** The fields that will block the merge if the two customers are merged. */
    blockingFields?: CustomerMergePreviewBlockingFieldsGenqlSelection
    /** The errors blocking the customer merge. */
    customerMergeErrors?: CustomerMergeErrorGenqlSelection
    /** The fields that will be kept if the two customers are merged. */
    defaultFields?: CustomerMergePreviewDefaultFieldsGenqlSelection
    /** The resulting customer ID if the two customers are merged. */
    resultingCustomerId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fields that can be used to override the default fields. */
export interface CustomerMergePreviewAlternateFieldsGenqlSelection{
    /** The default address of a customer. */
    defaultAddress?: MailingAddressGenqlSelection
    /** The email state of a customer. */
    email?: CustomerEmailAddressGenqlSelection
    /** The first name of a customer. */
    firstName?: boolean | number
    /** The last name of a customer. */
    lastName?: boolean | number
    /** The phone number state of a customer. */
    phoneNumber?: CustomerPhoneNumberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The blocking fields of a customer merge preview. These fields will block customer merge unless edited.
 * 
 */
export interface CustomerMergePreviewBlockingFieldsGenqlSelection{
    /**
     * The merged note resulting from a customer merge. The merged note is over the 5000 character limit and will block customer merge.
     * 
     */
    note?: boolean | number
    /**
     * The merged tags resulting from a customer merge. The merged tags are over the 250 limit and will block customer merge.
     * 
     */
    tags?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fields that will be kept as part of a customer merge preview. */
export interface CustomerMergePreviewDefaultFieldsGenqlSelection{
    /** The merged addresses resulting from a customer merge. */
    addresses?: (MailingAddressConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The default address resulting from a customer merge. */
    defaultAddress?: MailingAddressGenqlSelection
    /** The total number of customer-specific discounts resulting from a customer merge. */
    discountNodeCount?: boolean | number
    /** The merged customer-specific discounts resulting from a customer merge. */
    discountNodes?: (DiscountNodeConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountSortKeys | null)} })
    /** The full name of the customer, based on the values for `first_name` and `last_name`. If `first_name` and `last_name` aren't available, then this field falls back to the customer's email address. If the customer's email isn't available, then this field falls back to the customer's phone number. */
    displayName?: boolean | number
    /** The total number of merged draft orders. */
    draftOrderCount?: boolean | number
    /** The merged draft orders resulting from a customer merge. */
    draftOrders?: (DraftOrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DraftOrderSortKeys | null)} })
    /** The email state of a customer. */
    email?: CustomerEmailAddressGenqlSelection
    /** The first name resulting from a customer merge. */
    firstName?: boolean | number
    /** The total number of merged gift cards. */
    giftCardCount?: boolean | number
    /** The merged gift cards resulting from a customer merge. */
    giftCards?: (GiftCardConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (GiftCardSortKeys | null)} })
    /** The last name resulting from a customer merge. */
    lastName?: boolean | number
    /** The total number of merged metafields. */
    metafieldCount?: boolean | number
    /** The merged note resulting from a customer merge. */
    note?: boolean | number
    /** The total number of merged orders. */
    orderCount?: boolean | number
    /** The merged orders resulting from a customer merge. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null)} })
    /** The phone number state of a customer. */
    phoneNumber?: CustomerPhoneNumberGenqlSelection
    /** The merged tags resulting from a customer merge. */
    tags?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A merge request for merging two customers.
 * 
 */
export interface CustomerMergeRequestGenqlSelection{
    /** The merge errors that occurred during the customer merge request. */
    customerMergeErrors?: CustomerMergeErrorGenqlSelection
    /** The UUID of the merge job. */
    jobId?: boolean | number
    /** The ID of the customer resulting from the merge. */
    resultingCustomerId?: boolean | number
    /** The status of the customer merge request. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs while merging two customers. */
export interface CustomerMergeUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An object that represents whether a customer can be merged with another customer.
 * 
 */
export interface CustomerMergeableGenqlSelection{
    /**
     * The list of fields preventing the customer from being merged.
     * 
     */
    errorFields?: boolean | number
    /**
     * Whether the customer can be merged with another customer.
     * 
     */
    isMergeable?: boolean | number
    /**
     * The merge request if one is currently in progress.
     * 
     */
    mergeInProgress?: CustomerMergeRequestGenqlSelection
    /**
     * The reason why the customer can't be merged with another customer.
     * 
     */
    reason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a session preceding an order, often used for building a timeline of events leading to an order. */
export interface CustomerMomentGenqlSelection{
    /** The date and time when the customer's session occurred. */
    occurredAt?: boolean | number
    on_CustomerVisit?: CustomerVisitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CustomerMoments.
 * 
 */
export interface CustomerMomentConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CustomerMomentEdgeGenqlSelection
    /** A list of the nodes contained in CustomerMomentEdge. */
    nodes?: CustomerMomentGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CustomerMoment and a cursor during pagination.
 * 
 */
export interface CustomerMomentEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CustomerMomentEdge. */
    node?: CustomerMomentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** All possible instruments for CustomerPaymentMethods. */
export interface CustomerPaymentInstrumentGenqlSelection{
    on_CustomerCreditCard?:CustomerCreditCardGenqlSelection,
    on_CustomerPaypalBillingAgreement?:CustomerPaypalBillingAgreementGenqlSelection,
    on_CustomerShopPayAgreement?:CustomerShopPayAgreementGenqlSelection,
    __typename?: boolean | number
}


/** The billing address of a payment instrument. */
export interface CustomerPaymentInstrumentBillingAddressGenqlSelection{
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: boolean | number
    /** The name of the city, district, village, or town. */
    city?: boolean | number
    /** The name of the country. */
    country?: boolean | number
    /**
     * The two-letter code for the country of the address.
     * For example, US.
     * 
     */
    countryCode?: boolean | number
    /** The name of the buyer of the address. */
    name?: boolean | number
    /** The region of the address, such as the province, state, or district. */
    province?: boolean | number
    /**
     * The two-letter code for the region.
     * For example, ON.
     * 
     */
    provinceCode?: boolean | number
    /** The zip or postal code of the address. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A customer's payment method. */
export interface CustomerPaymentMethodGenqlSelection{
    /** The customer to whom the payment method belongs. */
    customer?: CustomerGenqlSelection
    /** The ID of this payment method. */
    id?: boolean | number
    /** The instrument for this payment method. */
    instrument?: CustomerPaymentInstrumentGenqlSelection
    /** The time that the payment method was revoked. */
    revokedAt?: boolean | number
    /** The revocation reason for this payment method. */
    revokedReason?: boolean | number
    /** List Subscription Contracts. */
    subscriptionContracts?: (SubscriptionContractConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CustomerPaymentMethods.
 * 
 */
export interface CustomerPaymentMethodConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CustomerPaymentMethodEdgeGenqlSelection
    /** A list of the nodes contained in CustomerPaymentMethodEdge. */
    nodes?: CustomerPaymentMethodGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodCreateFromDuplicationData` mutation. */
export interface CustomerPaymentMethodCreateFromDuplicationDataPayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodCreateFromDuplicationDataUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CustomerPaymentMethodCreateFromDuplicationData`. */
export interface CustomerPaymentMethodCreateFromDuplicationDataUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodCreditCardCreate` mutation. */
export interface CustomerPaymentMethodCreditCardCreatePayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodCreditCardUpdate` mutation. */
export interface CustomerPaymentMethodCreditCardUpdatePayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CustomerPaymentMethod and a cursor during pagination.
 * 
 */
export interface CustomerPaymentMethodEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CustomerPaymentMethodEdge. */
    node?: CustomerPaymentMethodGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodGetDuplicationData` mutation. */
export interface CustomerPaymentMethodGetDuplicationDataPayloadGenqlSelection{
    /** The encrypted data from the payment method to be duplicated. */
    encryptedDuplicationData?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodGetDuplicationDataUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CustomerPaymentMethodGetDuplicationData`. */
export interface CustomerPaymentMethodGetDuplicationDataUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodGetUpdateUrl` mutation. */
export interface CustomerPaymentMethodGetUpdateUrlPayloadGenqlSelection{
    /** The URL to redirect the customer to update the payment method. */
    updatePaymentMethodUrl?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodGetUpdateUrlUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `CustomerPaymentMethodGetUpdateUrl`. */
export interface CustomerPaymentMethodGetUpdateUrlUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodPaypalBillingAgreementCreate` mutation. */
export interface CustomerPaymentMethodPaypalBillingAgreementCreatePayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodPaypalBillingAgreementUpdate` mutation. */
export interface CustomerPaymentMethodPaypalBillingAgreementUpdatePayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodRemoteCreate` mutation. */
export interface CustomerPaymentMethodRemoteCreatePayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodRemoteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodRemoteCreditCardCreate` mutation. */
export interface CustomerPaymentMethodRemoteCreditCardCreatePayloadGenqlSelection{
    /** The customer payment method. */
    customerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerPaymentMethodUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a remote gateway payment method, only one remote reference permitted.
 * 
 */
export interface CustomerPaymentMethodRemoteInput {
/**
 * Input containing the fields for a remote stripe payment method.
 * 
 */
stripePaymentMethod?: (RemoteStripePaymentMethodInput | null),
/**
 * The input fields for a remote authorize net customer profile.
 * 
 */
authorizeNetCustomerPaymentProfile?: (RemoteAuthorizeNetCustomerPaymentProfileInput | null),
/** The input fields for a remote Braintree customer profile. */
braintreePaymentMethod?: (RemoteBraintreePaymentMethodInput | null)}


/** Represents an error in the input of a mutation. */
export interface CustomerPaymentMethodRemoteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodRevoke` mutation. */
export interface CustomerPaymentMethodRevokePayloadGenqlSelection{
    /** The ID of the revoked customer payment method. */
    revokedCustomerPaymentMethodId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerPaymentMethodSendUpdateEmail` mutation. */
export interface CustomerPaymentMethodSendUpdateEmailPayloadGenqlSelection{
    /** The customer to whom an update payment method email was sent. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error in the input of a mutation. */
export interface CustomerPaymentMethodUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a PayPal instrument for customer payment method. */
export interface CustomerPaypalBillingAgreementGenqlSelection{
    /** The billing address of this payment method. */
    billingAddress?: CustomerPaymentInstrumentBillingAddressGenqlSelection
    /** Whether the PayPal billing agreement is inactive. */
    inactive?: boolean | number
    /** Whether the payment method can be revoked.The payment method can be revoked if there are no active subscription contracts. */
    isRevocable?: boolean | number
    /** The customers's PayPal account email address. */
    paypalAccountEmail?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A phone number.
 * 
 */
export interface CustomerPhoneNumberGenqlSelection{
    /** Whether the customer has subscribed to SMS marketing material. */
    marketingState?: boolean | number
    /** A customer's phone number. */
    phoneNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerRemoveTaxExemptions` mutation. */
export interface CustomerRemoveTaxExemptionsPayloadGenqlSelection{
    /** The updated customer. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerReplaceTaxExemptions` mutation. */
export interface CustomerReplaceTaxExemptionsPayloadGenqlSelection{
    /** The updated customer. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The member of a segment.
 * 
 */
export interface CustomerSegmentMemberGenqlSelection{
    /** The total amount of money that the member has spent on orders. */
    amountSpent?: MoneyV2GenqlSelection
    /** The member's default address. */
    defaultAddress?: MailingAddressGenqlSelection
    /** The member's default email address. */
    defaultEmailAddress?: CustomerEmailAddressGenqlSelection
    /** The member's default phone number. */
    defaultPhoneNumber?: CustomerPhoneNumberGenqlSelection
    /** The full name of the member, which is based on the values of the `first_name` and `last_name` fields. If the member's first name and last name aren't available, then the customer's email address is used. If the customer's email address isn't available, then the customer's phone number is used. */
    displayName?: boolean | number
    /** The member's first name. */
    firstName?: boolean | number
    /** The member’s ID. */
    id?: boolean | number
    /** The member's last name. */
    lastName?: boolean | number
    /** The ID of the member's most recent order. */
    lastOrderId?: boolean | number
    /** Whether the customer can be merged with another customer. */
    mergeable?: CustomerMergeableGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A note about the member. */
    note?: boolean | number
    /** The total number of orders that the member has made. */
    numberOfOrders?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for the `CustomerSegmentMembers` object. */
export interface CustomerSegmentMemberConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CustomerSegmentMemberEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The statistics for a given segment. */
    statistics?: SegmentStatisticsGenqlSelection
    /** The total number of members in a given segment. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CustomerSegmentMember and a cursor during pagination.
 * 
 */
export interface CustomerSegmentMemberEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CustomerSegmentMemberEdge. */
    node?: CustomerSegmentMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A job to determine a list of members, such as customers, that are associated with an individual segment. */
export interface CustomerSegmentMembersQueryGenqlSelection{
    /** The current total number of members in a given segment. */
    currentCount?: boolean | number
    /** This indicates if the job is still queued or has been run. */
    done?: boolean | number
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerSegmentMembersQueryCreate` mutation. */
export interface CustomerSegmentMembersQueryCreatePayloadGenqlSelection{
    /** The newly created customer segment members query. */
    customerSegmentMembersQuery?: CustomerSegmentMembersQueryGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerSegmentMembersQueryUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields and values for creating a customer segment members query. */
export interface CustomerSegmentMembersQueryInput {
/** The ID of the segment. */
segmentId?: (Scalars['ID'] | null),
/** The query that's used to filter the members. The query is composed of a combination of conditions on facts about customers such as `email_subscription_status = 'SUBSCRIBED'` with [this syntax](https://shopify.dev/api/shopifyql/segment-query-language-reference). */
query?: (Scalars['String'] | null),
/** Reverse the order of the list. The sorting behaviour defaults to ascending order. */
reverse?: (Scalars['Boolean'] | null),
/** Sort the list by a given key. */
sortKey?: (Scalars['String'] | null)}


/**
 * Represents a customer segment members query custom error.
 * 
 */
export interface CustomerSegmentMembersQueryUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Shop Pay card instrument for customer payment method. */
export interface CustomerShopPayAgreementGenqlSelection{
    /** The billing address of the card. */
    billingAddress?: CustomerCreditCardBillingAddressGenqlSelection
    /** Whether the card is about to expire. */
    expiresSoon?: boolean | number
    /** The expiry month of the card. */
    expiryMonth?: boolean | number
    /** The expiry year of the card. */
    expiryYear?: boolean | number
    /** Whether the Shop Pay billing agreement is inactive. */
    inactive?: boolean | number
    /** The payment method can be revoked if there are no active subscription contracts. */
    isRevocable?: boolean | number
    /** The last 4 digits of the card. */
    lastDigits?: boolean | number
    /** The masked card number with only the last 4 digits displayed. */
    maskedNumber?: boolean | number
    /** The name of the card holder. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during execution of an SMS marketing consent mutation. */
export interface CustomerSmsMarketingConsentErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The marketing consent information when the customer consented to
 *         receiving marketing material by SMS.
 */
export interface CustomerSmsMarketingConsentInput {
/**
 * The marketing subscription opt-in level that was set when the customer consented to receive marketing information.
 * 
 */
marketingOptInLevel?: (CustomerMarketingOptInLevel | null),
/** The current SMS marketing state for the customer. */
marketingState: CustomerSmsMarketingState,
/**
 * The date and time when the customer consented to receive marketing material by SMS.
 * If no date is provided, then the date and time when the consent information was sent is used.
 * 
 */
consentUpdatedAt?: (Scalars['DateTime'] | null)}


/**
 * The record of when a customer consented to receive marketing material by SMS.
 * 
 * The customer's consent state reflects the record with the most recent date when consent was updated.
 * 
 */
export interface CustomerSmsMarketingConsentStateGenqlSelection{
    /** The source from which the SMS marketing information for the customer was collected. */
    consentCollectedFrom?: boolean | number
    /**
     * The date and time when the customer consented to receive marketing material by SMS.
     * If no date is provided, then the date and time when the consent information was sent is used.
     * 
     */
    consentUpdatedAt?: boolean | number
    /**
     * The marketing subscription opt-in level that was set when the customer consented to receive marketing information.
     * 
     */
    marketingOptInLevel?: boolean | number
    /** The current SMS marketing state for the customer. */
    marketingState?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for updating SMS marketing consent information for a given customer ID.
 * 
 */
export interface CustomerSmsMarketingConsentUpdateInput {
/** The ID of the customer to update the SMS marketing consent information for. The customer must have a unique phone number associated to the record. If not, add the phone number using the `customerUpdate` mutation first. */
customerId: Scalars['ID'],
/** The marketing consent information when the customer consented to receiving marketing material by SMS. */
smsMarketingConsent: CustomerSmsMarketingConsentInput}


/** Return type for `customerSmsMarketingConsentUpdate` mutation. */
export interface CustomerSmsMarketingConsentUpdatePayloadGenqlSelection{
    /**
     * The updated customer.
     * 
     */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: CustomerSmsMarketingConsentErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A customer's computed statistics. */
export interface CustomerStatisticsGenqlSelection{
    /** The predicted spend tier of a customer with a shop. */
    predictedSpendTier?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerUpdateDefaultAddress` mutation. */
export interface CustomerUpdateDefaultAddressPayloadGenqlSelection{
    /** The customer whose address was updated. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `customerUpdate` mutation. */
export interface CustomerUpdatePayloadGenqlSelection{
    /** The updated customer. */
    customer?: CustomerGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a customer's session visiting a shop's online store, including information about the marketing activity attributed to starting the session. */
export interface CustomerVisitGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** URL of the first page the customer landed on for the session. */
    landingPage?: boolean | number
    /** Landing page information with URL linked in HTML. For example, the first page the customer visited was store.myshopify.com/products/1. */
    landingPageHtml?: boolean | number
    /**
     * Represent actions taken by an app, on behalf of a merchant,
     * to market Shopify resources such as products, collections, and discounts.
     * 
     */
    marketingEvent?: MarketingEventGenqlSelection
    /** The date and time when the customer's session occurred. */
    occurredAt?: boolean | number
    /**
     * Marketing referral code from the link that the customer clicked to visit the store.
     * Supports the following URL attributes: _ref_, _source_, or _r_.
     * For example, if the URL is myshopifystore.com/products/slide?ref=j2tj1tn2, then this value is j2tj1tn2.
     * 
     */
    referralCode?: boolean | number
    /** Referral information with URLs linked in HTML. */
    referralInfoHtml?: boolean | number
    /**
     * Webpage where the customer clicked a link that sent them to the online store.
     * For example, _https://randomblog.com/page1_ or _android-app://com.google.android.gm_.
     * 
     */
    referrerUrl?: boolean | number
    /**
     * Source from which the customer visited the store, such as a platform (Facebook, Google), email, direct,
     * a website domain, QR code, or unknown.
     * 
     */
    source?: boolean | number
    /** Describes the source explicitly for first or last session. */
    sourceDescription?: boolean | number
    /** Type of marketing tactic. */
    sourceType?: boolean | number
    /** A set of UTM parameters gathered from the URL parameters of the referrer. */
    utmParameters?: UTMParametersGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * This type returns the information about the product and product variant from a customer visit.
 * 
 */
export interface CustomerVisitProductInfoGenqlSelection{
    /** The product information. If `null`, then the product was deleted from the store. */
    product?: ProductGenqlSelection
    /** The quantity of the product that the customer requested. */
    quantity?: boolean | number
    /** The product variant information, if the product variant exists. */
    variant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple CustomerVisitProductInfos.
 * 
 */
export interface CustomerVisitProductInfoConnectionGenqlSelection{
    /** A list of edges. */
    edges?: CustomerVisitProductInfoEdgeGenqlSelection
    /** A list of the nodes contained in CustomerVisitProductInfoEdge. */
    nodes?: CustomerVisitProductInfoGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one CustomerVisitProductInfo and a cursor during pagination.
 * 
 */
export interface CustomerVisitProductInfoEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of CustomerVisitProductInfoEdge. */
    node?: CustomerVisitProductInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A token that delegates a set of scopes from the original permission.
 * 
 * To learn more about creating delegate access tokens, refer to
 * [Delegate OAuth access tokens to subsystems]
 * (https://shopify.dev/apps/auth/oauth/delegate-access-tokens).
 * 
 */
export interface DelegateAccessTokenGenqlSelection{
    /** The list of permissions associated with the token. */
    accessScopes?: boolean | number
    /** The issued delegate access token. */
    accessToken?: boolean | number
    /** The date and time when the delegate access token was created. */
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `delegateAccessTokenCreate` mutation. */
export interface DelegateAccessTokenCreatePayloadGenqlSelection{
    /** The delegate access token. */
    delegateAccessToken?: DelegateAccessTokenGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DelegateAccessTokenCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `DelegateAccessTokenCreate`. */
export interface DelegateAccessTokenCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `delegateAccessTokenDestroy` mutation. */
export interface DelegateAccessTokenDestroyPayloadGenqlSelection{
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The status of the delegate access token destroy operation. Returns true if successful. */
    status?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DelegateAccessTokenDestroyUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `DelegateAccessTokenDestroy`. */
export interface DelegateAccessTokenDestroyUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a delegate access token. */
export interface DelegateAccessTokenInput {
/** The list of scopes that will be delegated to the new access token. */
delegateAccessScope: Scalars['String'][],
/** The amount of time, in seconds, after which the delegate access token is no longer valid. */
expiresIn?: (Scalars['Int'] | null)}


/**
 * Deletion events chronicle the destruction of resources (e.g. products and collections).
 * Once deleted, the deletion event is the only trace of the original's existence,
 * as the resource itself has been removed and can no longer be accessed.
 * 
 */
export interface DeletionEventGenqlSelection{
    /** The date and time when the deletion event for the related resource was generated. */
    occurredAt?: boolean | number
    /** The ID of the resource that was deleted. */
    subjectId?: boolean | number
    /** The type of resource that was deleted. */
    subjectType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DeletionEvents.
 * 
 */
export interface DeletionEventConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DeletionEventEdgeGenqlSelection
    /** A list of the nodes contained in DeletionEventEdge. */
    nodes?: DeletionEventGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DeletionEvent and a cursor during pagination.
 * 
 */
export interface DeletionEventEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DeletionEventEdge. */
    node?: DeletionEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A shipping service and a list of countries that the service is available for. */
export interface DeliveryAvailableServiceGenqlSelection{
    /** The countries the service provider ships to. */
    countries?: DeliveryCountryCodesOrRestOfWorldGenqlSelection
    /** The name of the service. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a branded promise presented to buyers.
 * 
 */
export interface DeliveryBrandedPromiseGenqlSelection{
    /** The handle of the branded promise.  For example: `shop_promise`. */
    handle?: boolean | number
    /** The name of the branded promise.  For example: `Shop Promise`. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A shipping service provider or a carrier account. */
export interface DeliveryCarrierServiceGenqlSelection{
    /** The list of services offered for given destinations. */
    availableServicesForCountries?: (DeliveryAvailableServiceGenqlSelection & { __args: {
    /** The locations of the possible origins. */
    origins?: (Scalars['ID'][] | null), 
    /** The country codes of the destinations. */
    countryCodes?: (CountryCode[] | null), 
    /** Whether to use 'Rest of World' as the destination. */
    restOfWorld: Scalars['Boolean']} })
    /** The properly formatted name of the shipping service provider, ready to display. */
    formattedName?: boolean | number
    /** The logo of the service provider. */
    icon?: ImageGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the shipping service provider. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A carrier service and the associated list of shop locations. */
export interface DeliveryCarrierServiceAndLocationsGenqlSelection{
    /** The carrier service. */
    carrierService?: DeliveryCarrierServiceGenqlSelection
    /** The list of locations that support this carrier service. */
    locations?: LocationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A condition that must pass for a delivery method definition to be applied to an order. */
export interface DeliveryConditionGenqlSelection{
    /** The value (weight or price) that the condition field is compared to. */
    conditionCriteria?: DeliveryConditionCriteriaGenqlSelection
    /** The field to compare the criterion value against, using the operator. */
    field?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The operator to compare the field and criterion value. */
    operator?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The value (weight or price) that the condition field is compared to. */
export interface DeliveryConditionCriteriaGenqlSelection{
    on_MoneyV2?:MoneyV2GenqlSelection,
    on_Weight?:WeightGenqlSelection,
    __typename?: boolean | number
}


/** A country that is used to define a shipping zone. */
export interface DeliveryCountryGenqlSelection{
    /**
     * A two-letter country code in ISO 3166-1 alpha-2 standard.
     * It also includes a flag indicating whether the country should be
     * a part of the 'Rest Of World' shipping zone.
     * 
     */
    code?: DeliveryCountryCodeOrRestOfWorldGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The full name of the country. */
    name?: boolean | number
    /** The list of regions associated with this country. */
    provinces?: DeliveryProvinceGenqlSelection
    /** The translated name of the country. The translation returned is based on the system's locale. */
    translatedName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The country details and the associated shipping zone. */
export interface DeliveryCountryAndZoneGenqlSelection{
    /** The country details. */
    country?: DeliveryCountryGenqlSelection
    /** The name of the shipping zone. */
    zone?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The country code and whether the country is a part of the 'Rest Of World' shipping zone.
 * 
 */
export interface DeliveryCountryCodeOrRestOfWorldGenqlSelection{
    /** The country code in the ISO 3166-1 alpha-2 format. */
    countryCode?: boolean | number
    /** Whether the country is a part of the 'Rest of World' shipping zone. */
    restOfWorld?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The list of country codes and information whether the countries
 * are a part of the 'Rest Of World' shipping zone.
 * 
 */
export interface DeliveryCountryCodesOrRestOfWorldGenqlSelection{
    /** List of applicable country codes in the ISO 3166-1 alpha-2 format. */
    countryCodes?: boolean | number
    /** Whether the countries are a part of the 'Rest of World' shipping zone. */
    restOfWorld?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to specify a country. */
export interface DeliveryCountryInput {
/** The country code of the country in the ISO 3166-1 alpha-2 format. */
code?: (CountryCode | null),
/** Whether the country is a part of the 'Rest of World' shipping zone. */
restOfWorld?: (Scalars['Boolean'] | null),
/** The regions associated with this country. */
provinces?: (DeliveryProvinceInput[] | null),
/** Associate all available provinces with this country. */
includeAllProvinces?: (Scalars['Boolean'] | null)}


/** A delivery customization. */
export interface DeliveryCustomizationGenqlSelection{
    /** The enabled status of the delivery customization. */
    enabled?: boolean | number
    /** The error history on the most recent version of the delivery customization. */
    errorHistory?: FunctionsErrorHistoryGenqlSelection
    /** The ID of the Shopify Function implementing the delivery customization. */
    functionId?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The Shopify Function implementing the delivery customization. */
    shopifyFunction?: ShopifyFunctionGenqlSelection
    /** The title of the delivery customization. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `deliveryCustomizationActivation` mutation. */
export interface DeliveryCustomizationActivationPayloadGenqlSelection{
    /** The IDs of the updated delivery customizations. */
    ids?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DeliveryCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DeliveryCustomizations.
 * 
 */
export interface DeliveryCustomizationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DeliveryCustomizationEdgeGenqlSelection
    /** A list of the nodes contained in DeliveryCustomizationEdge. */
    nodes?: DeliveryCustomizationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `deliveryCustomizationCreate` mutation. */
export interface DeliveryCustomizationCreatePayloadGenqlSelection{
    /** Returns the created delivery customization. */
    deliveryCustomization?: DeliveryCustomizationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DeliveryCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `deliveryCustomizationDelete` mutation. */
export interface DeliveryCustomizationDeletePayloadGenqlSelection{
    /** Returns the deleted delivery customization ID. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DeliveryCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DeliveryCustomization and a cursor during pagination.
 * 
 */
export interface DeliveryCustomizationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DeliveryCustomizationEdge. */
    node?: DeliveryCustomizationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a delivery customization mutation. */
export interface DeliveryCustomizationErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create and update a delivery customization. */
export interface DeliveryCustomizationInput {
/** The ID of the function providing the delivery customization. */
functionId?: (Scalars['String'] | null),
/** The title of the delivery customization. */
title?: (Scalars['String'] | null),
/** The enabled status of the delivery customization. */
enabled?: (Scalars['Boolean'] | null),
/** Additional metafields to associate to the delivery customization. */
metafields?: (MetafieldInput[] | null)}


/** Return type for `deliveryCustomizationUpdate` mutation. */
export interface DeliveryCustomizationUpdatePayloadGenqlSelection{
    /** Returns the updated delivery customization. */
    deliveryCustomization?: DeliveryCustomizationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DeliveryCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Whether the shop is blocked from converting to full multi-location delivery profiles mode. If the shop is blocked, then the blocking reasons are also returned. */
export interface DeliveryLegacyModeBlockedGenqlSelection{
    /** Whether the shop can convert to full multi-location delivery profiles mode. */
    blocked?: boolean | number
    /** The reasons why the shop is blocked from converting to full multi-location delivery profiles mode. */
    reasons?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Local pickup settings associated with a location. */
export interface DeliveryLocalPickupSettingsGenqlSelection{
    /** Additional instructions or information related to the local pickup. */
    instructions?: boolean | number
    /** The estimated pickup time to show customers at checkout. */
    pickupTime?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A location group is a collection of locations. They share zones and delivery methods across delivery
 * profiles.
 * 
 */
export interface DeliveryLocationGroupGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** A list of all locations that are part of this location group. */
    locations?: (LocationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (LocationSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `active`
     *  - `address1`
     *  - `address2`
     *  - `city`
     *  - `country`
     *  - `legacy`
     *  - `name`
     *  - `province`
     *  - `zip`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /** If true, also include the legacy locations of fulfillment services. */
    includeLegacy?: (Scalars['Boolean'] | null), 
    /** If true, also include the locations that are deactivated. */
    includeInactive?: (Scalars['Boolean'] | null)} })
    /** A count of all locations that are part of this location group. */
    locationsCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Links a location group with a zone and the associated method definitions. */
export interface DeliveryLocationGroupZoneGenqlSelection{
    /** The number of method definitions for the zone. */
    methodDefinitionCounts?: DeliveryMethodDefinitionCountsGenqlSelection
    /** The method definitions associated to a zone and location group. */
    methodDefinitions?: (DeliveryMethodDefinitionConnectionGenqlSelection & { __args?: {
    /** Return only eligible or ineligible method definitions. */
    eligible?: (Scalars['Boolean'] | null), 
    /** Return only merchant or participant method definitions. */
    type?: (DeliveryMethodDefinitionType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MethodDefinitionSortKeys | null)} })
    /** The zone associated to a location group. */
    zone?: DeliveryZoneGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DeliveryLocationGroupZones.
 * 
 */
export interface DeliveryLocationGroupZoneConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DeliveryLocationGroupZoneEdgeGenqlSelection
    /** A list of the nodes contained in DeliveryLocationGroupZoneEdge. */
    nodes?: DeliveryLocationGroupZoneGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DeliveryLocationGroupZone and a cursor during pagination.
 * 
 */
export interface DeliveryLocationGroupZoneEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DeliveryLocationGroupZoneEdge. */
    node?: DeliveryLocationGroupZoneGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a delivery zone associated to a location group and profile. */
export interface DeliveryLocationGroupZoneInput {
/** A globally-unique ID of the zone. */
id?: (Scalars['ID'] | null),
/** The name of the zone. */
name?: (Scalars['String'] | null),
/** A list of countries to associate with the zone. */
countries?: (DeliveryCountryInput[] | null),
/** A list of method definitions to create. */
methodDefinitionsToCreate?: (DeliveryMethodDefinitionInput[] | null),
/** A list of method definitions to update. */
methodDefinitionsToUpdate?: (DeliveryMethodDefinitionInput[] | null)}


/** The input fields for a local pickup setting associated with a location. */
export interface DeliveryLocationLocalPickupEnableInput {
/** The ID of the location associated with the location setting. */
locationId: Scalars['ID'],
/** The time of the local pickup. */
pickupTime: DeliveryLocalPickupTime,
/** The instructions for the local pickup. */
instructions?: (Scalars['String'] | null)}


/** Represents an error that happened when changing local pickup settings for a location. */
export interface DeliveryLocationLocalPickupSettingsErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The delivery method used by a fulfillment order. */
export interface DeliveryMethodGenqlSelection{
    /** The branded promise that was presented to the buyer during checkout.  For example: Shop Promise. */
    brandedPromise?: DeliveryBrandedPromiseGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The latest delivery date and time when the fulfillment is expected to arrive at the buyer's location. */
    maxDeliveryDateTime?: boolean | number
    /** The type of the delivery method. */
    methodType?: boolean | number
    /** The earliest delivery date and time when the fulfillment is expected to arrive at the buyer's location. */
    minDeliveryDateTime?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A method definition contains the delivery rate and the conditions that must be met for the method to be
 * applied.
 * 
 */
export interface DeliveryMethodDefinitionGenqlSelection{
    /** Whether this method definition is active. */
    active?: boolean | number
    /** The description of the method definition. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The method conditions that must pass for this method definition to be applied to an order. */
    methodConditions?: DeliveryConditionGenqlSelection
    /** The name of the method definition. */
    name?: boolean | number
    /** The provided rate for this method definition, from a rate definition or participant. */
    rateProvider?: DeliveryRateProviderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DeliveryMethodDefinitions.
 * 
 */
export interface DeliveryMethodDefinitionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DeliveryMethodDefinitionEdgeGenqlSelection
    /** A list of the nodes contained in DeliveryMethodDefinitionEdge. */
    nodes?: DeliveryMethodDefinitionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The number of method definitions for a zone, separated into merchant-owned and participant definitions.
 * 
 */
export interface DeliveryMethodDefinitionCountsGenqlSelection{
    /** The number of participant method definitions for the specified zone. */
    participantDefinitionsCount?: boolean | number
    /** The number of merchant-defined method definitions for the specified zone. */
    rateDefinitionsCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DeliveryMethodDefinition and a cursor during pagination.
 * 
 */
export interface DeliveryMethodDefinitionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DeliveryMethodDefinitionEdge. */
    node?: DeliveryMethodDefinitionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a method definition. */
export interface DeliveryMethodDefinitionInput {
/** A globally-unique ID of the method definition. Use only when updating a method definiton. */
id?: (Scalars['ID'] | null),
/** The name of the method definition. */
name?: (Scalars['String'] | null),
/** The description of the method definition. */
description?: (Scalars['String'] | null),
/** Whether to use this method definition during rate calculation. */
active?: (Scalars['Boolean'] | null),
/** A rate definition to apply to the method definition. */
rateDefinition?: (DeliveryRateDefinitionInput | null),
/** A participant to apply to the method definition. */
participant?: (DeliveryParticipantInput | null),
/** A list of weight conditions on the method definition. */
weightConditionsToCreate?: (DeliveryWeightConditionInput[] | null),
/** A list of price conditions on the method definition. */
priceConditionsToCreate?: (DeliveryPriceConditionInput[] | null),
/** A list of conditions to update on the method definition. */
conditionsToUpdate?: (DeliveryUpdateConditionInput[] | null)}


/**
 * A participant defines carrier-calculated rates for shipping services
 * with a possible merchant-defined fixed fee or a percentage-of-rate fee.
 * 
 */
export interface DeliveryParticipantGenqlSelection{
    /**
     * Whether to display new shipping services automatically to the customer when the service becomes available.
     * 
     */
    adaptToNewServicesFlag?: boolean | number
    /** The carrier used for this participant. */
    carrierService?: DeliveryCarrierServiceGenqlSelection
    /** The merchant-defined fixed fee for this participant. */
    fixedFee?: MoneyV2GenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The carrier-specific services offered by the participant, and whether each service is active. */
    participantServices?: DeliveryParticipantServiceGenqlSelection
    /** The merchant-defined percentage-of-rate fee for this participant. */
    percentageOfRateFee?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a participant. */
export interface DeliveryParticipantInput {
/** The ID of the participant. */
id?: (Scalars['ID'] | null),
/** The ID of the carrier service for this participant. */
carrierServiceId?: (Scalars['ID'] | null),
/** The fixed feed that is defined by the merchant for this participant. */
fixedFee?: (MoneyInput | null),
/** The merchant-defined percentage-of-rate fee for this participant. */
percentageOfRateFee?: (Scalars['Float'] | null),
/** The list of shipping services offered by the participant. */
participantServices?: (DeliveryParticipantServiceInput[] | null),
/**
 * Whether to automatically display new shipping services to the customer when a service becomes available.
 * 
 */
adaptToNewServices?: (Scalars['Boolean'] | null)}


/** A mail service provided by the participant. */
export interface DeliveryParticipantServiceGenqlSelection{
    /** Whether the service is active. */
    active?: boolean | number
    /** The name of the service. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a shipping service provided by a participant. */
export interface DeliveryParticipantServiceInput {
/** The name of the service. */
name: Scalars['String'],
/** Whether the service is active. */
active: Scalars['Boolean']}


/** The input fields for a price-based condition of a delivery method definition. */
export interface DeliveryPriceConditionInput {
/** The monetary value to compare the price of an order to. */
criteria?: (MoneyInput | null),
/** The operator to use for comparison. */
operator?: (DeliveryConditionOperator | null)}


/** How many product variants are in a profile. This count is capped at 500. */
export interface DeliveryProductVariantsCountGenqlSelection{
    /** Whether the count has reached the cap of 500. */
    capped?: boolean | number
    /** The product variant count. */
    count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A shipping profile. In Shopify, a shipping profile is a set of shipping rates scoped to a set of products or variants that can be shipped from selected locations to zones.
 * 
 */
export interface DeliveryProfileGenqlSelection{
    /** The number of active shipping rates for the profile. */
    activeMethodDefinitionsCount?: boolean | number
    /** Whether this is the default profile. */
    default?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Whether this shop has enabled legacy compatibility mode for delivery profiles. */
    legacyMode?: boolean | number
    /** The number of locations without rates defined. */
    locationsWithoutRatesCount?: boolean | number
    /** The name of the delivery profile. */
    name?: boolean | number
    /** The number of active origin locations for the profile. */
    originLocationCount?: boolean | number
    /**
     * @deprecated Use `productVariantsCountV2` instead.
     * The number of product variants for this profile. The count for the default profile is not supported and will return -1.
     */
    productVariantsCount?: boolean | number
    /** How many product variants are in this profile. */
    productVariantsCountV2?: DeliveryProductVariantsCountGenqlSelection
    /** The products and variants associated with this profile. */
    profileItems?: (DeliveryProfileItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The location groups and associated zones using this profile. */
    profileLocationGroups?: (DeliveryProfileLocationGroupGenqlSelection & { __args?: {
    /** Filter the location groups of the profile by location group ID. */
    locationGroupId?: (Scalars['ID'] | null)} })
    /** Selling plan groups associated with the specified delivery profile. */
    sellingPlanGroups?: (SellingPlanGroupConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** List of locations that have not been assigned to a location group for this profile. */
    unassignedLocations?: LocationGenqlSelection
    /** List of locations that have not been assigned to a location group for this profile. */
    unassignedLocationsPaginated?: (LocationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The number of countries with active rates to deliver to. */
    zoneCountryCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DeliveryProfiles.
 * 
 */
export interface DeliveryProfileConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DeliveryProfileEdgeGenqlSelection
    /** A list of the nodes contained in DeliveryProfileEdge. */
    nodes?: DeliveryProfileGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DeliveryProfile and a cursor during pagination.
 * 
 */
export interface DeliveryProfileEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DeliveryProfileEdge. */
    node?: DeliveryProfileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a delivery profile. */
export interface DeliveryProfileInput {
/** The name of the delivery profile. */
name?: (Scalars['String'] | null),
/** The list of location groups associated with the delivery profile. */
profileLocationGroups?: (DeliveryProfileLocationGroupInput[] | null),
/**
 * The list of location groups to be created in the delivery profile.
 * 
 * **Note:** due to the potential complexity of the nested data, it is recommended to send no more than 5 location groups per each request.
 * 
 */
locationGroupsToCreate?: (DeliveryProfileLocationGroupInput[] | null),
/**
 * The list of location groups to be updated in the delivery profile.
 * 
 * **Note:** due to the potential complexity of the nested data, it is recommended to send no more than 5 location groups per each request.
 * 
 */
locationGroupsToUpdate?: (DeliveryProfileLocationGroupInput[] | null),
/** The list of location groups to be deleted from the delivery profile. */
locationGroupsToDelete?: (Scalars['ID'][] | null),
/** The list of product variant IDs to be associated with the delivery profile. */
variantsToAssociate?: (Scalars['ID'][] | null),
/**
 * The list of product variant IDs to be dissociated from the delivery profile.
 * The dissociated product variants are moved back to the default delivery profile.
 * 
 */
variantsToDissociate?: (Scalars['ID'][] | null),
/** The list of zone IDs to delete. */
zonesToDelete?: (Scalars['ID'][] | null),
/** The list of method definition IDs to delete. */
methodDefinitionsToDelete?: (Scalars['ID'][] | null),
/** The list of condition IDs to delete. */
conditionsToDelete?: (Scalars['ID'][] | null),
/** The list of selling plan groups to be associated with the delivery profile. */
sellingPlanGroupsToAssociate?: (Scalars['ID'][] | null),
/** The list of selling plan groups to be dissociated with the delivery profile. */
sellingPlanGroupsToDissociate?: (Scalars['ID'][] | null)}


/** A product and the subset of associated variants that are part of this delivery profile. */
export interface DeliveryProfileItemGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** A product associated with this profile. */
    product?: ProductGenqlSelection
    /** The product variants associated with this delivery profile. */
    variants?: (ProductVariantConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DeliveryProfileItems.
 * 
 */
export interface DeliveryProfileItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DeliveryProfileItemEdgeGenqlSelection
    /** A list of the nodes contained in DeliveryProfileItemEdge. */
    nodes?: DeliveryProfileItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DeliveryProfileItem and a cursor during pagination.
 * 
 */
export interface DeliveryProfileItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DeliveryProfileItemEdge. */
    node?: DeliveryProfileItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Links a location group with zones. Both are associated to a delivery profile. */
export interface DeliveryProfileLocationGroupGenqlSelection{
    /** The countries already selected in any zone for the specified location group. */
    countriesInAnyZone?: DeliveryCountryAndZoneGenqlSelection
    /** The collection of locations that make up the specified location group. */
    locationGroup?: DeliveryLocationGroupGenqlSelection
    /** The applicable zones associated to the specified location group. */
    locationGroupZones?: (DeliveryLocationGroupZoneConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a location group associated to a delivery profile. */
export interface DeliveryProfileLocationGroupInput {
/** The globally-unique ID of the delivery profile location group. */
id?: (Scalars['ID'] | null),
/** The list of location IDs to be moved to this location group. */
locations?: (Scalars['ID'][] | null),
/**
 * The list of location IDs to be added to this location group.
 * 
 * **Note:** due to API input array limits, a maximum of 250 items can be sent per each request.
 * 
 */
locationsToAdd?: (Scalars['ID'][] | null),
/**
 * The list of location IDs to be removed from this location group.
 * 
 * **Note:** due to API input array limits, a maximum of 250 items can be sent per each request.
 * 
 */
locationsToRemove?: (Scalars['ID'][] | null),
/**
 * The list of location group zones to create.
 * 
 * **Note:** due to the potential complexity of the nested data, it is recommended to send no more than 5 zones per each request.
 * 
 */
zonesToCreate?: (DeliveryLocationGroupZoneInput[] | null),
/**
 * The list of location group zones to update.
 * 
 * **Note:** due to the potential complexity of the nested data, it is recommended to send no more than 5 zones per each request.
 * 
 */
zonesToUpdate?: (DeliveryLocationGroupZoneInput[] | null)}


/** A region that is used to define a shipping zone. */
export interface DeliveryProvinceGenqlSelection{
    /** The code of the region. */
    code?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The full name of the region. */
    name?: boolean | number
    /** The translated name of the region. The translation returned is based on the system's locale. */
    translatedName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to specify a region. */
export interface DeliveryProvinceInput {
/** The code of the region. */
code: Scalars['String']}


/** The merchant-defined rate of the [DeliveryMethodDefinition](https://shopify.dev/api/admin-graphql/latest/objects/DeliveryMethodDefinition). */
export interface DeliveryRateDefinitionGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The price of this rate. */
    price?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a rate definition. */
export interface DeliveryRateDefinitionInput {
/** A globally-unique ID of the rate definition. */
id?: (Scalars['ID'] | null),
/** The price of the rate definition. */
price: MoneyInput}


/** A rate provided by a merchant-defined rate or a participant. */
export interface DeliveryRateProviderGenqlSelection{
    on_DeliveryParticipant?:DeliveryParticipantGenqlSelection,
    on_DeliveryRateDefinition?:DeliveryRateDefinitionGenqlSelection,
    on_Node?: NodeGenqlSelection,
    __typename?: boolean | number
}


/**
 * The `DeliverySetting` object enables you to manage shop-wide shipping settings.
 * You can enable legacy compatibility mode for the multi-location delivery profiles feature
 * if the legacy mode isn't blocked.
 * 
 */
export interface DeliverySettingGenqlSelection{
    /** Whether the shop is blocked from converting to full multi-location delivery profiles mode. If the shop is blocked, then the blocking reasons are also returned. */
    legacyModeBlocked?: DeliveryLegacyModeBlockedGenqlSelection
    /** Enables legacy compatability mode for the multi-location delivery profiles feature. */
    legacyModeProfiles?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for shop-level delivery settings. */
export interface DeliverySettingInput {
/** Whether legacy compatability mode is enabled for the multi-location delivery profiles feature. */
legacyModeProfiles?: (Scalars['Boolean'] | null)}


/** Return type for `deliverySettingUpdate` mutation. */
export interface DeliverySettingUpdatePayloadGenqlSelection{
    /** The updated delivery shop level settings. */
    setting?: DeliverySettingGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `deliveryShippingOriginAssign` mutation. */
export interface DeliveryShippingOriginAssignPayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for updating the condition of a delivery method definition. */
export interface DeliveryUpdateConditionInput {
/** A globally-unique ID of the condition. */
id: Scalars['ID'],
/** The value that will be used in comparison. */
criteria?: (Scalars['Float'] | null),
/** The unit associated with the value that will be used in comparison. */
criteriaUnit?: (Scalars['String'] | null),
/** The property of an order that will be used in comparison. */
field?: (DeliveryConditionField | null),
/** The operator to use for comparison. */
operator?: (DeliveryConditionOperator | null)}


/** The input fields for a weight-based condition of a delivery method definition. */
export interface DeliveryWeightConditionInput {
/** The weight value to compare the weight of an order to. */
criteria?: (WeightInput | null),
/** The operator to use for comparison. */
operator?: (DeliveryConditionOperator | null)}


/**
 * A zone is a group of countries that have the same shipping rates. Customers can order products from a store only if they choose a shipping destination that's included in one of the store's zones.
 * 
 */
export interface DeliveryZoneGenqlSelection{
    /** The list of countries within the zone. */
    countries?: DeliveryCountryGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the zone. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A discount. */
export interface DiscountGenqlSelection{
    on_DiscountAutomaticApp?:DiscountAutomaticAppGenqlSelection,
    on_DiscountAutomaticBasic?:DiscountAutomaticBasicGenqlSelection,
    on_DiscountAutomaticBxgy?:DiscountAutomaticBxgyGenqlSelection,
    on_DiscountCodeApp?:DiscountCodeAppGenqlSelection,
    on_DiscountCodeBasic?:DiscountCodeBasicGenqlSelection,
    on_DiscountCodeBxgy?:DiscountCodeBxgyGenqlSelection,
    on_DiscountCodeFreeShipping?:DiscountCodeFreeShippingGenqlSelection,
    on_HasEvents?: HasEventsGenqlSelection,
    on_Node?: NodeGenqlSelection,
    __typename?: boolean | number
}


/** An amount that's allocated to a line based on an associated discount application. */
export interface DiscountAllocationGenqlSelection{
    /**
     * @deprecated Use `allocatedAmountSet` instead.
     * The money amount that's allocated to a line based on the associated discount application.
     */
    allocatedAmount?: MoneyV2GenqlSelection
    /** The money amount that's allocated to a line based on the associated discount application in shop and presentment currencies. */
    allocatedAmountSet?: MoneyBagGenqlSelection
    /** The discount application that the allocated amount originated from. */
    discountApplication?: DiscountApplicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fixed amount value of a discount, and whether the amount is applied to each entitled item or spread evenly across the entitled items. */
export interface DiscountAmountGenqlSelection{
    /** The value of the discount. */
    amount?: MoneyV2GenqlSelection
    /** If true, then the discount is applied to each of the entitled items. If false, then the amount is split across all of the entitled items. */
    appliesOnEachItem?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the value of the discount and how it is applied. */
export interface DiscountAmountInput {
/** The value of the discount. */
amount?: (Scalars['Decimal'] | null),
/** If true, then the discount is applied to each of the entitled items. If false, then the amount is split across all of the entitled items. */
appliesOnEachItem?: (Scalars['Boolean'] | null)}


/**
 * Discount applications capture the intentions of a discount source at
 * the time of application on an order's line items or shipping lines.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface DiscountApplicationGenqlSelection{
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod?: boolean | number
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    on_AutomaticDiscountApplication?: AutomaticDiscountApplicationGenqlSelection
    on_DiscountCodeApplication?: DiscountCodeApplicationGenqlSelection
    on_ManualDiscountApplication?: ManualDiscountApplicationGenqlSelection
    on_ScriptDiscountApplication?: ScriptDiscountApplicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountApplications.
 * 
 */
export interface DiscountApplicationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountApplicationEdgeGenqlSelection
    /** A list of the nodes contained in DiscountApplicationEdge. */
    nodes?: DiscountApplicationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountApplication and a cursor during pagination.
 * 
 */
export interface DiscountApplicationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountApplicationEdge. */
    node?: DiscountApplicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The type of discount associated to the automatic discount. For example, the automatic discount might offer a basic discount using a fixed percentage, or a fixed amount, on specific products from the order. The automatic discount may also be a BXGY discount, which offers customer discounts on select products if they add a specific product to their order. */
export interface DiscountAutomaticGenqlSelection{
    on_DiscountAutomaticApp?:DiscountAutomaticAppGenqlSelection,
    on_DiscountAutomaticBasic?:DiscountAutomaticBasicGenqlSelection,
    on_DiscountAutomaticBxgy?:DiscountAutomaticBxgyGenqlSelection,
    on_HasEvents?: HasEventsGenqlSelection,
    on_Node?: NodeGenqlSelection,
    __typename?: boolean | number
}


/** Return type for `discountAutomaticActivate` mutation. */
export interface DiscountAutomaticActivatePayloadGenqlSelection{
    /** The activated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An automatic app discount. */
export interface DiscountAutomaticAppGenqlSelection{
    /** The app discount type providing the discount type. */
    appDiscountType?: AppDiscountTypeGenqlSelection
    /** The number of times the discount has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount?: boolean | number
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The ID for the discount. */
    discountId?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** The error history on the most recent version of the app discount. */
    errorHistory?: FunctionsErrorHistoryGenqlSelection
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountAutomaticAppCreate` mutation. */
export interface DiscountAutomaticAppCreatePayloadGenqlSelection{
    /** The created app discount. */
    automaticAppDiscount?: DiscountAutomaticAppGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create an app discount. */
export interface DiscountAutomaticAppInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The ID of the function providing the app discount type. */
functionId?: (Scalars['String'] | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** Additional metafields to associate to the discount. */
metafields?: (MetafieldInput[] | null)}


/** Return type for `discountAutomaticAppUpdate` mutation. */
export interface DiscountAutomaticAppUpdatePayloadGenqlSelection{
    /** The updated automatic app discount. */
    automaticAppDiscount?: DiscountAutomaticAppGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An automatic discount that offers customers a percentage discount, or fixed amount discount, on specific products, collections, or the entire order. */
export interface DiscountAutomaticBasicGenqlSelection{
    /** The number of times the discount has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount?: boolean | number
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets?: DiscountCustomerGetsGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** The minimum subtotal or quantity that's required for the discount to be applied. */
    minimumRequirement?: DiscountMinimumRequirementGenqlSelection
    /** A short summary of the discount. */
    shortSummary?: boolean | number
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** A detailed summary of the discount. */
    summary?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    /**
     * @deprecated Use `asyncUsageCount` instead.
     * The number of times that the discount has been used.
     */
    usageCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountAutomaticBasicCreate` mutation. */
export interface DiscountAutomaticBasicCreatePayloadGenqlSelection{
    /** The created automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update an automatic basic discount. */
export interface DiscountAutomaticBasicInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** The minimum subtotal or quantity that's required for the discount to be applied. */
minimumRequirement?: (DiscountMinimumRequirementInput | null),
/** Information about the qualifying items and their discount. */
customerGets?: (DiscountCustomerGetsInput | null)}


/** Return type for `discountAutomaticBasicUpdate` mutation. */
export interface DiscountAutomaticBasicUpdatePayloadGenqlSelection{
    /** The updated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountAutomaticBulkDelete` mutation. */
export interface DiscountAutomaticBulkDeletePayloadGenqlSelection{
    /** The asynchronous job removing the automatic discounts. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An automatic discount that offers customers a Buy X, Get Y (BXGY) discount. */
export interface DiscountAutomaticBxgyGenqlSelection{
    /** The number of times the discount has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount?: boolean | number
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount. */
    customerBuys?: DiscountCustomerBuysGenqlSelection
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets?: DiscountCustomerGetsGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * @deprecated Use DiscountAutomaticNode.id instead.
     * A legacy unique ID for the discount.
     */
    id?: boolean | number
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** A detailed summary of the discount. */
    summary?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    /**
     * @deprecated Use `asyncUsageCount` instead.
     * The number of times that the discount has been used.
     */
    usageCount?: boolean | number
    /** The maximum number of times that the discount can be applied to an order. */
    usesPerOrderLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountAutomaticBxgyCreate` mutation. */
export interface DiscountAutomaticBxgyCreatePayloadGenqlSelection{
    /** The created automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update an automatic Buy X, Get Y (BXGY) discount. */
export interface DiscountAutomaticBxgyInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The maximum number of times that the discount can be applied to an order. */
usesPerOrderLimit?: (Scalars['UnsignedInt64'] | null),
/** The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount. */
customerBuys?: (DiscountCustomerBuysInput | null),
/** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
customerGets?: (DiscountCustomerGetsInput | null)}


/** Return type for `discountAutomaticBxgyUpdate` mutation. */
export interface DiscountAutomaticBxgyUpdatePayloadGenqlSelection{
    /** The updated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountAutomatics.
 * 
 */
export interface DiscountAutomaticConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountAutomaticEdgeGenqlSelection
    /** A list of the nodes contained in DiscountAutomaticEdge. */
    nodes?: DiscountAutomaticGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountAutomaticDeactivate` mutation. */
export interface DiscountAutomaticDeactivatePayloadGenqlSelection{
    /** The deactivated automatic discount. */
    automaticDiscountNode?: DiscountAutomaticNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountAutomaticDelete` mutation. */
export interface DiscountAutomaticDeletePayloadGenqlSelection{
    /** The deleted automatic discount ID. */
    deletedAutomaticDiscountId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountAutomatic and a cursor during pagination.
 * 
 */
export interface DiscountAutomaticEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountAutomaticEdge. */
    node?: DiscountAutomaticGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A node containing an automatic discount and its related events. */
export interface DiscountAutomaticNodeGenqlSelection{
    /** The automatic discount object. */
    automaticDiscount?: DiscountAutomaticGenqlSelection
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountAutomaticNodes.
 * 
 */
export interface DiscountAutomaticNodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountAutomaticNodeEdgeGenqlSelection
    /** A list of the nodes contained in DiscountAutomaticNodeEdge. */
    nodes?: DiscountAutomaticNodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountAutomaticNode and a cursor during pagination.
 * 
 */
export interface DiscountAutomaticNodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountAutomaticNodeEdge. */
    node?: DiscountAutomaticNodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The type of discount associated with the discount code. For example, the discount code might offer a basic discount of a fixed percentage, or a fixed amount, on specific products or the order. Alternatively, the discount might offer the customer free shipping on their order. A third option is a Buy X, Get Y (BXGY) discount, which offers a customer discounts on select products if they add a specific product to their order. */
export interface DiscountCodeGenqlSelection{
    on_DiscountCodeApp?:DiscountCodeAppGenqlSelection,
    on_DiscountCodeBasic?:DiscountCodeBasicGenqlSelection,
    on_DiscountCodeBxgy?:DiscountCodeBxgyGenqlSelection,
    on_DiscountCodeFreeShipping?:DiscountCodeFreeShippingGenqlSelection,
    __typename?: boolean | number
}


/** Return type for `discountCodeActivate` mutation. */
export interface DiscountCodeActivatePayloadGenqlSelection{
    /** The activated code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A code app discount. */
export interface DiscountCodeAppGenqlSelection{
    /** The app discount type providing the discount type. */
    appDiscountType?: AppDiscountTypeGenqlSelection
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer?: boolean | number
    /** The number of times that the discount has been used. */
    asyncUsageCount?: boolean | number
    /** The number of redeem codes for the discount. */
    codeCount?: boolean | number
    /** A list of redeem codes for the discount. */
    codes?: (DiscountRedeemCodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountCodeSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `times_used`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The customers that can use the discount. */
    customerSelection?: DiscountCustomerSelectionGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The ID for the discount. */
    discountId?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** The error history on the most recent version of the discount. */
    errorHistory?: FunctionsErrorHistoryGenqlSelection
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment?: boolean | number
    /** The number of times a discount applies on recurring purchases (subscriptions). */
    recurringCycleLimit?: boolean | number
    /** URLs that can be used to share the discount. */
    shareableUrls?: DiscountShareableUrlGenqlSelection
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2GenqlSelection
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    /** The maximum number of times that the discount can be used. */
    usageLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeAppCreate` mutation. */
export interface DiscountCodeAppCreatePayloadGenqlSelection{
    /** The created code app discount. */
    codeAppDiscount?: DiscountCodeAppGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create a code app discount. */
export interface DiscountCodeAppInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The ID of the function providing the app discount type. */
functionId?: (Scalars['String'] | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** The maximum number of times that the discount can be used. For open-ended discounts, use `null`. */
usageLimit?: (Scalars['Int'] | null),
/** Whether the discount can be applied only once per customer. */
appliesOncePerCustomer?: (Scalars['Boolean'] | null),
/** The customers that can use the discount. */
customerSelection?: (DiscountCustomerSelectionInput | null),
/** The code to use the discount. */
code?: (Scalars['String'] | null),
/** Additional metafields to associate to the discount. */
metafields?: (MetafieldInput[] | null)}


/** Return type for `discountCodeAppUpdate` mutation. */
export interface DiscountCodeAppUpdatePayloadGenqlSelection{
    /** The updated code app discount. */
    codeAppDiscount?: DiscountCodeAppGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Discount code applications capture the intentions of a discount code at
 * the time that it is applied onto an order.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface DiscountCodeApplicationGenqlSelection{
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod?: boolean | number
    /** The string identifying the discount code that was used at the time of application. */
    code?: boolean | number
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A code discount that offers customers a percentage or fixed amount discount on specific products, collections, or the entire order. */
export interface DiscountCodeBasicGenqlSelection{
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer?: boolean | number
    /** The number of times that the discount has been used. */
    asyncUsageCount?: boolean | number
    /** The number of redeem codes for the discount. */
    codeCount?: boolean | number
    /** A list of redeem codes for the discount. */
    codes?: (DiscountRedeemCodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountCodeSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `times_used`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets?: DiscountCustomerGetsGenqlSelection
    /** The customers that can use the discount. */
    customerSelection?: DiscountCustomerSelectionGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment?: boolean | number
    /** The minimum subtotal or quantity that's required for the discount to be applied. */
    minimumRequirement?: DiscountMinimumRequirementGenqlSelection
    /** The number of times a discount applies on recurring purchases (subscriptions). */
    recurringCycleLimit?: boolean | number
    /** URLs that can be used to share the discount. */
    shareableUrls?: DiscountShareableUrlGenqlSelection
    /** A short summary of the discount. */
    shortSummary?: boolean | number
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** A detailed summary of the discount. */
    summary?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2GenqlSelection
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    /** The maximum number of times that the discount can be used. */
    usageLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeBasicCreate` mutation. */
export interface DiscountCodeBasicCreatePayloadGenqlSelection{
    /** The created code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a basic code discount. */
export interface DiscountCodeBasicInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** The maximum number of times that the discount can be used. For open-ended discounts, use `null`. */
usageLimit?: (Scalars['Int'] | null),
/** Whether the discount can be applied only once per customer. */
appliesOncePerCustomer?: (Scalars['Boolean'] | null),
/** The minimum subtotal or quantity that's required for the discount to be applied. */
minimumRequirement?: (DiscountMinimumRequirementInput | null),
/** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
customerGets?: (DiscountCustomerGetsInput | null),
/** The customers that can use the discount. */
customerSelection?: (DiscountCustomerSelectionInput | null),
/** The code to use the discount. */
code?: (Scalars['String'] | null),
/** The number of times a discount applies on recurring purchases (subscriptions). */
recurringCycleLimit?: (Scalars['Int'] | null)}


/** Return type for `discountCodeBasicUpdate` mutation. */
export interface DiscountCodeBasicUpdatePayloadGenqlSelection{
    /** The updated code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeBulkActivate` mutation. */
export interface DiscountCodeBulkActivatePayloadGenqlSelection{
    /** The asynchronous job that activates the code discounts. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeBulkDeactivate` mutation. */
export interface DiscountCodeBulkDeactivatePayloadGenqlSelection{
    /** The asynchronous job that deactivates the code discounts. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeBulkDelete` mutation. */
export interface DiscountCodeBulkDeletePayloadGenqlSelection{
    /** The asynchronous job that deletes the code discounts. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A code discount that offers customers a Buy X, Get Y (BXGY) discount. */
export interface DiscountCodeBxgyGenqlSelection{
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer?: boolean | number
    /** The number of times that the discount has been used. */
    asyncUsageCount?: boolean | number
    /** The number of redeem codes for the discount. */
    codeCount?: boolean | number
    /** A list of redeem codes for the discount. */
    codes?: (DiscountRedeemCodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountCodeSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `times_used`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount. */
    customerBuys?: DiscountCustomerBuysGenqlSelection
    /** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
    customerGets?: DiscountCustomerGetsGenqlSelection
    /** The customers that can use the discount. */
    customerSelection?: DiscountCustomerSelectionGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment?: boolean | number
    /** URLs that can be used to share the discount. */
    shareableUrls?: DiscountShareableUrlGenqlSelection
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** A detailed summary of the discount. */
    summary?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2GenqlSelection
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    /** The maximum number of times that the discount can be used. */
    usageLimit?: boolean | number
    /** The maximum number of times that the discount can be applied to an order. */
    usesPerOrderLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeBxgyCreate` mutation. */
export interface DiscountCodeBxgyCreatePayloadGenqlSelection{
    /** The created code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a BXGY code discount. */
export interface DiscountCodeBxgyInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount. */
customerBuys?: (DiscountCustomerBuysInput | null),
/** The qualifying items that will be discounted, the quantity of each one, and the total value of the discount. */
customerGets?: (DiscountCustomerGetsInput | null),
/** The customers that are eligible to use the discount. */
customerSelection?: (DiscountCustomerSelectionInput | null),
/** The code to use the discount. */
code?: (Scalars['String'] | null),
/** The maximum number of times that the discount can be used. For open-ended discounts, use `null`. */
usageLimit?: (Scalars['Int'] | null),
/** The maximum number of times that the discount can be applied to an order. */
usesPerOrderLimit?: (Scalars['Int'] | null),
/** Whether the discount can be applied only once per customer. */
appliesOncePerCustomer?: (Scalars['Boolean'] | null)}


/** Return type for `discountCodeBxgyUpdate` mutation. */
export interface DiscountCodeBxgyUpdatePayloadGenqlSelection{
    /** The updated code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeDeactivate` mutation. */
export interface DiscountCodeDeactivatePayloadGenqlSelection{
    /** The deactivated code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeDelete` mutation. */
export interface DiscountCodeDeletePayloadGenqlSelection{
    /** The deleted code discount ID. */
    deletedCodeDiscountId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A code discount that offers customers free shipping on their order. */
export interface DiscountCodeFreeShippingGenqlSelection{
    /** Whether the discount applies on regular one-time-purchase shipping lines. */
    appliesOnOneTimePurchase?: boolean | number
    /** Whether the discount applies on subscription shipping lines. */
    appliesOnSubscription?: boolean | number
    /** Whether the discount can be applied only once per customer. */
    appliesOncePerCustomer?: boolean | number
    /** The number of times that the discount has been used. */
    asyncUsageCount?: boolean | number
    /** The number of redeem codes for the discount. */
    codeCount?: boolean | number
    /** A list of redeem codes for the discount. */
    codes?: (DiscountRedeemCodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountCodeSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `times_used`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the discount was created. */
    createdAt?: boolean | number
    /** The customers that can use the discount. */
    customerSelection?: DiscountCustomerSelectionGenqlSelection
    /** A shipping destination that qualifies for the discount. */
    destinationSelection?: DiscountShippingDestinationSelectionGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** The date and time when the discount ends. For open-ended discounts, use `null`. */
    endsAt?: boolean | number
    /** Indicates whether there are any timeline comments on the discount. */
    hasTimelineComment?: boolean | number
    /** The maximum shipping price amount accepted to qualify for the discount. */
    maximumShippingPrice?: MoneyV2GenqlSelection
    /** The minimum subtotal or quantity that's required for the discount to be applied. */
    minimumRequirement?: DiscountMinimumRequirementGenqlSelection
    /** The number of times a discount applies on recurring purchases (subscriptions). */
    recurringCycleLimit?: boolean | number
    /** URLs that can be used to share the discount. */
    shareableUrls?: DiscountShareableUrlGenqlSelection
    /** A short summary of the discount. */
    shortSummary?: boolean | number
    /** The date and time when the discount starts. */
    startsAt?: boolean | number
    /** The status of the discount. */
    status?: boolean | number
    /** A detailed summary of the discount. */
    summary?: boolean | number
    /** The title of the discount. */
    title?: boolean | number
    /** The total sales from orders where the discount was used. */
    totalSales?: MoneyV2GenqlSelection
    /** The date and time when the discount was updated. */
    updatedAt?: boolean | number
    /** The maximum number of times that the discount can be used. */
    usageLimit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeFreeShippingCreate` mutation. */
export interface DiscountCodeFreeShippingCreatePayloadGenqlSelection{
    /** The created code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a free shipping code discount. */
export interface DiscountCodeFreeShippingInput {
/** Determines which discount classes the shipping discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** The title of the discount. */
title?: (Scalars['String'] | null),
/** The date and time when the discount starts. */
startsAt?: (Scalars['DateTime'] | null),
/** The date and time when the discount ends. For open-ended discounts, use `null`. */
endsAt?: (Scalars['DateTime'] | null),
/** The code to use the discount. */
code?: (Scalars['String'] | null),
/** The maximum number of times that the discount can be used. For open-ended discounts, use `null`. */
usageLimit?: (Scalars['Int'] | null),
/** Whether the discount can be applied only once per customer. */
appliesOncePerCustomer?: (Scalars['Boolean'] | null),
/** The minimum subtotal or quantity that's required for the discount to be applied. */
minimumRequirement?: (DiscountMinimumRequirementInput | null),
/** The customers that are eligible to use the discount. */
customerSelection?: (DiscountCustomerSelectionInput | null),
/** A list of destinations where the discount will apply. */
destination?: (DiscountShippingDestinationSelectionInput | null),
/** The maximum shipping price that qualifies for the discount. */
maximumShippingPrice?: (Scalars['Decimal'] | null),
/** The number of times a discount applies on recurring purchases (subscriptions). */
recurringCycleLimit?: (Scalars['Int'] | null),
/** Whether the discount applies on regular one-time-purchase items. */
appliesOnOneTimePurchase?: (Scalars['Boolean'] | null),
/** Whether the discount applies on subscription items. */
appliesOnSubscription?: (Scalars['Boolean'] | null)}


/** Return type for `discountCodeFreeShippingUpdate` mutation. */
export interface DiscountCodeFreeShippingUpdatePayloadGenqlSelection{
    /** The updated code discount. */
    codeDiscountNode?: DiscountCodeNodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A node containing a code discount and its related events. */
export interface DiscountCodeNodeGenqlSelection{
    /** The underlying code discount object. */
    codeDiscount?: DiscountCodeGenqlSelection
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountCodeNodes.
 * 
 */
export interface DiscountCodeNodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountCodeNodeEdgeGenqlSelection
    /** A list of the nodes contained in DiscountCodeNodeEdge. */
    nodes?: DiscountCodeNodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountCodeNode and a cursor during pagination.
 * 
 */
export interface DiscountCodeNodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountCodeNodeEdge. */
    node?: DiscountCodeNodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountCodeRedeemCodeBulkDelete` mutation. */
export interface DiscountCodeRedeemCodeBulkDeletePayloadGenqlSelection{
    /** The asynchronous job that deletes the discount redeem codes. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of collections that the discount can have as a prerequisite or a list of collections to which the discount can be applied. */
export interface DiscountCollectionsGenqlSelection{
    /** The list of collections that the discount can have as a prerequisite or the list of collections to which the discount can be applied. */
    collections?: (CollectionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for collections attached to a discount. */
export interface DiscountCollectionsInput {
/** Specifies list of collection ids to add. */
add?: (Scalars['ID'][] | null),
/** Specifies list of collection ids to remove. */
remove?: (Scalars['ID'][] | null)}


/** Determines which discount classes the discount can combine with. */
export interface DiscountCombinesWithGenqlSelection{
    /** Combines with order discounts. */
    orderDiscounts?: boolean | number
    /** Combines with product discounts. */
    productDiscounts?: boolean | number
    /** Combines with shipping discounts. */
    shippingDiscounts?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to determine which discount classes the discount can combine with. */
export interface DiscountCombinesWithInput {
/** Combines with product discounts. */
productDiscounts?: (Scalars['Boolean'] | null),
/** Combines with order discounts. */
orderDiscounts?: (Scalars['Boolean'] | null),
/** Combines with shipping discounts. */
shippingDiscounts?: (Scalars['Boolean'] | null)}


/** The shipping destinations where the discount can be applied. */
export interface DiscountCountriesGenqlSelection{
    /** The codes for the countries where the discount can be applied. */
    countries?: boolean | number
    /** Whether the discount is applicable to countries that have not been defined in the shop's shipping zones. */
    includeRestOfWorld?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a list of countries to add or remove from the free shipping discount. */
export interface DiscountCountriesInput {
/** The country codes to add to the list of countries where the discount applies. */
add?: (CountryCode[] | null),
/** The country codes to remove from the list of countries where the discount applies. */
remove?: (CountryCode[] | null),
/** Whether the discount code is applicable to countries that have not been defined in the shop's shipping zones. */
includeRestOfWorld?: (Scalars['Boolean'] | null)}


/** The `DiscountCountryAll` object lets you target all countries as shipping destination for discount eligibility. */
export interface DiscountCountryAllGenqlSelection{
    /** Whether the discount can be applied to all countries as shipping destination. This value is always `true`. */
    allCountries?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The `DiscountCustomerAll` object lets you target all customers for discount eligibility. */
export interface DiscountCustomerAllGenqlSelection{
    /** Whether the discount can be applied by all customers. This value is always `true`. */
    allCustomers?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The prerequisite items and prerequisite value that a customer must have on the order for the discount to be applicable. */
export interface DiscountCustomerBuysGenqlSelection{
    /** The items required for the discount to be applicable. */
    items?: DiscountItemsGenqlSelection
    /** The prerequisite value. */
    value?: DiscountCustomerBuysValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for prerequisite items and quantity for the discount. */
export interface DiscountCustomerBuysInput {
/** The quantity of prerequisite items. */
value?: (DiscountCustomerBuysValueInput | null),
/** The IDs of items that the customer buys. The items can be either collections or products. */
items?: (DiscountItemsInput | null)}


/** The prerequisite for the discount to be applicable. For example, the discount might require a customer to buy a minimum quantity of select items. Alternatively, the discount might require a customer to spend a minimum amount on select items. */
export interface DiscountCustomerBuysValueGenqlSelection{
    on_DiscountPurchaseAmount?:DiscountPurchaseAmountGenqlSelection,
    on_DiscountQuantity?:DiscountQuantityGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for prerequisite quantity or minimum purchase amount required for the discount. */
export interface DiscountCustomerBuysValueInput {
/** The quantity of prerequisite items. */
quantity?: (Scalars['UnsignedInt64'] | null),
/** The prerequisite minimum purchase amount required for the discount to be applicable. */
amount?: (Scalars['Decimal'] | null)}


/** The qualifying items in an order, the quantity of each one, and the total value of the discount. */
export interface DiscountCustomerGetsGenqlSelection{
    /** Whether the discount applies on regular one-time-purchase items. */
    appliesOnOneTimePurchase?: boolean | number
    /** Whether the discount applies on subscription items. */
    appliesOnSubscription?: boolean | number
    /** The items to which the discount applies. */
    items?: DiscountItemsGenqlSelection
    /** Entitled quantity and the discount value. */
    value?: DiscountCustomerGetsValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies the items that will be discounted, the quantity of items that will be discounted, and the value of discount. */
export interface DiscountCustomerGetsInput {
/** The quantity of items discounted and the discount value. */
value?: (DiscountCustomerGetsValueInput | null),
/** The IDs of the items that the customer gets. The items can be either collections or products. */
items?: (DiscountItemsInput | null),
/** Whether the discount applies on regular one-time-purchase items. */
appliesOnOneTimePurchase?: (Scalars['Boolean'] | null),
/** Whether the discount applies on subscription items. */
appliesOnSubscription?: (Scalars['Boolean'] | null)}


/** The type of the discount value and how it will be applied. For example, it might be a percentage discount on a fixed number of items. Alternatively, it might be a fixed amount evenly distributed across all items or on each individual item. A third example is a percentage discount on all items. */
export interface DiscountCustomerGetsValueGenqlSelection{
    on_DiscountAmount?:DiscountAmountGenqlSelection,
    on_DiscountOnQuantity?:DiscountOnQuantityGenqlSelection,
    on_DiscountPercentage?:DiscountPercentageGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for the quantity of items discounted and the discount value. */
export interface DiscountCustomerGetsValueInput {
/** The quantity of the items that are discounted and the discount value. */
discountOnQuantity?: (DiscountOnQuantityInput | null),
/** The percentage value of the discount. Value must be between 0.00 - 1.00. */
percentage?: (Scalars['Float'] | null),
/** The value of the discount. */
discountAmount?: (DiscountAmountInput | null)}


/** A list of customer segments that contain the customers that the discount applies to. */
export interface DiscountCustomerSegmentsGenqlSelection{
    /** A list of customer segments that contain the customers who can use the discount. */
    segments?: SegmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for which customer segments to add to or remove from the discount. */
export interface DiscountCustomerSegmentsInput {
/** A list of customer segments to add to the current list of customer segments. */
add?: (Scalars['ID'][] | null),
/** A list of customer segments to remove from the current list of customer segments. */
remove?: (Scalars['ID'][] | null)}


/** The type used for targeting a set of customers who are eligible for the discount. For example, the discount might be available to all customers or it might only be available to a specific set of customers. You can define the set of customers by targeting a list of customer segments, or by targeting a list of specific customers. */
export interface DiscountCustomerSelectionGenqlSelection{
    on_DiscountCustomerAll?:DiscountCustomerAllGenqlSelection,
    on_DiscountCustomerSegments?:DiscountCustomerSegmentsGenqlSelection,
    on_DiscountCustomers?:DiscountCustomersGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for the customers who can use this discount. */
export interface DiscountCustomerSelectionInput {
/** Whether all customers can use this discount. */
all?: (Scalars['Boolean'] | null),
/** The list of customer IDs to add or remove from the list of customers. */
customers?: (DiscountCustomersInput | null),
/** The list of customer segment IDs to add or remove from the list of customer segments. */
customerSegments?: (DiscountCustomerSegmentsInput | null)}


/** A list of customers eligible for the discount. */
export interface DiscountCustomersGenqlSelection{
    /** The list of customers eligible for the discount. */
    customers?: CustomerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for which customers to add to or remove from the discount. */
export interface DiscountCustomersInput {
/** A list of customers to add to the current list of customers who can use the discount. */
add?: (Scalars['ID'][] | null),
/** A list of customers to remove from the current list of customers who can use the discount. */
remove?: (Scalars['ID'][] | null)}


/** The type of discount that will be applied. Currently, only a percentage discount is supported. */
export interface DiscountEffectGenqlSelection{
    on_DiscountPercentage?:DiscountPercentageGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for how the discount will be applied. Currently, only percentage off is supported. */
export interface DiscountEffectInput {
/** The percentage value of the discount. Value must be between 0.00 - 1.00. */
percentage?: (Scalars['Float'] | null)}


/** The type used to target the items required for discount eligibility, or the items to which the application of a discount might apply. For example, for a customer to be eligible for a discount, they're required to add an item from a specified collection to their order. Alternatively, a customer might be required to add a specific product or product variant. When using this type to target which items the discount will apply to, the discount might apply to all items on the order, or to specific products and product variants, or items in a given collection. */
export interface DiscountItemsGenqlSelection{
    on_AllDiscountItems?:AllDiscountItemsGenqlSelection,
    on_DiscountCollections?:DiscountCollectionsGenqlSelection,
    on_DiscountProducts?:DiscountProductsGenqlSelection,
    __typename?: boolean | number
}


/**
 * The input fields for the items attached to a discount. You can specify the discount items by product ID or collection ID.
 * 
 */
export interface DiscountItemsInput {
/** The products and product variants that are attached to a discount. */
products?: (DiscountProductsInput | null),
/** The collections that are attached to a discount. */
collections?: (DiscountCollectionsInput | null),
/** Whether all items should be selected. */
all?: (Scalars['Boolean'] | null)}


/** The minimum quantity of items required for the discount to apply. */
export interface DiscountMinimumQuantityGenqlSelection{
    /** The minimum quantity of items that's required for the discount to be applied. */
    greaterThanOrEqualToQuantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the minimum quantity required for the discount. */
export interface DiscountMinimumQuantityInput {
/** The minimum quantity of items that's required for the discount to be applied. */
greaterThanOrEqualToQuantity?: (Scalars['UnsignedInt64'] | null)}


/** The type of minimum requirement that must be met for the discount to be applied. For example, a customer must spend a minimum subtotal to be eligible for the discount. Alternatively, a customer must purchase a minimum quantity of items to be eligible for the discount. */
export interface DiscountMinimumRequirementGenqlSelection{
    on_DiscountMinimumQuantity?:DiscountMinimumQuantityGenqlSelection,
    on_DiscountMinimumSubtotal?:DiscountMinimumSubtotalGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for the minimum quantity or subtotal required for a discount. */
export interface DiscountMinimumRequirementInput {
/** The minimum required quantity. */
quantity?: (DiscountMinimumQuantityInput | null),
/** The minimum required subtotal. */
subtotal?: (DiscountMinimumSubtotalInput | null)}


/** The minimum subtotal required for the discount to apply. */
export interface DiscountMinimumSubtotalGenqlSelection{
    /** The minimum subtotal that's required for the discount to be applied. */
    greaterThanOrEqualToSubtotal?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the minimum subtotal required for a discount. */
export interface DiscountMinimumSubtotalInput {
/** The minimum subtotal that's required for the discount to be applied. */
greaterThanOrEqualToSubtotal?: (Scalars['Decimal'] | null)}


/** A discount wrapper node. */
export interface DiscountNodeGenqlSelection{
    /** A discount. */
    discount?: DiscountGenqlSelection
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountNodes.
 * 
 */
export interface DiscountNodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountNodeEdgeGenqlSelection
    /** A list of the nodes contained in DiscountNodeEdge. */
    nodes?: DiscountNodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountNode and a cursor during pagination.
 * 
 */
export interface DiscountNodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountNodeEdge. */
    node?: DiscountNodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The quantity of items discounted, the discount value, and how the discount will be applied. */
export interface DiscountOnQuantityGenqlSelection{
    /** The discount's effect on qualifying items. */
    effect?: DiscountEffectGenqlSelection
    /** The number of items being discounted. The customer must have at least this many items of specified products or product variants in their order to be eligible for the discount. */
    quantity?: DiscountQuantityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the quantity of items discounted and the discount value. */
export interface DiscountOnQuantityInput {
/** The quantity of items that are discounted. */
quantity?: (Scalars['UnsignedInt64'] | null),
/** The percentage value of the discount. */
effect?: (DiscountEffectInput | null)}


/** A discount effect that gives customers a percentage off of specified items on their order. */
export interface DiscountPercentageGenqlSelection{
    /** The percentage value of the discount. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of products and product variants that the discount can have as a prerequisite or a list of products and product variants to which the discount can be applied. */
export interface DiscountProductsGenqlSelection{
    /** The list of product variants that the discount can have as a prerequisite or the list of product variants to which the discount can be applied. */
    productVariants?: (ProductVariantConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of products that the discount can have as a prerequisite or the list of products to which the discount can be applied. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the products and product variants attached to a discount. */
export interface DiscountProductsInput {
/** Specifies list of product ids to add. */
productsToAdd?: (Scalars['ID'][] | null),
/** Specifies list of product ids to remove. */
productsToRemove?: (Scalars['ID'][] | null),
/** Specifies list of product variant ids to add. */
productVariantsToAdd?: (Scalars['ID'][] | null),
/** Specifies list of product variant ids to remove. */
productVariantsToRemove?: (Scalars['ID'][] | null)}


/** A purchase amount in the context of a discount. This object can be used to define the minimum purchase amount required for a discount to be applicable. */
export interface DiscountPurchaseAmountGenqlSelection{
    /** The purchase amount in decimal format. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A quantity of items in the context of a discount. This object can be used to define the minimum quantity of items required to apply a discount. Alternatively, it can be used to define the quantity of items that can be discounted. */
export interface DiscountQuantityGenqlSelection{
    /** The quantity of items. */
    quantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A code that a customer can use at checkout to receive a discount. For example, a customer can use the redeem code 'SUMMER20' at checkout to receive a 20% discount on their entire order. */
export interface DiscountRedeemCodeGenqlSelection{
    /** The number of times that the discount redeem code has been used. This value is updated asynchronously and can be different than the actual usage count. */
    asyncUsageCount?: boolean | number
    /** The code that a customer can use at checkout to receive a discount. */
    code?: boolean | number
    /** The application that created the discount redeem code. */
    createdBy?: AppGenqlSelection
    /** A globally-unique ID of the discount redeem code. */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `discountRedeemCodeBulkAdd` mutation. */
export interface DiscountRedeemCodeBulkAddPayloadGenqlSelection{
    /** The ID of the discount redeem code bulk creation operation. The properties and status of the operation can be tracked using the [`DiscountRedeemCodeBulkCreation` query](https://shopify.dev/api/admin-graphql/2022-04/queries/discountRedeemCodeBulkCreation). */
    bulkCreation?: DiscountRedeemCodeBulkCreationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The properties and status of a bulk discount redeem code creation operation. */
export interface DiscountRedeemCodeBulkCreationGenqlSelection{
    /** The result of each code creation operation associated with the bulk creation operation including any errors that might have occurred during the operation. */
    codes?: (DiscountRedeemCodeBulkCreationCodeConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The number of codes to create. */
    codesCount?: boolean | number
    /** The date and time when the bulk creation was created. */
    createdAt?: boolean | number
    /** The code discount associated with the created codes. */
    discountCode?: DiscountCodeNodeGenqlSelection
    /** Whether the bulk creation is still queued (`false`) or has been run (`true`). */
    done?: boolean | number
    /** The number of codes that weren't created successfully. */
    failedCount?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The number of codes created successfully. */
    importedCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A result of a discount redeem code creation operation created by a bulk creation. */
export interface DiscountRedeemCodeBulkCreationCodeGenqlSelection{
    /** The code to use in the discount redeem code creation operation. */
    code?: boolean | number
    /**
     * The successfully created discount redeem code.
     * 
     * If the discount redeem code couldn't be created, then this field is `null``.
     * 
     */
    discountRedeemCode?: DiscountRedeemCodeGenqlSelection
    /** A list of errors that occurred during the creation operation of the discount redeem code. */
    errors?: DiscountUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountRedeemCodeBulkCreationCodes.
 * 
 */
export interface DiscountRedeemCodeBulkCreationCodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountRedeemCodeBulkCreationCodeEdgeGenqlSelection
    /** A list of the nodes contained in DiscountRedeemCodeBulkCreationCodeEdge. */
    nodes?: DiscountRedeemCodeBulkCreationCodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountRedeemCodeBulkCreationCode and a cursor during pagination.
 * 
 */
export interface DiscountRedeemCodeBulkCreationCodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountRedeemCodeBulkCreationCodeEdge. */
    node?: DiscountRedeemCodeBulkCreationCodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DiscountRedeemCodes.
 * 
 */
export interface DiscountRedeemCodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DiscountRedeemCodeEdgeGenqlSelection
    /** A list of the nodes contained in DiscountRedeemCodeEdge. */
    nodes?: DiscountRedeemCodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DiscountRedeemCode and a cursor during pagination.
 * 
 */
export interface DiscountRedeemCodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DiscountRedeemCodeEdge. */
    node?: DiscountRedeemCodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the redeem code to attach to a discount. */
export interface DiscountRedeemCodeInput {
/** The code that a customer can use at checkout to receive the associated discount. */
code: Scalars['String']}


/** A shareable URL for a discount code. */
export interface DiscountShareableUrlGenqlSelection{
    /** The image URL of the item (product or collection) to which the discount applies. */
    targetItemImage?: ImageGenqlSelection
    /** The type of page that's associated with the URL. */
    targetType?: boolean | number
    /** The title of the page that's associated with the URL. */
    title?: boolean | number
    /** The URL for the discount code. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The type used to target the eligible countries of an order's shipping destination for which the discount applies. For example, the discount might be applicable when shipping to all countries, or only to a set of countries. */
export interface DiscountShippingDestinationSelectionGenqlSelection{
    on_DiscountCountries?:DiscountCountriesGenqlSelection,
    on_DiscountCountryAll?:DiscountCountryAllGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for the destinations where the free shipping discount will be applied. */
export interface DiscountShippingDestinationSelectionInput {
/** Whether the discount code applies to all countries. */
all?: (Scalars['Boolean'] | null),
/** A list of countries where the discount code will apply. */
countries?: (DiscountCountriesInput | null)}


/** An error that occurs during the execution of a discount mutation. */
export interface DiscountUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** Extra information about this error. */
    extraInfo?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error in the input of a mutation. */
export interface DisplayableErrorGenqlSelection{
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    on_AbandonmentEmailStateUpdateUserError?: AbandonmentEmailStateUpdateUserErrorGenqlSelection
    on_AbandonmentUpdateActivitiesDeliveryStatusesUserError?: AbandonmentUpdateActivitiesDeliveryStatusesUserErrorGenqlSelection
    on_AppRevenueAttributionRecordCreateUserError?: AppRevenueAttributionRecordCreateUserErrorGenqlSelection
    on_AppRevenueAttributionRecordDeleteUserError?: AppRevenueAttributionRecordDeleteUserErrorGenqlSelection
    on_AppSubscriptionTrialExtendUserError?: AppSubscriptionTrialExtendUserErrorGenqlSelection
    on_BillingAttemptUserError?: BillingAttemptUserErrorGenqlSelection
    on_BulkMutationUserError?: BulkMutationUserErrorGenqlSelection
    on_BulkProductResourceFeedbackCreateUserError?: BulkProductResourceFeedbackCreateUserErrorGenqlSelection
    on_BusinessCustomerUserError?: BusinessCustomerUserErrorGenqlSelection
    on_CartTransformCreateUserError?: CartTransformCreateUserErrorGenqlSelection
    on_CartTransformDeleteUserError?: CartTransformDeleteUserErrorGenqlSelection
    on_CatalogUserError?: CatalogUserErrorGenqlSelection
    on_CollectionAddProductsV2UserError?: CollectionAddProductsV2UserErrorGenqlSelection
    on_CustomerEmailMarketingConsentUpdateUserError?: CustomerEmailMarketingConsentUpdateUserErrorGenqlSelection
    on_CustomerMergeUserError?: CustomerMergeUserErrorGenqlSelection
    on_CustomerPaymentMethodCreateFromDuplicationDataUserError?: CustomerPaymentMethodCreateFromDuplicationDataUserErrorGenqlSelection
    on_CustomerPaymentMethodGetDuplicationDataUserError?: CustomerPaymentMethodGetDuplicationDataUserErrorGenqlSelection
    on_CustomerPaymentMethodGetUpdateUrlUserError?: CustomerPaymentMethodGetUpdateUrlUserErrorGenqlSelection
    on_CustomerPaymentMethodRemoteUserError?: CustomerPaymentMethodRemoteUserErrorGenqlSelection
    on_CustomerPaymentMethodUserError?: CustomerPaymentMethodUserErrorGenqlSelection
    on_CustomerSegmentMembersQueryUserError?: CustomerSegmentMembersQueryUserErrorGenqlSelection
    on_CustomerSmsMarketingConsentError?: CustomerSmsMarketingConsentErrorGenqlSelection
    on_DelegateAccessTokenCreateUserError?: DelegateAccessTokenCreateUserErrorGenqlSelection
    on_DelegateAccessTokenDestroyUserError?: DelegateAccessTokenDestroyUserErrorGenqlSelection
    on_DeliveryCustomizationError?: DeliveryCustomizationErrorGenqlSelection
    on_DeliveryLocationLocalPickupSettingsError?: DeliveryLocationLocalPickupSettingsErrorGenqlSelection
    on_DiscountUserError?: DiscountUserErrorGenqlSelection
    on_DisputeEvidenceUpdateUserError?: DisputeEvidenceUpdateUserErrorGenqlSelection
    on_ErrorsServerPixelUserError?: ErrorsServerPixelUserErrorGenqlSelection
    on_ErrorsWebPixelUserError?: ErrorsWebPixelUserErrorGenqlSelection
    on_FilesUserError?: FilesUserErrorGenqlSelection
    on_FulfillmentOrderHoldUserError?: FulfillmentOrderHoldUserErrorGenqlSelection
    on_FulfillmentOrderLineItemsPreparedForPickupUserError?: FulfillmentOrderLineItemsPreparedForPickupUserErrorGenqlSelection
    on_FulfillmentOrderMergeUserError?: FulfillmentOrderMergeUserErrorGenqlSelection
    on_FulfillmentOrderReleaseHoldUserError?: FulfillmentOrderReleaseHoldUserErrorGenqlSelection
    on_FulfillmentOrderRescheduleUserError?: FulfillmentOrderRescheduleUserErrorGenqlSelection
    on_FulfillmentOrderSplitUserError?: FulfillmentOrderSplitUserErrorGenqlSelection
    on_FulfillmentOrdersReleaseHoldsUserError?: FulfillmentOrdersReleaseHoldsUserErrorGenqlSelection
    on_FulfillmentOrdersSetFulfillmentDeadlineUserError?: FulfillmentOrdersSetFulfillmentDeadlineUserErrorGenqlSelection
    on_GiftCardUserError?: GiftCardUserErrorGenqlSelection
    on_InventoryAdjustQuantitiesUserError?: InventoryAdjustQuantitiesUserErrorGenqlSelection
    on_InventoryBulkToggleActivationUserError?: InventoryBulkToggleActivationUserErrorGenqlSelection
    on_InventoryMoveQuantitiesUserError?: InventoryMoveQuantitiesUserErrorGenqlSelection
    on_InventorySetOnHandQuantitiesUserError?: InventorySetOnHandQuantitiesUserErrorGenqlSelection
    on_LocationActivateUserError?: LocationActivateUserErrorGenqlSelection
    on_LocationAddUserError?: LocationAddUserErrorGenqlSelection
    on_LocationDeactivateUserError?: LocationDeactivateUserErrorGenqlSelection
    on_LocationDeleteUserError?: LocationDeleteUserErrorGenqlSelection
    on_LocationEditUserError?: LocationEditUserErrorGenqlSelection
    on_MarketCurrencySettingsUserError?: MarketCurrencySettingsUserErrorGenqlSelection
    on_MarketUserError?: MarketUserErrorGenqlSelection
    on_MarketingActivityUserError?: MarketingActivityUserErrorGenqlSelection
    on_MediaUserError?: MediaUserErrorGenqlSelection
    on_MetafieldDefinitionCreateUserError?: MetafieldDefinitionCreateUserErrorGenqlSelection
    on_MetafieldDefinitionDeleteUserError?: MetafieldDefinitionDeleteUserErrorGenqlSelection
    on_MetafieldDefinitionPinUserError?: MetafieldDefinitionPinUserErrorGenqlSelection
    on_MetafieldDefinitionUnpinUserError?: MetafieldDefinitionUnpinUserErrorGenqlSelection
    on_MetafieldDefinitionUpdateUserError?: MetafieldDefinitionUpdateUserErrorGenqlSelection
    on_MetafieldsSetUserError?: MetafieldsSetUserErrorGenqlSelection
    on_MetaobjectUserError?: MetaobjectUserErrorGenqlSelection
    on_OrderCreateMandatePaymentUserError?: OrderCreateMandatePaymentUserErrorGenqlSelection
    on_OrderInvoiceSendUserError?: OrderInvoiceSendUserErrorGenqlSelection
    on_PaymentCustomizationError?: PaymentCustomizationErrorGenqlSelection
    on_PaymentReminderSendUserError?: PaymentReminderSendUserErrorGenqlSelection
    on_PaymentTermsCreateUserError?: PaymentTermsCreateUserErrorGenqlSelection
    on_PaymentTermsDeleteUserError?: PaymentTermsDeleteUserErrorGenqlSelection
    on_PaymentTermsUpdateUserError?: PaymentTermsUpdateUserErrorGenqlSelection
    on_PriceListFixedPricesByProductBulkUpdateUserError?: PriceListFixedPricesByProductBulkUpdateUserErrorGenqlSelection
    on_PriceListPriceUserError?: PriceListPriceUserErrorGenqlSelection
    on_PriceListUserError?: PriceListUserErrorGenqlSelection
    on_PriceRuleUserError?: PriceRuleUserErrorGenqlSelection
    on_ProductChangeStatusUserError?: ProductChangeStatusUserErrorGenqlSelection
    on_ProductDeleteUserError?: ProductDeleteUserErrorGenqlSelection
    on_ProductDuplicateUserError?: ProductDuplicateUserErrorGenqlSelection
    on_ProductFeedCreateUserError?: ProductFeedCreateUserErrorGenqlSelection
    on_ProductFeedDeleteUserError?: ProductFeedDeleteUserErrorGenqlSelection
    on_ProductFullSyncUserError?: ProductFullSyncUserErrorGenqlSelection
    on_ProductVariantRelationshipBulkUpdateUserError?: ProductVariantRelationshipBulkUpdateUserErrorGenqlSelection
    on_ProductVariantsBulkCreateUserError?: ProductVariantsBulkCreateUserErrorGenqlSelection
    on_ProductVariantsBulkDeleteUserError?: ProductVariantsBulkDeleteUserErrorGenqlSelection
    on_ProductVariantsBulkReorderUserError?: ProductVariantsBulkReorderUserErrorGenqlSelection
    on_ProductVariantsBulkUpdateUserError?: ProductVariantsBulkUpdateUserErrorGenqlSelection
    on_PubSubWebhookSubscriptionCreateUserError?: PubSubWebhookSubscriptionCreateUserErrorGenqlSelection
    on_PubSubWebhookSubscriptionUpdateUserError?: PubSubWebhookSubscriptionUpdateUserErrorGenqlSelection
    on_PublicationUserError?: PublicationUserErrorGenqlSelection
    on_QuantityRuleUserError?: QuantityRuleUserErrorGenqlSelection
    on_ReturnUserError?: ReturnUserErrorGenqlSelection
    on_SellingPlanGroupUserError?: SellingPlanGroupUserErrorGenqlSelection
    on_ShopPolicyUserError?: ShopPolicyUserErrorGenqlSelection
    on_ShopResourceFeedbackCreateUserError?: ShopResourceFeedbackCreateUserErrorGenqlSelection
    on_StandardMetafieldDefinitionEnableUserError?: StandardMetafieldDefinitionEnableUserErrorGenqlSelection
    on_SubscriptionBillingCycleUserError?: SubscriptionBillingCycleUserErrorGenqlSelection
    on_SubscriptionContractUserError?: SubscriptionContractUserErrorGenqlSelection
    on_SubscriptionDraftUserError?: SubscriptionDraftUserErrorGenqlSelection
    on_TaxAppConfigureUserError?: TaxAppConfigureUserErrorGenqlSelection
    on_TranslationUserError?: TranslationUserErrorGenqlSelection
    on_UrlRedirectBulkDeleteByIdsUserError?: UrlRedirectBulkDeleteByIdsUserErrorGenqlSelection
    on_UrlRedirectBulkDeleteBySavedSearchUserError?: UrlRedirectBulkDeleteBySavedSearchUserErrorGenqlSelection
    on_UrlRedirectBulkDeleteBySearchUserError?: UrlRedirectBulkDeleteBySearchUserErrorGenqlSelection
    on_UrlRedirectImportUserError?: UrlRedirectImportUserErrorGenqlSelection
    on_UrlRedirectUserError?: UrlRedirectUserErrorGenqlSelection
    on_UserError?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `disputeEvidenceUpdate` mutation. */
export interface DisputeEvidenceUpdatePayloadGenqlSelection{
    /** The updated dispute evidence. */
    disputeEvidence?: ShopifyPaymentsDisputeEvidenceGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DisputeEvidenceUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `DisputeEvidenceUpdate`. */
export interface DisputeEvidenceUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A unique string that represents the address of a Shopify store on the Internet. */
export interface DomainGenqlSelection{
    /** The host name of the domain. For example, `example.com`. */
    host?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The localization of the domain, if the domain doesn't redirect. */
    localization?: DomainLocalizationGenqlSelection
    /** The web presence of the domain. */
    marketWebPresence?: MarketWebPresenceGenqlSelection
    /** Whether SSL is enabled. */
    sslEnabled?: boolean | number
    /** The URL of the domain (for example, `https://example.com`). */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The country and language settings assigned to a domain. */
export interface DomainLocalizationGenqlSelection{
    /** The ISO codes for the domain’s alternate locales. For example, `["en"]`. */
    alternateLocales?: boolean | number
    /** The ISO code for the country assigned to the domain. For example, `"CA"` or "*" for a domain set to "Rest of world". */
    country?: boolean | number
    /** The ISO code for the domain’s default locale. For example, `"en"`. */
    defaultLocale?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An order that a merchant creates on behalf of a customer. Draft orders are useful for merchants that need to do the following tasks:
 * 
 * - Create new orders for sales made by phone, in person, by chat, or elsewhere. When a merchant accepts payment for a draft order, an order is created.
 * - Send invoices to customers to pay with a secure checkout link.
 * - Use custom items to represent additional costs or products that aren't displayed in a shop's inventory.
 * - Re-create orders manually from active sales channels.
 * - Sell products at discount or wholesale rates.
 * - Take pre-orders.
 * - Save an order as a draft and resume working on it later.
 * 
 * For Draft orders in multiple currencies `presentment_money` is the source of truth for what a customer is going to be charged and `shop_money` is an estimate of what the merchant might receive in their local currency.
 * 
 * **Caution:** Only use this data if it's required for your app's functionality. Shopify will restrict [access to scopes](https://shopify.dev/api/usage/access-scopes) for apps that don't have a legitimate use for the associated data.
 * 
 */
export interface DraftOrderGenqlSelection{
    /** The order-level discount applied to the draft order. */
    appliedDiscount?: DraftOrderAppliedDiscountGenqlSelection
    /**
     * The billing address of the customer.
     * 
     */
    billingAddress?: MailingAddressGenqlSelection
    /** Whether the billing address matches the shipping address. */
    billingAddressMatchesShippingAddress?: boolean | number
    /**
     * The date and time when the draft order converted to a new order,
     * and the draft order's status changed to **Completed**.
     * 
     */
    completedAt?: boolean | number
    /** The date and time when the draft order was created in Shopify. */
    createdAt?: boolean | number
    /**
     * The three letter code for the currency of the store at the time of the most recent update to the draft order.
     * 
     */
    currencyCode?: boolean | number
    /**
     * The custom information added to the draft order on behalf of the customer.
     * 
     */
    customAttributes?: AttributeGenqlSelection
    /** The customer who will be sent an invoice for the draft order, if there is one. */
    customer?: CustomerGenqlSelection
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** The email address of the customer, which is used to send notifications. */
    email?: boolean | number
    /** The list of events associated with the draft order. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Whether the merchant has added timeline comments to the draft order. */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The subject defined for the draft invoice email template. */
    invoiceEmailTemplateSubject?: boolean | number
    /** The date and time when the invoice was last emailed to the customer. */
    invoiceSentAt?: boolean | number
    /** The link to the checkout, which is sent to the customer in the invoice email. */
    invoiceUrl?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The list of the line items in the draft order. */
    lineItems?: (DraftOrderLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The subtotal of the line items and corresponding discounts. The subtotal doesn't include shipping charges, shipping discounts, taxes, or order discounts. */
    lineItemsSubtotalPrice?: MoneyBagGenqlSelection
    /** List of localization extensions for the resource. */
    localizationExtensions?: (LocalizationExtensionConnectionGenqlSelection & { __args?: {
    /** The country codes of the extensions. */
    countryCodes?: (CountryCode[] | null), 
    /** The purpose of the extensions. */
    purposes?: (LocalizationExtensionPurpose[] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The name of the selected market. */
    marketName?: boolean | number
    /** The selected market region country code for the draft order. */
    marketRegionCountryCode?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The identifier for the draft order, which is unique within the store. For example, _#D1223_.
     * 
     */
    name?: boolean | number
    /** The text from an optional note attached to the draft order. */
    note2?: boolean | number
    /** The order that was created from this draft order. */
    order?: OrderGenqlSelection
    /** The associated payment terms for this draft order. */
    paymentTerms?: PaymentTermsGenqlSelection
    /** The phone number assigned to the draft order. */
    phone?: boolean | number
    /** The purchase order number. */
    poNumber?: boolean | number
    /** The payment currency of the customer for this draft order. */
    presentmentCurrencyCode?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The purchasing entity for the draft order. */
    purchasingEntity?: PurchasingEntityGenqlSelection
    /**
     * Whether the Draft Order is ready and can be completed. Draft Orders
     *         might have asynchronous operations that can take time to finish.
     */
    ready?: boolean | number
    /** The time after which inventory will automatically be restocked. */
    reserveInventoryUntil?: boolean | number
    /** The shipping address of the customer. */
    shippingAddress?: MailingAddressGenqlSelection
    /** The line item that contains the shipping costs. */
    shippingLine?: ShippingLineGenqlSelection
    /** Status of the draft order. */
    status?: boolean | number
    /**
     * The subtotal of the line items and their discounts. The subtotal doesn't include shipping charges, shipping discounts, or taxes.
     * 
     */
    subtotalPrice?: boolean | number
    /** A subtotal of the line items and corresponding discounts. The subtotal doesn't include shipping charges, shipping discounts, or taxes. */
    subtotalPriceSet?: MoneyBagGenqlSelection
    /**
     * A comma separated list of tags associated with the draft order. Updating `tags` overwrites
     * any existing tags that were previously added to the draft order. To add new tags without overwriting
     * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
     * mutation.
     * 
     */
    tags?: boolean | number
    /** Whether the draft order is tax exempt. */
    taxExempt?: boolean | number
    /** Total amount of taxes charged for each line item and shipping line. */
    taxLines?: TaxLineGenqlSelection
    /** Whether the line item prices include taxes. */
    taxesIncluded?: boolean | number
    /** The total discounts for this draft order. */
    totalDiscountsSet?: MoneyBagGenqlSelection
    /** The total price of line items for this draft order. */
    totalLineItemsPriceSet?: MoneyBagGenqlSelection
    /** The total amount of the draft order, including taxes, shipping charges, and discounts. */
    totalPrice?: boolean | number
    /** The total amount of the draft order including taxes, shipping charges, and discounts. */
    totalPriceSet?: MoneyBagGenqlSelection
    /** The total shipping charge for the draft order. */
    totalShippingPrice?: boolean | number
    /** The total shipping charge for the draft order. */
    totalShippingPriceSet?: MoneyBagGenqlSelection
    /** The total amount of taxes for the draft order. */
    totalTax?: boolean | number
    /** The total amount of taxes for the draft order. */
    totalTaxSet?: MoneyBagGenqlSelection
    /** The total weight in grams of the draft order. */
    totalWeight?: boolean | number
    /**
     * The date and time when the draft order was last changed.
     * The format is YYYY-MM-DD HH:mm:ss. For example, 2016-02-05 17:04:01.
     * 
     */
    updatedAt?: boolean | number
    /** Whether the draft order will be visible to the customer on the self-serve portal. */
    visibleToCustomer?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The order-level discount applied to a draft order. */
export interface DraftOrderAppliedDiscountGenqlSelection{
    /**
     * @deprecated Use `amountV2` instead.
     * Amount of the order-level discount that is applied to the draft order.
     */
    amount?: boolean | number
    /** The amount of money discounted, with values shown in both shop currency and presentment currency. */
    amountSet?: MoneyBagGenqlSelection
    /** Amount of money discounted. */
    amountV2?: MoneyV2GenqlSelection
    /** Description of the order-level discount. */
    description?: boolean | number
    /** Name of the order-level discount. */
    title?: boolean | number
    /**
     * The order level discount amount. If `valueType` is `"percentage"`,
     * then `value` is the percentage discount.
     * 
     */
    value?: boolean | number
    /** Type of the order-level discount. */
    valueType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for applying an order-level discount to a draft order. */
export interface DraftOrderAppliedDiscountInput {
/**
 * The applied amount of the discount.
 * If the type of the discount is fixed amount, then this is the fixed dollar amount.
 * If the type is percentage, then this is the subtotal multiplied by the percentage.
 * 
 */
amount?: (Scalars['Money'] | null),
/**
 * Reason for the discount.
 * 
 */
description?: (Scalars['String'] | null),
/**
 * Title of the discount.
 * 
 */
title?: (Scalars['String'] | null),
/**
 * The value of the discount.
 * If the type of the discount is fixed amount, then this is a fixed dollar amount.
 * If the type is percentage, then this is the percentage.
 * 
 */
value: Scalars['Float'],
/**
 * The type of discount.
 * 
 */
valueType: DraftOrderAppliedDiscountType}


/** Return type for `draftOrderBulkAddTags` mutation. */
export interface DraftOrderBulkAddTagsPayloadGenqlSelection{
    /** The asynchronous job for adding tags to the draft orders. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderBulkDelete` mutation. */
export interface DraftOrderBulkDeletePayloadGenqlSelection{
    /** The asynchronous job for deleting the draft orders. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderBulkRemoveTags` mutation. */
export interface DraftOrderBulkRemoveTagsPayloadGenqlSelection{
    /** The asynchronous job for removing tags from the draft orders. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderCalculate` mutation. */
export interface DraftOrderCalculatePayloadGenqlSelection{
    /** The calculated properties for a draft order. */
    calculatedDraftOrder?: CalculatedDraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderComplete` mutation. */
export interface DraftOrderCompletePayloadGenqlSelection{
    /** The completed draft order. */
    draftOrder?: DraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DraftOrders.
 * 
 */
export interface DraftOrderConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DraftOrderEdgeGenqlSelection
    /** A list of the nodes contained in DraftOrderEdge. */
    nodes?: DraftOrderGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderCreateFromOrder` mutation. */
export interface DraftOrderCreateFromOrderPayloadGenqlSelection{
    /** The created Draft Order. */
    draftOrder?: DraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderCreateMerchantCheckout` mutation. */
export interface DraftOrderCreateMerchantCheckoutPayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderCreate` mutation. */
export interface DraftOrderCreatePayloadGenqlSelection{
    /**
     * The created draft order.
     * 
     */
    draftOrder?: DraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to specify the draft order to delete by its ID. */
export interface DraftOrderDeleteInput {
/**
 * The ID of the draft order to delete.
 * 
 */
id: Scalars['ID']}


/** Return type for `draftOrderDelete` mutation. */
export interface DraftOrderDeletePayloadGenqlSelection{
    /**
     * The ID of the deleted draft order.
     * 
     */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderDuplicate` mutation. */
export interface DraftOrderDuplicatePayloadGenqlSelection{
    /** The newly duplicated draft order. */
    draftOrder?: DraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DraftOrder and a cursor during pagination.
 * 
 */
export interface DraftOrderEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DraftOrderEdge. */
    node?: DraftOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create or update a draft order. */
export interface DraftOrderInput {
/**
 * The discount that will be applied to the draft order.
 * A draft order line item can have one discount. A draft order can also have one order-level discount.
 * 
 */
appliedDiscount?: (DraftOrderAppliedDiscountInput | null),
/**
 * The mailing address associated with the payment method.
 * 
 */
billingAddress?: (MailingAddressInput | null),
/**
 * Extra information added to the customer.
 * 
 */
customAttributes?: (AttributeInput[] | null),
/**
 * The customer's email address.
 * 
 */
email?: (Scalars['String'] | null),
/**
 * Product variant line item or custom line item associated to the draft order.
 * Each draft order must include at least one line item.
 * 
 */
lineItems?: (DraftOrderLineItemInput[] | null),
/**
 * Metafields attached to the draft order.
 * 
 */
metafields?: (MetafieldInput[] | null),
/** The localization extensions attached to the draft order. For example, Tax IDs. */
localizationExtensions?: (LocalizationExtensionInput[] | null),
/**
 * The text of an optional note that a shop owner can attach to the draft order.
 * 
 */
note?: (Scalars['String'] | null),
/**
 * The mailing address to where the order will be shipped.
 * 
 */
shippingAddress?: (MailingAddressInput | null),
/**
 * A shipping line object, which details the shipping method used.
 * 
 */
shippingLine?: (ShippingLineInput | null),
/**
 * A comma separated list of tags that have been added to the draft order.
 * 
 */
tags?: (Scalars['String'][] | null),
/**
 * Whether or not taxes are exempt for the draft order.
 * If false, then Shopify will refer to the taxable field for each line item.
 * If a customer is applied to the draft order, then Shopify will use the customer's tax exempt field instead.
 * 
 */
taxExempt?: (Scalars['Boolean'] | null),
/**
 * Sent as part of a draft order object to load customer shipping information.
 * 
 */
useCustomerDefaultAddress?: (Scalars['Boolean'] | null),
/** Whether the draft order will be visible to the customer on the self-serve portal. */
visibleToCustomer?: (Scalars['Boolean'] | null),
/** Time after which inventory will automatically be restocked. */
reserveInventoryUntil?: (Scalars['DateTime'] | null),
/** The payment currency of the customer for this draft order. */
presentmentCurrencyCode?: (CurrencyCode | null),
/** The selected market region country code for the draft order. */
marketRegionCountryCode?: (CountryCode | null),
/** The customer's phone number. */
phone?: (Scalars['String'] | null),
/** The fields used to create payment terms. */
paymentTerms?: (PaymentTermsInput | null),
/** The purchasing entity for this draft order. */
purchasingEntity?: (PurchasingEntityInput | null),
/**
 * The source of the checkout.
 *           To use this field for sales attribution, you must register the channels that your app is managing.
 *           You can register the channels that your app is managing by completing
 *           [this Google Form](https://docs.google.com/forms/d/e/1FAIpQLScmVTZRQNjOJ7RD738mL1lGeFjqKVe_FM2tO9xsm21QEo5Ozg/viewform?usp=sf_link).
 *           After you've submitted your request, you need to wait for your request to be processed by Shopify.
 *           You can find a list of your channels in the Partner Dashboard, in your app's Marketplace extension.
 *           You need to specify the handle as the `source_name` value in your request.
 *           The handle is the channel that the order was placed from.
 */
sourceName?: (Scalars['String'] | null),
/** The purchase order number. */
poNumber?: (Scalars['String'] | null)}


/** Return type for `draftOrderInvoicePreview` mutation. */
export interface DraftOrderInvoicePreviewPayloadGenqlSelection{
    /** The draft order invoice email rendered as HTML to allow previewing. */
    previewHtml?: boolean | number
    /** The subject preview for the draft order invoice email. */
    previewSubject?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderInvoiceSend` mutation. */
export interface DraftOrderInvoiceSendPayloadGenqlSelection{
    /** The draft order an invoice email is sent for. */
    draftOrder?: DraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A line item included in a draft order. */
export interface DraftOrderLineItemGenqlSelection{
    /**
     * The discount that will be applied to the line item or the overall order.
     * 
     */
    appliedDiscount?: DraftOrderAppliedDiscountGenqlSelection
    /**
     * Whether the line item is a custom line item (`true`) or a product variant line item (`false`).
     * 
     */
    custom?: boolean | number
    /** A list of attributes that represent custom features or special requests. */
    customAttributes?: AttributeGenqlSelection
    /** Additional information (metafields) about the line item with the associated types. */
    customAttributesV2?: TypedAttributeGenqlSelection
    /**
     * The line item price after discounts are applied.
     * 
     */
    discountedTotal?: boolean | number
    /** The line item price after discounts are applied. */
    discountedTotalSet?: MoneyBagGenqlSelection
    /**
     * The `discountedTotal` divided by `quantity`, resulting in the value of the discount per unit.
     * 
     */
    discountedUnitPrice?: boolean | number
    /** The `discountedTotal` divided by `quantity`, resulting in the value of the discount per unit. */
    discountedUnitPriceSet?: MoneyBagGenqlSelection
    /**
     * Name of the service provider who fulfilled the order.
     * 
     * Valid values are either **manual** or the name of the provider.
     * For example, **amazon**, **shipwire**.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /**
     * @deprecated Use `weight` instead.
     * The weight of the line item in grams. The weight can only be specified if the line item is a custom
     * line item.
     * 
     */
    grams?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image associated with the draft order line item. */
    image?: ImageGenqlSelection
    /** Whether the line item is a gift card. */
    isGiftCard?: boolean | number
    /** The name of the product. */
    name?: boolean | number
    /**
     * The total price (without discounts) of the line item, based on the original unit price of the variant x quantity.
     * 
     */
    originalTotal?: boolean | number
    /** The total price (without discounts) of the line item,based on the original unit price of the variant x quantity. */
    originalTotalSet?: MoneyBagGenqlSelection
    /** The variant price without any discounts applied. */
    originalUnitPrice?: boolean | number
    /** The variant price without any discounts applied. */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /**
     * The product corresponding to the line item’s product variant.
     * 
     */
    product?: ProductGenqlSelection
    /** The number of product variants that are requested in the draft order. */
    quantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /** The SKU number of the product variant. */
    sku?: boolean | number
    /**
     * A list of tax line objects, each of which details the total taxes applicable to the order.
     * 
     */
    taxLines?: TaxLineGenqlSelection
    /** Whether the variant is taxable. */
    taxable?: boolean | number
    /** The title of the product or variant. This field only applies to custom line items. */
    title?: boolean | number
    /**
     * The total value of the discount that is applied to the line item.
     * 
     */
    totalDiscount?: boolean | number
    /** The total value of the discount that is applied to the line item. */
    totalDiscountSet?: MoneyBagGenqlSelection
    /**
     * The associated variant for the line item.
     * 
     */
    variant?: ProductVariantGenqlSelection
    /** The name of the variant. */
    variantTitle?: boolean | number
    /** The name of the vendor who created the product variant. */
    vendor?: boolean | number
    /** The weight unit and value for a draft order line item. */
    weight?: WeightGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple DraftOrderLineItems.
 * 
 */
export interface DraftOrderLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: DraftOrderLineItemEdgeGenqlSelection
    /** A list of the nodes contained in DraftOrderLineItemEdge. */
    nodes?: DraftOrderLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one DraftOrderLineItem and a cursor during pagination.
 * 
 */
export interface DraftOrderLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of DraftOrderLineItemEdge. */
    node?: DraftOrderLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a line item for a draft order. */
export interface DraftOrderLineItemInput {
/**
 * Discount which will be applied to the line item.
 * 
 */
appliedDiscount?: (DraftOrderAppliedDiscountInput | null),
/**
 * Represents a generic custom attribute using a key value pair.
 * 
 */
customAttributes?: (AttributeInput[] | null),
/** The price without any discounts applied. This value is ignored when `variantId` is provided. */
originalUnitPrice?: (Scalars['Money'] | null),
/**
 * The number of products that were purchased.
 * 
 */
quantity: Scalars['Int'],
/**
 * Whether physical shipping is required. This value is ignored when `variantId` is provided.
 * 
 */
requiresShipping?: (Scalars['Boolean'] | null),
/** The SKU number of the item. This value is ignored when `variantId` is provided. */
sku?: (Scalars['String'] | null),
/** Whether the item is taxable. This value is ignored when `variantId` is provided. */
taxable?: (Scalars['Boolean'] | null),
/** Title of the item. Ignored when `variantId` is provided. */
title?: (Scalars['String'] | null),
/**
 * The ID of the product variant corresponding to the line item.
 * Null if custom line item. Required if product variant line item.
 * 
 */
variantId?: (Scalars['ID'] | null),
/**
 * Specifies the weight unit and value inputs.
 * This value is ignored when `variantId` is provided.
 * 
 */
weight?: (WeightInput | null)}


/** Represents a draft order tag. */
export interface DraftOrderTagGenqlSelection{
    /** Handle of draft order tag. */
    handle?: boolean | number
    /** ID of draft order tag. */
    id?: boolean | number
    /** Title of draft order tag. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `draftOrderUpdate` mutation. */
export interface DraftOrderUpdatePayloadGenqlSelection{
    /** The updated draft order. */
    draftOrder?: DraftOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The duty details for a line item. */
export interface DutyGenqlSelection{
    /** The ISO 3166-1 alpha-2 country code of the country of origin used in calculating the duty. */
    countryCodeOfOrigin?: boolean | number
    /** The harmonized system code of the item used in calculating the duty. */
    harmonizedSystemCode?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The amount of the duty. */
    price?: MoneyBagGenqlSelection
    /** A list of taxes charged on the duty. */
    taxLines?: TaxLineGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sale associated with a duty charge. */
export interface DutySaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The duty for the associated sale. */
    duty?: DutyGenqlSelection
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The attribute editable information. */
export interface EditablePropertyGenqlSelection{
    /** Whether the attribute is locked for editing. */
    locked?: boolean | number
    /** The reason the attribute is locked for editing. */
    reason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for an email. */
export interface EmailInput {
/** Specifies the email subject. */
subject?: (Scalars['String'] | null),
/** Specifies the email recipient. */
to?: (Scalars['String'] | null),
/** Specifies the email sender. */
from?: (Scalars['String'] | null),
/** Specifies the email body. */
body?: (Scalars['String'] | null),
/** Specifies any bcc recipients for the email. */
bcc?: (Scalars['String'][] | null),
/** Specifies a custom message to include in the email. */
customMessage?: (Scalars['String'] | null)}


/** Error position information in a ShopifyQL parsing error. */
export interface ErrorPositionGenqlSelection{
    /** The character position of the error in the line. */
    character?: boolean | number
    /** The line number of the error. */
    line?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a server pixel mutation. */
export interface ErrorsServerPixelUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a web pixel mutation. */
export interface ErrorsWebPixelUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Events chronicle resource activities such as the creation of an article, the fulfillment of an order, or the
 * addition of a product.
 * 
 */
export interface EventGenqlSelection{
    /** The name of the app that created the event. */
    appTitle?: boolean | number
    /** Whether the event was created by an app. */
    attributeToApp?: boolean | number
    /** Whether the event was caused by an admin user. */
    attributeToUser?: boolean | number
    /** The date and time when the event was created. */
    createdAt?: boolean | number
    /** Whether the event is critical. */
    criticalAlert?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Human readable text that describes the event. */
    message?: boolean | number
    on_BasicEvent?: BasicEventGenqlSelection
    on_CommentEvent?: CommentEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `eventBridgeServerPixelUpdate` mutation. */
export interface EventBridgeServerPixelUpdatePayloadGenqlSelection{
    /** The server pixel as configured by the mutation. */
    serverPixel?: ServerPixelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsServerPixelUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `eventBridgeWebhookSubscriptionCreate` mutation. */
export interface EventBridgeWebhookSubscriptionCreatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    /** The webhook subscription that was created. */
    webhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for an EventBridge webhook subscription.
 * 
 */
export interface EventBridgeWebhookSubscriptionInput {
/** The ARN of the EventBridge partner event source. */
arn?: (Scalars['ARN'] | null),
/** The format in which the webhook subscription should send the data. */
format?: (WebhookSubscriptionFormat | null),
/** The list of fields to be included in the webhook subscription. */
includeFields?: (Scalars['String'][] | null),
/** The list of namespaces for any metafields that should be included in the webhook subscription. */
metafieldNamespaces?: (Scalars['String'][] | null)}


/** Return type for `eventBridgeWebhookSubscriptionUpdate` mutation. */
export interface EventBridgeWebhookSubscriptionUpdatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    /** The webhook subscription that was updated. */
    webhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Events.
 * 
 */
export interface EventConnectionGenqlSelection{
    /** A list of edges. */
    edges?: EventEdgeGenqlSelection
    /** A list of the nodes contained in EventEdge. */
    nodes?: EventGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Event and a cursor during pagination.
 * 
 */
export interface EventEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of EventEdge. */
    node?: EventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An exchange where existing items on an order are returned and new items are added to the order. */
export interface ExchangeV2GenqlSelection{
    /** The details of the new items in the exchange. */
    additions?: ExchangeV2AdditionsGenqlSelection
    /** The date and time when the exchange was completed. */
    completedAt?: boolean | number
    /** The date and time when the exchange was created. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The location where the exchange happened. */
    location?: LocationGenqlSelection
    /** The text of an optional note that a shop owner can attach to the exchange. */
    note?: boolean | number
    /** The refunds processed during the exchange. */
    refunds?: RefundGenqlSelection
    /** The details of the returned items in the exchange. */
    returns?: ExchangeV2ReturnsGenqlSelection
    /** The staff member associated with the exchange. */
    staffMember?: StaffMemberGenqlSelection
    /** The amount of money that was paid or refunded as part of the exchange. */
    totalAmountProcessedSet?: MoneyBagGenqlSelection
    /** The difference in values of the items that were exchanged. */
    totalPriceSet?: MoneyBagGenqlSelection
    /** The order transactions related to the exchange. */
    transactions?: OrderTransactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** New items associated to the exchange. */
export interface ExchangeV2AdditionsGenqlSelection{
    /** The list of new items for the exchange. */
    lineItems?: ExchangeV2LineItemGenqlSelection
    /** The subtotal of the items being added, including discounts. */
    subtotalPriceSet?: MoneyBagGenqlSelection
    /** The summary of all taxes of the items being added. */
    taxLines?: TaxLineGenqlSelection
    /** The total price of the items being added, including discounts and taxes. */
    totalPriceSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ExchangeV2s.
 * 
 */
export interface ExchangeV2ConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ExchangeV2EdgeGenqlSelection
    /** A list of the nodes contained in ExchangeV2Edge. */
    nodes?: ExchangeV2GenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ExchangeV2 and a cursor during pagination.
 * 
 */
export interface ExchangeV2EdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ExchangeV2Edge. */
    node?: ExchangeV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Contains information about an item in the exchange. */
export interface ExchangeV2LineItemGenqlSelection{
    /** A list of attributes that represent custom features or special requests. */
    customAttributes?: AttributeGenqlSelection
    /** The total line price, in shop and presentment currencies, after discounts are applied. */
    discountedTotalSet?: MoneyBagGenqlSelection
    /**
     * The price, in shop and presentment currencies,
     * of a single variant unit after line item discounts are applied.
     * 
     */
    discountedUnitPriceSet?: MoneyBagGenqlSelection
    /**
     * Name of the service provider who fulfilled the order.
     * 
     * Valid values are either **manual** or the name of the provider.
     * For example, **amazon**, **shipwire**.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /** Indiciates if this line item is a gift card. */
    giftCard?: boolean | number
    /** The gift cards associated with the line item. */
    giftCards?: GiftCardGenqlSelection
    /** The line item associated with this object. */
    lineItem?: LineItemGenqlSelection
    /** The name of the product. */
    name?: boolean | number
    /** The total price, in shop and presentment currencies, before discounts are applied. */
    originalTotalSet?: MoneyBagGenqlSelection
    /**
     * The price, in shop and presentment currencies,
     * of a single variant unit before line item discounts are applied.
     * 
     */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /** The number of products that were purchased. */
    quantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /** The SKU number of the product variant. */
    sku?: boolean | number
    /** The TaxLine object connected to this line item. */
    taxLines?: TaxLineGenqlSelection
    /** Whether the variant is taxable. */
    taxable?: boolean | number
    /** The title of the product or variant. This field only applies to custom line items. */
    title?: boolean | number
    /** The product variant of the line item. */
    variant?: ProductVariantGenqlSelection
    /** The name of the variant. */
    variantTitle?: boolean | number
    /** The name of the vendor who created the product variant. */
    vendor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return items associated to the exchange. */
export interface ExchangeV2ReturnsGenqlSelection{
    /** The list of return items for the exchange. */
    lineItems?: ExchangeV2LineItemGenqlSelection
    /**
     * The amount of the order-level discount for the items and shipping being returned, which doesn't contain any line item discounts.
     * 
     */
    orderDiscountAmountSet?: MoneyBagGenqlSelection
    /** The amount of money to be refunded for shipping. */
    shippingRefundAmountSet?: MoneyBagGenqlSelection
    /** The subtotal of the items being returned. */
    subtotalPriceSet?: MoneyBagGenqlSelection
    /** The summary of all taxes of the items being returned. */
    taxLines?: TaxLineGenqlSelection
    /** The amount of money to be refunded for tip. */
    tipRefundAmountSet?: MoneyBagGenqlSelection
    /** The total value of the items being returned. */
    totalPriceSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a video hosted outside of Shopify.
 * 
 */
export interface ExternalVideoGenqlSelection{
    /** A word or phrase to share the nature or contents of a media. */
    alt?: boolean | number
    /** The embed URL of the video for the respective host. */
    embedUrl?: boolean | number
    /**
     * @deprecated Use `originUrl` instead.
     * The URL.
     */
    embeddedUrl?: boolean | number
    /** The host of the external video. */
    host?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The media content type. */
    mediaContentType?: boolean | number
    /** Any errors which have occurred on the media. */
    mediaErrors?: MediaErrorGenqlSelection
    /** The warnings attached to the media. */
    mediaWarnings?: MediaWarningGenqlSelection
    /** The origin URL of the video on the respective host. */
    originUrl?: boolean | number
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /** Current status of the media. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Requirements that must be met before an app can be installed. */
export interface FailedRequirementGenqlSelection{
    /** Action to be taken to resolve a failed requirement, including URL link. */
    action?: NavigationItemGenqlSelection
    /**
     * A concise set of copy strings to be displayed to merchants, to guide them in resolving problems your app
     * encounters when trying to make use of their Shop and its resources.
     * 
     */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A file interface. */
export interface FileGenqlSelection{
    /** A word or phrase to describe the contents or the function of a file. */
    alt?: boolean | number
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt?: boolean | number
    /** Any errors that have occurred on the file. */
    fileErrors?: FileErrorGenqlSelection
    /** The status of the file. */
    fileStatus?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt?: boolean | number
    on_GenericFile?: GenericFileGenqlSelection
    on_MediaImage?: MediaImageGenqlSelection
    on_Video?: VideoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fileAcknowledgeUpdateFailed` mutation. */
export interface FileAcknowledgeUpdateFailedPayloadGenqlSelection{
    /** The updated file(s). */
    files?: FileGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FilesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Files.
 * 
 */
export interface FileConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FileEdgeGenqlSelection
    /** A list of the nodes contained in FileEdge. */
    nodes?: FileGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields that are required to create a file object. */
export interface FileCreateInput {
/**
 * When provided, the file will be created with the given filename,
 * otherwise the filename in the originalSource will be used.
 * 
 */
filename?: (Scalars['String'] | null),
/**
 * An external URL (for images only) or a
 * [staged upload URL](https://shopify.dev/api/admin-graphql/latest/mutations/stageduploadscreate).
 * 
 */
originalSource: Scalars['String'],
/** The file content type. If omitted, then Shopify will attempt to determine the content type during file processing. */
contentType?: (FileContentType | null),
/** The alternative text description of the file. */
alt?: (Scalars['String'] | null),
/** How to handle if filename is already in use. */
duplicateResolutionMode?: (FileCreateInputDuplicateResolutionMode | null)}


/** Return type for `fileCreate` mutation. */
export interface FileCreatePayloadGenqlSelection{
    /** The newly created files. */
    files?: FileGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FilesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fileDelete` mutation. */
export interface FileDeletePayloadGenqlSelection{
    /** The IDs of the deleted files. */
    deletedFileIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FilesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one File and a cursor during pagination.
 * 
 */
export interface FileEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FileEdge. */
    node?: FileGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A file error. This typically occurs when there is an issue with the file itself causing it to fail validation.
 * Check the file before attempting to upload again.
 * 
 */
export interface FileErrorGenqlSelection{
    /** Code representing the type of error. */
    code?: boolean | number
    /** Additional details regarding the error. */
    details?: boolean | number
    /** Translated error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields that are required to update a file object. */
export interface FileUpdateInput {
/** The ID of the file to be updated. */
id: Scalars['ID'],
/** The alternative text description of the file. */
alt?: (Scalars['String'] | null),
/**
 * The source from which to update a media image or generic file.
 * An external URL (for images only) or a
 * [staged upload URL](https://shopify.dev/api/admin-graphql/latest/mutations/stageduploadscreate).
 * 
 */
originalSource?: (Scalars['String'] | null),
/**
 * The source from which to update the media preview image.
 * May be an external URL or a
 * [staged upload URL](https://shopify.dev/api/admin-graphql/latest/mutations/stageduploadscreate).
 * 
 */
previewImageSource?: (Scalars['String'] | null),
/**
 * The name of the file including its extension.
 * 
 */
filename?: (Scalars['String'] | null)}


/** Return type for `fileUpdate` mutation. */
export interface FileUpdatePayloadGenqlSelection{
    /** The list of updated files. */
    files?: FileGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FilesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that happens during the execution of a Files API query or mutation. */
export interface FilesUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter option is one possible value in a search filter. */
export interface FilterOptionGenqlSelection{
    /** The filter option's label for display purposes. */
    label?: boolean | number
    /** The filter option's value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `flowTriggerReceive` mutation. */
export interface FlowTriggerReceivePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a fulfillment.
 * In Shopify, a fulfillment represents a shipment of one or more items in an order.
 * When an order has been completely fulfilled, it means that all the items that are included
 * in the order have been sent to the customer.
 * There can be more than one fulfillment for an order.
 * 
 */
export interface FulfillmentGenqlSelection{
    /** The date and time when the fulfillment was created. */
    createdAt?: boolean | number
    /** The date that this fulfillment was delivered. */
    deliveredAt?: boolean | number
    /** Human readable display status for this fulfillment. */
    displayStatus?: boolean | number
    /** The estimated date that this fulfillment will arrive. */
    estimatedDeliveryAt?: boolean | number
    /** The history of events associated with this fulfillment. */
    events?: (FulfillmentEventConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (FulfillmentEventSortKeys | null)} })
    /** List of the fulfillment's line items. */
    fulfillmentLineItems?: (FulfillmentLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A paginated list of fulfillment orders for the fulfillment. */
    fulfillmentOrders?: (FulfillmentOrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** The date and time when the fulfillment went into transit. */
    inTransitAt?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The location that the fulfillment was processed at. */
    location?: LocationGenqlSelection
    /** Human readable reference identifier for this fulfillment. */
    name?: boolean | number
    /** The order for which the fulfillment was created. */
    order?: OrderGenqlSelection
    /** The address at which the fulfillment occurred. Typically this is the address of the warehouse or fulfillment center. */
    originAddress?: FulfillmentOriginAddressGenqlSelection
    /** Whether any of the line items in the fulfillment require shipping. */
    requiresShipping?: boolean | number
    /** Fulfillment service associated with the fulfillment. */
    service?: FulfillmentServiceGenqlSelection
    /** The status of the fulfillment. */
    status?: boolean | number
    /** Sum of all line item quantities for the fulfillment. */
    totalQuantity?: boolean | number
    /**
     * Tracking information associated with the fulfillment,
     * such as the tracking company, tracking number, and tracking URL.
     * 
     */
    trackingInfo?: (FulfillmentTrackingInfoGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /**
     * The date and time when the fulfillment was last modified.
     * 
     */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentCancel` mutation. */
export interface FulfillmentCancelPayloadGenqlSelection{
    /** The canceled fulfillment. */
    fulfillment?: FulfillmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Fulfillments.
 * 
 */
export interface FulfillmentConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentEdge. */
    nodes?: FulfillmentGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentCreateV2` mutation. */
export interface FulfillmentCreateV2PayloadGenqlSelection{
    /** The created fulfillment. */
    fulfillment?: FulfillmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Fulfillment and a cursor during pagination.
 * 
 */
export interface FulfillmentEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentEdge. */
    node?: FulfillmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fulfillment event that describes the fulfilllment status at a particular time. */
export interface FulfillmentEventGenqlSelection{
    /** The street address where this fulfillment event occurred. */
    address1?: boolean | number
    /** The city where this fulfillment event occurred. */
    city?: boolean | number
    /** The country where this fulfillment event occurred. */
    country?: boolean | number
    /** The estimated delivery date and time of the fulfillment. */
    estimatedDeliveryAt?: boolean | number
    /** The time at which this fulfillment event happened. */
    happenedAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The latitude where this fulfillment event occurred. */
    latitude?: boolean | number
    /** The longitude where this fulfillment event occurred. */
    longitude?: boolean | number
    /** A message associated with this fulfillment event. */
    message?: boolean | number
    /** The province where this fulfillment event occurred. */
    province?: boolean | number
    /** The status of this fulfillment event. */
    status?: boolean | number
    /** The zip code of the location where this fulfillment event occurred. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple FulfillmentEvents.
 * 
 */
export interface FulfillmentEventConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentEventEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentEventEdge. */
    nodes?: FulfillmentEventGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentEventCreate` mutation. */
export interface FulfillmentEventCreatePayloadGenqlSelection{
    /** The created fulfillment event. */
    fulfillmentEvent?: FulfillmentEventGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one FulfillmentEvent and a cursor during pagination.
 * 
 */
export interface FulfillmentEventEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentEventEdge. */
    node?: FulfillmentEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a fulfillment event. */
export interface FulfillmentEventInput {
/** The street address where this fulfillment event occurred. */
address1?: (Scalars['String'] | null),
/** The city where this fulfillment event occurred. */
city?: (Scalars['String'] | null),
/** The country where this fulfillment event occurred. */
country?: (Scalars['String'] | null),
/** The estimated delivery date and time of the fulfillment. */
estimatedDeliveryAt?: (Scalars['DateTime'] | null),
/** The time at which this fulfillment event happened. */
happenedAt?: (Scalars['DateTime'] | null),
/** The ID for the fulfillment that is associated with this fulfillment event. */
fulfillmentId: Scalars['ID'],
/** The latitude where this fulfillment event occurred. */
latitude?: (Scalars['Float'] | null),
/** The longitude where this fulfillment event occurred. */
longitude?: (Scalars['Float'] | null),
/** A message associated with this fulfillment event. */
message?: (Scalars['String'] | null),
/** The province where this fulfillment event occurred. */
province?: (Scalars['String'] | null),
/** The status of this fulfillment event. */
status: FulfillmentEventStatus,
/** The zip code of the location where this fulfillment event occurred. */
zip?: (Scalars['String'] | null)}


/**
 * A fulfillment hold currently applied on a fulfillment order.
 * 
 */
export interface FulfillmentHoldGenqlSelection{
    /** The name of the app or service that applied the fulfillment hold. */
    heldBy?: boolean | number
    /** The reason for the fulfillment hold. */
    reason?: boolean | number
    /** Additional information about the fulfillment hold reason. */
    reasonNotes?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a line item from an order that's included in a fulfillment. */
export interface FulfillmentLineItemGenqlSelection{
    /**
     * @deprecated Use `discountedTotalSet` instead.
     * The total price after discounts are applied.
     */
    discountedTotal?: boolean | number
    /** The total price after discounts are applied in shop and presentment currencies. */
    discountedTotalSet?: MoneyBagGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The associated order's line item. */
    lineItem?: LineItemGenqlSelection
    /**
     * @deprecated Use `originalTotalSet` instead.
     * The total price before discounts are applied.
     */
    originalTotal?: boolean | number
    /** The total price before discounts are applied in shop and presentment currencies. */
    originalTotalSet?: MoneyBagGenqlSelection
    /** Number of line items in the fulfillment. */
    quantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple FulfillmentLineItems.
 * 
 */
export interface FulfillmentLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentLineItemEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentLineItemEdge. */
    nodes?: FulfillmentLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one FulfillmentLineItem and a cursor during pagination.
 * 
 */
export interface FulfillmentLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentLineItemEdge. */
    node?: FulfillmentLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The FulfillmentOrder object represents either an item or a group of items in an
 * [Order](https://shopify.dev/api/admin-graphql/latest/objects/Order)
 * that are expected to be fulfilled from the same location.
 * There can be more than one fulfillment order for an
 * [order](https://shopify.dev/api/admin-graphql/latest/objects/Order)
 * at a given location.
 * 
 * {{ '/api/reference/fulfillment_order_relationships.png' | image }}
 * 
 * Fulfillment orders represent the work which is intended to be done in relation to an order.
 * When fulfillment has started for one or more line items, a
 * [Fulfillment](https://shopify.dev/api/admin-graphql/latest/objects/Fulfillment)
 * is created by a merchant or third party to represent the ongoing or completed work of fulfillment.
 * 
 * [See below for more details on creating fulfillments](#the-lifecycle-of-a-fulfillment-order-at-a-location-which-is-managed-by-a-fulfillment-service).
 * 
 * > Note:
 * > Shopify creates fulfillment orders automatically when an order is created.
 * > It is not possible to manually create fulfillment orders.
 * >
 * > [See below for more details on the lifecycle of a fulfillment order](#the-lifecycle-of-a-fulfillment-order).
 * 
 * ## Retrieving fulfillment orders
 * 
 * ### Fulfillment orders from an order
 * 
 * All fulfillment orders related to a given order can be retrieved with the
 * [Order.fulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/objects/Order#connection-order-fulfillmentorders)
 * connection.
 * 
 * [API access scopes](#api-access-scopes)
 * govern which fulfillments orders are returned to clients.
 * An API client will only receive a subset of the fulfillment orders which belong to an order
 * if they don't have the necessary access scopes to view all of the fulfillment orders.
 * 
 * ### Fulfillment orders assigned to the app for fulfillment
 * 
 * Fulfillment service apps can retrieve the fulfillment orders which have been assigned to their locations with the
 * [Shop.assignedFulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/objects/Shop#connection-shop-assignedfulfillmentorders)
 * connection.
 * Use the `assignmentStatus` argument to control whether all assigned fulfillment orders
 * should be returned or only those where a merchant has sent a
 * [fulfillment request](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderMerchantRequest)
 * and it has yet to be responded to.
 * 
 * The API client must be granted the `read_assigned_fulfillment_orders` access scope to access
 * the assigned fulfillment orders.
 * 
 * ### All fulfillment orders
 * 
 * Apps can retrieve all fulfillment orders with the
 * [fulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/queries/fulfillmentOrders)
 * query. This query returns all assigned, merchant-managed, and third-party fulfillment orders on the shop,
 * which are accessible to the app according to the
 * [fulfillment order access scopes](#api-access-scopes) it was granted with.
 * 
 * ## The lifecycle of a fulfillment order
 * 
 * ### Fulfillment Order Creation
 * 
 * After an order is created, a background worker performs the order routing process which determines
 * which locations will be responsible for fulfilling the purchased items.
 * Once the order routing process is complete, one or more fulfillment orders will be created
 * and assigned to these locations. It is not possible to manually create fulfillment orders.
 * 
 * Once a fulfillment order has been created, it will have one of two different lifecycles depending on
 * the type of location which the fulfillment order is assigned to.
 * 
 * ### The lifecycle of a fulfillment order at a merchant managed location
 * 
 * Fulfillment orders are completed by creating
 * [fulfillments](https://shopify.dev/api/admin-graphql/latest/objects/Fulfillment).
 * Fulfillments represents the work done.
 * 
 * For digital products a merchant or an order management app would create a fulfilment once the digital asset
 * has been provisioned.
 * For example, in the case of a digital gift card, a merchant would to do this once
 * the gift card has been activated - before the email has been shipped.
 * 
 * On the other hand, for a traditional shipped order,
 * a merchant or an order management app would create a fulfillment after picking and packing the items relating
 * to a fulfillment order, but before the courier has collected the goods.
 * 
 * [Learn about managing fulfillment orders as an order management app](https://shopify.dev/apps/fulfillment/order-management-apps/manage-fulfillments).
 * 
 * ### The lifecycle of a fulfillment order at a location which is managed by a fulfillment service
 * 
 * For fulfillment orders which are assigned to a location that is managed by a fulfillment service,
 * a merchant or an Order Management App can
 * [send a fulfillment request](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderSubmitFulfillmentRequest)
 * to the fulfillment service which operates the location to request that they fulfill the associated items.
 * A fulfillment service has the option to
 * [accept](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderAcceptFulfillmentRequest)
 * or [reject](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderRejectFulfillmentRequest)
 * this fulfillment request.
 * 
 * Once the fulfillment service has accepted the request, the request can no longer be cancelled by the merchant
 * or order management app and instead a
 * [cancellation request must be submitted](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderSubmitCancellationRequest)
 * to the fulfillment service.
 * 
 * Once a fulfillment service accepts a fulfillment request,
 * then after they are ready to pack items and send them for delivery, they create fulfillments with the
 * [fulfillmentCreateV2](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentCreateV2)
 * mutation.
 * They can provide tracking information right away or create fulfillments without it and then
 * update the tracking information for fulfillments with the
 * [fulfillmentTrackingInfoUpdateV2](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentTrackingInfoUpdateV2)
 * mutation.
 * 
 * [Learn about managing fulfillment orders as a fulfillment service](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments).
 * 
 * ## API access scopes
 * 
 * Fulfillment orders are governed by the following API access scopes:
 * 
 * * The `read_merchant_managed_fulfillment_orders` and
 *   `write_merchant_managed_fulfillment_orders` access scopes
 *   grant access to fulfillment orders assigned to merchant-managed locations.
 * * The `read_assigned_fulfillment_orders` and `write_assigned_fulfillment_orders`
 *   access scopes are intended for fulfillment services.
 *   These scopes grant access to fulfillment orders assigned to locations that are being managed
 *   by fulfillment services.
 * * The `read_third_party_fulfillment_orders` and `write_third_party_fulfillment_orders`
 *   access scopes grant access to fulfillment orders
 *   assigned to locations managed by other fulfillment services.
 * 
 * ### Fulfillment service app access scopes
 * 
 * Usually, **fulfillment services** have the `write_assigned_fulfillment_orders` access scope
 * and don't have the `*_third_party_fulfillment_orders`
 * or `*_merchant_managed_fulfillment_orders` access scopes.
 * The app will only have access to the fulfillment orders assigned to their location
 * (or multiple locations if the app registers multiple fulfillment services on the shop).
 * The app will not have access to fulfillment orders assigned to merchant-managed locations
 * or locations owned by other fulfillment service apps.
 * 
 * ### Order management app access scopes
 * 
 * **Order management apps** will usually request `write_merchant_managed_fulfillment_orders` and
 * `write_third_party_fulfillment_orders` access scopes. This will allow them to manage all fulfillment orders
 * on behalf of a merchant.
 * 
 * If an app combines the functions of an order management app and a fulfillment service,
 * then the app should request all
 * access scopes to manage all assigned and all unassigned fulfillment orders.
 * 
 * ## Notifications about fulfillment orders
 * 
 * Fulfillment services are required to
 * [register](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentService)
 * a self-hosted callback URL which has a number of uses. One of these uses is that this callback URL will be notified
 * whenever a merchant submits a fulfillment or cancellation request.
 * 
 * Both merchants and apps can
 * [subscribe](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#webhooks)
 * to the
 * [fulfillment order webhooks](https://shopify.dev/api/admin-graphql/latest/enums/WebhookSubscriptionTopic#value-fulfillmentorderscancellationrequestaccepted)
 * to be notified whenever fulfillment order related domain events occur.
 * 
 * [Learn about fulfillment workflows](https://shopify.dev/apps/fulfillment).
 * 
 */
export interface FulfillmentOrderGenqlSelection{
    /**
     * The fulfillment order's assigned location. This is the location where the fulfillment is expected to happen.
     * 
     * The fulfillment order's assigned location might change in the following cases:
     * 
     * - The fulfillment order has been entirely moved to a new location. For example, the [fulfillmentOrderMove](
     *   https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove
     *   ) mutation has been called, and you see the original fulfillment order in the [movedFulfillmentOrder](
     *   https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove#field-fulfillmentordermovepayload-movedfulfillmentorder
     *   ) field within the mutation's response.
     * - Work on the fulfillment order has not yet begun, which means that the fulfillment order has the
     *     [OPEN](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-open),
     *     [SCHEDULED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-scheduled), or
     *     [ON_HOLD](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-onhold)
     *     status, and the shop's location properties might be undergoing edits (for example, in the Shopify admin).
     * 
     */
    assignedLocation?: FulfillmentOrderAssignedLocationGenqlSelection
    /** Date and time when the fulfillment order was created. */
    createdAt?: boolean | number
    /** Delivery method of this fulfillment order. */
    deliveryMethod?: DeliveryMethodGenqlSelection
    /** The destination where the items should be sent. */
    destination?: FulfillmentOrderDestinationGenqlSelection
    /** The date and time at which the fulfillment order will be fulfillable. When this date and time is reached, the scheduled fulfillment order is automatically transitioned to open. For example, the `fulfill_at` date for a subscription order might be the 1st of each month, a pre-order `fulfill_at` date would be `nil`, and a standard order `fulfill_at` date would be the order creation date. */
    fulfillAt?: boolean | number
    /** The latest date and time by which all items in the fulfillment order need to be fulfilled. */
    fulfillBy?: boolean | number
    /** The fulfillment holds applied on the fulfillment order. */
    fulfillmentHolds?: FulfillmentHoldGenqlSelection
    /** A list of fulfillments for the fulfillment order. */
    fulfillments?: (FulfillmentConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** The duties delivery method of this fulfillment order. */
    internationalDuties?: FulfillmentOrderInternationalDutiesGenqlSelection
    /** A list of the fulfillment order's line items. */
    lineItems?: (FulfillmentOrderLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of locations that the fulfillment order can potentially move to. */
    locationsForMove?: (FulfillmentOrderLocationForMoveConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of requests sent by the merchant or an order management app to the fulfillment service for the fulfillment order. */
    merchantRequests?: (FulfillmentOrderMerchantRequestConnectionGenqlSelection & { __args?: {
    /** The kind of request the merchant sent. */
    kind?: (FulfillmentOrderMerchantRequestKind | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The order that's associated with the fulfillment order. */
    order?: OrderGenqlSelection
    /** The request status of the fulfillment order. */
    requestStatus?: boolean | number
    /** The status of the fulfillment order. */
    status?: boolean | number
    /** The actions that can be performed on this fulfillment order. */
    supportedActions?: FulfillmentOrderSupportedActionGenqlSelection
    /** The date and time when the fulfillment order was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderAcceptCancellationRequest` mutation. */
export interface FulfillmentOrderAcceptCancellationRequestPayloadGenqlSelection{
    /** The fulfillment order whose cancellation request was accepted. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderAcceptFulfillmentRequest` mutation. */
export interface FulfillmentOrderAcceptFulfillmentRequestPayloadGenqlSelection{
    /** The fulfillment order whose fulfillment request was accepted. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The fulfillment order's assigned location. This is the location where the fulfillment is expected to happen.
 * 
 *  The fulfillment order's assigned location might change in the following cases:
 * 
 *   - The fulfillment order has been entirely moved to a new location. For example, the [fulfillmentOrderMove](
 *     https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove
 *     ) mutation has been called, and you see the original fulfillment order in the [movedFulfillmentOrder](
 *     https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove#field-fulfillmentordermovepayload-movedfulfillmentorder
 *     ) field within the mutation's response.
 * 
 *   - Work on the fulfillment order has not yet begun, which means that the fulfillment order has the
 *       [OPEN](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-open),
 *       [SCHEDULED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-scheduled), or
 *       [ON_HOLD](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-onhold)
 *       status, and the shop's location properties might be undergoing edits (for example, in the Shopify admin).
 * 
 * If the [fulfillmentOrderMove](
 * https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentOrderMove
 * ) mutation has moved the fulfillment order's line items to a new location,
 * but hasn't moved the fulfillment order instance itself, then the original fulfillment order's assigned location
 * doesn't change.
 * This happens if the fulfillment order is being split during the move, or if all line items can be moved
 * to an existing fulfillment order at a new location.
 * 
 * Once the fulfillment order has been taken into work or canceled,
 * which means that the fulfillment order has the
 * [IN_PROGRESS](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-inprogress),
 * [CLOSED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-closed),
 * [CANCELLED](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-cancelled), or
 * [INCOMPLETE](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderStatus#value-incomplete)
 * status, `FulfillmentOrderAssignedLocation` acts as a snapshot of the shop's location content.
 * Up-to-date shop's location data may be queried through [location](
 *   https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderAssignedLocation#field-fulfillmentorderassignedlocation-location
 * ) connection.
 * 
 */
export interface FulfillmentOrderAssignedLocationGenqlSelection{
    /** The first line of the address for the location. */
    address1?: boolean | number
    /** The second line of the address for the location. */
    address2?: boolean | number
    /** The city of the location. */
    city?: boolean | number
    /** The two-letter country code of the location. */
    countryCode?: boolean | number
    /**
     * The location where the fulfillment is expected to happen. This value might be different from
     * `FulfillmentOrderAssignedLocation` if the location's attributes were updated
     * after the fulfillment order was taken into work of canceled.
     * 
     */
    location?: LocationGenqlSelection
    /** The name of the location. */
    name?: boolean | number
    /** The phone number of the location. */
    phone?: boolean | number
    /** The province of the location. */
    province?: boolean | number
    /** The ZIP code of the location. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderCancel` mutation. */
export interface FulfillmentOrderCancelPayloadGenqlSelection{
    /** The fulfillment order that was marked as canceled. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The fulfillment order that was created to replace the canceled fulfillment order. */
    replacementFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderClose` mutation. */
export interface FulfillmentOrderClosePayloadGenqlSelection{
    /** The fulfillment order that was marked as incomplete. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrders.
 * 
 */
export interface FulfillmentOrderConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentOrderEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentOrderEdge. */
    nodes?: FulfillmentOrderGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the destination where the items should be sent upon fulfillment.
 * 
 */
export interface FulfillmentOrderDestinationGenqlSelection{
    /** The first line of the address of the destination. */
    address1?: boolean | number
    /** The second line of the address of the destination. */
    address2?: boolean | number
    /** The city of the destination. */
    city?: boolean | number
    /** The company of the destination. */
    company?: boolean | number
    /** The two-letter country code of the destination. */
    countryCode?: boolean | number
    /** The email of the customer at the destination. */
    email?: boolean | number
    /** The first name of the customer at the destination. */
    firstName?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The last name of the customer at the destination. */
    lastName?: boolean | number
    /** The phone number of the customer at the destination. */
    phone?: boolean | number
    /** The province of the destination. */
    province?: boolean | number
    /** The ZIP code of the destination. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one FulfillmentOrder and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentOrderEdge. */
    node?: FulfillmentOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the fulfillment hold applied on the fulfillment order. */
export interface FulfillmentOrderHoldInput {
/** The reason for the fulfillment hold. */
reason: FulfillmentHoldReason,
/** Additional information about the fulfillment hold reason. */
reasonNotes?: (Scalars['String'] | null),
/** Whether the merchant receives a notification about the fulfillment hold. The default value is `false`. */
notifyMerchant?: (Scalars['Boolean'] | null),
/** A configurable ID used to track the automation system releasing these holds. */
externalId?: (Scalars['String'] | null),
/**
 * The fulfillment order line items to be placed on hold.
 * If left blank, all line items of the fulfillment order are placed on hold.
 * 
 */
fulfillmentOrderLineItems?: (FulfillmentOrderLineItemInput[] | null)}


/** Return type for `fulfillmentOrderHold` mutation. */
export interface FulfillmentOrderHoldPayloadGenqlSelection{
    /** The fulfillment order on which a fulfillment hold was applied. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /**
     * The remaining fulfillment order containing the line items to which the hold was not applied,
     * if specific line items were specified to be placed on hold.
     * 
     */
    remainingFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrderHoldUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrderHold`. */
export interface FulfillmentOrderHoldUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The international duties relevant to a fulfillment order.
 * 
 */
export interface FulfillmentOrderInternationalDutiesGenqlSelection{
    /** The method of duties payment. Example values: `DDP`, `DAP`. */
    incoterm?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Associates an order line item with quantities requiring fulfillment from the respective fulfillment order.
 * 
 */
export interface FulfillmentOrderLineItemGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image associated to the line item's variant. */
    image?: ImageGenqlSelection
    /** The ID of the inventory item. */
    inventoryItemId?: boolean | number
    /**
     * @deprecated           As of API version 2023-01, this field has been deprecated. The order line item associated with a `FulfillmentOrderLineItem`           shouldn't be used to determine what to fulfill. Use the `FulfillmentOrderLineItem` and `FulfillmentOrder` objects           instead. An order `LineItem` represents a single line item on an order, but it doesn't represent what should be fulfilled. 
     * The associated order line item.
     */
    lineItem?: LineItemGenqlSelection
    /** The variant unit price without discounts applied, in shop and presentment currencies. */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /** The title of the product. */
    productTitle?: boolean | number
    /** The number of units remaining to be fulfilled. */
    remainingQuantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /** The variant SKU number. */
    sku?: boolean | number
    /** The total number of units to be fulfilled. */
    totalQuantity?: boolean | number
    /** The name of the variant. */
    variantTitle?: boolean | number
    /** The name of the vendor who made the variant. */
    vendor?: boolean | number
    /** Warning messages for a fulfillment order line item. */
    warnings?: FulfillmentOrderLineItemWarningGenqlSelection
    /** The weight of a line item unit. */
    weight?: WeightGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrderLineItems.
 * 
 */
export interface FulfillmentOrderLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentOrderLineItemEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentOrderLineItemEdge. */
    nodes?: FulfillmentOrderLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one FulfillmentOrderLineItem and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentOrderLineItemEdge. */
    node?: FulfillmentOrderLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields used to include the quantity of the fulfillment order line item that should be fulfilled.
 * 
 */
export interface FulfillmentOrderLineItemInput {
/** The ID of the fulfillment order line item. */
id: Scalars['ID'],
/** The quantity of the fulfillment order line item. */
quantity: Scalars['Int']}


/**
 * A fulfillment order line item warning. For example, a warning about why a fulfillment request was rejected.
 * 
 */
export interface FulfillmentOrderLineItemWarningGenqlSelection{
    /** The description of warning. */
    description?: boolean | number
    /** The title of warning. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields used to include the line items of a specified fulfillment order that should be fulfilled.
 * 
 */
export interface FulfillmentOrderLineItemsInput {
/** The ID of the fulfillment order. */
fulfillmentOrderId: Scalars['ID'],
/**
 * The fulfillment order line items to be fulfilled.
 * If left blank, all line items of the fulfillment order will be fulfilled.
 * 
 */
fulfillmentOrderLineItems?: (FulfillmentOrderLineItemInput[] | null)}


/** The input fields for marking fulfillment order line items as ready for pickup. */
export interface FulfillmentOrderLineItemsPreparedForPickupInput {
/**
 * The fulfillment orders associated with the line items which are ready to be picked up by a customer.
 * 
 */
lineItemsByFulfillmentOrder: PreparedFulfillmentOrderLineItemsInput[]}


/** Return type for `fulfillmentOrderLineItemsPreparedForPickup` mutation. */
export interface FulfillmentOrderLineItemsPreparedForPickupPayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrderLineItemsPreparedForPickupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrderLineItemsPreparedForPickup`. */
export interface FulfillmentOrderLineItemsPreparedForPickupUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A location that a fulfillment order can potentially move to.
 * 
 */
export interface FulfillmentOrderLocationForMoveGenqlSelection{
    /** The location being considered as the fulfillment order's new assigned location. */
    location?: LocationGenqlSelection
    /**
     * A human-readable string with the reason why the fulfillment order, or some of its line items, can't be
     * moved to the location.
     * 
     */
    message?: boolean | number
    /** Whether the fulfillment order can be moved to the location. */
    movable?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrderLocationForMoves.
 * 
 */
export interface FulfillmentOrderLocationForMoveConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentOrderLocationForMoveEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentOrderLocationForMoveEdge. */
    nodes?: FulfillmentOrderLocationForMoveGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one FulfillmentOrderLocationForMove and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderLocationForMoveEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentOrderLocationForMoveEdge. */
    node?: FulfillmentOrderLocationForMoveGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A request made by the merchant or an order management app to a fulfillment service
 * for a fulfillment order.
 * 
 */
export interface FulfillmentOrderMerchantRequestGenqlSelection{
    /** The fulfillment order associated with the merchant request. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The kind of request made. */
    kind?: boolean | number
    /** The optional message that the merchant included in the request. */
    message?: boolean | number
    /**
     * Additional options requested by the merchant. These depend on the `kind` of the request.
     * For example, for a `FULFILLMENT_REQUEST`, one option is `notify_customer`, which indicates whether the
     * merchant intends to notify the customer upon fulfillment. The fulfillment service can then set
     * `notifyCustomer` when making calls to `FulfillmentCreateV2`.
     * 
     */
    requestOptions?: boolean | number
    /** The response from the fulfillment service. */
    responseData?: boolean | number
    /** The timestamp when the request was made. */
    sentAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple FulfillmentOrderMerchantRequests.
 * 
 */
export interface FulfillmentOrderMerchantRequestConnectionGenqlSelection{
    /** A list of edges. */
    edges?: FulfillmentOrderMerchantRequestEdgeGenqlSelection
    /** A list of the nodes contained in FulfillmentOrderMerchantRequestEdge. */
    nodes?: FulfillmentOrderMerchantRequestGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one FulfillmentOrderMerchantRequest and a cursor during pagination.
 * 
 */
export interface FulfillmentOrderMerchantRequestEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of FulfillmentOrderMerchantRequestEdge. */
    node?: FulfillmentOrderMerchantRequestGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for merging fulfillment orders. */
export interface FulfillmentOrderMergeInput {
/** The details of the fulfillment orders to be merged. */
mergeIntents: FulfillmentOrderMergeInputMergeIntent[]}


/** The input fields for merging fulfillment orders into a single merged fulfillment order. */
export interface FulfillmentOrderMergeInputMergeIntent {
/**
 * The fulfillment order line items to be merged.
 * 
 */
fulfillmentOrderLineItems?: (FulfillmentOrderLineItemInput[] | null),
/** The ID of the fulfillment order to be merged. */
fulfillmentOrderId: Scalars['ID']}


/** Return type for `fulfillmentOrderMerge` mutation. */
export interface FulfillmentOrderMergePayloadGenqlSelection{
    /** The result of the fulfillment order merges. */
    fulfillmentOrderMerges?: FulfillmentOrderMergeResultGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrderMergeUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The result of merging a set of fulfillment orders. */
export interface FulfillmentOrderMergeResultGenqlSelection{
    /** The new fulfillment order as a result of the merge. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrderMerge`. */
export interface FulfillmentOrderMergeUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderMove` mutation. */
export interface FulfillmentOrderMovePayloadGenqlSelection{
    /**
     * The fulfillment order which now contains the moved line items and is assigned to the destination location.
     * 
     * **First scenario:** All line items belonging to the original fulfillment order are re-assigned.
     * 
     * In this case, this will be the original fulfillment order.
     * 
     * **Second scenario:** A subset of the line items belonging to the original fulfillment order are re-assigned.
     * 
     * If the new location is already assigned to fulfill line items on the order, then
     * this will be an existing active fulfillment order.
     * Otherwise, this will be a new fulfillment order with the moved line items assigned.
     * 
     */
    movedFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /**
     * The final state of the original fulfillment order.
     * 
     * As a result of the move operation, the original fulfillment order might be moved to the new location
     * or remain in the original location. The original fulfillment order might have the same status or be closed.
     * 
     */
    originalFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /**
     * This field is deprecated.
     * 
     */
    remainingFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderOpen` mutation. */
export interface FulfillmentOrderOpenPayloadGenqlSelection{
    /** The fulfillment order that was transitioned to open and is fulfillable. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderRejectCancellationRequest` mutation. */
export interface FulfillmentOrderRejectCancellationRequestPayloadGenqlSelection{
    /** The fulfillment order whose cancellation request was rejected. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderRejectFulfillmentRequest` mutation. */
export interface FulfillmentOrderRejectFulfillmentRequestPayloadGenqlSelection{
    /** The fulfillment order whose fulfillment request was rejected. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderReleaseHold` mutation. */
export interface FulfillmentOrderReleaseHoldPayloadGenqlSelection{
    /** The fulfillment order on which the hold was released. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrderReleaseHoldUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrderReleaseHold`. */
export interface FulfillmentOrderReleaseHoldUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderReschedule` mutation. */
export interface FulfillmentOrderReschedulePayloadGenqlSelection{
    /** The fulfillment order that was rescheduled. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrderRescheduleUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrderReschedule`. */
export interface FulfillmentOrderRescheduleUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the split applied to the fulfillment order. */
export interface FulfillmentOrderSplitInput {
/**
 * The fulfillment order line items to be split out.
 * 
 */
fulfillmentOrderLineItems: FulfillmentOrderLineItemInput[],
/** The ID of the fulfillment order to be split. */
fulfillmentOrderId: Scalars['ID']}


/** Return type for `fulfillmentOrderSplit` mutation. */
export interface FulfillmentOrderSplitPayloadGenqlSelection{
    /** The result of the fulfillment order splits. */
    fulfillmentOrderSplits?: FulfillmentOrderSplitResultGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrderSplitUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The result of splitting a fulfillment order. */
export interface FulfillmentOrderSplitResultGenqlSelection{
    /** The original fulfillment order as a result of the split. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The remaining fulfillment order as a result of the split. */
    remainingFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The replacement fulfillment order if the original fulfillment order was not in a state to be split. */
    replacementFulfillmentOrder?: FulfillmentOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrderSplit`. */
export interface FulfillmentOrderSplitUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderSubmitCancellationRequest` mutation. */
export interface FulfillmentOrderSubmitCancellationRequestPayloadGenqlSelection{
    /** The fulfillment order specified in the cancelation request. */
    fulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrderSubmitFulfillmentRequest` mutation. */
export interface FulfillmentOrderSubmitFulfillmentRequestPayloadGenqlSelection{
    /**
     * The original fulfillment order intended to request fulfillment for.
     * 
     */
    originalFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /**
     * The fulfillment order that was submitted to the fulfillment service. This will be the same as
     * the original fulfillment order field. The exception to this is partial fulfillment requests or
     * fulfillment request for cancelled or incomplete fulfillment orders.
     * 
     */
    submittedFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /**
     * This field will only be present for partial fulfillment requests. This will represent the new
     * fulfillment order with the remaining line items not submitted to the fulfillment service.
     * 
     */
    unsubmittedFulfillmentOrder?: FulfillmentOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * One of the actions that the fulfillment order supports in its current state.
 * 
 */
export interface FulfillmentOrderSupportedActionGenqlSelection{
    /** The action value. */
    action?: boolean | number
    /**
     * The external URL to be used to initiate the fulfillment process outside Shopify.
     * Applicable only when the `action` value is `EXTERNAL`.
     * 
     */
    externalUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrdersReleaseHolds` mutation. */
export interface FulfillmentOrdersReleaseHoldsPayloadGenqlSelection{
    /** The asynchronous job that will release the fulfillment holds. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrdersReleaseHoldsUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrdersReleaseHolds`. */
export interface FulfillmentOrdersReleaseHoldsUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentOrdersSetFulfillmentDeadline` mutation. */
export interface FulfillmentOrdersSetFulfillmentDeadlinePayloadGenqlSelection{
    /** Whether the fulfillment deadline was successfully set. */
    success?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: FulfillmentOrdersSetFulfillmentDeadlineUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `FulfillmentOrdersSetFulfillmentDeadline`. */
export interface FulfillmentOrdersSetFulfillmentDeadlineUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The address at which the fulfillment occurred. Typically this is the address of the warehouse or fulfillment center. */
export interface FulfillmentOriginAddressGenqlSelection{
    /** The street address of the fulfillment location. */
    address1?: boolean | number
    /** The second line of the address. Typically the number of the apartment, suite, or unit. */
    address2?: boolean | number
    /** The city in which the fulfillment location is located. */
    city?: boolean | number
    /** The country code of the fulfillment location. */
    countryCode?: boolean | number
    /** The province code of the fulfillment location. */
    provinceCode?: boolean | number
    /** The zip code of the fulfillment location. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to include the address at which the fulfillment occurred. Typically the address of a warehouse or a fulfillment center. */
export interface FulfillmentOriginAddressInput {
/** The street address of the fulfillment location. */
address1?: (Scalars['String'] | null),
/** The second line of the address. Typically the number of the apartment, suite, or unit. */
address2?: (Scalars['String'] | null),
/** The city in which the fulfillment location is located. */
city?: (Scalars['String'] | null),
/** The zip code of the fulfillment location. */
zip?: (Scalars['String'] | null),
/** The province of the fulfillment location. */
provinceCode?: (Scalars['String'] | null),
/** The country of the fulfillment location. */
countryCode: Scalars['String']}


/**
 * A **Fulfillment Service** is a third party warehouse that prepares and ships orders
 * on behalf of the store owner. Fulfillment services charge a fee to package and ship items
 * and update product inventory levels. Some well known fulfillment services with Shopify integrations
 * include: Amazon, Shipwire, and Rakuten. When an app registers a new `FulfillmentService` on a store,
 * Shopify automatically creates a `Location` that's associated to the fulfillment service.
 * To learn more about fulfillment services, refer to
 * [Manage fulfillments as a fulfillment service app](https://shopify.dev/apps/fulfillment/fulfillment-service-apps)
 * guide.
 * 
 * ## Mutations
 * 
 * You can work with the `FulfillmentService` object with the
 * [fulfillmentServiceCreate](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceCreate),
 * [fulfillmentServiceUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceUpdate),
 * and [fulfillmentServiceDelete](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceDelete)
 * mutations.
 * 
 * ## Hosted endpoints
 * 
 * Fulfillment service providers integrate with Shopify by providing Shopify with a set of hosted endpoints that
 * Shopify can query on certain conditions.
 * These endpoints must have a common prefix, and this prefix should be supplied in the `callbackUrl` parameter
 * in the
 * [fulfillmentServiceCreate](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentServiceCreate)
 * mutation.
 * 
 * - Shopify sends POST requests to the `<callbackUrl>/fulfillment_order_notification` endpoint
 *   to notify the fulfillment service about fulfillment requests and fulfillment cancellation requests,
 *   if `fulfillment_orders_opt_in` is set to `true`.
 * 
 *   [As of the 2022-07 API version](https://shopify.dev/changelog/legacy-fulfillment-api-deprecation),
 *   it's mandatory for a fulfillment service to follow a fulfillment order based workflow by
 *   having `fulfillment_orders_opt_in` set to `true`,
 *   hosting the `<callbackUrl>/fulfillment_order_notification` endpoint, and acting on fulfillment requests and cancellations.
 * 
 *   For more information, refer to
 *   [Receive fulfillment requests and cancellations](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations).
 * - Shopify sends GET requests to the `<callbackUrl>/fetch_tracking_numbers` endpoint to retrieve tracking numbers for orders,
 *   if `trackingSupport` is set to `true`.
 * 
 *   For more information, refer to
 *   [Enable tracking support](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-8-enable-tracking-support-optional).
 * 
 *   Fulfillment services can also update tracking information with the
 *   [fulfillmentTrackingInfoUpdateV2](https://shopify.dev/api/admin-graphql/latest/mutations/fulfillmentTrackingInfoUpdateV2) mutation,
 *   rather than waiting for Shopify to ask for tracking numbers.
 * - Shopify sends GET requests to the `<callbackUrl>/fetch_stock` endpoint to retrieve inventory levels,
 *   if `inventoryManagement` is set to `true`.
 * 
 *   For more information, refer to
 *   [Sharing inventory levels with Shopify](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-9-share-inventory-levels-with-shopify-optional).
 * 
 * To make sure you have everything set up correctly, you can test the `callbackUrl`-prefixed endpoints
 * in your development store.
 * 
 * ## Resources and webhooks
 * 
 * There are a variety of objects and webhooks that enable a fulfillment service to work.
 * To exchange fulfillment information with Shopify, fulfillment services use the
 * [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder),
 * [Fulfillment](https://shopify.dev/api/admin-graphql/latest/objects/Fulfillment) and
 * [Order](https://shopify.dev/api/admin-graphql/latest/objects/Order) objects and related mutations.
 * To act on fulfillment process events that happen on the Shopify side,
 * besides awaiting calls to `callbackUrl`-prefixed endpoints,
 * fulfillment services can subscribe to the
 * [fulfillment order](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#webhooks)
 * and [order](https://shopify.dev/api/admin-rest/latest/resources/webhook)
 * webhooks.
 * 
 */
export interface FulfillmentServiceGenqlSelection{
    /**
     * The callback URL that the fulfillment service has registered for requests. The following considerations apply:
     * 
     * - Shopify queries the `<callbackUrl>/fetch_tracking_numbers` endpoint to retrieve tracking numbers
     *     for orders, if `trackingSupport` is set to `true`.
     * - Shopify queries the `<callbackUrl>/fetch_stock` endpoint to retrieve inventory levels,
     *     if `inventoryManagement` is set to `true`.
     * - Shopify uses the `<callbackUrl>/fulfillment_order_notification` endpoint to send
     *     [fulfillment and cancellation requests](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations),
     *     if the fulfillment service has opted in to the fulfillment order based workflow for managing fulfillments
     *     (`fulfillmentOrdersOptIn` is set to `true`).
     * 
     */
    callbackUrl?: boolean | number
    /**
     * Whether the fulfillment service uses the [fulfillment order based workflow](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments) for managing fulfillments.
     * 
     */
    fulfillmentOrdersOptIn?: boolean | number
    /** Human-readable unique identifier for this fulfillment service. */
    handle?: boolean | number
    /** The ID of the fulfillment service. */
    id?: boolean | number
    /** Whether the fulfillment service tracks product inventory and provides updates to Shopify. */
    inventoryManagement?: boolean | number
    /** Location associated with the fulfillment service. */
    location?: LocationGenqlSelection
    /** Whether the fulfillment service can stock inventory alongside other locations. */
    permitsSkuSharing?: boolean | number
    /** Whether the fulfillment service supports local deliveries. */
    productBased?: boolean | number
    /** The name of the fulfillment service as seen by merchants. */
    serviceName?: boolean | number
    /**
     * @deprecated The Fulfillment by Amazon feature will no longer be supported from March 30, 2023. To continue using Amazon fulfillment, merchants need to set up a Multi-Channel Fulfillment solution recommended by Amazon: https://help.shopify.com/manual/shipping/fulfillment-services/amazon#activate-fulfillment-by-amazon
     * Shipping methods associated with the fulfillment service provider. Applies only to Fulfill By Amazon fulfillment service.
     */
    shippingMethods?: ShippingMethodGenqlSelection
    /** Type associated with the fulfillment service. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentServiceCreate` mutation. */
export interface FulfillmentServiceCreatePayloadGenqlSelection{
    /** The created fulfillment service. */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentServiceDelete` mutation. */
export interface FulfillmentServiceDeletePayloadGenqlSelection{
    /** The ID of the deleted fulfillment service. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentServiceUpdate` mutation. */
export interface FulfillmentServiceUpdatePayloadGenqlSelection{
    /** The updated fulfillment service. */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the tracking information for a fulfillment. */
export interface FulfillmentTrackingInfoGenqlSelection{
    /**
     * The name of the tracking company.
     * 
     * For tracking company names from the list below
     * Shopify will automatically build tracking URLs for all provided tracking numbers,
     * which will make the tracking numbers clickable in the interface.
     * 
     * Additionally, for the tracking companies listed on the
     * [Shipping Carriers help page](https://help.shopify.com/manual/shipping/understanding-shipping/shipping-carriers#integrated-shipping-carriers)
     * Shopify will automatically update the fulfillment's `shipment_status` field during the fulfillment process.
     * 
     * ### Supported tracking companies
     * 
     * The following tracking companies display for shops located in any country:
     * 
     *   * 4PX
     *   * AGS
     *   * Amazon Logistics UK
     *   * Amazon Logistics US
     *   * An Post
     *   * Anjun Logistics
     *   * APC
     *   * Asendia USA
     *   * Australia Post
     *   * Bonshaw
     *   * BPost
     *   * BPost International
     *   * Canada Post
     *   * Canpar
     *   * CDL Last Mile
     *   * China Post
     *   * Chronopost
     *   * Chukou1
     *   * Colissimo
     *   * Comingle
     *   * Coordinadora
     *   * Correios
     *   * Correos
     *   * CTT
     *   * CTT Express
     *   * Cyprus Post
     *   * Delnext
     *   * Deutsche Post
     *   * DHL eCommerce
     *   * DHL eCommerce Asia
     *   * DHL Express
     *   * DoorDash
     *   * DPD
     *   * DPD Local
     *   * DPD UK
     *   * DTD Express
     *   * DX
     *   * Eagle
     *   * Estes
     *   * Evri
     *   * FedEx
     *   * First Global Logistics
     *   * First Line
     *   * FSC
     *   * Fulfilla
     *   * GLS
     *   * Guangdong Weisuyi Information Technology (WSE)
     *   * Heppner Internationale Spedition GmbH & Co.
     *   * Iceland Post
     *   * IDEX
     *   * Israel Post
     *   * Japan Post (EN)
     *   * Japan Post (JA)
     *   * La Poste
     *   * Lasership
     *   * Latvia Post
     *   * Lietuvos Paštas
     *   * Logisters
     *   * Lone Star Overnight
     *   * M3 Logistics
     *   * Meteor Space
     *   * Mondial Relay
     *   * New Zealand Post
     *   * NinjaVan
     *   * North Russia Supply Chain (Shenzhen) Co.
     *   * OnTrac
     *   * Packeta
     *   * Pago Logistics
     *   * Ping An Da Tengfei Express
     *   * Pitney Bowes
     *   * Portal PostNord
     *   * Poste Italiane
     *   * PostNL
     *   * PostNord DK
     *   * PostNord NO
     *   * PostNord SE
     *   * Purolator
     *   * Qxpress
     *   * Qyun Express
     *   * Royal Mail
     *   * Royal Shipments
     *   * Sagawa (EN)
     *   * Sagawa (JA)
     *   * Sendle
     *   * SF Express
     *   * SFC Fulfillment
     *   * SHREE NANDAN COURIER
     *   * Singapore Post
     *   * Southwest Air Cargo
     *   * StarTrack
     *   * Step Forward Freight
     *   * Swiss Post
     *   * TForce Final Mile
     *   * Tinghao
     *   * TNT
     *   * Toll IPEC
     *   * United Delivery Service
     *   * UPS
     *   * USPS
     *   * Venipak
     *   * We Post
     *   * Whistl
     *   * Wizmo
     *   * WMYC
     *   * Xpedigo
     *   * XPO Logistics
     *   * Yamato (EN)
     *   * Yamato (JA)
     *   * YiFan Express
     *   * YunExpress
     * 
     * The following tracking companies are displayed for shops located in specific countries:
     * 
     *   * **Australia**: Australia Post, Sendle, Aramex Australia, TNT Australia, Hunter Express, Couriers Please, Bonds, Allied Express, Direct Couriers, Northline, GO Logistics
     *   * **Austria**: Österreichische Post
     *   * **Bulgaria**: Speedy
     *   * **Canada**: Intelcom, BoxKnight, Loomis, GLS
     *   * **China**: China Post, DHL eCommerce Asia, WanbExpress, YunExpress, Anjun Logistics, SFC Fulfillment, FSC
     *   * **Czechia**: Zásilkovna
     *   * **Germany**: Deutsche Post (DE), Deutsche Post (EN), DHL, DHL Express, Swiship, Hermes, GLS
     *   * **Spain**: SEUR
     *   * **France**: Colissimo, Mondial Relay, Colis Privé, GLS
     *   * **United Kingdom**: Evri, DPD UK, Parcelforce, Yodel, DHL Parcel, Tuffnells
     *   * **Greece**: ACS Courier
     *   * **Hong Kong SAR**: SF Express
     *   * **Ireland**: Fastway, DPD Ireland
     *   * **India**: DTDC, India Post, Delhivery, Gati KWE, Professional Couriers, XpressBees, Ecom Express, Ekart, Shadowfax, Bluedart
     *   * **Italy**: BRT, GLS Italy
     *   * **Japan**: エコ配, 西濃運輸, 西濃スーパーエキスプレス, 福山通運, 日本通運, 名鉄運輸, 第一貨物
     *   * **Netherlands**: DHL Parcel, DPD
     *   * **Norway**: Bring
     *   * **Poland**: Inpost
     *   * **Turkey**: PTT, Yurtiçi Kargo, Aras Kargo, Sürat Kargo
     *   * **United States**: GLS, Alliance Air Freight, Pilot Freight, LSO, Old Dominion, R+L Carriers, Southwest Air Cargo
     *   * **South Africa**: Fastway, Skynet.
     * 
     */
    company?: boolean | number
    /**
     * The tracking number of the fulfillment.
     * 
     * The tracking number is clickable in the interface if one of the following applies
     * (the highest in the list has the highest priority):
     * 
     * * Tracking url provided in the `url` field.
     * * [Shopify-known tracking company name](#supported-tracking-companies) specified in the `company` field.
     *   Shopify will build the tracking URL automatically based on the tracking number specified.
     * * The tracking number has a Shopify-known format.
     *   Shopify will guess the tracking provider and build the tracking url based on the tracking number format.
     *   Not all tracking carriers are supported, and multiple tracking carriers may use similarly formatted tracking numbers.
     *   This can result in an invalid tracking URL.
     *   It is highly recommended that you send the tracking company and the tracking URL.
     * 
     */
    number?: boolean | number
    /**
     * The URLs to track the fulfillment.
     * 
     * The tracking URL is displayed in the merchant's admin on the order page.
     * The tracking URL is displayed in the shipping confirmation email, which can optionally be sent to the customer.
     * When accounts are enabled, it is also displayed in the customer's order history.
     * 
     */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `fulfillmentTrackingInfoUpdateV2` mutation. */
export interface FulfillmentTrackingInfoUpdateV2PayloadGenqlSelection{
    /** The updated fulfillment with tracking information. */
    fulfillment?: FulfillmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields that specify all possible fields for tracking information.
 * 
 * > Note:
 * > If you provide the `url` field, you should not provide the `urls` field.
 * >
 * > If you provide the `number` field, you should not provide the `numbers` field.
 * >
 * > If you provide the `url` field, you should provide the `number` field.
 * >
 * > If you provide the `urls` field, you should provide the `numbers` field.
 * 
 */
export interface FulfillmentTrackingInput {
/**
 * The tracking number of the fulfillment.
 * 
 * The tracking number will be clickable in the interface if one of the following applies
 * (the highest in the list has the highest priority):
 * 
 * * Tracking url provided in the `url` field.
 * * [Shopify-known tracking company name](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentTrackingInfo#supported-tracking-companies)
 *   specified in the `company` field.
 *   Shopify will build the tracking URL automatically based on the tracking number specified.
 * * The tracking number has a Shopify-known format.
 *   Shopify will guess the tracking provider and build the tracking url based on the tracking number format.
 *   Not all tracking carriers are supported, and multiple tracking carriers may use similarly formatted tracking numbers.
 *   This can result in an invalid tracking URL.
 *   It is highly recommended that you send the tracking company and the tracking URL.
 * 
 */
number?: (Scalars['String'] | null),
/**
 * The URL to track the fulfillment.
 * 
 * The tracking URL is displayed in the merchant's admin on the order page.
 * The tracking URL is displayed in the shipping confirmation email, which can optionally be sent to the customer.
 * When accounts are enabled, it is also displayed in the customer's order history.
 * 
 * The URL must be an [RFC 3986](https://datatracker.ietf.org/doc/html/rfc3986) and
 * [RFC 3987](https://datatracker.ietf.org/doc/html/rfc3987)-compliant URI string.
 * For example, `"https://www.myshipping.com/track/?tracknumbers=TRACKING_NUMBER"` is a valid URL.
 * It includes a scheme (`https`) and a host (`myshipping.com`).
 * 
 */
url?: (Scalars['URL'] | null),
/**
 * The name of the tracking company.
 * 
 * If you specify a tracking company name from
 * [the list](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentTrackingInfo#supported-tracking-companies),
 * Shopify will automatically build tracking URLs for all provided tracking numbers,
 * which will make the tracking numbers clickable in the interface.
 * The same tracking company will be applied to all tracking numbers specified.
 * 
 * Additionally, for the tracking companies listed on the
 * [Shipping Carriers help page](https://help.shopify.com/manual/shipping/understanding-shipping/shipping-carriers#integrated-shipping-carriers)
 * Shopify will automatically update the fulfillment's `shipment_status` field during the fulfillment process.
 * 
 * > Note:
 * > Send the tracking company name exactly as written in
 * > [the list](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentTrackingInfo#supported-tracking-companies)
 * > (capitalization matters).
 * 
 */
company?: (Scalars['String'] | null),
/**
 * The tracking numbers of the fulfillment, one or many.
 * 
 * With multiple tracking numbers, you can provide tracking information
 * for all shipments associated with the fulfillment, if there are more than one.
 * For example, if you are shipping assembly parts of one furniture item in several boxes.
 * 
 * Tracking numbers will be clickable in the interface if one of the following applies
 * (the highest in the list has the highest priority):
 * 
 * * Tracking URLs provided in the `urls` field.
 *   The tracking URLs will be matched to the tracking numbers based on their positions in the arrays.
 * * [Shopify-known tracking company name](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentTrackingInfo#supported-tracking-companies)
 *   specified in the `company` field.
 *   Shopify will build tracking URLs automatically for all tracking numbers specified.
 *   The same tracking company will be applied to all tracking numbers.
 * * Tracking numbers have a Shopify-known format.
 *   Shopify will guess tracking providers and build tracking URLs based on the tracking number formats.
 *   Not all tracking carriers are supported, and multiple tracking carriers may use similarly formatted tracking numbers.
 *   This can result in an invalid tracking URL.
 *   It is highly recommended that you send the tracking company and the tracking URLs.
 * 
 * 
 */
numbers?: (Scalars['String'][] | null),
/**
 * The URLs to track the fulfillment, one or many.
 * 
 * The tracking URLs are displayed in the merchant's admin on the order page.
 * The tracking URLs are displayed in the shipping confirmation email, which can optionally be sent to the customer.
 * When accounts are enabled, the tracking URLs are also displayed in the customer's order history.
 * 
 * If you are not specifying a
 * [Shopify-known](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentTrackingInfo#supported-tracking-companies)
 * tracking company name in the `company` field,
 * then provide tracking URLs for all tracking numbers from the `numbers` field.
 * 
 * Tracking URLs from the `urls` array field are being matched with the tracking numbers from the `numbers` array
 * field correspondingly their positions in the arrays.
 * 
 * Each URL must be an [RFC 3986](https://datatracker.ietf.org/doc/html/rfc3986) and
 * [RFC 3987](https://datatracker.ietf.org/doc/html/rfc3987)-compliant URI string.
 * For example, `"https://www.myshipping.com/track/?tracknumbers=TRACKING_NUMBER"` is a valid URL.
 * It includes a scheme (`https`) and a host (`myshipping.com`).
 * 
 */
urls?: (Scalars['URL'][] | null)}


/** The input fields used to create a fulfillment from fulfillment orders. */
export interface FulfillmentV2Input {
/**
 * The fulfillment's tracking information, including a tracking URL, a tracking number,
 * and the company associated with the fulfillment.
 * 
 */
trackingInfo?: (FulfillmentTrackingInput | null),
/**
 * Whether the customer is notified.
 * If `true`, then a notification is sent when the fulfillment is created.
 * 
 */
notifyCustomer?: (Scalars['Boolean'] | null),
/**
 * Pairs of `fulfillment_order_id` and `fulfillment_order_line_items` that represent the fulfillment
 * order line items that have to be fulfilled for each fulfillment order.  For any given pair, if the
 * fulfillment order line items are left blank then all the fulfillment order line items of the
 * associated fulfillment order ID will be fulfilled.
 * 
 */
lineItemsByFulfillmentOrder: FulfillmentOrderLineItemsInput[],
/**
 * Address information about the location from which the order was fulfilled.
 * 
 */
originAddress?: (FulfillmentOriginAddressInput | null)}


/** The App Bridge information for a Shopify Function. */
export interface FunctionsAppBridgeGenqlSelection{
    /** The relative path for creating a customization. */
    createPath?: boolean | number
    /** The relative path for viewing a customization. */
    detailsPath?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The error history from running a Shopify Function. */
export interface FunctionsErrorHistoryGenqlSelection{
    /** The date and time that the first error occurred. */
    errorsFirstOccurredAt?: boolean | number
    /** The date and time that the first error occurred. */
    firstOccurredAt?: boolean | number
    /** Whether the merchant has shared all the recent errors with the developer. */
    hasBeenSharedSinceLastError?: boolean | number
    /** Whether the merchant has shared all the recent errors with the developer. */
    hasSharedRecentErrors?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents any file other than HTML.
 * 
 */
export interface GenericFileGenqlSelection{
    /** A word or phrase to describe the contents or the function of a file. */
    alt?: boolean | number
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt?: boolean | number
    /** Any errors that have occurred on the file. */
    fileErrors?: FileErrorGenqlSelection
    /** The status of the file. */
    fileStatus?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The generic file's MIME type. */
    mimeType?: boolean | number
    /** The generic file's size in bytes. */
    originalFileSize?: boolean | number
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt?: boolean | number
    /** The generic file's URL. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an issued gift card. */
export interface GiftCardGenqlSelection{
    /** The gift card's remaining balance. */
    balance?: MoneyV2GenqlSelection
    /** The date and time at which the gift card was created. */
    createdAt?: boolean | number
    /** The customer who will receive the gift card. */
    customer?: CustomerGenqlSelection
    /** The date and time at which the gift card was disabled. */
    disabledAt?: boolean | number
    /** Whether the gift card is enabled. */
    enabled?: boolean | number
    /** The date at which the gift card will expire. */
    expiresOn?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The initial value of the gift card. */
    initialValue?: MoneyV2GenqlSelection
    /** The final four characters of the gift card code. */
    lastCharacters?: boolean | number
    /** The gift card code. Everything but the final four characters is masked. */
    maskedCode?: boolean | number
    /** The note associated with the gift card, which is not visible to the customer. */
    note?: boolean | number
    /**
     * The order associated with the gift card. This value is `null` if the gift card was issued manually.
     * 
     */
    order?: OrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple GiftCards.
 * 
 */
export interface GiftCardConnectionGenqlSelection{
    /** A list of edges. */
    edges?: GiftCardEdgeGenqlSelection
    /** A list of the nodes contained in GiftCardEdge. */
    nodes?: GiftCardGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to issue a gift card. */
export interface GiftCardCreateInput {
/** The initial value of the gift card. */
initialValue: Scalars['Decimal'],
/**
 * The gift card's code. It must be 8-20 characters long and contain only letters(a-z) and numbers(0-9).
 * It is not case sensitive. If not provided, then a random code will be generated.
 * 
 */
code?: (Scalars['String'] | null),
/** The ID of the customer who will receive the gift card. Requires `write_customers` access_scope. */
customerId?: (Scalars['ID'] | null),
/**
 * The date at which the gift card will expire. If not provided, then the gift card will never expire.
 * 
 */
expiresOn?: (Scalars['Date'] | null),
/** The note associated with the gift card, which is not visible to the customer. */
note?: (Scalars['String'] | null),
/**
 * The suffix of the Liquid template that is used to render the gift card online.
 * For example, if the value is `birthday`, then the gift card is rendered using the template `gift_card.birthday.liquid`.
 * If not provided, then the default `gift_card.liquid` template is used.
 * 
 */
templateSuffix?: (Scalars['String'] | null)}


/** Return type for `giftCardCreate` mutation. */
export interface GiftCardCreatePayloadGenqlSelection{
    /** The created gift card. */
    giftCard?: GiftCardGenqlSelection
    /** The created gift card's code. */
    giftCardCode?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: GiftCardUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `giftCardDisable` mutation. */
export interface GiftCardDisablePayloadGenqlSelection{
    /** The disabled gift card. */
    giftCard?: GiftCardGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one GiftCard and a cursor during pagination.
 * 
 */
export interface GiftCardEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of GiftCardEdge. */
    node?: GiftCardGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sale associated with a gift card. */
export interface GiftCardSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line item for the associated sale. */
    lineItem?: LineItemGenqlSelection
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to update a gift card. */
export interface GiftCardUpdateInput {
/** The note associated with the gift card, which is not visible to the customer. */
note?: (Scalars['String'] | null),
/**
 * The date at which the gift card will expire. If set to `null`, then the gift card will never expire.
 * 
 */
expiresOn?: (Scalars['Date'] | null),
/**
 * The ID of the customer who will receive the gift card. The ID cannot be changed if the gift card already has an assigned customer ID.
 * 
 */
customerId?: (Scalars['ID'] | null),
/**
 * The suffix of the Liquid template that is used to render the gift card online.
 * For example, if the value is `birthday`, then the gift card is rendered using the template `gift_card.birthday.liquid`.
 * 
 */
templateSuffix?: (Scalars['String'] | null)}


/** Return type for `giftCardUpdate` mutation. */
export interface GiftCardUpdatePayloadGenqlSelection{
    /** The updated gift card. */
    giftCard?: GiftCardGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during the execution of a gift card mutation. */
export interface GiftCardUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an object that has a list of events. */
export interface HasEventsGenqlSelection{
    /** The paginated list of events associated with the host subject. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    on_Company?: CompanyGenqlSelection
    on_CompanyLocation?: CompanyLocationGenqlSelection
    on_Customer?: CustomerGenqlSelection
    on_DiscountAutomaticBxgy?: DiscountAutomaticBxgyGenqlSelection
    on_DiscountAutomaticNode?: DiscountAutomaticNodeGenqlSelection
    on_DiscountCodeNode?: DiscountCodeNodeGenqlSelection
    on_DiscountNode?: DiscountNodeGenqlSelection
    on_DraftOrder?: DraftOrderGenqlSelection
    on_Order?: OrderGenqlSelection
    on_PriceRule?: PriceRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Localization extensions associated with the specified resource. For example, the tax id for government invoice.
 * 
 */
export interface HasLocalizationExtensionsGenqlSelection{
    /** List of localization extensions for the resource. */
    localizationExtensions?: (LocalizationExtensionConnectionGenqlSelection & { __args?: {
    /** The country codes of the extensions. */
    countryCodes?: (CountryCode[] | null), 
    /** The purpose of the extensions. */
    purposes?: (LocalizationExtensionPurpose[] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    on_DraftOrder?: DraftOrderGenqlSelection
    on_Order?: OrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Resources that metafield definitions can be applied to. */
export interface HasMetafieldDefinitionsGenqlSelection{
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    on_Collection?: CollectionGenqlSelection
    on_Company?: CompanyGenqlSelection
    on_CompanyLocation?: CompanyLocationGenqlSelection
    on_Customer?: CustomerGenqlSelection
    on_DeliveryCustomization?: DeliveryCustomizationGenqlSelection
    on_DiscountAutomaticNode?: DiscountAutomaticNodeGenqlSelection
    on_DiscountCodeNode?: DiscountCodeNodeGenqlSelection
    on_DiscountNode?: DiscountNodeGenqlSelection
    on_Location?: LocationGenqlSelection
    on_Market?: MarketGenqlSelection
    on_Order?: OrderGenqlSelection
    on_PaymentCustomization?: PaymentCustomizationGenqlSelection
    on_Product?: ProductGenqlSelection
    on_ProductVariant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents information about the metafields associated to the specified resource. */
export interface HasMetafieldsGenqlSelection{
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    on_AppInstallation?: AppInstallationGenqlSelection
    on_CartTransform?: CartTransformGenqlSelection
    on_Collection?: CollectionGenqlSelection
    on_Company?: CompanyGenqlSelection
    on_CompanyLocation?: CompanyLocationGenqlSelection
    on_Customer?: CustomerGenqlSelection
    on_CustomerSegmentMember?: CustomerSegmentMemberGenqlSelection
    on_DeliveryCustomization?: DeliveryCustomizationGenqlSelection
    on_DiscountAutomaticNode?: DiscountAutomaticNodeGenqlSelection
    on_DiscountCodeNode?: DiscountCodeNodeGenqlSelection
    on_DiscountNode?: DiscountNodeGenqlSelection
    on_DraftOrder?: DraftOrderGenqlSelection
    on_Image?: ImageGenqlSelection
    on_Location?: LocationGenqlSelection
    on_Market?: MarketGenqlSelection
    on_MediaImage?: MediaImageGenqlSelection
    on_Order?: OrderGenqlSelection
    on_PaymentCustomization?: PaymentCustomizationGenqlSelection
    on_Product?: ProductGenqlSelection
    on_ProductVariant?: ProductVariantGenqlSelection
    on_Shop?: ShopGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Published translations associated with the resource. */
export interface HasPublishedTranslationsGenqlSelection{
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    on_Collection?: CollectionGenqlSelection
    on_Link?: LinkGenqlSelection
    on_OnlineStoreArticle?: OnlineStoreArticleGenqlSelection
    on_OnlineStoreBlog?: OnlineStoreBlogGenqlSelection
    on_OnlineStorePage?: OnlineStorePageGenqlSelection
    on_Product?: ProductGenqlSelection
    on_ProductOption?: ProductOptionGenqlSelection
    on_ProductVariant?: ProductVariantGenqlSelection
    on_SellingPlan?: SellingPlanGenqlSelection
    on_SellingPlanGroup?: SellingPlanGroupGenqlSelection
    on_Shop?: ShopGenqlSelection
    on_ShopPolicy?: ShopPolicyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an image resource. */
export interface ImageGenqlSelection{
    /** A word or phrase to share the nature or contents of an image. */
    altText?: boolean | number
    /** The original height of the image in pixels. Returns `null` if the image is not hosted by Shopify. */
    height?: boolean | number
    /** A unique ID for the image. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `url` instead.
     * The location of the original image as a URL.
     * 
     * If there are any existing transformations in the original source URL, they will remain and not be stripped.
     * 
     */
    originalSrc?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `url` instead.
     * The location of the image as a URL.
     */
    src?: boolean | number
    /**
     * @deprecated Use `url(transform:)` instead
     * The location of the transformed image as a URL.
     * 
     * All transformation arguments are considered "best-effort". If they can be applied to an image, they will be.
     * Otherwise any transformations which an image type does not support will be ignored.
     * 
     */
    transformedSrc?: { __args: {
    /** Image width in pixels between 1 and 5760. */
    maxWidth?: (Scalars['Int'] | null), 
    /** Image height in pixels between 1 and 5760. */
    maxHeight?: (Scalars['Int'] | null), 
    /** Crops the image according to the specified region. */
    crop?: (CropRegion | null), 
    /** Image size multiplier for high-resolution retina displays. Must be between 1 and 3. */
    scale?: (Scalars['Int'] | null), 
    /** Best effort conversion of image into content type (SVG -> PNG, Anything -> JPG, Anything -> WEBP are supported). */
    preferredContentType?: (ImageContentType | null)} } | boolean | number
    /**
     * The location of the image as a URL.
     * 
     * If no transform options are specified, then the original image will be preserved including any pre-applied transforms.
     * 
     * All transformation options are considered "best-effort". Any transformation that the original image type doesn't support will be ignored.
     * 
     * If you need multiple variations of the same image, then you can use [GraphQL aliases](https://graphql.org/learn/queries/#aliases).
     * 
     */
    url?: { __args: {
    /** A set of options to transform the original image. */
    transform?: (ImageTransformInput | null)} } | boolean | number
    /** The original width of the image in pixels. Returns `null` if the image is not hosted by Shopify. */
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Images.
 * 
 */
export interface ImageConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ImageEdgeGenqlSelection
    /** A list of the nodes contained in ImageEdge. */
    nodes?: ImageGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Image and a cursor during pagination.
 * 
 */
export interface ImageEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ImageEdge. */
    node?: ImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for an image. */
export interface ImageInput {
/** A globally-unique ID. */
id?: (Scalars['ID'] | null),
/** A word or phrase to share the nature or contents of an image. */
altText?: (Scalars['String'] | null),
/** The URL of the image. May be a staged upload URL. */
src?: (Scalars['String'] | null)}


/**
 * The available options for transforming an image.
 * 
 * All transformation options are considered best effort. Any transformation that the original image type doesn't support will be ignored.
 * 
 */
export interface ImageTransformInput {
/**
 * The region of the image to remain after cropping.
 * Must be used in conjunction with the `maxWidth` and/or `maxHeight` fields, where the `maxWidth` and `maxHeight` aren't equal.
 * The `crop` argument should coincide with the smaller value. A smaller `maxWidth` indicates a `LEFT` or `RIGHT` crop, while
 * a smaller `maxHeight` indicates a `TOP` or `BOTTOM` crop. For example, `{ maxWidth: 5, maxHeight: 10, crop: LEFT }` will result
 * in an image with a width of 5 and height of 10, where the right side of the image is removed.
 * 
 */
crop?: (CropRegion | null),
/**
 * Image width in pixels between 1 and 5760.
 * 
 */
maxWidth?: (Scalars['Int'] | null),
/**
 * Image height in pixels between 1 and 5760.
 * 
 */
maxHeight?: (Scalars['Int'] | null),
/**
 * Image size multiplier for high-resolution retina displays. Must be within 1..3.
 * 
 */
scale?: (Scalars['Int'] | null),
/**
 * Convert the source image into the preferred content type.
 * Supported conversions: `.svg` to `.png`, any file type to `.jpg`, and any file type to `.webp`.
 * 
 */
preferredContentType?: (ImageContentType | null)}


/**
 * A parameter to upload an image.
 * 
 * Deprecated in favor of
 * [StagedUploadParameter](https://shopify.dev/api/admin-graphql/latest/objects/StagedUploadParameter),
 * which is used in
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget)
 * and returned by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface ImageUploadParameterGenqlSelection{
    /** The parameter name. */
    name?: boolean | number
    /** The parameter value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the incoming line item. */
export interface IncomingRequestLineItemInput {
/** The ID of the rejected line item. */
fulfillmentOrderLineItemId: Scalars['ID'],
/** The rejection message of the line item. */
message?: (Scalars['String'] | null)}


/** Return type for `inventoryActivate` mutation. */
export interface InventoryActivatePayloadGenqlSelection{
    /** The inventory level that was activated. */
    inventoryLevel?: InventoryLevelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for items and their adjustments. */
export interface InventoryAdjustItemInput {
/** ID of the inventory item to adjust. */
inventoryItemId: Scalars['ID'],
/** The change applied to the `available` quantity of the item at the location. */
availableDelta: Scalars['Int']}


/** The input fields required to adjust inventory quantities. */
export interface InventoryAdjustQuantitiesInput {
/** The reason for the quantity changes. */
reason: Scalars['String'],
/** The quantity name to be adjusted. */
name: Scalars['String'],
/** The reference document URI for the changes. Used to denote what is causing the change. */
referenceDocumentUri?: (Scalars['String'] | null),
/** The quantity changes of items at locations to be made. */
changes: InventoryChangeInput[]}


/** Return type for `inventoryAdjustQuantities` mutation. */
export interface InventoryAdjustQuantitiesPayloadGenqlSelection{
    /** The group of changes made by the operation. */
    inventoryAdjustmentGroup?: InventoryAdjustmentGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: InventoryAdjustQuantitiesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `InventoryAdjustQuantities`. */
export interface InventoryAdjustQuantitiesUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to adjust the inventory quantity. */
export interface InventoryAdjustQuantityInput {
/** ID of the inventory level to adjust. */
inventoryLevelId: Scalars['ID'],
/** The change applied to the `available` quantity of the item at the location. */
availableDelta: Scalars['Int']}


/** Return type for `inventoryAdjustQuantity` mutation. */
export interface InventoryAdjustQuantityPayloadGenqlSelection{
    /** Represents the updated inventory quantity of an inventory item at a specific location. */
    inventoryLevel?: InventoryLevelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a group of adjustments made as part of the same operation.
 * 
 */
export interface InventoryAdjustmentGroupGenqlSelection{
    /** The app that triggered the inventory event, if one exists. */
    app?: AppGenqlSelection
    /** The set of inventory quantity changes that occurred in the inventory event. */
    changes?: (InventoryChangeGenqlSelection & { __args?: {
    /** The IDs of the inventory items to filter changes by. */
    inventoryItemIds?: (Scalars['ID'][] | null), 
    /** The IDs of the locations to filter changes by. */
    locationIds?: (Scalars['ID'][] | null), 
    /** The names of the requested inventory quantities. */
    quantityNames?: (Scalars['String'][] | null)} })
    /** The date and time the inventory adjustment group was created. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The reason for the group of adjustments. */
    reason?: boolean | number
    /** The reference document URI for the changes. Denotes what is causing the change. */
    referenceDocumentUri?: boolean | number
    /** The staff member associated with the inventory event. */
    staffMember?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `inventoryBulkAdjustQuantityAtLocation` mutation. */
export interface InventoryBulkAdjustQuantityAtLocationPayloadGenqlSelection{
    /** Represents the updated inventory quantities of an inventory item at the location. */
    inventoryLevels?: InventoryLevelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to specify whether the inventory item should be activated or not at the specified location.
 * 
 */
export interface InventoryBulkToggleActivationInput {
/** The ID of the location to modify the inventory item's stocked status. */
locationId: Scalars['ID'],
/** Whether the inventory item can be stocked at the specified location. To deactivate, set the value to false which removes an inventory item's quantities from that location, and turns off inventory at that location. */
activate: Scalars['Boolean']}


/** Return type for `inventoryBulkToggleActivation` mutation. */
export interface InventoryBulkToggleActivationPayloadGenqlSelection{
    /** The inventory item that was updated. */
    inventoryItem?: InventoryItemGenqlSelection
    /** The activated inventory levels. */
    inventoryLevels?: InventoryLevelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: InventoryBulkToggleActivationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurred while setting the activation status of an inventory item. */
export interface InventoryBulkToggleActivationUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a change in an inventory quantity of an inventory item at a location.
 * 
 */
export interface InventoryChangeGenqlSelection{
    /** The amount by which the inventory quantity was changed. */
    delta?: boolean | number
    /** The inventory item associated with this inventory change. */
    item?: InventoryItemGenqlSelection
    /** The ledger document URI for the change. Denotes who the change is applied to. */
    ledgerDocumentUri?: boolean | number
    /** The location associated with this inventory change. */
    location?: LocationGenqlSelection
    /** The name of the inventory quantity that was changed. */
    name?: boolean | number
    /** The quantity of named inventory after the change. */
    quantityAfterChange?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the change to be made to an inventory item at a location.
 * 
 */
export interface InventoryChangeInput {
/** The amount by which the inventory quantity will be changed. */
delta: Scalars['Int'],
/** Specifies the inventory item to which the change will be applied. */
inventoryItemId: Scalars['ID'],
/** Specifies the location at which the change will be applied. */
locationId: Scalars['ID'],
/** The ledger document URI to which the quantity change is being applied. Not allowed for 'available' and required for other quantity names. */
ledgerDocumentUri?: (Scalars['String'] | null)}


/** Return type for `inventoryDeactivate` mutation. */
export interface InventoryDeactivatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the goods available to be shipped to a customer.
 * It holds essential information about the goods, including SKU and whether it is tracked.
 * 
 */
export interface InventoryItemGenqlSelection{
    /** The ISO 3166-1 alpha-2 country code of where the item originated from. */
    countryCodeOfOrigin?: boolean | number
    /** A list of country specific harmonized system codes. */
    countryHarmonizedSystemCodes?: (CountryHarmonizedSystemCodeConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The date and time when the inventory item was created. */
    createdAt?: boolean | number
    /** The number of inventory items that share the same SKU with this item. */
    duplicateSkuCount?: boolean | number
    /** The harmonized system code of the item. */
    harmonizedSystemCode?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The URL that points to the inventory history for the item. */
    inventoryHistoryUrl?: boolean | number
    /** The inventory item's quantities at the specified location. */
    inventoryLevel?: (InventoryLevelGenqlSelection & { __args: {
    /** ID of the location for which the inventory level is requested. */
    locationId: Scalars['ID']} })
    /** A list of the inventory item's quantities for each location that the inventory item can be stocked at. */
    inventoryLevels?: (InventoryLevelConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `inventory_group_id`
     *  - `inventory_item_id`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The number of locations where this inventory item is stocked. */
    locationsCount?: boolean | number
    /** The ISO 3166-2 alpha-2 province code of where the item originated from. */
    provinceCodeOfOrigin?: boolean | number
    /** Whether the inventory item requires shipping. */
    requiresShipping?: boolean | number
    /** Inventory item SKU. Case-sensitive string. */
    sku?: boolean | number
    /** Whether inventory levels are tracked for the item. */
    tracked?: boolean | number
    /** Whether the value of the `tracked` field for the inventory item can be changed. */
    trackedEditable?: EditablePropertyGenqlSelection
    /** Unit cost associated with the inventory item. Note: the user must have "View product costs" permission granted in order to access this field once product granular permissions are enabled. */
    unitCost?: MoneyV2GenqlSelection
    /** The date and time when the inventory item was updated. */
    updatedAt?: boolean | number
    /** The variant that owns this inventory item. */
    variant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple InventoryItems.
 * 
 */
export interface InventoryItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: InventoryItemEdgeGenqlSelection
    /** A list of the nodes contained in InventoryItemEdge. */
    nodes?: InventoryItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one InventoryItem and a cursor during pagination.
 * 
 */
export interface InventoryItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of InventoryItemEdge. */
    node?: InventoryItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for an inventory item. */
export interface InventoryItemInput {
/** Unit cost associated with the inventory item, the currency is the shop's default currency. */
cost?: (Scalars['Decimal'] | null),
/** Whether the inventory item is tracked. */
tracked?: (Scalars['Boolean'] | null)}


/** The input fields for an inventory item. */
export interface InventoryItemUpdateInput {
/** Unit cost associated with the inventory item, the currency is the shop's default currency. */
cost?: (Scalars['Decimal'] | null),
/** Whether the inventory item is tracked. The value must be true to adjust the item's inventory levels. */
tracked?: (Scalars['Boolean'] | null),
/** The ISO 3166-1 alpha-2 country code of where the item originated from. */
countryCodeOfOrigin?: (CountryCode | null),
/** The ISO 3166-2 alpha-2 province/state code of where the item originated from. */
provinceCodeOfOrigin?: (Scalars['String'] | null),
/** The harmonized system code of the inventory item. This must be a number between 6 and 13 digits. */
harmonizedSystemCode?: (Scalars['String'] | null),
/** List of country-specific harmonized system codes. */
countryHarmonizedSystemCodes?: (CountryHarmonizedSystemCodeInput[] | null)}


/** Return type for `inventoryItemUpdate` mutation. */
export interface InventoryItemUpdatePayloadGenqlSelection{
    /** The inventory item that was updated. */
    inventoryItem?: InventoryItemGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The quantities of an inventory item that are related to a specific location.
 * 
 */
export interface InventoryLevelGenqlSelection{
    /**
     * @deprecated Use `quantities` instead.
     * The quantity of inventory items that are available at the inventory level's associated location.
     */
    available?: boolean | number
    /** Whether the inventory items associated with the inventory level can be deactivated. */
    canDeactivate?: boolean | number
    /** The date and time when the inventory level was created. */
    createdAt?: boolean | number
    /** Describes either the impact of deactivating the inventory level, or why the inventory level can't be deactivated. */
    deactivationAlert?: boolean | number
    /**
     * @deprecated Use `deactivationAlert` instead.
     * Describes, in HTML with embedded URLs, either the impact of deactivating the inventory level or why the inventory level can't be deactivated.
     */
    deactivationAlertHtml?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * @deprecated Use `quantities` instead.
     * The quantity of inventory items that are going to the inventory level's associated location.
     */
    incoming?: boolean | number
    /** Inventory item associated with the inventory level. */
    item?: InventoryItemGenqlSelection
    /** The location associated with the inventory level. */
    location?: LocationGenqlSelection
    /** Quantities for the requested names. */
    quantities?: (InventoryQuantityGenqlSelection & { __args: {
    /** The names of the requested inventory quantities. */
    names: Scalars['String'][]} })
    /** The date and time when the inventory level was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple InventoryLevels.
 * 
 */
export interface InventoryLevelConnectionGenqlSelection{
    /** A list of edges. */
    edges?: InventoryLevelEdgeGenqlSelection
    /** A list of the nodes contained in InventoryLevelEdge. */
    nodes?: InventoryLevelGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one InventoryLevel and a cursor during pagination.
 * 
 */
export interface InventoryLevelEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of InventoryLevelEdge. */
    node?: InventoryLevelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for an inventory level. */
export interface InventoryLevelInput {
/** The available quantity of an inventory item at a location. */
availableQuantity: Scalars['Int'],
/** The ID of a location. */
locationId: Scalars['ID']}


/** The input fields required to move inventory quantities. */
export interface InventoryMoveQuantitiesInput {
/** The reason for the quantity changes. */
reason: Scalars['String'],
/** The reference document URI for the changes. Used to denote what is causing the change. */
referenceDocumentUri: Scalars['String'],
/** The quantity changes of items at locations to be made. */
changes: InventoryMoveQuantityChange[]}


/** Return type for `inventoryMoveQuantities` mutation. */
export interface InventoryMoveQuantitiesPayloadGenqlSelection{
    /** The group of changes made by the operation. */
    inventoryAdjustmentGroup?: InventoryAdjustmentGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: InventoryMoveQuantitiesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `InventoryMoveQuantities`. */
export interface InventoryMoveQuantitiesUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the change to be made to an inventory item at a location.
 * The change can either involve the same quantity name between different locations,
 * or involve different quantity names between the same location.
 * 
 */
export interface InventoryMoveQuantityChange {
/** Specifies the inventory item to which the change will be applied. */
inventoryItemId: Scalars['ID'],
/** The amount by which the inventory quantity will be changed. */
quantity: Scalars['Int'],
/** The location, quantity name, and ledger document from where the move will be made. */
from: InventoryMoveQuantityTerminalInput,
/** The location, quantity name, and ledger document to where the move will be made. */
to: InventoryMoveQuantityTerminalInput}


/**
 * The input fields representing the change to be made to an inventory item at a location.
 * 
 */
export interface InventoryMoveQuantityTerminalInput {
/** Specifies the location at which the change will be applied. */
locationId: Scalars['ID'],
/** The quantity name to be moved. */
name: Scalars['String'],
/** The ledger document URI for the quantity move. Not allowed for 'available' and required for other quantity names. */
ledgerDocumentUri?: (Scalars['String'] | null)}


/** General inventory properties for the shop. */
export interface InventoryPropertiesGenqlSelection{
    /** All the quantity names. */
    quantityNames?: InventoryQuantityNameGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a quantity of an inventory item at a specific location, for a specific name.
 * 
 */
export interface InventoryQuantityGenqlSelection{
    /** The name that identifies the inventory quantity. */
    name?: boolean | number
    /** The quantity for the quantity name. */
    quantity?: boolean | number
    /** When the quantity was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Details about an individual quantity name. */
export interface InventoryQuantityNameGenqlSelection{
    /** List of quantity names that this quantity name belongs to. */
    belongsTo?: boolean | number
    /** List of quantity names that comprise this quantity name. */
    comprises?: boolean | number
    /** The i18n-friendly display name of the quantity. */
    displayName?: boolean | number
    /** Whether the quantity name has been used by the merchant. */
    isInUse?: boolean | number
    /** The quantity name as used by the API. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to set inventory on hand quantities. */
export interface InventorySetOnHandQuantitiesInput {
/** The reason for the quantity changes. */
reason: Scalars['String'],
/** The reference document URI for the changes. Used to denote what is causing the change. */
referenceDocumentUri?: (Scalars['String'] | null),
/** The value to which the on hand quantity will be set. */
setQuantities: InventorySetQuantityInput[]}


/** Return type for `inventorySetOnHandQuantities` mutation. */
export interface InventorySetOnHandQuantitiesPayloadGenqlSelection{
    /** The group of changes made by the operation. */
    inventoryAdjustmentGroup?: InventoryAdjustmentGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: InventorySetOnHandQuantitiesUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `InventorySetOnHandQuantities`. */
export interface InventorySetOnHandQuantitiesUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the quantity to be set for an inventory item at a location.
 * 
 */
export interface InventorySetQuantityInput {
/** Specifies the inventory item to which the quantity will be set. */
inventoryItemId: Scalars['ID'],
/** Specifies the location at which the quantity will be set. */
locationId: Scalars['ID'],
/** The quantity to which the inventory quantity will be set. */
quantity: Scalars['Int']}


/** A job corresponds to some long running task that the client should poll for status. */
export interface JobGenqlSelection{
    /** This indicates if the job is still queued or has been run. */
    done?: boolean | number
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id?: boolean | number
    /** This field will only resolve once the job is done. Can be used to ask for object(s) that have been changed by the job. */
    query?: QueryRootGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A job corresponds to some long running task that the client should poll for status. */
export interface JobResultGenqlSelection{
    /** This indicates if the job is still queued or has been run. */
    done?: boolean | number
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id?: boolean | number
    on_CustomerSegmentMembersQuery?: CustomerSegmentMembersQueryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Interoperability metadata for types that directly correspond to a REST Admin API resource.
 * For example, on the Product type, LegacyInteroperability returns metadata for the corresponding [Product object](https://shopify.dev/api/admin-graphql/latest/objects/product) in the REST Admin API.
 * 
 */
export interface LegacyInteroperabilityGenqlSelection{
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    on_Customer?: CustomerGenqlSelection
    on_DraftOrder?: DraftOrderGenqlSelection
    on_Fulfillment?: FulfillmentGenqlSelection
    on_InventoryItem?: InventoryItemGenqlSelection
    on_Location?: LocationGenqlSelection
    on_MarketingEvent?: MarketingEventGenqlSelection
    on_Metafield?: MetafieldGenqlSelection
    on_MetafieldStorefrontVisibility?: MetafieldStorefrontVisibilityGenqlSelection
    on_Order?: OrderGenqlSelection
    on_PriceRule?: PriceRuleGenqlSelection
    on_Product?: ProductGenqlSelection
    on_ProductVariant?: ProductVariantGenqlSelection
    on_Refund?: RefundGenqlSelection
    on_SavedSearch?: SavedSearchGenqlSelection
    on_ScriptTag?: ScriptTagGenqlSelection
    on_ShopifyPaymentsDispute?: ShopifyPaymentsDisputeGenqlSelection
    on_ShopifyPaymentsPayout?: ShopifyPaymentsPayoutGenqlSelection
    on_WebhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The total number of pending orders on a shop if less then a maximum, or that maximum.
 * The atMax field indicates when this maximum has been reached.
 * 
 */
export interface LimitedPendingOrderCountGenqlSelection{
    /** This is set when the number of pending orders has reached the maximum. */
    atMax?: boolean | number
    /**
     * The number of pendings orders on the shop.
     * Limited to a maximum of 10000.
     * 
     */
    count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents individual products and quantities purchased in the associated order. */
export interface LineItemGenqlSelection{
    /**
     * @deprecated Use `restockable` instead.
     * Whether the line item can be restocked.
     */
    canRestock?: boolean | number
    /** The subscription contract associated with this line item. */
    contract?: SubscriptionContractGenqlSelection
    /** The line item's quantity, minus the removed quantity. */
    currentQuantity?: boolean | number
    /** A list of attributes that represent custom features or special requests. */
    customAttributes?: AttributeGenqlSelection
    /** The discounts that have been allocated onto the line item by discount applications, not including order edits and refunds. */
    discountAllocations?: DiscountAllocationGenqlSelection
    /**
     * @deprecated Use `discountedTotalSet` instead.
     * The total line price after discounts are applied, in shop currency.
     */
    discountedTotal?: boolean | number
    /** The total line price after discounts are applied, in shop and presentment currencies. */
    discountedTotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `discountedUnitPriceSet` instead.
     * The approximate split price of a line item unit, in shop currency. This value doesn't include discounts applied to the entire order.
     */
    discountedUnitPrice?: boolean | number
    /** The approximate split price of a line item unit, in shop and presentment currencies. This value doesn't include discounts applied to the entire order. */
    discountedUnitPriceSet?: MoneyBagGenqlSelection
    /** The duties associated with the line item. */
    duties?: DutyGenqlSelection
    /**
     * @deprecated Use [FulfillmentOrderLineItem#remainingQuantity](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderLineItem#field-fulfillmentorderlineitem-remainingquantity) instead.
     * The total number of units to fulfill.
     */
    fulfillableQuantity?: boolean | number
    /**
     * @deprecated  The [relationship between a product variant and a fulfillment service was changed in the `2022-07` API version](/changelog/fulfillment-service-sku-sharing). A [ProductVariant](/api/admin-graphql/latest/objects/ProductVariant) can be stocked by multiple fulfillment services. As a result, we recommend that you use the [inventoryItem field](/api/admin-graphql/latest/objects/ProductVariant#field-productvariant-inventoryitem) if you need to determine where a product variant is stocked.  If you need to determine whether a product is a gift card, then you should continue to use this field until an alternative is available.  Altering the locations which stock a product variant won't change the value of this field for existing orders.  Learn about [managing inventory quantities and states](/apps/fulfillment/inventory-management-apps/quantities-states). 
     * The fulfillment service that stocks the product variant belonging to a line item.
     * 
     * This is a third-party fulfillment service in the following scenarios:
     * 
     * **Scenario 1**
     * - The product variant is stocked by a single fulfillment service.
     * - The [FulfillmentService](/api/admin-graphql/latest/objects/FulfillmentService) is a third-party fulfillment service. Third-party fulfillment services don't have a handle with the value `manual`.
     * 
     * **Scenario 2**
     * - Multiple fulfillment services stock the product variant.
     * - The last time that the line item was unfulfilled, it was awaiting fulfillment by a third-party fulfillment service. Third-party fulfillment services don't have a handle with the value `manual`.
     * 
     * If none of the above conditions are met, then the fulfillment service has the `manual` handle.
     * 
     */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /**
     * @deprecated Use [FulfillmentOrderLineItem#remainingQuantity](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrderLineItem#field-fulfillmentorderlineitem-remainingquantity) instead
     * The line item's fulfillment status. Returns 'fulfilled' if fulfillableQuantity >= quantity,
     * 'partial' if  fulfillableQuantity > 0, and 'unfulfilled' otherwise.
     * 
     */
    fulfillmentStatus?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image associated to the line item's variant. */
    image?: ImageGenqlSelection
    /** Whether the line item can be edited or not. */
    merchantEditable?: boolean | number
    /** The title of the product, optionally appended with the title of the variant (if applicable). */
    name?: boolean | number
    /** The total number of units that can't be fulfilled. For example, if items have been refunded, or the item is not something that can be fulfilled, like a tip. Please see the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object for more fulfillment details. */
    nonFulfillableQuantity?: boolean | number
    /**
     * @deprecated Use `originalTotalSet` instead.
     * The total price without discounts applied, in shop currency.
     * This value is based on the unit price of the variant x quantity.
     * 
     */
    originalTotal?: boolean | number
    /** The total price in shop and presentment currencies, without discounts applied. This value is based on the unit price of the variant x quantity. */
    originalTotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `originalUnitPriceSet` instead.
     * The variant unit price without discounts applied, in shop currency.
     */
    originalUnitPrice?: boolean | number
    /** The variant unit price without discounts applied, in shop and presentment currencies. */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /** The Product object associated with this line item's variant. */
    product?: ProductGenqlSelection
    /** The number of variant units ordered. */
    quantity?: boolean | number
    /** The line item's quantity, minus the removed quantity. */
    refundableQuantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /** Whether the line item can be restocked. */
    restockable?: boolean | number
    /** The selling plan details associated with the line item. */
    sellingPlan?: LineItemSellingPlanGenqlSelection
    /** The variant SKU number. */
    sku?: boolean | number
    /** Staff attributed to the line item. */
    staffMember?: StaffMemberGenqlSelection
    /** The taxes charged for this line item. */
    taxLines?: (TaxLineGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /** Whether the variant is taxable. */
    taxable?: boolean | number
    /** The title of the product at time of order creation. */
    title?: boolean | number
    /**
     * @deprecated Use `totalDiscountSet` instead.
     * The total amount of the discount allocated to the line item in the shop currency.
     */
    totalDiscount?: boolean | number
    /** The total amount of the discount that's allocated to the line item, in the shop and presentment currencies. This field must be explicitly set using draft orders, Shopify scripts, or the API. */
    totalDiscountSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `unfulfilledDiscountedTotalSet` instead.
     * The total discounted value of unfulfilled units, in shop currency.
     */
    unfulfilledDiscountedTotal?: boolean | number
    /** The total discounted value of unfulfilled units, in shop and presentment currencies. */
    unfulfilledDiscountedTotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `unfulfilledOriginalTotalSet` instead.
     * The total price, without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop currency.
     */
    unfulfilledOriginalTotal?: boolean | number
    /** The total price, without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop and presentment currencies. */
    unfulfilledOriginalTotalSet?: MoneyBagGenqlSelection
    /** The number of units not yet fulfilled. */
    unfulfilledQuantity?: boolean | number
    /** The Variant object associated with this line item. */
    variant?: ProductVariantGenqlSelection
    /** The title of the variant at time of order creation. */
    variantTitle?: boolean | number
    /** The name of the vendor who made the variant. */
    vendor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple LineItems.
 * 
 */
export interface LineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: LineItemEdgeGenqlSelection
    /** A list of the nodes contained in LineItemEdge. */
    nodes?: LineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one LineItem and a cursor during pagination.
 * 
 */
export interface LineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of LineItemEdge. */
    node?: LineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a single line item on an order. */
export interface LineItemMutableGenqlSelection{
    /**
     * @deprecated Use `restockable` instead.
     * Whether the line item can be restocked.
     */
    canRestock?: boolean | number
    /** A list of attributes that represent custom features or special requests. */
    customAttributes?: AttributeGenqlSelection
    /** The discounts that have been allocated onto the line item by discount applications. */
    discountAllocations?: DiscountAllocationGenqlSelection
    /**
     * @deprecated Use `discountedTotalSet` instead.
     * The total line price after discounts are applied, in shop currency.
     */
    discountedTotal?: boolean | number
    /** The total line price after discounts are applied, in shop and presentment currencies. */
    discountedTotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `discountedUnitPriceSet` instead.
     * The approximate split price of a line item unit, in shop currency. This value doesn't include discounts applied to the entire order.
     */
    discountedUnitPrice?: boolean | number
    /** The approximate split price of a line item unit, in shop and presentment currencies. This value doesn't include discounts applied to the entire order. */
    discountedUnitPriceSet?: MoneyBagGenqlSelection
    /** The total number of units to fulfill. */
    fulfillableQuantity?: boolean | number
    /**
     * The service provider that fulfills the line item.
     * 
     * Deleted fulfillment services will return null.
     * 
     */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /**
     * The line item's fulfillment status. Returns 'fulfilled' if fulfillableQuantity >= quantity,
     * 'partial' if  fulfillableQuantity > 0, and 'unfulfilled' otherwise.
     * 
     */
    fulfillmentStatus?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image associated to the line item's variant. */
    image?: ImageGenqlSelection
    /** Whether the line item can be edited or not. */
    merchantEditable?: boolean | number
    /** The name of the product. */
    name?: boolean | number
    /** The total number of units that can't be fulfilled. For example, if items have been refunded, or the item is not something that can be fulfilled, like a tip. */
    nonFulfillableQuantity?: boolean | number
    /**
     * @deprecated Use `originalTotalSet` instead.
     * The total price without any discounts applied, in shop currency. ""This value is based on the unit price of the variant x quantity.
     * 
     */
    originalTotal?: boolean | number
    /** The total price in shop and presentment currencies, without discounts applied. This value is based on the unit price of the variant x quantity. */
    originalTotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `originalUnitPriceSet` instead.
     * The variant unit price without discounts applied, in shop currency.
     */
    originalUnitPrice?: boolean | number
    /** The variant unit price without discounts applied, in shop and presentment currencies. */
    originalUnitPriceSet?: MoneyBagGenqlSelection
    /** The Product object associated with this line item's variant. */
    product?: ProductGenqlSelection
    /** The number of variant units ordered. */
    quantity?: boolean | number
    /** The line item's quantity, minus the removed quantity. */
    refundableQuantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /** Whether the line item can be restocked. */
    restockable?: boolean | number
    /** The variant SKU number. */
    sku?: boolean | number
    /** Staff attributed to the line item. */
    staffMember?: StaffMemberGenqlSelection
    /** The TaxLine object connected to this line item. */
    taxLines?: (TaxLineGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /** Whether the variant is taxable. */
    taxable?: boolean | number
    /** The title of the product. */
    title?: boolean | number
    /**
     * @deprecated Use `totalDiscountSet` instead.
     * The total amount of the discount allocated to the line item in the shop currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discountAllocations`, which provides the same information.
     */
    totalDiscount?: boolean | number
    /** The total amount of the discount allocated to the line item in the presentment currency. This field must be explicitly set using draft orders, Shopify scripts, or the API. Instead of using this field, Shopify recommends using `discountAllocations`, which provides the same information. */
    totalDiscountSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `unfulfilledDiscountedTotalSet` instead.
     * The total discounted value of unfulfilled units, in shop currency.
     */
    unfulfilledDiscountedTotal?: boolean | number
    /** The total discounted value of unfulfilled units, in shop and presentment currencies. */
    unfulfilledDiscountedTotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `unfulfilledOriginalTotalSet` instead.
     * The total price without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop currency.
     */
    unfulfilledOriginalTotal?: boolean | number
    /** The total price without any discounts applied. This value is based on the unit price of the variant x quantity of all unfulfilled units, in shop and presentment currencies. */
    unfulfilledOriginalTotalSet?: MoneyBagGenqlSelection
    /** The number of units not yet fulfilled. */
    unfulfilledQuantity?: boolean | number
    /** The Variant object associated with this line item. */
    variant?: ProductVariantGenqlSelection
    /** The name of the variant. */
    variantTitle?: boolean | number
    /** The name of the vendor who made the variant. */
    vendor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple LineItemMutables.
 * 
 */
export interface LineItemMutableConnectionGenqlSelection{
    /** A list of edges. */
    edges?: LineItemMutableEdgeGenqlSelection
    /** A list of the nodes contained in LineItemMutableEdge. */
    nodes?: LineItemMutableGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one LineItemMutable and a cursor during pagination.
 * 
 */
export interface LineItemMutableEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of LineItemMutableEdge. */
    node?: LineItemMutableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the selling plan for a line item. */
export interface LineItemSellingPlanGenqlSelection{
    /** The name of the selling plan for display purposes. */
    name?: boolean | number
    /** The ID of the selling plan associated with the line item. */
    sellingPlanId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A link to direct users to. */
export interface LinkGenqlSelection{
    /** A context-sensitive label for the link. */
    label?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /** The URL that the link visits. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A locale. */
export interface LocaleGenqlSelection{
    /** Locale ISO code. */
    isoCode?: boolean | number
    /** Human-readable locale name. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the value captured by a localization extension. Localization extensions are additional fields required by certain countries on international orders. For example, some countries require additional fields for customs information or tax identification numbers. */
export interface LocalizationExtensionGenqlSelection{
    /** Country ISO 3166-1 alpha-2 code. */
    countryCode?: boolean | number
    /** The localized extension keys that are allowed. */
    key?: boolean | number
    /** The purpose of this localization extension. */
    purpose?: boolean | number
    /** The localized extension title. */
    title?: boolean | number
    /** The value of the field. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple LocalizationExtensions.
 * 
 */
export interface LocalizationExtensionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: LocalizationExtensionEdgeGenqlSelection
    /** A list of the nodes contained in LocalizationExtensionEdge. */
    nodes?: LocalizationExtensionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one LocalizationExtension and a cursor during pagination.
 * 
 */
export interface LocalizationExtensionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of LocalizationExtensionEdge. */
    node?: LocalizationExtensionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a LocalizationExtensionInput.
 * 
 */
export interface LocalizationExtensionInput {
/** The key for the localization extension. */
key: LocalizationExtensionKey,
/** The localization extension value. */
value: Scalars['String']}


/**
 * Represents the location where the physical good resides.
 * 
 */
export interface LocationGenqlSelection{
    /** Whether this location can be reactivated. */
    activatable?: boolean | number
    /** The address of this location. */
    address?: LocationAddressGenqlSelection
    /** Whether the location address has been verified. */
    addressVerified?: boolean | number
    /** Whether this location can be deactivated. */
    deactivatable?: boolean | number
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) that the location was deactivated at. For example, 3:30 pm on September 7, 2019 in the time zone of UTC (Universal Time Coordinated) is represented as `"2019-09-07T15:50:00Z`". */
    deactivatedAt?: boolean | number
    /** Whether this location can be deleted. */
    deletable?: boolean | number
    /** Name of the service provider that fulfills from this location. */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /** Whether this location can fulfill online orders. */
    fulfillsOnlineOrders?: boolean | number
    /** Whether this location has active inventory. */
    hasActiveInventory?: boolean | number
    /** Whether this location has orders that need to be fulfilled. */
    hasUnfulfilledOrders?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The quantities of an inventory item at this location. */
    inventoryLevel?: (InventoryLevelGenqlSelection & { __args: {
    /** The ID of the inventory item to obtain the inventory level for. */
    inventoryItemId: Scalars['ID']} })
    /** A list of the quantities of the inventory items that can be stocked at this location. */
    inventoryLevels?: (InventoryLevelConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `inventory_group_id`
     *  - `inventory_item_id`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Whether the location is active. */
    isActive?: boolean | number
    /**
     * @deprecated The concept of a primary location is deprecated, shipsInventory can be used to get a fallback location
     * Whether the location is your primary location for shipping inventory.
     */
    isPrimary?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** Local pickup settings for the location. */
    localPickupSettingsV2?: DeliveryLocalPickupSettingsGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The name of the location. */
    name?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Whether this location is used for calculating shipping rates. In multi-origin shipping mode, this flag is ignored. */
    shipsInventory?: boolean | number
    /** List of suggested addresses for this location (empty if none). */
    suggestedAddresses?: LocationSuggestedAddressGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `locationActivate` mutation. */
export interface LocationActivatePayloadGenqlSelection{
    /** The location that was activated. */
    location?: LocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    locationActivateUserErrors?: LocationActivateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs while activating a location. */
export interface LocationActivateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to use to specify the address while adding a location. */
export interface LocationAddAddressInput {
/** The first line of the address. */
address1?: (Scalars['String'] | null),
/** The second line of the address. */
address2?: (Scalars['String'] | null),
/** The name of the city, district, village, or town. */
city?: (Scalars['String'] | null),
/** The phone number of the location. */
phone?: (Scalars['String'] | null),
/** The ZIP code or postal code of the address. */
zip?: (Scalars['String'] | null),
/** The two-letter code of country for the address. */
countryCode: CountryCode,
/**
 * The code for the region of the address, such as the state, province, or district.
 * For example CA for California, United States.
 * 
 */
provinceCode?: (Scalars['String'] | null)}


/** The input fields to use to add a location. */
export interface LocationAddInput {
/** The name of the location. */
name: Scalars['String'],
/** The address of the location. */
address: LocationAddAddressInput,
/** Whether inventory at this location is available for sale online. */
fulfillsOnlineOrders?: (Scalars['Boolean'] | null),
/** Additional customizable information to associate with the location. */
metafields?: (MetafieldInput[] | null)}


/** Return type for `locationAdd` mutation. */
export interface LocationAddPayloadGenqlSelection{
    /** The location that was added. */
    location?: LocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: LocationAddUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs while adding a location. */
export interface LocationAddUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the address of a location.
 * 
 */
export interface LocationAddressGenqlSelection{
    /** The first line of the address for the location. */
    address1?: boolean | number
    /** The second line of the address for the location. */
    address2?: boolean | number
    /** The city of the location. */
    city?: boolean | number
    /** The country of the location. */
    country?: boolean | number
    /** The country code of the location. */
    countryCode?: boolean | number
    /** A formatted version of the address for the location. */
    formatted?: boolean | number
    /** The latitude coordinates of the location. */
    latitude?: boolean | number
    /** The longitude coordinates of the location. */
    longitude?: boolean | number
    /** The phone number of the location. */
    phone?: boolean | number
    /** The province of the location. */
    province?: boolean | number
    /**
     * The code for the province, state, or district of the address of the location.
     * 
     */
    provinceCode?: boolean | number
    /** The ZIP code of the location. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Locations.
 * 
 */
export interface LocationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: LocationEdgeGenqlSelection
    /** A list of the nodes contained in LocationEdge. */
    nodes?: LocationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `locationDeactivate` mutation. */
export interface LocationDeactivatePayloadGenqlSelection{
    /** The location that was deactivated. */
    location?: LocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    locationDeactivateUserErrors?: LocationDeactivateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The possible errors that can be returned when executing the `locationDeactivate` mutation. */
export interface LocationDeactivateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `locationDelete` mutation. */
export interface LocationDeletePayloadGenqlSelection{
    /** The ID of the location that was deleted. */
    deletedLocationId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    locationDeleteUserErrors?: LocationDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs while deleting a location. */
export interface LocationDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Location and a cursor during pagination.
 * 
 */
export interface LocationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of LocationEdge. */
    node?: LocationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to use to edit the address of a location. */
export interface LocationEditAddressInput {
/** The first line of the address. */
address1?: (Scalars['String'] | null),
/** The second line of the address. */
address2?: (Scalars['String'] | null),
/** The name of the city, district, village, or town. */
city?: (Scalars['String'] | null),
/** The phone number of the location. */
phone?: (Scalars['String'] | null),
/** The ZIP code or postal code of the location. */
zip?: (Scalars['String'] | null),
/** The two-letter code of country for the address. */
countryCode?: (CountryCode | null),
/**
 * The code for the region of the address, such as the state, province, or district.
 * For example CA for California, United States.
 * 
 */
provinceCode?: (Scalars['String'] | null)}


/** The input fields to use to edit a location. */
export interface LocationEditInput {
/** The name of the location. */
name?: (Scalars['String'] | null),
/** The address of the location. */
address?: (LocationEditAddressInput | null),
/** Whether inventory at this location is available for sale online. */
fulfillsOnlineOrders?: (Scalars['Boolean'] | null),
/** Additional customizable information to associate with the location. */
metafields?: (MetafieldInput[] | null)}


/** Return type for `locationEdit` mutation. */
export interface LocationEditPayloadGenqlSelection{
    /** The location that was edited. */
    location?: LocationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: LocationEditUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs while editing a location. */
export interface LocationEditUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `locationLocalPickupDisable` mutation. */
export interface LocationLocalPickupDisablePayloadGenqlSelection{
    /** The ID of the location for which local pickup was disabled. */
    locationId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DeliveryLocationLocalPickupSettingsErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `locationLocalPickupEnable` mutation. */
export interface LocationLocalPickupEnablePayloadGenqlSelection{
    /** The local pickup settings that were enabled. */
    localPickupSettings?: DeliveryLocalPickupSettingsGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: DeliveryLocationLocalPickupSettingsErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a suggested address for a location.
 * 
 */
export interface LocationSuggestedAddressGenqlSelection{
    /** The first line of the suggested address. */
    address1?: boolean | number
    /** The second line of the suggested address. */
    address2?: boolean | number
    /** The city of the suggested address. */
    city?: boolean | number
    /** The country of the suggested address. */
    country?: boolean | number
    /** The country code of the suggested address. */
    countryCode?: boolean | number
    /** A formatted version of the suggested address. */
    formatted?: boolean | number
    /** The province of the suggested address. */
    province?: boolean | number
    /** The code for the province, state, or district of the suggested address. */
    provinceCode?: boolean | number
    /** The ZIP code of the suggested address. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a customer mailing address.
 * 
 * For example, a customer's default address and an order's billing address are both mailling addresses.
 * 
 */
export interface MailingAddressGenqlSelection{
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: boolean | number
    /**
     * The second line of the address. Typically the number of the apartment, suite, or unit.
     * 
     */
    address2?: boolean | number
    /**
     * The name of the city, district, village, or town.
     * 
     */
    city?: boolean | number
    /**
     * The name of the customer's company or organization.
     * 
     */
    company?: boolean | number
    /** Whether the address coordinates are valid. */
    coordinatesValidated?: boolean | number
    /**
     * The name of the country.
     * 
     */
    country?: boolean | number
    /**
     * @deprecated Use `countryCodeV2` instead.
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCode?: boolean | number
    /**
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCodeV2?: boolean | number
    /** The first name of the customer. */
    firstName?: boolean | number
    /** A formatted version of the address, customized by the provided arguments. */
    formatted?: { __args: {
    /** Whether to include the customer's name in the formatted address. */
    withName?: (Scalars['Boolean'] | null), 
    /** Whether to include the customer's company in the formatted address. */
    withCompany?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A comma-separated list of the values for city, province, and country. */
    formattedArea?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The last name of the customer. */
    lastName?: boolean | number
    /** The latitude coordinate of the customer address. */
    latitude?: boolean | number
    /** The longitude coordinate of the customer address. */
    longitude?: boolean | number
    /**
     * The full name of the customer, based on firstName and lastName.
     * 
     */
    name?: boolean | number
    /**
     * A unique phone number for the customer.
     * 
     * Formatted using E.164 standard. For example, _+16135551111_.
     * 
     */
    phone?: boolean | number
    /** The region of the address, such as the province, state, or district. */
    province?: boolean | number
    /**
     * The two-letter code for the region.
     * 
     * For example, ON.
     * 
     */
    provinceCode?: boolean | number
    /** The time zone of the address. */
    timeZone?: boolean | number
    /** The zip or postal code of the address. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MailingAddresses.
 * 
 */
export interface MailingAddressConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MailingAddressEdgeGenqlSelection
    /** A list of the nodes contained in MailingAddressEdge. */
    nodes?: MailingAddressGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MailingAddress and a cursor during pagination.
 * 
 */
export interface MailingAddressEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MailingAddressEdge. */
    node?: MailingAddressGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a mailing address. */
export interface MailingAddressInput {
/**
 * The first line of the address. Typically the street address or PO Box number.
 * 
 */
address1?: (Scalars['String'] | null),
/**
 * The second line of the address. Typically the number of the apartment, suite, or unit.
 * 
 */
address2?: (Scalars['String'] | null),
/**
 * The name of the city, district, village, or town.
 * 
 */
city?: (Scalars['String'] | null),
/**
 * The name of the customer's company or organization.
 * 
 */
company?: (Scalars['String'] | null),
/** The two-letter code for the country of the address. */
countryCode?: (CountryCode | null),
/** The first name of the customer. */
firstName?: (Scalars['String'] | null),
/** The last name of the customer. */
lastName?: (Scalars['String'] | null),
/**
 * A unique phone number for the customer.
 * 
 * Formatted using E.164 standard. For example, _+16135551111_.
 * 
 */
phone?: (Scalars['String'] | null),
/**
 * The code for the region of the address, such as the province, state, or district.
 * For example QC for Quebec, Canada.
 * 
 */
provinceCode?: (Scalars['String'] | null),
/** The zip or postal code of the address. */
zip?: (Scalars['String'] | null)}


/**
 * Manual discount applications capture the intentions of a discount that was manually created for an order.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface ManualDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod?: boolean | number
    /** The description of the discount application. */
    description?: boolean | number
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The title of the discount application. */
    title?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A market is a group of one or more regions that you want to target for international sales.
 * By creating a market, you can configure a distinct, localized shopping experience for
 * customers from a specific area of the world. For example, you can
 * [change currency](https://shopify.dev/api/admin-graphql/current/mutations/marketCurrencySettingsUpdate),
 * [configure international pricing](https://shopify.dev/apps/internationalization/product-price-lists),
 * or [add market-specific domains or subfolders](https://shopify.dev/api/admin-graphql/current/objects/MarketWebPresence).
 * 
 */
export interface MarketGenqlSelection{
    /** The catalogs that belong to the market. */
    catalogs?: (MarketCatalogConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The market’s currency settings. */
    currencySettings?: MarketCurrencySettingsGenqlSelection
    /**
     * Whether the market is enabled to receive visitors and sales. **Note**: Regions in inactive
     * markets cannot be selected on the storefront or in checkout.
     * 
     */
    enabled?: boolean | number
    /** A short, human-readable unique identifier for the market. This is changeable by the merchant. */
    handle?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The name of the market. Not shown to customers. */
    name?: boolean | number
    /**
     * The market’s price list, which specifies a percentage-based price adjustment as well as
     * fixed price overrides for specific variants.
     * 
     */
    priceList?: PriceListGenqlSelection
    /**
     * Whether the market is the shop’s primary market.
     * 
     */
    primary?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The regions that comprise the market. */
    regions?: (MarketRegionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The market’s web presence, which defines its SEO strategy. This can be a different domain,
     * subdomain, or subfolders of the primary domain. Each web presence comprises one or more
     * language variants. If a market doesn't have its own web presence, then the market is accessible on the
     * shop’s primary domain using [country
     * selectors](https://shopify.dev/themes/internationalization/multiple-currencies-languages#the-country-selector).
     * 
     */
    webPresence?: MarketWebPresenceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A list of products with publishing and pricing information associated with markets.
 * 
 */
export interface MarketCatalogGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The markets associated with the catalog. */
    markets?: (MarketConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Most recent catalog operations. */
    operations?: ResourceOperationGenqlSelection
    /** The price list associated with the catalog. */
    priceList?: PriceListGenqlSelection
    /** A group of products and collections that's published to a catalog. */
    publication?: PublicationGenqlSelection
    /** The status of the catalog. */
    status?: boolean | number
    /** The name of the catalog. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MarketCatalogs.
 * 
 */
export interface MarketCatalogConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MarketCatalogEdgeGenqlSelection
    /** A list of the nodes contained in MarketCatalogEdge. */
    nodes?: MarketCatalogGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MarketCatalog and a cursor during pagination.
 * 
 */
export interface MarketCatalogEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MarketCatalogEdge. */
    node?: MarketCatalogGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Markets.
 * 
 */
export interface MarketConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MarketEdgeGenqlSelection
    /** A list of the nodes contained in MarketEdge. */
    nodes?: MarketGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a market. */
export interface MarketCreateInput {
/**
 * The name of the market. Not shown to customers.
 * 
 */
name: Scalars['String'],
/**
 * A unique identifier for the market. For example `"ca"`.
 * If the handle isn't provided, then the handle is auto-generated based on the country or name.
 * 
 */
handle?: (Scalars['String'] | null),
/**
 * Whether the market is enabled to receive visitors and sales. If a
 * value isn't provided, then the market is enabled by default if all
 * included regions have shipping rates, and disabled if any regions don't
 * have shipping rates.
 * 
 * **Note**: Regions in inactive markets can't be selected on the
 * storefront or in checkout.
 * 
 */
enabled?: (Scalars['Boolean'] | null),
/**
 * The regions to be included in the market. Each region can only be included in one market at
 * a time.
 * 
 */
regions: MarketRegionCreateInput[]}


/** Return type for `marketCreate` mutation. */
export interface MarketCreatePayloadGenqlSelection{
    /** The market object. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A market's currency settings. */
export interface MarketCurrencySettingsGenqlSelection{
    /**
     * The currency which this market's prices are defined in, and the
     * currency which its customers must use if local currencies are disabled.
     * 
     */
    baseCurrency?: CurrencySettingGenqlSelection
    /**
     * Whether or not local currencies are enabled. If enabled, then prices will
     * be converted to give each customer the best experience based on their
     * region. If disabled, then all customers in this market will see prices
     * in the market's base currency.
     * 
     */
    localCurrencies?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to update the currency settings of a market. */
export interface MarketCurrencySettingsUpdateInput {
/**
 * The currency which this market’s prices are defined in, and the
 * currency which its customers must use if local currencies are disabled.
 * 
 */
baseCurrency?: (CurrencyCode | null),
/**
 * Whether or not local currencies are enabled. If enabled, then prices will
 * be converted to give each customer the best experience based on their
 * region. If disabled, then all customers in this market will see prices
 * in the market's base currency.
 * 
 */
localCurrencies?: (Scalars['Boolean'] | null)}


/** Return type for `marketCurrencySettingsUpdate` mutation. */
export interface MarketCurrencySettingsUpdatePayloadGenqlSelection{
    /** The market object. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketCurrencySettingsUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed market multi-currency operations. */
export interface MarketCurrencySettingsUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `marketDelete` mutation. */
export interface MarketDeletePayloadGenqlSelection{
    /** The ID of the deleted market. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Market and a cursor during pagination.
 * 
 */
export interface MarketEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MarketEdge. */
    node?: MarketGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The market localizable content of a resource's field. */
export interface MarketLocalizableContentGenqlSelection{
    /** The hash digest representation of the content value. */
    digest?: boolean | number
    /** The resource field that's being localized. */
    key?: boolean | number
    /** The content value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A resource that has market localizable fields. */
export interface MarketLocalizableResourceGenqlSelection{
    /** The market localizable content. */
    marketLocalizableContent?: MarketLocalizableContentGenqlSelection
    /** Market localizations for the market localizable content. */
    marketLocalizations?: (MarketLocalizationGenqlSelection & { __args: {
    /** Filters market localizations by market ID. */
    marketId: Scalars['ID']} })
    /** The GID of the resource. */
    resourceId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MarketLocalizableResources.
 * 
 */
export interface MarketLocalizableResourceConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MarketLocalizableResourceEdgeGenqlSelection
    /** A list of the nodes contained in MarketLocalizableResourceEdge. */
    nodes?: MarketLocalizableResourceGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MarketLocalizableResource and a cursor during pagination.
 * 
 */
export interface MarketLocalizableResourceEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MarketLocalizableResourceEdge. */
    node?: MarketLocalizableResourceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The market localization of a field within a resource, which is determined by the market ID. */
export interface MarketLocalizationGenqlSelection{
    /** A reference to the value being localized on the resource that this market localization belongs to. */
    key?: boolean | number
    /** The market that the localization is specific to. */
    market?: MarketGenqlSelection
    /** Whether the original content has changed since this market localization was updated. */
    outdated?: boolean | number
    /** The date and time when the market localization was updated. */
    updatedAt?: boolean | number
    /** The value of the market localization. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields and values for creating or updating a market localization. */
export interface MarketLocalizationRegisterInput {
/** The ID of the market that the localization is specific to. */
marketId: Scalars['ID'],
/** A reference to the value being localized on the resource that this market localization belongs to. */
key: Scalars['String'],
/** The value of the market localization. */
value: Scalars['String'],
/** A hash digest representation of the content being localized. */
marketLocalizableContentDigest: Scalars['String']}


/** Return type for `marketLocalizationsRegister` mutation. */
export interface MarketLocalizationsRegisterPayloadGenqlSelection{
    /** The market localizations that were created or updated. */
    marketLocalizations?: MarketLocalizationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: TranslationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `marketLocalizationsRemove` mutation. */
export interface MarketLocalizationsRemovePayloadGenqlSelection{
    /** The market localizations that were deleted. */
    marketLocalizations?: MarketLocalizationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: TranslationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A geographic region which comprises a market. */
export interface MarketRegionGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the region. */
    name?: boolean | number
    on_MarketRegionCountry?: MarketRegionCountryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MarketRegions.
 * 
 */
export interface MarketRegionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MarketRegionEdgeGenqlSelection
    /** A list of the nodes contained in MarketRegionEdge. */
    nodes?: MarketRegionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A country which comprises a market. */
export interface MarketRegionCountryGenqlSelection{
    /** The ISO code identifying the country. */
    code?: boolean | number
    /** The currency which this country uses given its market settings. */
    currency?: CurrencySettingGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the region. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating a market region with exactly one required option. */
export interface MarketRegionCreateInput {
/** A country code for the region. */
countryCode: CountryCode}


/** Return type for `marketRegionDelete` mutation. */
export interface MarketRegionDeletePayloadGenqlSelection{
    /** The ID of the deleted market region. */
    deletedId?: boolean | number
    /** The parent market object of the deleted region. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MarketRegion and a cursor during pagination.
 * 
 */
export interface MarketRegionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MarketRegionEdge. */
    node?: MarketRegionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `marketRegionsCreate` mutation. */
export interface MarketRegionsCreatePayloadGenqlSelection{
    /** The market object. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to update a market. */
export interface MarketUpdateInput {
/**
 * The name of the market. Not shown to customers.
 * 
 */
name?: (Scalars['String'] | null),
/**
 * A unique identifier for the market. For example `"ca"`.
 * 
 */
handle?: (Scalars['String'] | null),
/**
 * Whether the market is enabled to receive visitors and sales. **Note**: Regions in
 * inactive markets cannot be selected on the storefront or in checkout.
 * 
 */
enabled?: (Scalars['Boolean'] | null)}


/** Return type for `marketUpdate` mutation. */
export interface MarketUpdatePayloadGenqlSelection{
    /** The market object. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Defines errors encountered while managing a Market.
 * 
 */
export interface MarketUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The market’s web presence, which defines its SEO strategy. This can be a different domain
 * (e.g. `example.ca`), subdomain (e.g. `ca.example.com`), or subfolders of the primary
 * domain (e.g. `example.com/en-ca`). Each web presence comprises one or more language
 * variants. If a market does not have its own web presence, it is accessible on the shop’s
 * primary domain via [country
 * selectors](https://shopify.dev/themes/internationalization/multiple-currencies-languages#the-country-selector).
 * 
 * Note: while the domain/subfolders defined by a market’s web presence are not applicable to
 * custom storefronts, which must manage their own domains and routing, the languages chosen
 * here do govern [the languages available on the Storefront
 * API](https://shopify.dev/custom-storefronts/internationalization/multiple-languages) for the countries in
 * this market.
 * 
 */
export interface MarketWebPresenceGenqlSelection{
    /**
     * The ISO codes for the alternate locales. When a domain is used, these locales will be
     * available as language-specific subfolders. For example, if English is an
     * alternate locale, and `example.ca` is the market’s domain, then
     * `example.ca/en` will load in English.
     * 
     */
    alternateLocales?: boolean | number
    /**
     * The ISO code for the default locale. When a domain is used, this is the locale that will
     * be used when the domain root is accessed. For example, if French is the default locale,
     * and `example.ca` is the market’s domian, then `example.ca` will load in French.
     * 
     */
    defaultLocale?: boolean | number
    /**
     * The web presence’s domain.
     * This field will be null if `subfolderSuffix` isn't null.
     * 
     */
    domain?: DomainGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The associated market. */
    market?: MarketGenqlSelection
    /**
     * The list of root URLs for each of the web presence’s locales.
     * 
     */
    rootUrls?: MarketWebPresenceRootUrlGenqlSelection
    /** The market-specific suffix of the subfolders defined by the web presence. Example: in `/en-us` the subfolder suffix is `us`. This field will be null if `domain` isn't null. */
    subfolderSuffix?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a web presence for a market. */
export interface MarketWebPresenceCreateInput {
/**
 * The web presence's domain ID. This field must be `null` if the `subfolderSuffix` isn't `null`.
 * 
 */
domainId?: (Scalars['ID'] | null),
/**
 * The default locale for the market’s web presence.
 * 
 */
defaultLocale: Scalars['String'],
/**
 * The alternate locales for the market’s web presence.
 * 
 */
alternateLocales?: (Scalars['String'][] | null),
/**
 * The market-specific suffix of the subfolders defined by the web presence.
 * For example: in `/en-us`, the subfolder suffix is `us`.
 * Only ASCII characters are allowed. This field must be `null` if the `domainId` isn't `null`.
 * 
 */
subfolderSuffix?: (Scalars['String'] | null)}


/** Return type for `marketWebPresenceCreate` mutation. */
export interface MarketWebPresenceCreatePayloadGenqlSelection{
    /** The market object. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `marketWebPresenceDelete` mutation. */
export interface MarketWebPresenceDeletePayloadGenqlSelection{
    /** The ID of the deleted web presence. */
    deletedId?: boolean | number
    /** The market for which the web presence was deleted. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The URL for the homepage of the online store in the context of a particular market and a
 * particular locale.
 * 
 */
export interface MarketWebPresenceRootUrlGenqlSelection{
    /** The locale that the storefront loads in. */
    locale?: boolean | number
    /** The URL. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to update a web presence for a market. */
export interface MarketWebPresenceUpdateInput {
/**
 * The web presence's domain ID. This field must be null if `subfolderSuffix` is not null.
 * 
 */
domainId?: (Scalars['ID'] | null),
/**
 * The default locale for the market’s web presence.
 * 
 */
defaultLocale?: (Scalars['String'] | null),
/**
 * The alternate locales for the market’s web presence.
 * 
 */
alternateLocales?: (Scalars['String'][] | null),
/**
 * The market-specific suffix of the subfolders defined by the web presence.
 * Example: in `/en-us` the subfolder suffix is `us`.
 * Only ASCII characters are allowed. This field must be null if `domainId` is not null.
 * 
 */
subfolderSuffix?: (Scalars['String'] | null)}


/** Return type for `marketWebPresenceUpdate` mutation. */
export interface MarketWebPresenceUpdatePayloadGenqlSelection{
    /** The market object. */
    market?: MarketGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The marketing activity resource represents marketing that a
 *         merchant created through an app.
 */
export interface MarketingActivityGenqlSelection{
    /** The URL of the marketing activity listing page in the marketing section. */
    activityListUrl?: boolean | number
    /** The amount spent on the marketing activity. */
    adSpend?: MoneyV2GenqlSelection
    /** The app which created this marketing activity. */
    app?: AppGenqlSelection
    /** The errors generated when an app publishes the marketing activity. */
    appErrors?: MarketingActivityExtensionAppErrorsGenqlSelection
    /** The allocated budget for the marketing activity. */
    budget?: MarketingBudgetGenqlSelection
    /** The date and time when the marketing activity was created. */
    createdAt?: boolean | number
    /** The completed content in the marketing activity creation form. */
    formData?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * Whether the marketing activity is in the main workflow version of
     *           the marketing automation.
     */
    inMainWorkflowVersion?: boolean | number
    /** The available marketing channels for a marketing activity. */
    marketingChannel?: boolean | number
    /** Associated marketing event of this marketing activity. */
    marketingEvent?: MarketingEventGenqlSelection
    /** A contextual description of the marketing activity based on the platform and tactic used. */
    sourceAndMedium?: boolean | number
    /** The current state of the marketing activity. */
    status?: boolean | number
    /**
     * @deprecated Use `statusBadgeTypeV2` instead.
     * The severity of the marketing activity's status.
     */
    statusBadgeType?: boolean | number
    /** The severity of the marketing activity's status. */
    statusBadgeTypeV2?: boolean | number
    /** The rendered status of the marketing activity. */
    statusLabel?: boolean | number
    /**
     * The [date and time](
     *           https://help.shopify.com/https://en.wikipedia.org/wiki/ISO_8601
     *           ) when the activity's status last changed.
     */
    statusTransitionedAt?: boolean | number
    /** The method of marketing used for this marketing activity. */
    tactic?: boolean | number
    /** The status to which the marketing activity is currently transitioning. */
    targetStatus?: boolean | number
    /** The marketing activity's title, which is rendered on the marketing listing page. */
    title?: boolean | number
    /** The date and time when the marketing activity was updated. */
    updatedAt?: boolean | number
    /**
     * The set of [Urchin Tracking Module](
     *           https://help.shopify.com/https://en.wikipedia.org/wiki/UTM_parameters
     *           ) used in the URL for tracking this marketing activity.
     */
    utmParameters?: UTMParametersGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields combining budget amount and its marketing budget type. */
export interface MarketingActivityBudgetInput {
/** Budget type for marketing activity. */
budgetType?: (MarketingBudgetBudgetType | null),
/** Amount of budget for the marketing activity. */
total?: (MoneyInput | null)}


/**
 * An auto-generated type for paginating through multiple MarketingActivities.
 * 
 */
export interface MarketingActivityConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MarketingActivityEdgeGenqlSelection
    /** A list of the nodes contained in MarketingActivityEdge. */
    nodes?: MarketingActivityGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating an externally-managed marketing activity. */
export interface MarketingActivityCreateExternalInput {
/** The title of the marketing activity. */
title: Scalars['String'],
/**
 * The
 * [Urchin Traffic Module (UTM) parameters](https://en.wikipedia.org/wiki/UTM_parameters)
 * that are associated with a related marketing campaign. `UTMInput` is required for all
 * marketing tactics except for the Storefront app marketing tactic.
 * 
 */
utm: UTMInput,
/** The budget for this marketing activity. */
budget?: (MarketingActivityBudgetInput | null),
/** The amount spent on the marketing activity. */
adSpend?: (MoneyInput | null),
/** The ID of an activity that's hosted outside of Shopify. */
remoteId?: (Scalars['String'] | null),
/** URL for viewing and/or managing the activity outside of Shopify. */
remoteUrl: Scalars['URL'],
/** The URL for a preview image that's used for the marketing activity. */
remotePreviewImageUrl?: (Scalars['URL'] | null),
/**
 * Specifies the settings for the marketing platform and the ad format.
 * The marketing tactic determines which default fields are included
 * in the marketing activity.
 * 
 */
tactic: MarketingTactic,
/** The channel of your marketing event. */
channel: MarketingChannel,
/** The referring domain. */
referringDomain?: (Scalars['String'] | null),
/** When the activity is scheduled to start. */
scheduledStart?: (Scalars['DateTime'] | null),
/** When the activity is scheduled to end. */
scheduledEnd?: (Scalars['DateTime'] | null),
/** When the activity started. */
start?: (Scalars['DateTime'] | null),
/** When the activity ended. */
end?: (Scalars['DateTime'] | null)}


/** Return type for `marketingActivityCreateExternal` mutation. */
export interface MarketingActivityCreateExternalPayloadGenqlSelection{
    /** The external marketing activity that was created. */
    marketingActivity?: MarketingActivityGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketingActivityUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a marketing activity. */
export interface MarketingActivityCreateInput {
/** The title of the marketing activity. */
marketingActivityTitle?: (Scalars['String'] | null),
/** The form data in JSON serialized as a string. */
formData?: (Scalars['String'] | null),
/** The ID of the marketing activity extension. */
marketingActivityExtensionId: Scalars['ID'],
/** Encoded context containing marketing campaign id. */
context?: (Scalars['String'] | null),
/**
 * Specifies the
 * [Urchin Traffic Module (UTM) parameters](https://en.wikipedia.org/wiki/UTM_parameters)
 * that are associated with a related marketing campaign. UTMInput is required for all Marketing
 * tactics except Storefront App.
 * 
 */
utm?: (UTMInput | null),
/** The current state of the marketing activity. */
status: MarketingActivityStatus,
/** The budget for this marketing activity. */
budget?: (MarketingActivityBudgetInput | null)}


/** Return type for `marketingActivityCreate` mutation. */
export interface MarketingActivityCreatePayloadGenqlSelection{
    /** The created marketing activity. */
    marketingActivity?: MarketingActivityGenqlSelection
    /** The path to return back to shopify admin from embedded editor. */
    redirectPath?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MarketingActivity and a cursor during pagination.
 * 
 */
export interface MarketingActivityEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MarketingActivityEdge. */
    node?: MarketingActivityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents errors returned from apps when using the marketing activity extension. */
export interface MarketingActivityExtensionAppErrorsGenqlSelection{
    /** The app error type. */
    code?: boolean | number
    /** The list of errors returned by the app. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to update an externally managed marketing activity. */
export interface MarketingActivityUpdateExternalInput {
/** The title of the marketing activity. */
title?: (Scalars['String'] | null),
/**
 * Specifies the
 * [Urchin Traffic Module (UTM) parameters](https://en.wikipedia.org/wiki/UTM_parameters)
 * that are associated with a related marketing campaign. UTMInput is required for all marketing
 * tactics except the storefront app.
 * 
 */
utm?: (UTMInput | null),
/** The budget for the marketing activity. */
budget?: (MarketingActivityBudgetInput | null),
/** The amount spent on the marketing activity. */
adSpend?: (MoneyInput | null),
/** The URL for managing the activity outside of Shopify. */
remoteUrl?: (Scalars['URL'] | null),
/** The preview image URL for the marketing activity. */
remotePreviewImageUrl?: (Scalars['URL'] | null),
/**
 * The settings for the marketing platform and ad format.
 * The selection of the marketing tactic also determines which default fields are included
 * in the marketing activity.
 * 
 */
tactic?: (MarketingTactic | null),
/** The channel that your marketing event will use. */
channel?: (MarketingChannel | null),
/** The referring domain. */
referringDomain?: (Scalars['String'] | null),
/** The date and time when the activity is scheduled to start. */
scheduledStart?: (Scalars['DateTime'] | null),
/** The date and time when the activity is scheduled to end. */
scheduledEnd?: (Scalars['DateTime'] | null),
/** The date and time when the activity started. */
start?: (Scalars['DateTime'] | null),
/** The date and time when the activity ended. */
end?: (Scalars['DateTime'] | null)}


/** Return type for `marketingActivityUpdateExternal` mutation. */
export interface MarketingActivityUpdateExternalPayloadGenqlSelection{
    /** The updated marketing activity. */
    marketingActivity?: MarketingActivityGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MarketingActivityUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to update a marketing activity. */
export interface MarketingActivityUpdateInput {
/** The ID of the marketing activity. */
id: Scalars['ID'],
/** The ID of the recommendation that the marketing activity was created from, if one exists. */
marketingRecommendationId?: (Scalars['ID'] | null),
/** The title of the marketing activity. */
title?: (Scalars['String'] | null),
/** The budget for the marketing activity. */
budget?: (MarketingActivityBudgetInput | null),
/**
 * The current state of the marketing activity. Learn more about
 * [marketing activities statuses](/api/marketing-activities/statuses).
 * 
 */
status?: (MarketingActivityStatus | null),
/** The target state that the marketing activity is transitioning to. Learn more about [marketing activities statuses](/api/marketing-activities/statuses). */
targetStatus?: (MarketingActivityStatus | null),
/**
 * The form data of the marketing activity. This is only used if the marketing activity is
 *               integrated with the external editor.
 */
formData?: (Scalars['String'] | null),
/**
 * Specifies the
 * [Urchin Traffic Module (UTM) parameters](https://en.wikipedia.org/wiki/UTM_parameters)
 * that are associated with a related marketing campaign. UTMInput is required for all Marketing
 * tactics except Storefront App. The utm field can only be set once and never modified.
 * 
 */
utm?: (UTMInput | null),
/**
 * A list of the item IDs that were marketed in this marketing activity. Valid types for these items are:
 * * `Product`
 * * `Shop`
 * 
 */
marketedResources?: (Scalars['ID'][] | null),
/**
 * The error messages that were generated when the app was trying to complete the activity.
 * Learn more about the
 * [JSON format expected for error messages](/api/marketing-activities/statuses#failed-status).
 * 
 */
errors?: (Scalars['JSON'] | null)}


/** Return type for `marketingActivityUpdate` mutation. */
export interface MarketingActivityUpdatePayloadGenqlSelection{
    /** The updated marketing activity. */
    marketingActivity?: MarketingActivityGenqlSelection
    /** The redirect path from the embedded editor to the Shopify admin. */
    redirectPath?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a Shopify Marketing mutation. */
export interface MarketingActivityUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * This type combines budget amount and its marketing budget type.
 * 
 */
export interface MarketingBudgetGenqlSelection{
    /** The budget type for a marketing activity. */
    budgetType?: boolean | number
    /** The amount of budget for marketing activity. */
    total?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Marketing engagement represents customer activity taken on a marketing activity or a marketing channel. */
export interface MarketingEngagementGenqlSelection{
    /** The total ad spend for the day, if the marketing event is a paid ad with a daily spend. */
    adSpend?: MoneyV2GenqlSelection
    /** The total number of clicks on the marketing event for the day. */
    clicksCount?: boolean | number
    /** The total number of comments on marketing content for the day. */
    commentsCount?: boolean | number
    /** The total number of complaints for the day. */
    complaintsCount?: boolean | number
    /** The total number of fails for the day. For message-based platforms such as email or SMS, this represents the number of bounced marketing emails or messages. */
    failsCount?: boolean | number
    /** The total number of favorites, likes, saves, or bookmarks for the day. */
    favoritesCount?: boolean | number
    /** The date time at which the data was fetched. */
    fetchedAt?: boolean | number
    /** The total number of impressions for the day. */
    impressionsCount?: boolean | number
    /** Whether the engagements are reported as lifetime values rather than daily totals. */
    isCumulative?: boolean | number
    /** The marketing activity object related to this engagement. This corresponds to the marketingActivityId passed in on creation of the engagement. */
    marketingActivity?: MarketingActivityGenqlSelection
    /** The date that these engagements occurred on between 12:00 AM to 11:59 PM UTC. */
    occurredOn?: boolean | number
    /** The total number of marketing emails or messages that were sent for the day. */
    sendsCount?: boolean | number
    /** The total number of times marketing content was distributed or reposted to either one's own network of followers through a social media platform or other digital channels for the day. For message-based platforms such as email or SMS, this represents the number of times marketing emails or messages were forwarded. */
    sharesCount?: boolean | number
    /** The total number of unique clicks on marketing content for the day. */
    uniqueClicksCount?: boolean | number
    /** The total number of unique views for the day. */
    uniqueViewsCount?: boolean | number
    /** The total number of unsubscribes for the day. For social media platforms, this represents the number of unfollows. */
    unsubscribesCount?: boolean | number
    /** The UTC Offset that the app is using to determine which date to allocate spend to. */
    utcOffset?: boolean | number
    /** The total number of views for the day. For message-based platforms such as email or SMS, this represents the number of times marketing emails or messages were opened. For video-based content, this represents the number of times videos were played. */
    viewsCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `marketingEngagementCreate` mutation. */
export interface MarketingEngagementCreatePayloadGenqlSelection{
    /** The marketing engagement that was created. */
    marketingEngagement?: MarketingEngagementGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a marketing engagement. */
export interface MarketingEngagementInput {
/** The date that these engagements occurred on. */
occurredOn: Scalars['Date'],
/** The total number of impressions for the day. */
impressionsCount?: (Scalars['Int'] | null),
/** The total number of views for the day. For message-based platforms such as email or SMS, this represents the number of times marketing emails or messages were opened. For video-based content, this represents the number of times videos were played. */
viewsCount?: (Scalars['Int'] | null),
/** The total number of clicks on the marketing event for the day. */
clicksCount?: (Scalars['Int'] | null),
/** The total number of times marketing content was distributed or reposted to either one's own network of followers through a social media platform or other digital channels for the day. For message-based platforms such as email or SMS, this represents the number of times marketing emails or messages were forwarded. */
sharesCount?: (Scalars['Int'] | null),
/** The total number of favorites, likes, saves, or bookmarks for the day. */
favoritesCount?: (Scalars['Int'] | null),
/** The total number of comments on marketing content for the day. */
commentsCount?: (Scalars['Int'] | null),
/** The total number of unsubscribes for the day. For social media platforms, this represents the number of unfollows. */
unsubscribesCount?: (Scalars['Int'] | null),
/** The total number of complaints for the day. */
complaintsCount?: (Scalars['Int'] | null),
/** The total number of fails for the day. For message-based platforms such as email or SMS, this represents the number of bounced marketing emails or messages. */
failsCount?: (Scalars['Int'] | null),
/** The total number of marketing emails or messages that were sent for the day. */
sendsCount?: (Scalars['Int'] | null),
/** The total number of unique views for the day. */
uniqueViewsCount?: (Scalars['Int'] | null),
/** The total number of unique clicks on marketing content for the day. */
uniqueClicksCount?: (Scalars['Int'] | null),
/** The total ad spend for the day, if the marketing event is a paid ad with a daily spend. */
adSpend?: (MoneyInput | null),
/** Whether the engagements are reported as lifetime values rather than daily totals. */
isCumulative?: (Scalars['Boolean'] | null),
/** The UTC Offset that the app is using to determine which date to allocate spend to. */
utcOffset?: (Scalars['UtcOffset'] | null),
/** The date time at which the data was fetched. */
fetchedAt?: (Scalars['DateTime'] | null)}


/** Represents actions that market a merchant's store or products. */
export interface MarketingEventGenqlSelection{
    /** The app that the marketing event is attributed to. */
    app?: AppGenqlSelection
    /** The marketing channel used by the marketing event. */
    channel?: boolean | number
    /** A human-readable description of the marketing event. */
    description?: boolean | number
    /** The date and time when the marketing event ended. */
    endedAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The URL where the marketing event can be managed. */
    manageUrl?: boolean | number
    /** The URL where the marketing event can be previewed. */
    previewUrl?: boolean | number
    /** An optional ID that helps Shopify validate engagement data. */
    remoteId?: boolean | number
    /** The date and time when the marketing event is scheduled to end. */
    scheduledToEndAt?: boolean | number
    /**
     * Where the `MarketingEvent` occurred and what kind of content was used.
     * Because `utmSource` and `utmMedium` are often used interchangeably, this is
     * based on a combination of `marketingChannel`, `referringDomain`, and `type` to
     * provide a consistent representation for any given piece of marketing
     * regardless of the app that created it.
     * 
     */
    sourceAndMedium?: boolean | number
    /** The date and time when the marketing event started. */
    startedAt?: boolean | number
    /**
     * @deprecated Use `sourceAndMedium` instead.
     * The display text for the marketing event type.
     */
    targetTypeDisplayText?: boolean | number
    /** The marketing event type. */
    type?: boolean | number
    /** The name of the marketing campaign. */
    utmCampaign?: boolean | number
    /** The medium that the marketing campaign is using. Example values: `cpc`, `banner`. */
    utmMedium?: boolean | number
    /** The referrer of the marketing event. Example values: `google`, `newsletter`. */
    utmSource?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MarketingEvents.
 * 
 */
export interface MarketingEventConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MarketingEventEdgeGenqlSelection
    /** A list of the nodes contained in MarketingEventEdge. */
    nodes?: MarketingEventGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MarketingEvent and a cursor during pagination.
 * 
 */
export interface MarketingEventEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MarketingEventEdge. */
    node?: MarketingEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a media interface. */
export interface MediaGenqlSelection{
    /** A word or phrase to share the nature or contents of a media. */
    alt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The media content type. */
    mediaContentType?: boolean | number
    /** Any errors which have occurred on the media. */
    mediaErrors?: MediaErrorGenqlSelection
    /** The warnings attached to the media. */
    mediaWarnings?: MediaWarningGenqlSelection
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /** Current status of the media. */
    status?: boolean | number
    on_ExternalVideo?: ExternalVideoGenqlSelection
    on_MediaImage?: MediaImageGenqlSelection
    on_Model3d?: Model3dGenqlSelection
    on_Video?: VideoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Media.
 * 
 */
export interface MediaConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MediaEdgeGenqlSelection
    /** A list of the nodes contained in MediaEdge. */
    nodes?: MediaGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Media and a cursor during pagination.
 * 
 */
export interface MediaEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MediaEdge. */
    node?: MediaGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a media error. This typically occurs when there is an issue with the media itself causing it to fail validation.
 * Check the media before attempting to upload again.
 * 
 */
export interface MediaErrorGenqlSelection{
    /** Code representing the type of error. */
    code?: boolean | number
    /** Additional details regarding the error. */
    details?: boolean | number
    /** Translated error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An image hosted on Shopify.
 * 
 */
export interface MediaImageGenqlSelection{
    /** A word or phrase to share the nature or contents of a media. */
    alt?: boolean | number
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt?: boolean | number
    /** Any errors that have occurred on the file. */
    fileErrors?: FileErrorGenqlSelection
    /** The status of the file. */
    fileStatus?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The image for the media. Returns `null` until `status` is `READY`. */
    image?: ImageGenqlSelection
    /** The media content type. */
    mediaContentType?: boolean | number
    /** Any errors which have occurred on the media. */
    mediaErrors?: MediaErrorGenqlSelection
    /** The warnings attached to the media. */
    mediaWarnings?: MediaWarningGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The MIME type of the image. */
    mimeType?: boolean | number
    /** The original source of the image. */
    originalSource?: MediaImageOriginalSourceGenqlSelection
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Current status of the media. */
    status?: boolean | number
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The original source for an image.
 * 
 */
export interface MediaImageOriginalSourceGenqlSelection{
    /** The size of the original file in bytes. */
    fileSize?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the preview image for a media. */
export interface MediaPreviewImageGenqlSelection{
    /** The preview image for the media. Returns `null` until `status` is `READY`. */
    image?: ImageGenqlSelection
    /** Current status of the preview image. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during execution of a Media query or mutation. */
export interface MediaUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a media warning. This occurs when there is a non-blocking concern regarding your media.
 * Consider reviewing your media to ensure it is correct and its parameters are as expected.
 * 
 */
export interface MediaWarningGenqlSelection{
    /** The code representing the type of warning. */
    code?: boolean | number
    /** Translated warning message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Merchant approval for accelerated onboarding to channel integration apps. */
export interface MerchantApprovalSignalsGenqlSelection{
    /** Whether the shop's Shopify Payments account identity is verified. Returns `false` if the identity is unverified or if the shop doesn't have a Shopify Payments account. */
    identityVerified?: boolean | number
    /** Whether Shopify has pre-verified the merchant's business for onboarding to channel integration apps. Returns `false` if the shop is not marked for verification. */
    verifiedByShopify?: boolean | number
    /** Which tier of the Shopify verification was determined for the merchant's business for onboarding to channel integration apps. */
    verifiedByShopifyTier?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Metafields enable you to attach additional information to a Shopify resource, such as a [Product](https://shopify.dev/api/admin-graphql/latest/objects/product) or a [Collection](https://shopify.dev/api/admin-graphql/latest/objects/collection).
 * For more information about where you can attach metafields refer to [HasMetafields](https://shopify.dev/api/admin/graphql/reference/common-objects/HasMetafields).
 * Some examples of the data that metafields enable you to store are specifications, size charts, downloadable documents, release dates, images, or part numbers.
 * Metafields are identified by an owner resource, namespace, and key. and store a value along with type information for that value.
 * 
 */
export interface MetafieldGenqlSelection{
    /** The date and time when the metafield was created. */
    createdAt?: boolean | number
    /** The metafield definition that the metafield belongs to, if any. */
    definition?: MetafieldDefinitionGenqlSelection
    /** The description of the metafield. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The unique identifier for the metafield within its namespace. */
    key?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /**
     * The container for a group of metafields that the metafield is associated with.
     * 
     */
    namespace?: boolean | number
    /** The resource that the metafield is attached to. */
    owner?: HasMetafieldsGenqlSelection
    /**
     * The type of resource that the metafield is attached to.
     * 
     */
    ownerType?: boolean | number
    /** Returns a reference object if the metafield definition's type is a resource reference. */
    reference?: MetafieldReferenceGenqlSelection
    /** A list of reference objects if the metafield's type is a resource reference list. */
    references?: (MetafieldReferenceConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null)} })
    /**
     * The type of data that is stored in the metafield.
     * Refer to the list of [supported types](https://shopify.dev/apps/metafields/types).
     * 
     */
    type?: boolean | number
    /** The date and time when the metafield was updated. */
    updatedAt?: boolean | number
    /**
     * The data stored in the metafield. Always stored as a string, regardless of the metafield's type.
     * 
     */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The access settings for this metafield definition. */
export interface MetafieldAccessGenqlSelection{
    /** The admin access setting used for the metafields under this definition. */
    admin?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the access settings for the metafields under the definition.
 * 
 */
export interface MetafieldAccessInput {
/** The admin access setting to use for the metafields under this definition. */
admin: MetafieldAdminAccess}


/**
 * An auto-generated type for paginating through multiple Metafields.
 * 
 */
export interface MetafieldConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetafieldEdgeGenqlSelection
    /** A list of the nodes contained in MetafieldEdge. */
    nodes?: MetafieldGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Metafield definitions enable you to define additional validation constraints for metafields, and enable the
 * merchant to edit metafield values in context.
 * 
 */
export interface MetafieldDefinitionGenqlSelection{
    /** The access settings associated with the metafield definition. */
    access?: MetafieldAccessGenqlSelection
    /** The description of the metafield definition. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The unique identifier for the metafield definition within its namespace. */
    key?: boolean | number
    /** The metafields that belong to the metafield definition. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** Returns the metafields filtered by the validation status. */
    validationStatus?: (MetafieldValidationStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The count of the metafields that belong to the metafield definition. */
    metafieldsCount?: { __args: {
    /** The current validation status. */
    validationStatus?: (MetafieldValidationStatus | null)} } | boolean | number
    /** The human-readable name of the metafield definition. */
    name?: boolean | number
    /** The container for a group of metafields that the metafield definition is associated with. */
    namespace?: boolean | number
    /** The resource type that the metafield definition is attached to. */
    ownerType?: boolean | number
    /** The position of the metafield definition in the pinned list. */
    pinnedPosition?: boolean | number
    /** The standard metafield definition template associated with the metafield definition. */
    standardTemplate?: StandardMetafieldDefinitionTemplateGenqlSelection
    /**
     * The type of data that each of the metafields that belong to the metafield definition will store.
     * Refer to the list of [supported types](https://shopify.dev/apps/metafields/types).
     * 
     */
    type?: MetafieldDefinitionTypeGenqlSelection
    /** Whether the metafield definition can be used as a collection condition. */
    useAsCollectionCondition?: boolean | number
    /** The validation status for the metafields that belong to the metafield definition. */
    validationStatus?: boolean | number
    /**
     * A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
     * the metafields that belong to the metafield definition. For example, for a metafield definition with the
     * type `date`, you can set a minimum date validation so that each of the metafields that belong to it can only
     * store dates after the specified minimum.
     * 
     */
    validations?: MetafieldDefinitionValidationGenqlSelection
    /**
     * Whether each of the metafields that belong to the metafield definition are visible from the Storefront API.
     * 
     */
    visibleToStorefrontApi?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MetafieldDefinitions.
 * 
 */
export interface MetafieldDefinitionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetafieldDefinitionEdgeGenqlSelection
    /** A list of the nodes contained in MetafieldDefinitionEdge. */
    nodes?: MetafieldDefinitionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metafieldDefinitionCreate` mutation. */
export interface MetafieldDefinitionCreatePayloadGenqlSelection{
    /** The metafield definition that was created. */
    createdDefinition?: MetafieldDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetafieldDefinitionCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `MetafieldDefinitionCreate`. */
export interface MetafieldDefinitionCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metafieldDefinitionDelete` mutation. */
export interface MetafieldDefinitionDeletePayloadGenqlSelection{
    /** The ID of the deleted metafield definition. */
    deletedDefinitionId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetafieldDefinitionDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `MetafieldDefinitionDelete`. */
export interface MetafieldDefinitionDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MetafieldDefinition and a cursor during pagination.
 * 
 */
export interface MetafieldDefinitionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetafieldDefinitionEdge. */
    node?: MetafieldDefinitionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields required to create a metafield definition.
 * 
 */
export interface MetafieldDefinitionInput {
/**
 * The container for a group of metafields that the metafield definition will be associated with.
 * 
 * Must be 3-255 characters long and only contain alphanumeric, hyphen, and underscore characters.
 * 
 */
namespace: Scalars['String'],
/**
 * The unique identifier for the metafield definition within its namespace.
 * 
 * Must be 3-64 characters long and only contain alphanumeric, hyphen, and underscore characters.
 * 
 */
key: Scalars['String'],
/** The human-readable name for the metafield definition. */
name: Scalars['String'],
/** The description for the metafield definition. */
description?: (Scalars['String'] | null),
/** The resource type that the metafield definition is attached to. */
ownerType: MetafieldOwnerType,
/**
 * The type of data that each of the metafields that belong to the metafield definition will store.
 * Refer to the list of [supported types](https://shopify.dev/apps/metafields/types).
 * 
 */
type: Scalars['String'],
/**
 * A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
 * the metafields that belong to the metafield definition. For example, for a metafield definition with the
 * type `date`, you can set a minimum date validation so that each of the metafields that belong to it can only
 * store dates after the specified minimum.
 * 
 */
validations?: (MetafieldDefinitionValidationInput[] | null),
/** Whether metafields for the metafield definition are visible using the Storefront API. */
visibleToStorefrontApi?: (Scalars['Boolean'] | null),
/** Whether the metafield definition can be used as a collection condition. */
useAsCollectionCondition?: (Scalars['Boolean'] | null),
/**
 * Whether to [pin](https://help.shopify.com/manual/custom-data/metafields/pinning-metafield-definitions)
 * the metafield definition.
 * 
 */
pin?: (Scalars['Boolean'] | null),
/** The access settings that apply to each of the metafields that belong to the metafield definition. */
access?: (MetafieldAccessInput | null)}


/** Return type for `metafieldDefinitionPin` mutation. */
export interface MetafieldDefinitionPinPayloadGenqlSelection{
    /** The metafield definition that was pinned. */
    pinnedDefinition?: MetafieldDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetafieldDefinitionPinUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `MetafieldDefinitionPin`. */
export interface MetafieldDefinitionPinUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The type and name for the optional validation configuration of a metafield.
 * 
 * For example, a supported validation might consist of a `max` name and a `number_integer` type.
 * This validation can then be used to enforce a maximum character length for a `single_line_text_field` metafield.
 * 
 */
export interface MetafieldDefinitionSupportedValidationGenqlSelection{
    /** The name of the metafield definition validation. */
    name?: boolean | number
    /** The type of input for the validation. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A metafield definition type provides basic foundation and validation for a metafield.
 * 
 */
export interface MetafieldDefinitionTypeGenqlSelection{
    /** The category associated with the metafield definition type. */
    category?: boolean | number
    /**
     * The name of the type for the metafield definition.
     * See the list of [supported types](https://shopify.dev/apps/metafields/types).
     * 
     */
    name?: boolean | number
    /** The supported validations for a metafield definition type. */
    supportedValidations?: MetafieldDefinitionSupportedValidationGenqlSelection
    /** Whether metafields without a definition can be migrated to a definition of this type. */
    supportsDefinitionMigrations?: boolean | number
    /**
     * @deprecated `valueType` is deprecated and `name` should be used for type information.
     * The value type for a metafield created with this definition type.
     */
    valueType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metafieldDefinitionUnpin` mutation. */
export interface MetafieldDefinitionUnpinPayloadGenqlSelection{
    /** The metafield definition that was unpinned. */
    unpinnedDefinition?: MetafieldDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetafieldDefinitionUnpinUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `MetafieldDefinitionUnpin`. */
export interface MetafieldDefinitionUnpinUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields required to update a metafield definition.
 * 
 */
export interface MetafieldDefinitionUpdateInput {
/**
 * The container for a group of metafields that the metafield definition is associated with. Used to help identify
 * the metafield definition, but cannot be updated itself.
 * 
 */
namespace: Scalars['String'],
/**
 * The unique identifier for the metafield definition within its namespace. Used to help identify the metafield
 * definition, but cannot be updated itself.
 * 
 */
key: Scalars['String'],
/** The human-readable name for the metafield definition. */
name?: (Scalars['String'] | null),
/** The description for the metafield definition. */
description?: (Scalars['String'] | null),
/**
 * The resource type that the metafield definition is attached to. Used to help identify the metafield definition,
 * but cannot be updated itself.
 * 
 */
ownerType: MetafieldOwnerType,
/**
 * A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
 * the metafields that belong to the metafield definition. For example, for a metafield definition with the
 * type `date`, you can set a minimum date validation so that each of the metafields that belong to it can only
 * store dates after the specified minimum.
 * 
 */
validations?: (MetafieldDefinitionValidationInput[] | null),
/** Whether to pin the metafield definition. */
pin?: (Scalars['Boolean'] | null),
/**
 * Whether each of the metafields that belong to the metafield definition are visible from the Storefront API.
 * 
 */
visibleToStorefrontApi?: (Scalars['Boolean'] | null),
/** Whether the metafield definition can be used as a collection condition. */
useAsCollectionCondition?: (Scalars['Boolean'] | null),
/** The access settings that apply to each of the metafields that belong to the metafield definition. */
access?: (MetafieldAccessInput | null)}


/** Return type for `metafieldDefinitionUpdate` mutation. */
export interface MetafieldDefinitionUpdatePayloadGenqlSelection{
    /** The metafield definition that was updated. */
    updatedDefinition?: MetafieldDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetafieldDefinitionUpdateUserErrorGenqlSelection
    /** The asynchronous job updating the metafield definition's validation_status. */
    validationJob?: JobGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `MetafieldDefinitionUpdate`. */
export interface MetafieldDefinitionUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A configured metafield definition validation.
 * 
 * For example, for a metafield definition of `number_integer` type, you can set a validation with the name `max`
 * and a value of `15`. This validation will ensure that the value of the metafield is a number less than or equal to 15.
 * 
 * Refer to the [list of supported validations](https://shopify.dev/api/admin/graphql/reference/common-objects/metafieldDefinitionTypes#examples-Fetch_all_metafield_definition_types).
 * 
 */
export interface MetafieldDefinitionValidationGenqlSelection{
    /** The validation name. */
    name?: boolean | number
    /** The name for the metafield type of this validation. */
    type?: boolean | number
    /** The validation value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The name and value for a metafield definition validation.
 * 
 * For example, for a metafield definition of `single_line_text_field` type, you can set a validation with the name `min` and a value of `10`.
 * This validation will ensure that the value of the metafield is at least 10 characters.
 * 
 * Refer to the [list of supported validations](https://shopify.dev/api/admin/graphql/reference/common-objects/metafieldDefinitionTypes#examples-Fetch_all_metafield_definition_types).
 * 
 */
export interface MetafieldDefinitionValidationInput {
/** The name for the metafield definition validation. */
name: Scalars['String'],
/** The value for the metafield definition validation. */
value: Scalars['String']}


/** The input fields to delete a metafield. */
export interface MetafieldDeleteInput {
/** The ID of the metafield to delete. */
id: Scalars['ID']}


/** Return type for `metafieldDelete` mutation. */
export interface MetafieldDeletePayloadGenqlSelection{
    /** The ID of the deleted metafield. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Metafield and a cursor during pagination.
 * 
 */
export interface MetafieldEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetafieldEdge. */
    node?: MetafieldGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to use to create or update a metafield through a mutation on the owning resource.
 * An alternative way to create or update a metafield is by using the
 * [metafieldsSet](https://shopify.dev/api/admin-graphql/latest/mutations/metafieldsSet) mutation.
 * 
 */
export interface MetafieldInput {
/**
 * The unique ID of the metafield.
 * 
 * Required when updating a metafield, but should not be included when creating as it's created automatically.
 * 
 */
id?: (Scalars['ID'] | null),
/**
 * The container for a group of metafields that the metafield is or will be associated with. Used in tandem with
 * `key` to lookup a metafield on a resource, preventing conflicts with other metafields with the same `key`.
 * 
 * Required when creating a metafield, but optional when updating. Used to help identify the metafield when
 * updating, but cannot be updated itself.
 * 
 * Must be 3-255 characters long and can contain alphanumeric, hyphen, and underscore characters.
 * 
 */
namespace?: (Scalars['String'] | null),
/**
 * The unique identifier for a metafield within its namespace.
 * 
 * Required when creating a metafield, but optional when updating. Used to help identify the metafield when
 * updating, but cannot be updated itself.
 * 
 * Must be 3-64 characters long and can contain alphanumeric, hyphen, and underscore characters.
 * 
 */
key?: (Scalars['String'] | null),
/**
 * The data stored in the metafield. Always stored as a string, regardless of the metafield's type.
 * 
 */
value?: (Scalars['String'] | null),
/**
 * The type of data that is stored in the metafield.
 * Refer to the list of [supported types](https://shopify.dev/apps/metafields/types).
 * 
 * Required when creating a metafield, but optional when updating.
 * 
 */
type?: (Scalars['String'] | null)}


/**
 * The resource referenced by the metafield value.
 * 
 */
export interface MetafieldReferenceGenqlSelection{
    on_Collection?:CollectionGenqlSelection,
    on_GenericFile?:GenericFileGenqlSelection,
    on_MediaImage?:MediaImageGenqlSelection,
    on_Metaobject?:MetaobjectGenqlSelection,
    on_OnlineStorePage?:OnlineStorePageGenqlSelection,
    on_Product?:ProductGenqlSelection,
    on_ProductVariant?:ProductVariantGenqlSelection,
    on_Video?:VideoGenqlSelection,
    on_HasMetafieldDefinitions?: HasMetafieldDefinitionsGenqlSelection,
    on_HasMetafields?: HasMetafieldsGenqlSelection,
    on_HasPublishedTranslations?: HasPublishedTranslationsGenqlSelection,
    on_Node?: NodeGenqlSelection,
    on_Publishable?: PublishableGenqlSelection,
    on_File?: FileGenqlSelection,
    on_Media?: MediaGenqlSelection,
    on_Navigable?: NavigableGenqlSelection,
    on_LegacyInteroperability?: LegacyInteroperabilityGenqlSelection,
    on_OnlineStorePreviewable?: OnlineStorePreviewableGenqlSelection,
    __typename?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MetafieldReferences.
 * 
 */
export interface MetafieldReferenceConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetafieldReferenceEdgeGenqlSelection
    /** A list of the nodes contained in MetafieldReferenceEdge. */
    nodes?: MetafieldReferenceGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MetafieldReference and a cursor during pagination.
 * 
 */
export interface MetafieldReferenceEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetafieldReferenceEdge. */
    node?: MetafieldReferenceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Types of resources that may use metafields to reference other resources.
 * 
 */
export interface MetafieldReferencerGenqlSelection{
    on_AppInstallation?:AppInstallationGenqlSelection,
    on_Collection?:CollectionGenqlSelection,
    on_Customer?:CustomerGenqlSelection,
    on_DeliveryCustomization?:DeliveryCustomizationGenqlSelection,
    on_DiscountAutomaticNode?:DiscountAutomaticNodeGenqlSelection,
    on_DiscountCodeNode?:DiscountCodeNodeGenqlSelection,
    on_DiscountNode?:DiscountNodeGenqlSelection,
    on_DraftOrder?:DraftOrderGenqlSelection,
    on_FulfillmentOrder?:FulfillmentOrderGenqlSelection,
    on_Location?:LocationGenqlSelection,
    on_Market?:MarketGenqlSelection,
    on_Metaobject?:MetaobjectGenqlSelection,
    on_OnlineStoreArticle?:OnlineStoreArticleGenqlSelection,
    on_OnlineStoreBlog?:OnlineStoreBlogGenqlSelection,
    on_OnlineStorePage?:OnlineStorePageGenqlSelection,
    on_Order?:OrderGenqlSelection,
    on_PaymentCustomization?:PaymentCustomizationGenqlSelection,
    on_Product?:ProductGenqlSelection,
    on_ProductVariant?:ProductVariantGenqlSelection,
    on_Shop?:ShopGenqlSelection,
    on_HasMetafields?: HasMetafieldsGenqlSelection,
    on_Node?: NodeGenqlSelection,
    on_HasMetafieldDefinitions?: HasMetafieldDefinitionsGenqlSelection,
    on_HasPublishedTranslations?: HasPublishedTranslationsGenqlSelection,
    on_Publishable?: PublishableGenqlSelection,
    on_CommentEventSubject?: CommentEventSubjectGenqlSelection,
    on_HasEvents?: HasEventsGenqlSelection,
    on_LegacyInteroperability?: LegacyInteroperabilityGenqlSelection,
    on_HasLocalizationExtensions?: HasLocalizationExtensionsGenqlSelection,
    on_Navigable?: NavigableGenqlSelection,
    on_OnlineStorePreviewable?: OnlineStorePreviewableGenqlSelection,
    __typename?: boolean | number
}


/**
 * Defines a relation between two resources via a reference metafield.
 * The referencer owns the joining field with a given namespace and key,
 * while the target is referenced by the field.
 * 
 */
export interface MetafieldRelationGenqlSelection{
    /** The key of the field making the reference. */
    key?: boolean | number
    /** The name of the field making the reference. */
    name?: boolean | number
    /** The namespace of the metafield making the reference, or type of the metaobject. */
    namespace?: boolean | number
    /** The resource making the reference. */
    referencer?: MetafieldReferencerGenqlSelection
    /** The referenced resource. */
    target?: MetafieldReferenceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MetafieldRelations.
 * 
 */
export interface MetafieldRelationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetafieldRelationEdgeGenqlSelection
    /** A list of the nodes contained in MetafieldRelationEdge. */
    nodes?: MetafieldRelationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MetafieldRelation and a cursor during pagination.
 * 
 */
export interface MetafieldRelationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetafieldRelationEdge. */
    node?: MetafieldRelationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * By default, the Storefront API can't read metafields. To make specific metafields visible in the Storefront API,
 * you need to create a `MetafieldStorefrontVisibility` record. A `MetafieldStorefrontVisibility` record is a list
 * of the metafields, defined by the `owner_type`, `namespace`, and `key`, to make visible in the Storefront API.
 * 
 * Learn about [exposing metafields in the Storefront API]
 * (https://shopify.dev/custom-storefronts/products-collections/metafields)
 * for more details.
 * 
 */
export interface MetafieldStorefrontVisibilityGenqlSelection{
    /** The date and time when the metafield was set to visible in the Storefront API. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The key of a metafield to make visible in the Storefront API. */
    key?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The namespace of a metafield to make visible in the Storefront API. */
    namespace?: boolean | number
    /** The owner type of a metafield to make visible in the Storefront API. */
    ownerType?: boolean | number
    /**
     * The date and time when the `MetafieldStorefrontVisilibty` record was updated.
     * 
     */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MetafieldStorefrontVisibilities.
 * 
 */
export interface MetafieldStorefrontVisibilityConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetafieldStorefrontVisibilityEdgeGenqlSelection
    /** A list of the nodes contained in MetafieldStorefrontVisibilityEdge. */
    nodes?: MetafieldStorefrontVisibilityGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metafieldStorefrontVisibilityCreate` mutation. */
export interface MetafieldStorefrontVisibilityCreatePayloadGenqlSelection{
    /** The `MetafieldStorefrontVisibility` that was created. */
    metafieldStorefrontVisibility?: MetafieldStorefrontVisibilityGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metafieldStorefrontVisibilityDelete` mutation. */
export interface MetafieldStorefrontVisibilityDeletePayloadGenqlSelection{
    /** The ID of the deleted `MetafieldStorefrontVisibility` record. */
    deletedMetafieldStorefrontVisibilityId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MetafieldStorefrontVisibility and a cursor during pagination.
 * 
 */
export interface MetafieldStorefrontVisibilityEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetafieldStorefrontVisibilityEdge. */
    node?: MetafieldStorefrontVisibilityGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to create a MetafieldStorefrontVisibility record.
 * 
 */
export interface MetafieldStorefrontVisibilityInput {
/** The namespace of a metafield to make visible in the Storefront API. */
namespace: Scalars['String'],
/** The key of a metafield to make visible in the Storefront API. */
key: Scalars['String'],
/** The owner type of a metafield to make visible in the Storefront API. */
ownerType: MetafieldOwnerType}


/** The input fields for a metafield value to set. */
export interface MetafieldsSetInput {
/** The unique ID of the resource that the metafield is attached to. */
ownerId: Scalars['ID'],
/**
 * The container for a group of metafields that the metafield is or will be associated with. Used in tandem
 * with `key` to lookup a metafield on a resource, preventing conflicts with other metafields with the
 * same `key`.
 * 
 * Must be 3-255 characters long and can contain alphanumeric, hyphen, and underscore characters.
 * 
 */
namespace: Scalars['String'],
/**
 * The unique identifier for a metafield within its namespace.
 * 
 * Must be 3-64 characters long and can contain alphanumeric, hyphen, and underscore characters.
 * 
 */
key: Scalars['String'],
/**
 * The data stored in the metafield. Always stored as a string, regardless of the metafield's type.
 * 
 */
value: Scalars['String'],
/**
 * The type of data that is stored in the metafield.
 * The type must be one of the [supported types](https://shopify.dev/apps/metafields/types).
 * 
 * Required when there is no corresponding definition for the given `namespace`, `key`, and
 * owner resource type (derived from `ownerId`).
 * 
 */
type?: (Scalars['String'] | null)}


/** Return type for `metafieldsSet` mutation. */
export interface MetafieldsSetPayloadGenqlSelection{
    /** The list of metafields that were set. */
    metafields?: MetafieldGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetafieldsSetUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `MetafieldsSet`. */
export interface MetafieldsSetUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The index of the array element that's causing the error. */
    elementIndex?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Provides an object instance represented by a MetaobjectDefinition. */
export interface MetaobjectGenqlSelection{
    /** Metaobject capabilities for this Metaobject. */
    capabilities?: MetaobjectCapabilityDataGenqlSelection
    /** The app used to create the object. */
    createdBy?: AppGenqlSelection
    /** The MetaobjectDefinition that models this object type. */
    definition?: MetaobjectDefinitionGenqlSelection
    /** The preferred display name field value of the metaobject. */
    displayName?: boolean | number
    /** The field for an object key, or null if the key has no field definition. */
    field?: (MetaobjectFieldGenqlSelection & { __args: {
    /** The metaobject key to access. */
    key: Scalars['String']} })
    /** All ordered fields of the metaobject with their definitions and values. */
    fields?: MetaobjectFieldGenqlSelection
    /** The unique handle of the object, useful as a custom ID. */
    handle?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** List of back references metafields that belong to the resource. */
    referencedBy?: (MetafieldRelationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The staff member who created the metaobject. */
    staffMember?: StaffMemberGenqlSelection
    /** The type of the metaobject. */
    type?: boolean | number
    /** When the object was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Provides metaobject definition's access configuration. */
export interface MetaobjectAccessGenqlSelection{
    /**
     * Access configuration for Admin API surface areas, including the GraphQL Admin API.
     * 
     */
    admin?: boolean | number
    /**
     * Access configuration for Storefront surface areas, including the GraphQL Storefront API and Liquid.
     * 
     */
    storefront?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for configuring metaobject access controls. */
export interface MetaobjectAccessInput {
/**
 * Access configuration for Admin API surface areas, including the GraphQL Admin API.
 * 
 */
admin?: (MetaobjectAdminAccess | null),
/**
 * Access configuration for Storefront API surface areas, including the GraphQL Storefront API and Liquid.
 * 
 */
storefront?: (MetaobjectStorefrontAccess | null)}


/** Return type for `metaobjectBulkDelete` mutation. */
export interface MetaobjectBulkDeletePayloadGenqlSelection{
    /** The asynchronous job that deletes the metaobjects. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Specifies the condition by which metaobjects are deleted.
 * Exactly one field of input is required.
 * 
 */
export interface MetaobjectBulkDeleteWhereCondition {
/** Deletes all metaobjects with the specified `type`. */
type?: (Scalars['String'] | null),
/** A list of metaobjects IDs to delete. */
ids?: (Scalars['ID'][] | null)}


/** Provides the capabilities of a metaobject definition. */
export interface MetaobjectCapabilitiesGenqlSelection{
    /** Indicate whether a metaobject definition is publishable. */
    publishable?: MetaobjectCapabilitiesPublishableGenqlSelection
    /** Indicate whether a metaobject definition is translatable. */
    translatable?: MetaobjectCapabilitiesTranslatableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The publishable capability of a metaobject definition. */
export interface MetaobjectCapabilitiesPublishableGenqlSelection{
    /** Indicates if the capability is enabled. */
    enabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The translatable capability of a metaobject definition. */
export interface MetaobjectCapabilitiesTranslatableGenqlSelection{
    /** Indicates if the capability is enabled. */
    enabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating a metaobject capability. */
export interface MetaobjectCapabilityCreateInput {
/** The input for enabling the publishable capability. */
publishable?: (MetaobjectCapabilityPublishableInput | null),
/** The input for enabling the translatable capability. */
translatable?: (MetaobjectCapabilityTranslatableInput | null)}


/** Provides the capabilities of a metaobject. */
export interface MetaobjectCapabilityDataGenqlSelection{
    /** The publishable capability for this metaobject. */
    publishable?: MetaobjectCapabilityDataPublishableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for metaobject capabilities. */
export interface MetaobjectCapabilityDataInput {
/** Publishable capability input. */
publishable?: (MetaobjectCapabilityDataPublishableInput | null)}


/** The publishable capability for the parent metaobject. */
export interface MetaobjectCapabilityDataPublishableGenqlSelection{
    /** The visibility status of this metaobject across all channels. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for publishable capability to adjust visibility on channels. */
export interface MetaobjectCapabilityDataPublishableInput {
/** The visibility status of this metaobject across all channels. */
status: MetaobjectStatus}


/** The input fields for enabling and disabling the publishable capability. */
export interface MetaobjectCapabilityPublishableInput {
/** Indicates whether the capability should be enabled or disabled. */
enabled: Scalars['Boolean']}


/** The input fields for enabling and disabling the translatable capability. */
export interface MetaobjectCapabilityTranslatableInput {
/** Indicates whether the capability should be enabled or disabled. */
enabled: Scalars['Boolean']}


/** The input fields for updating a metaobject capability. */
export interface MetaobjectCapabilityUpdateInput {
/** The input for updating the publishable capability. */
publishable?: (MetaobjectCapabilityPublishableInput | null),
/** The input for updating the translatable capability. */
translatable?: (MetaobjectCapabilityTranslatableInput | null)}


/**
 * An auto-generated type for paginating through multiple Metaobjects.
 * 
 */
export interface MetaobjectConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetaobjectEdgeGenqlSelection
    /** A list of the nodes contained in MetaobjectEdge. */
    nodes?: MetaobjectGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating a metaobject. */
export interface MetaobjectCreateInput {
/** The type of the metaobject. Must match an existing metaobject definition type. */
type: Scalars['String'],
/** A unique handle for the metaobject. This value is auto-generated when omitted. */
handle?: (Scalars['String'] | null),
/** Values for fields. These are mapped by key to fields of the metaobject definition. */
fields?: (MetaobjectFieldInput[] | null),
/** Capabilities for the metaobject. */
capabilities?: (MetaobjectCapabilityDataInput | null)}


/** Return type for `metaobjectCreate` mutation. */
export interface MetaobjectCreatePayloadGenqlSelection{
    /** The created metaobject. */
    metaobject?: MetaobjectGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Provides the definition of a generic object structure composed of metafields. */
export interface MetaobjectDefinitionGenqlSelection{
    /** Access configuration for the metaobject definition. */
    access?: MetaobjectAccessGenqlSelection
    /** The capabilities of the metaobject definition. */
    capabilities?: MetaobjectCapabilitiesGenqlSelection
    /** The administrative description. */
    description?: boolean | number
    /** The key of a field to reference as the display name for each object. */
    displayNameKey?: boolean | number
    /** The fields defined for this object type. */
    fieldDefinitions?: MetaobjectFieldDefinitionGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** A paginated connection to the metaobjects associated with the definition. */
    metaobjects?: (MetaobjectConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The count of metaobjects created for the definition. */
    metaobjectsCount?: boolean | number
    /** The human-readable name. */
    name?: boolean | number
    /** The type of the object definition. Defines the namespace of associated metafields. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple MetaobjectDefinitions.
 * 
 */
export interface MetaobjectDefinitionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: MetaobjectDefinitionEdgeGenqlSelection
    /** A list of the nodes contained in MetaobjectDefinitionEdge. */
    nodes?: MetaobjectDefinitionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating a metaobject definition. */
export interface MetaobjectDefinitionCreateInput {
/** A human-readable name for the definition. This can be changed at any time. */
name?: (Scalars['String'] | null),
/** An administrative description of the definition. */
description?: (Scalars['String'] | null),
/**
 * The type of the metaobject definition. This cannot be changed.
 * 
 * Must be 3-255 characters long and only contain alphanumeric, hyphen, and underscore characters.
 * 
 */
type: Scalars['String'],
/** A set of field definitions to create on this metaobject definition. */
fieldDefinitions: MetaobjectFieldDefinitionCreateInput[],
/** Access configuration for the metaobjects created with this definition. */
access?: (MetaobjectAccessInput | null),
/** The key of a field to reference as the display name for metaobjects of this type. */
displayNameKey?: (Scalars['String'] | null),
/** The capabilities of the metaobject definition. */
capabilities?: (MetaobjectCapabilityCreateInput | null)}


/** Return type for `metaobjectDefinitionCreate` mutation. */
export interface MetaobjectDefinitionCreatePayloadGenqlSelection{
    /** The created metaobject definition. */
    metaobjectDefinition?: MetaobjectDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metaobjectDefinitionDelete` mutation. */
export interface MetaobjectDefinitionDeletePayloadGenqlSelection{
    /** The ID of the deleted metaobjects definition. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one MetaobjectDefinition and a cursor during pagination.
 * 
 */
export interface MetaobjectDefinitionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetaobjectDefinitionEdge. */
    node?: MetaobjectDefinitionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for updating a metaobject definition. */
export interface MetaobjectDefinitionUpdateInput {
/** A human-readable name for the definition. */
name?: (Scalars['String'] | null),
/** An administrative description of the definition. */
description?: (Scalars['String'] | null),
/** A set of operations for modifying field definitions. */
fieldDefinitions?: (MetaobjectFieldDefinitionOperationInput[] | null),
/** Access configuration for the metaobjects created with this definition. */
access?: (MetaobjectAccessInput | null),
/** The key of a metafield to reference as the display name for objects of this type. */
displayNameKey?: (Scalars['String'] | null),
/**
 * Whether the field order should be reset while updating.
 * If `true`, then the order is assigned based on submitted fields followed by alphabetized field omissions.
 * If `false`, then no changes are made to the existing field order and new fields are appended at the end.
 * 
 */
resetFieldOrder?: (Scalars['Boolean'] | null),
/** The capabilities of the metaobject definition. */
capabilities?: (MetaobjectCapabilityUpdateInput | null)}


/** Return type for `metaobjectDefinitionUpdate` mutation. */
export interface MetaobjectDefinitionUpdatePayloadGenqlSelection{
    /** The updated metaobject definition. */
    metaobjectDefinition?: MetaobjectDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `metaobjectDelete` mutation. */
export interface MetaobjectDeletePayloadGenqlSelection{
    /** The ID of the deleted metaobject. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Metaobject and a cursor during pagination.
 * 
 */
export interface MetaobjectEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of MetaobjectEdge. */
    node?: MetaobjectGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Provides a field definition and the data value assigned to it. */
export interface MetaobjectFieldGenqlSelection{
    /** The field definition for this object key. */
    definition?: MetaobjectFieldDefinitionGenqlSelection
    /** The object key of this field. */
    key?: boolean | number
    /** For resource reference fields, provides the referenced object. */
    reference?: MetafieldReferenceGenqlSelection
    /** For resource reference list fields, provides the list of referenced objects. */
    references?: (MetafieldReferenceConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null)} })
    /** The type of the field. */
    type?: boolean | number
    /** The assigned field value, always stored as a string regardless of the field type. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Defines a field for a MetaobjectDefinition with properties
 * such as the field's data type and validations.
 * 
 */
export interface MetaobjectFieldDefinitionGenqlSelection{
    /** The administrative description. */
    description?: boolean | number
    /** A key name used to identify the field within the metaobject composition. */
    key?: boolean | number
    /** The human-readable name. */
    name?: boolean | number
    /** Required status of the field within the metaobject composition. */
    required?: boolean | number
    /** The type of data that the field stores. */
    type?: MetafieldDefinitionTypeGenqlSelection
    /**
     * A list of [validation options](https://shopify.dev/apps/metafields/definitions/validation) for
     * the field. For example, a field with the type `date` can set a minimum date requirement.
     * 
     */
    validations?: MetafieldDefinitionValidationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating a metaobject field definition. */
export interface MetaobjectFieldDefinitionCreateInput {
/**
 * The key of the new field definition. This cannot be changed.
 * 
 * Must be 3-64 characters long and only contain alphanumeric, hyphen, and underscore characters.
 * 
 */
key: Scalars['String'],
/** The metafield type applied to values of the field. */
type: Scalars['String'],
/** A human-readable name for the field. This can be changed at any time. */
name?: (Scalars['String'] | null),
/** An administrative description of the field. */
description?: (Scalars['String'] | null),
/** Whether metaobjects require a saved value for the field. */
required?: (Scalars['Boolean'] | null),
/** Custom validations that apply to values assigned to the field. */
validations?: (MetafieldDefinitionValidationInput[] | null)}


/** The input fields for deleting a metaobject field definition. */
export interface MetaobjectFieldDefinitionDeleteInput {
/** The key of the field definition to delete. */
key: Scalars['String']}


/**
 * The input fields for possible operations for modifying field definitions. Exactly one option is required.
 * 
 */
export interface MetaobjectFieldDefinitionOperationInput {
/** The input fields for creating a metaobject field definition. */
create?: (MetaobjectFieldDefinitionCreateInput | null),
/** The input fields for updating a metaobject field definition. */
update?: (MetaobjectFieldDefinitionUpdateInput | null),
/** The input fields for deleting a metaobject field definition. */
delete?: (MetaobjectFieldDefinitionDeleteInput | null)}


/** The input fields for updating a metaobject field definition. */
export interface MetaobjectFieldDefinitionUpdateInput {
/** The key of the field definition to update. */
key: Scalars['String'],
/** A human-readable name for the field. */
name?: (Scalars['String'] | null),
/** An administrative description of the field. */
description?: (Scalars['String'] | null),
/** Whether metaobjects require a saved value for the field. */
required?: (Scalars['Boolean'] | null),
/** Custom validations that apply to values assigned to the field. */
validations?: (MetafieldDefinitionValidationInput[] | null)}


/** The input fields for a metaobject field value. */
export interface MetaobjectFieldInput {
/** The key of the field. */
key: Scalars['String'],
/** The value of the field. */
value: Scalars['String']}


/** The input fields for retrieving a metaobject by handle. */
export interface MetaobjectHandleInput {
/** The type of the metaobject. Must match an existing metaobject definition type. */
type: Scalars['String'],
/** The handle of the metaobject to create or update. */
handle: Scalars['String']}


/** The input fields for updating a metaobject. */
export interface MetaobjectUpdateInput {
/** A unique handle for the metaobject. */
handle?: (Scalars['String'] | null),
/** Values for fields. These are mapped by key to fields of the metaobject definition. */
fields?: (MetaobjectFieldInput[] | null),
/** Capabilities for the metaobject. */
capabilities?: (MetaobjectCapabilityDataInput | null)}


/** Return type for `metaobjectUpdate` mutation. */
export interface MetaobjectUpdatePayloadGenqlSelection{
    /** The updated metaobject. */
    metaobject?: MetaobjectGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for upserting a metaobject. */
export interface MetaobjectUpsertInput {
/** The handle of the metaobject. */
handle?: (Scalars['String'] | null),
/** Values for fields. These are mapped by key to fields of the metaobject definition. */
fields?: (MetaobjectFieldInput[] | null),
/** Capabilities for the metaobject. */
capabilities?: (MetaobjectCapabilityDataInput | null)}


/** Return type for `metaobjectUpsert` mutation. */
export interface MetaobjectUpsertPayloadGenqlSelection{
    /** The created or updated metaobject. */
    metaobject?: MetaobjectGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Defines errors encountered while managing metaobject resources. */
export interface MetaobjectUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The index of the failing list element in an array. */
    elementIndex?: boolean | number
    /** The key of the failing object element. */
    elementKey?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a Shopify hosted 3D model.
 * 
 */
export interface Model3dGenqlSelection{
    /** A word or phrase to share the nature or contents of a media. */
    alt?: boolean | number
    /** The 3d model's bounding box information. */
    boundingBox?: Model3dBoundingBoxGenqlSelection
    /** The 3d model's filename. */
    filename?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The media content type. */
    mediaContentType?: boolean | number
    /** Any errors which have occurred on the media. */
    mediaErrors?: MediaErrorGenqlSelection
    /** The warnings attached to the media. */
    mediaWarnings?: MediaWarningGenqlSelection
    /** The 3d model's original source. */
    originalSource?: Model3dSourceGenqlSelection
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /** The 3d model's sources. */
    sources?: Model3dSourceGenqlSelection
    /** Current status of the media. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Bounding box information of a 3d model.
 * 
 */
export interface Model3dBoundingBoxGenqlSelection{
    /**
     * Size in meters of the smallest volume which contains the 3d model.
     * 
     */
    size?: Vector3GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A source for a Shopify-hosted 3d model.
 * 
 * Types of sources include GLB and USDZ formatted 3d models, where the former
 * is an original 3d model and the latter has been converted from the original.
 * 
 * If the original source is in GLB format and over 15 MBs in size, then both the
 * original and the USDZ formatted source are optimized to reduce the file size.
 * 
 */
export interface Model3dSourceGenqlSelection{
    /** The 3d model source's filesize. */
    filesize?: boolean | number
    /** The 3d model source's format. */
    format?: boolean | number
    /** The 3d model source's MIME type. */
    mimeType?: boolean | number
    /** The 3d model source's URL. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A collection of monetary values in their respective currencies. Typically used in the context of multi-currency pricing and transactions,
 * when an amount in the shop's currency is converted to the customer's currency of choice (the presentment currency).
 * 
 */
export interface MoneyBagGenqlSelection{
    /** Amount in presentment currency. */
    presentmentMoney?: MoneyV2GenqlSelection
    /** Amount in shop currency. */
    shopMoney?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a monetary value with currency. */
export interface MoneyInput {
/** Decimal money amount. */
amount: Scalars['Decimal'],
/** Currency of the money. */
currencyCode: CurrencyCode}


/**
 * A monetary value with currency.
 * 
 */
export interface MoneyV2GenqlSelection{
    /** Decimal money amount. */
    amount?: boolean | number
    /** Currency of the money. */
    currencyCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a single move of an object to a specific position in a set, using a zero-based index.
 * 
 */
export interface MoveInput {
/** The ID of the object to be moved. */
id: Scalars['ID'],
/** The new position of the object in the set. */
newPosition: Scalars['UnsignedInt64']}


/** The schema's entry point for all mutation operations. */
export interface MutationGenqlSelection{
    /**
     * @deprecated Use `abandonmentUpdateActivitiesDeliveryStatuses` instead.
     * Updates the email state value for an abandonment.
     */
    abandonmentEmailStateUpdate?: (AbandonmentEmailStateUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the abandonment that needs to be updated. */
    id: Scalars['ID'], 
    /** The new email state of the abandonment. */
    emailState: AbandonmentEmailState, 
    /** The date and time for when the email was sent, if that is the case. */
    emailSentAt?: (Scalars['DateTime'] | null), 
    /** The reason why the email was or was not sent. */
    emailStateChangeReason?: (Scalars['String'] | null)} })
    /** Updates the marketing activities delivery statuses for an abandonment. */
    abandonmentUpdateActivitiesDeliveryStatuses?: (AbandonmentUpdateActivitiesDeliveryStatusesPayloadGenqlSelection & { __args: {
    /** The ID of the abandonment that needs to be updated. */
    abandonmentId: Scalars['ID'], 
    /** The ID of the marketing activity that needs to be updated. */
    marketingActivityId: Scalars['ID'], 
    /** The new delivery status of the marketing activity for this abandonment. */
    deliveryStatus: AbandonmentDeliveryState, 
    /** The delivery timestamp if the activity delivered. */
    deliveredAt?: (Scalars['DateTime'] | null), 
    /** The reason why the activity was or was not delivered. */
    deliveryStatusChangeReason?: (Scalars['String'] | null)} })
    /**
     * Charges a shop for features or services one time.
     * This type of charge is recommended for apps that aren't billed on a recurring basis.
     * Test and demo shops aren't charged.
     * 
     */
    appPurchaseOneTimeCreate?: (AppPurchaseOneTimeCreatePayloadGenqlSelection & { __args: {
    /** The name of the one-time purchase from the app. */
    name: Scalars['String'], 
    /** The amount to be charged to the store for the app one-time purchase. */
    price: MoneyInput, 
    /** The URL where the merchant is redirected after approving the app one-time purchase. */
    returnUrl: Scalars['URL'], 
    /** Whether the app one-time purchase is a test transaction. The default value is `false`. */
    test?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated This mutation will be removed in a future version.
     * Creates a record of the attributed revenue for the app. This mutation should only be used to capture transactions that are not managed by the Billing API.
     */
    appRevenueAttributionRecordCreate?: (AppRevenueAttributionRecordCreatePayloadGenqlSelection & { __args: {
    /** The app revenue attribution record to be created. */
    appRevenueAttributionRecord: AppRevenueAttributionRecordInput} })
    /**
     * @deprecated This mutation will be removed in a future version.
     * Deletes a record of the attributed revenue for the app.
     */
    appRevenueAttributionRecordDelete?: (AppRevenueAttributionRecordDeletePayloadGenqlSelection & { __args: {
    /** The unique identifier of the revenue attribution record. */
    id: Scalars['ID']} })
    /** Cancels an app subscription on a store. */
    appSubscriptionCancel?: (AppSubscriptionCancelPayloadGenqlSelection & { __args: {
    /** The ID of the app subscription to be cancelled. */
    id: Scalars['ID'], 
    /**
     * Whether to issue prorated credits for the unused portion of the app subscription.  There will
     * be a corresponding deduction (based on revenue share) to your Partner account.
     * For example, if a $10.00 app subscription (with 0% revenue share) is cancelled and prorated half way
     * through the billing cycle, then the merchant will be credited $5.00 and that amount will be deducted
     * from your Partner account.
     * 
     */
    prorate?: (Scalars['Boolean'] | null)} })
    /** Allows an app to charge a store for features or services on a recurring basis. */
    appSubscriptionCreate?: (AppSubscriptionCreatePayloadGenqlSelection & { __args: {
    /** A descriptive name for the app subscription. */
    name: Scalars['String'], 
    /** Attaches one or more pricing plans to an app subscription. Only one pricing plan can be defined for each available type. */
    lineItems: AppSubscriptionLineItemInput[], 
    /** Whether the app subscription is a test transaction. The default value is `false`. */
    test?: (Scalars['Boolean'] | null), 
    /** The number of days of the free trial period, beginning on the day that the merchant approves the app charges. */
    trialDays?: (Scalars['Int'] | null), 
    /** The URL pointing to the page where the merchant is redirected after approving the app subscription. */
    returnUrl: Scalars['URL'], 
    /** The replacement behavior when creating an app subscription for a merchant with an already existing app subscription. */
    replacementBehavior?: (AppSubscriptionReplacementBehavior | null)} })
    /** Updates the capped amount on the usage pricing plan of an app subscription line item. */
    appSubscriptionLineItemUpdate?: (AppSubscriptionLineItemUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the app subscription line item to be updated. */
    id: Scalars['ID'], 
    /** The new maximum amount of usage charges that can be incurred within a subscription billing interval. */
    cappedAmount: MoneyInput} })
    /** Extends the trial of an app subscription. */
    appSubscriptionTrialExtend?: (AppSubscriptionTrialExtendPayloadGenqlSelection & { __args: {
    /** The ID of the app subscription to extend the trial for. */
    id: Scalars['ID'], 
    /** The number of days to extend the trial. The value must be greater than 0 and less than or equal to 1000. */
    days: Scalars['Int']} })
    /**
     * Enables an app to charge a store for features or services on a per-use basis.
     * The usage charge value is counted towards the `cappedAmount` limit that was specified in the `appUsagePricingDetails` field when the app subscription was created.
     * If you create an app usage charge that causes the total usage charges in a billing interval to exceed the capped amount, then a `Total price exceeds balance remaining` error is returned.
     * 
     */
    appUsageRecordCreate?: (AppUsageRecordCreatePayloadGenqlSelection & { __args: {
    /** The ID of the app subscription line item to create the usage record under. This app subscription line item must have a usage pricing plan. */
    subscriptionLineItemId: Scalars['ID'], 
    /** The price of the app usage record. */
    price: MoneyInput, 
    /** The description of the app usage record. */
    description: Scalars['String'], 
    /**
     * A unique key generated by the client to avoid duplicate charges. Maximum length of 255 characters.
     * 
     */
    idempotencyKey?: (Scalars['String'] | null)} })
    /**
     * Starts the cancelation process of a running bulk operation.
     * 
     * There may be a short delay from when a cancelation starts until the operation is actually canceled.
     * 
     */
    bulkOperationCancel?: (BulkOperationCancelPayloadGenqlSelection & { __args: {
    /** The ID of the bulk operation to cancel. */
    id: Scalars['ID']} })
    /**
     * Creates and runs a bulk operation mutation.
     * 
     * To learn how to bulk import large volumes of data asynchronously, refer to the
     * [bulk import data guide](https://shopify.dev/api/usage/bulk-operations/imports).
     * 
     */
    bulkOperationRunMutation?: (BulkOperationRunMutationPayloadGenqlSelection & { __args: {
    /** The mutation to be executed in bulk. */
    mutation: Scalars['String'], 
    /** The staged upload path of the file containing mutation variables. */
    stagedUploadPath: Scalars['String'], 
    /** An optional identifier which may be used for querying. */
    clientIdentifier?: (Scalars['String'] | null)} })
    /**
     * Creates and runs a bulk operation query.
     * 
     * See the [bulk operations guide](https://shopify.dev/api/usage/bulk-operations/imports) for more details.
     * 
     */
    bulkOperationRunQuery?: (BulkOperationRunQueryPayloadGenqlSelection & { __args: {
    /** The query to be executed in bulk. */
    query: Scalars['String']} })
    /** Creates product feedback for multiple products. */
    bulkProductResourceFeedbackCreate?: (BulkProductResourceFeedbackCreatePayloadGenqlSelection & { __args: {
    /** An array of inputs to create the feedback. Limited to 50. */
    feedbackInput: ProductResourceFeedbackInput[]} })
    /** Create a CartTransform function to the Shop. */
    cartTransformCreate?: (CartTransformCreatePayloadGenqlSelection & { __args: {
    /** The identifier of the Function providing the cart transform. */
    functionId: Scalars['String']} })
    /** Destroy a cart transform function from the Shop. */
    cartTransformDelete?: (CartTransformDeletePayloadGenqlSelection & { __args: {
    /** A globally-unique identifier for the cart transform. */
    id: Scalars['ID']} })
    /** Updates the context of a catalog. */
    catalogContextUpdate?: (CatalogContextUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the catalog for which to update the context. */
    catalogId: Scalars['ID'], 
    /** The contexts to add to the catalog. */
    contextsToAdd?: (CatalogContextInput | null), 
    /** The contexts to remove from the catalog. */
    contextsToRemove?: (CatalogContextInput | null)} })
    /** Creates a new catalog. */
    catalogCreate?: (CatalogCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new catalog. */
    input: CatalogCreateInput} })
    /** Delete a catalog. */
    catalogDelete?: (CatalogDeletePayloadGenqlSelection & { __args: {
    /** The ID of the catalog to delete. */
    id: Scalars['ID'], 
    /** Whether to also delete the price list and the publication owned by the catalog. */
    deleteDependentResources?: (Scalars['Boolean'] | null)} })
    /** Updates an existing catalog. */
    catalogUpdate?: (CatalogUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the catalog to update. */
    id: Scalars['ID'], 
    /** The properties of the updated catalog. */
    input: CatalogUpdateInput} })
    /** Adds products to a collection. */
    collectionAddProducts?: (CollectionAddProductsPayloadGenqlSelection & { __args: {
    /** The ID of the collection that's being updated. This can't be a smart collection. */
    id: Scalars['ID'], 
    /**
     * The IDs of the products that are being added to the collection.
     * If any of the products is already present in the input collection,
     * then an error is raised and no products are added.
     * 
     */
    productIds: Scalars['ID'][]} })
    /** Asynchronously adds a set of products to a given collection. It can take a long time to run. Instead of returning a collection, it returns a job which should be polled. */
    collectionAddProductsV2?: (CollectionAddProductsV2PayloadGenqlSelection & { __args: {
    /** The ID of the collection that's being updated. */
    id: Scalars['ID'], 
    /** The IDs of the products that are being added to the collection. If the collection's sort order is manual, the products will be added in the order in which they are provided. */
    productIds: Scalars['ID'][]} })
    /**
     * Creates a collection.
     * 
     */
    collectionCreate?: (CollectionCreatePayloadGenqlSelection & { __args: {
    /** The properties to use when creating the collection. */
    input: CollectionInput} })
    /** Deletes a collection. */
    collectionDelete?: (CollectionDeletePayloadGenqlSelection & { __args: {
    /** The collection to delete. */
    input: CollectionDeleteInput} })
    /**
     * @deprecated Use `publishablePublish` instead.
     * Publishes a collection to a channel.
     */
    collectionPublish?: (CollectionPublishPayloadGenqlSelection & { __args: {
    /** Specify a collection to publish and the sales channels to publish it to. */
    input: CollectionPublishInput} })
    /** Removes a set of products from a given collection. The mutation can take a long time to run. Instead of returning an updated collection the mutation returns a job, which should be [polled](https://shopify.dev/api/admin-graphql/latest/queries/job). For use with manual collections only. */
    collectionRemoveProducts?: (CollectionRemoveProductsPayloadGenqlSelection & { __args: {
    /** The ID of the collection to remove products from. The ID must reference an existing manual collection. */
    id: Scalars['ID'], 
    /** The IDs of products to remove from the collection. The mutation doesn't validate that the products belong to the collection or whether the products exist. */
    productIds: Scalars['ID'][]} })
    /** Asynchronously reorders a set of products within a specified collection. Instead of returning an updated collection, this mutation returns a job, which should be [polled](https://shopify.dev/api/admin-graphql/latest/queries/job). The [`Collection.sortOrder`](https://shopify.dev/api/admin-graphql/latest/objects/Collection#field-collection-sortorder) must be `MANUAL`. Displaced products will have their position altered in a consistent manner, with no gaps. */
    collectionReorderProducts?: (CollectionReorderProductsPayloadGenqlSelection & { __args: {
    /** The ID of the collection on which to reorder products. */
    id: Scalars['ID'], 
    /** A list of moves to perform, which will be evaluated in order. Up to 250 moves are supported, the `newPosition` does not have to be unique. */
    moves: MoveInput[]} })
    /**
     * @deprecated Use `publishableUnpublish` instead.
     * Unpublishes a collection.
     */
    collectionUnpublish?: (CollectionUnpublishPayloadGenqlSelection & { __args: {
    /** Specify a collection to unpublish and the sales channels to remove it from. */
    input: CollectionUnpublishInput} })
    /** Updates a collection. */
    collectionUpdate?: (CollectionUpdatePayloadGenqlSelection & { __args: {
    /** The updated properties for the collection. */
    input: CollectionInput} })
    /** Deletes a list of companies. */
    companiesDelete?: (CompaniesDeletePayloadGenqlSelection & { __args: {
    /** A list of IDs of companies to delete. */
    companyIds: Scalars['ID'][]} })
    /** Deletes a company address. */
    companyAddressDelete?: (CompanyAddressDeletePayloadGenqlSelection & { __args: {
    /** The ID of the address to delete. */
    addressId: Scalars['ID']} })
    /** Assigns the customer as a company contact. */
    companyAssignCustomerAsContact?: (CompanyAssignCustomerAsContactPayloadGenqlSelection & { __args: {
    /** The ID of the company to assign the contact to. */
    companyId: Scalars['ID'], 
    /** The ID of the customer to assign as the contact. */
    customerId: Scalars['ID']} })
    /** Assigns the main contact for the company. */
    companyAssignMainContact?: (CompanyAssignMainContactPayloadGenqlSelection & { __args: {
    /** The ID of the company to assign the main contact to. */
    companyId: Scalars['ID'], 
    /** The ID of the company contact to be assigned as the main contact. */
    companyContactId: Scalars['ID']} })
    /** Assigns a role to a contact for a location. */
    companyContactAssignRole?: (CompanyContactAssignRolePayloadGenqlSelection & { __args: {
    /** The ID of the contact to assign a role to. */
    companyContactId: Scalars['ID'], 
    /** The ID of the role to assign to a contact. */
    companyContactRoleId: Scalars['ID'], 
    /** The ID of the location to assign a role to a contact. */
    companyLocationId: Scalars['ID']} })
    /** Assigns roles on a company contact. */
    companyContactAssignRoles?: (CompanyContactAssignRolesPayloadGenqlSelection & { __args: {
    /** The contact whose roles are being assigned. */
    companyContactId: Scalars['ID'], 
    /** The new roles to assign. */
    rolesToAssign: CompanyContactRoleAssign[]} })
    /** Creates a company contact. */
    companyContactCreate?: (CompanyContactCreatePayloadGenqlSelection & { __args: {
    /** The ID of the company that the company contact belongs to. */
    companyId: Scalars['ID'], 
    /** The fields to use to create the company contact. */
    input: CompanyContactInput} })
    /** Deletes a company contact. */
    companyContactDelete?: (CompanyContactDeletePayloadGenqlSelection & { __args: {
    /** The ID of the company contact to delete. */
    companyContactId: Scalars['ID']} })
    /** Removes a company contact from a Company. */
    companyContactRemoveFromCompany?: (CompanyContactRemoveFromCompanyPayloadGenqlSelection & { __args: {
    /** The ID of the company contact to remove from the Company. */
    companyContactId: Scalars['ID']} })
    /** Revokes a role on a company contact. */
    companyContactRevokeRole?: (CompanyContactRevokeRolePayloadGenqlSelection & { __args: {
    /** The ID of the contact to revoke a role from. */
    companyContactId: Scalars['ID'], 
    /** The ID of the role assignment to revoke from a contact. */
    companyContactRoleAssignmentId: Scalars['ID']} })
    /** Revokes roles on a company contact. */
    companyContactRevokeRoles?: (CompanyContactRevokeRolesPayloadGenqlSelection & { __args: {
    /** The contact whose roles are being revoked. */
    companyContactId: Scalars['ID'], 
    /** The current role assignment IDs to revoke. */
    roleAssignmentIds?: (Scalars['ID'][] | null), 
    /** Flag to revoke all roles on the contact. */
    revokeAll?: (Scalars['Boolean'] | null)} })
    /** Sends the company contact a welcome email. */
    companyContactSendWelcomeEmail?: (CompanyContactSendWelcomeEmailPayloadGenqlSelection & { __args: {
    /** The ID of the company contact to send welcome email to. */
    companyContactId: Scalars['ID'], 
    /** The welcome email fields. */
    email?: (EmailInput | null)} })
    /** Updates a company contact. */
    companyContactUpdate?: (CompanyContactUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the company contact to be updated. */
    companyContactId: Scalars['ID'], 
    /** The fields to use to update the company contact. */
    input: CompanyContactInput} })
    /** Deletes one or more company contacts. */
    companyContactsDelete?: (CompanyContactsDeletePayloadGenqlSelection & { __args: {
    /** The list of IDs of the company contacts to delete. */
    companyContactIds: Scalars['ID'][]} })
    /** Creates a company. */
    companyCreate?: (CompanyCreatePayloadGenqlSelection & { __args: {
    /** The fields to use when creating the company. */
    input: CompanyCreateInput} })
    /** Deletes a company. */
    companyDelete?: (CompanyDeletePayloadGenqlSelection & { __args: {
    /** The ID of the company to delete. */
    id: Scalars['ID']} })
    /** Updates an address on a company location. */
    companyLocationAssignAddress?: (CompanyLocationAssignAddressPayloadGenqlSelection & { __args: {
    /** The ID of the company location to update addresses on. */
    locationId: Scalars['ID'], 
    /** The input fields to use to update the address. */
    address: CompanyAddressInput, 
    /** The list of address types on the location to update. */
    addressTypes: CompanyAddressType[]} })
    /** Assigns roles on a company location. */
    companyLocationAssignRoles?: (CompanyLocationAssignRolesPayloadGenqlSelection & { __args: {
    /** The location whose roles are being assigned. */
    companyLocationId: Scalars['ID'], 
    /** The roles to assign. */
    rolesToAssign: CompanyLocationRoleAssign[]} })
    /** Assigns tax exemptions to the company location. */
    companyLocationAssignTaxExemptions?: (CompanyLocationAssignTaxExemptionsPayloadGenqlSelection & { __args: {
    /** The location to which the tax exemptions will be assigned. */
    companyLocationId: Scalars['ID'], 
    /** The tax exemptions that are being assigned to the location. */
    taxExemptions: TaxExemption[]} })
    /** Creates a company location. */
    companyLocationCreate?: (CompanyLocationCreatePayloadGenqlSelection & { __args: {
    /** The ID of the company that the company location belongs to. */
    companyId: Scalars['ID'], 
    /** The fields to use to create the company location. */
    input: CompanyLocationInput} })
    /** Creates a tax registration for a company location. */
    companyLocationCreateTaxRegistration?: (CompanyLocationCreateTaxRegistrationPayloadGenqlSelection & { __args: {
    /** The ID of the company location that the tax registration gets assigned to. */
    locationId: Scalars['ID'], 
    /** The unique tax id for the tax registration. */
    taxId: Scalars['String']} })
    /** Deletes a company location. */
    companyLocationDelete?: (CompanyLocationDeletePayloadGenqlSelection & { __args: {
    /** The ID of the company location to delete. */
    companyLocationId: Scalars['ID']} })
    /** Revokes roles on a company location. */
    companyLocationRevokeRoles?: (CompanyLocationRevokeRolesPayloadGenqlSelection & { __args: {
    /** The location whose roles are being revoked. */
    companyLocationId: Scalars['ID'], 
    /** The current roles to revoke. */
    rolesToRevoke: Scalars['ID'][]} })
    /** Revokes tax exemptions from the company location. */
    companyLocationRevokeTaxExemptions?: (CompanyLocationRevokeTaxExemptionsPayloadGenqlSelection & { __args: {
    /** The location from which the tax exemptions will be revoked. */
    companyLocationId: Scalars['ID'], 
    /** The tax exemptions that are being revoked from the location. */
    taxExemptions: TaxExemption[]} })
    /** Revokes tax registration on a company location. */
    companyLocationRevokeTaxRegistration?: (CompanyLocationRevokeTaxRegistrationPayloadGenqlSelection & { __args: {
    /** The location whose tax registration is being revoked. */
    companyLocationId: Scalars['ID']} })
    /** Updates a company location. */
    companyLocationUpdate?: (CompanyLocationUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the company location to update. */
    companyLocationId: Scalars['ID'], 
    /** The input fields to update in the company location. */
    input: CompanyLocationUpdateInput} })
    /** Deletes a list of company locations. */
    companyLocationsDelete?: (CompanyLocationsDeletePayloadGenqlSelection & { __args: {
    /** A list of IDs of company locations to delete. */
    companyLocationIds: Scalars['ID'][]} })
    /** Revokes the main contact from the company. */
    companyRevokeMainContact?: (CompanyRevokeMainContactPayloadGenqlSelection & { __args: {
    /** The ID of the company to revoke the main contact from. */
    companyId: Scalars['ID']} })
    /** Updates a company. */
    companyUpdate?: (CompanyUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the company to be updated. */
    companyId: Scalars['ID'], 
    /** The input fields to update the company. */
    input: CompanyInput} })
    /** Add tax exemptions for the customer. */
    customerAddTaxExemptions?: (CustomerAddTaxExemptionsPayloadGenqlSelection & { __args: {
    /** The ID of the customer to update. */
    customerId: Scalars['ID'], 
    /**
     * The list of tax exemptions to add for the customer, in the format of an array or a comma-separated list. Example values: `["CA_BC_RESELLER_EXEMPTION", "CA_STATUS_CARD_EXEMPTION"]`, `"CA_BC_RESELLER_EXEMPTION, CA_STATUS_CARD_EXEMPTION"`.
     * 
     */
    taxExemptions: TaxExemption[]} })
    /** Create a new customer. As of API version 2022-10, apps using protected customer data must meet the protected customer data [requirements](https://shopify.dev/apps/store/data-protection/protected-customer-data). */
    customerCreate?: (CustomerCreatePayloadGenqlSelection & { __args: {
    /** The input fields to create a customer. */
    input: CustomerInput} })
    /** Delete a customer. As of API version 2022-10, apps using protected customer data must meet the protected customer data [requirements](https://shopify.dev/apps/store/data-protection/protected-customer-data). */
    customerDelete?: (CustomerDeletePayloadGenqlSelection & { __args: {
    /** Specifies the customer to delete. */
    input: CustomerDeleteInput} })
    /**
     * Update a customer's email marketing information information.
     * 
     */
    customerEmailMarketingConsentUpdate?: (CustomerEmailMarketingConsentUpdatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields to update a customer's email marketing consent information. */
    input: CustomerEmailMarketingConsentUpdateInput} })
    /** Generate an account activation URL for a customer. */
    customerGenerateAccountActivationUrl?: (CustomerGenerateAccountActivationUrlPayloadGenqlSelection & { __args: {
    /** The ID of the customer that the URL is generated for. */
    customerId: Scalars['ID']} })
    /** Merges two customers. */
    customerMerge?: (CustomerMergePayloadGenqlSelection & { __args: {
    /** The ID of the first customer that will be merged. */
    customerOneId: Scalars['ID'], 
    /** The ID of the second customer that will be merged. */
    customerTwoId: Scalars['ID'], 
    /** The fields to override the default customer merge rules. */
    overrideFields?: (CustomerMergeOverrideFields | null)} })
    /**
     * Creates a vaulted payment method for a customer from duplication data.
     * 
     * This data must be obtained from another shop within the same organization.
     * 
     * Currently, this only supports Shop Pay payment methods. This is only available for selected partner apps.
     * 
     */
    customerPaymentMethodCreateFromDuplicationData?: (CustomerPaymentMethodCreateFromDuplicationDataPayloadGenqlSelection & { __args: {
    /** The ID of the customer. */
    customerId: Scalars['ID'], 
    /** The billing address. */
    billingAddress: MailingAddressInput, 
    /** The encrypted payment method data. */
    encryptedDuplicationData: Scalars['String']} })
    /** Creates a credit card payment method for a customer. */
    customerPaymentMethodCreditCardCreate?: (CustomerPaymentMethodCreditCardCreatePayloadGenqlSelection & { __args: {
    /** The ID of the customer. */
    customerId: Scalars['ID'], 
    /** The billing address. */
    billingAddress: MailingAddressInput, 
    /** The Cardserver session ID. */
    sessionId: Scalars['String']} })
    /** Updates the credit card payment method for a customer. */
    customerPaymentMethodCreditCardUpdate?: (CustomerPaymentMethodCreditCardUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the customer payment method. */
    id: Scalars['ID'], 
    /** The billing address. */
    billingAddress: MailingAddressInput, 
    /** The Cardserver session ID. */
    sessionId: Scalars['String']} })
    /**
     * Returns encrypted data that can be used to duplicate the payment method in another shop within the same organization.
     * 
     * Currently, this only supports Shop Pay payment methods. This is only available for selected partner apps.
     * 
     */
    customerPaymentMethodGetDuplicationData?: (CustomerPaymentMethodGetDuplicationDataPayloadGenqlSelection & { __args: {
    /** The payment method to be duplicated. */
    customerPaymentMethodId: Scalars['ID'], 
    /** The shop the payment method will be duplicated into. */
    targetShopId: Scalars['ID'], 
    /** The customer the payment method will be duplicated into. */
    targetCustomerId: Scalars['ID']} })
    /**
     * Returns a URL that allows the customer to update a specific payment method.
     * 
     * Currently, `customerPaymentMethodGetUpdateUrl` only supports Shop Pay.
     * 
     */
    customerPaymentMethodGetUpdateUrl?: (CustomerPaymentMethodGetUpdateUrlPayloadGenqlSelection & { __args: {
    /** The payment method to be updated. */
    customerPaymentMethodId: Scalars['ID']} })
    /** Creates a PayPal billing agreement for a customer. */
    customerPaymentMethodPaypalBillingAgreementCreate?: (CustomerPaymentMethodPaypalBillingAgreementCreatePayloadGenqlSelection & { __args: {
    /** The ID of the customer. */
    customerId: Scalars['ID'], 
    /** The billing address. */
    billingAddress?: (MailingAddressInput | null), 
    /** The billing agreement ID from PayPal that starts with 'B-' (for example, `B-1234XXXXX`). */
    billingAgreementId: Scalars['String'], 
    /** Whether the PayPal billing agreement is inactive. */
    inactive?: (Scalars['Boolean'] | null)} })
    /** Updates a PayPal billing agreement for a customer. */
    customerPaymentMethodPaypalBillingAgreementUpdate?: (CustomerPaymentMethodPaypalBillingAgreementUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the customer payment method. */
    id: Scalars['ID'], 
    /** The billing address. */
    billingAddress: MailingAddressInput} })
    /** Create a payment method from remote gateway identifiers. */
    customerPaymentMethodRemoteCreate?: (CustomerPaymentMethodRemoteCreatePayloadGenqlSelection & { __args: {
    /** The ID of the customer. */
    customerId: Scalars['ID'], 
    /** Remote gateway payment method details. */
    remoteReference: CustomerPaymentMethodRemoteInput} })
    /**
     * @deprecated Use `customerPaymentMethodRemoteCreate` instead.
     * Create a payment method from a credit card stored by Stripe.
     */
    customerPaymentMethodRemoteCreditCardCreate?: (CustomerPaymentMethodRemoteCreditCardCreatePayloadGenqlSelection & { __args: {
    /** The ID of the customer. */
    customerId: Scalars['ID'], 
    /** The Stripe Customer ID. */
    stripeCustomerId: Scalars['String'], 
    /** The Stripe Payment Method ID. */
    stripePaymentMethodId?: (Scalars['String'] | null)} })
    /** Revokes a customer's payment method. */
    customerPaymentMethodRevoke?: (CustomerPaymentMethodRevokePayloadGenqlSelection & { __args: {
    /** The ID of the customer payment method to be revoked. */
    customerPaymentMethodId: Scalars['ID']} })
    /** Sends a link to the customer so they can update a specific payment method. */
    customerPaymentMethodSendUpdateEmail?: (CustomerPaymentMethodSendUpdateEmailPayloadGenqlSelection & { __args: {
    /** The payment method to be updated. */
    customerPaymentMethodId: Scalars['ID'], 
    /** Specifies the payment method update email fields. */
    email?: (EmailInput | null)} })
    /** Remove tax exemptions from a customer. */
    customerRemoveTaxExemptions?: (CustomerRemoveTaxExemptionsPayloadGenqlSelection & { __args: {
    /** The ID of the customer to update. */
    customerId: Scalars['ID'], 
    /**
     * The list of tax exemptions to remove for the customer, in the format of an array or a comma-separated list. Example values: `["CA_BC_RESELLER_EXEMPTION", "A_STATUS_CARD_EXEMPTION"]`, `"CA_BC_RESELLER_EXEMPTION, CA_STATUS_CARD_EXEMPTION"`.
     * 
     */
    taxExemptions: TaxExemption[]} })
    /** Replace tax exemptions for a customer. */
    customerReplaceTaxExemptions?: (CustomerReplaceTaxExemptionsPayloadGenqlSelection & { __args: {
    /** The ID of the customer to update. */
    customerId: Scalars['ID'], 
    /**
     * The list of tax exemptions that will replace the current exemptions for a customer. Can be an array or a comma-separated list.
     *   Example values: `["CA_BC_RESELLER_EXEMPTION", "A_STATUS_CARD_EXEMPTION"]`, `"CA_BC_RESELLER_EXEMPTION, CA_STATUS_CARD_EXEMPTION"`.
     * 
     */
    taxExemptions: TaxExemption[]} })
    /** Creates a customer segment members query. */
    customerSegmentMembersQueryCreate?: (CustomerSegmentMembersQueryCreatePayloadGenqlSelection & { __args: {
    /** The input fields to create a customer segment members query. */
    input: CustomerSegmentMembersQueryInput} })
    /**
     * Update a customer's SMS marketing consent information.
     * 
     */
    customerSmsMarketingConsentUpdate?: (CustomerSmsMarketingConsentUpdatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields to update a customer's SMS marketing consent information. */
    input: CustomerSmsMarketingConsentUpdateInput} })
    /** Update a customer's attributes. As of API version 2022-10, apps using protected customer data must meet the protected customer data [requirements](https://shopify.dev/apps/store/data-protection/protected-customer-data). */
    customerUpdate?: (CustomerUpdatePayloadGenqlSelection & { __args: {
    /** Provides updated fields for the customer. */
    input: CustomerInput} })
    /** Updates a customer's default address. */
    customerUpdateDefaultAddress?: (CustomerUpdateDefaultAddressPayloadGenqlSelection & { __args: {
    /** The ID of the customer whose default address is being updated. */
    customerId: Scalars['ID'], 
    /** The ID of the customer's new default address. */
    addressId: Scalars['ID']} })
    /**
     * Creates a delegate access token.
     * 
     * To learn more about creating delegate access tokens, refer to
     * [Delegate OAuth access tokens to subsystems]
     * (https://shopify.dev/apps/auth/oauth/delegate-access-tokens).
     * 
     */
    delegateAccessTokenCreate?: (DelegateAccessTokenCreatePayloadGenqlSelection & { __args: {
    /** The input fields for creating a delegate access token. */
    input: DelegateAccessTokenInput} })
    /** Destroys a delegate access token. */
    delegateAccessTokenDestroy?: (DelegateAccessTokenDestroyPayloadGenqlSelection & { __args: {
    /** Provides the delegate access token to destroy. */
    accessToken: Scalars['String']} })
    /** Activates and deactivates delivery customizations. */
    deliveryCustomizationActivation?: (DeliveryCustomizationActivationPayloadGenqlSelection & { __args: {
    /** The global IDs of the delivery customizations. */
    ids: Scalars['ID'][], 
    /** The enabled status of the delivery customizations. */
    enabled: Scalars['Boolean']} })
    /** Creates a delivery customization. */
    deliveryCustomizationCreate?: (DeliveryCustomizationCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the delivery customization. */
    deliveryCustomization: DeliveryCustomizationInput} })
    /** Creates a delivery customization. */
    deliveryCustomizationDelete?: (DeliveryCustomizationDeletePayloadGenqlSelection & { __args: {
    /** The global ID of the delivery customization. */
    id: Scalars['ID']} })
    /** Updates a delivery customization. */
    deliveryCustomizationUpdate?: (DeliveryCustomizationUpdatePayloadGenqlSelection & { __args: {
    /** The global ID of the delivery customization. */
    id: Scalars['ID'], 
    /** The input data used to update the delivery customization. */
    deliveryCustomization: DeliveryCustomizationInput} })
    /** Create a delivery profile. */
    deliveryProfileCreate?: (deliveryProfileCreatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields for a delivery profile. */
    profile: DeliveryProfileInput} })
    /** Enqueue the removal of a delivery profile. */
    deliveryProfileRemove?: (deliveryProfileRemovePayloadGenqlSelection & { __args: {
    /** The ID of the delivery profile to remove. */
    id: Scalars['ID']} })
    /** Update a delivery profile. */
    deliveryProfileUpdate?: (deliveryProfileUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the delivery profile to update. */
    id: Scalars['ID'], 
    /** Specifies the input fields for a delivery profile. */
    profile: DeliveryProfileInput, 
    /** Whether this delivery profile should leave legacy mode. */
    leaveLegacyModeProfiles?: (Scalars['Boolean'] | null)} })
    /** Set the delivery settings for a shop. */
    deliverySettingUpdate?: (DeliverySettingUpdatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields for the delivery shop level settings. */
    setting: DeliverySettingInput} })
    /**
     * Assigns a location as the shipping origin while using legacy compatibility mode for multi-location delivery profiles.
     * 
     */
    deliveryShippingOriginAssign?: (DeliveryShippingOriginAssignPayloadGenqlSelection & { __args: {
    /** The ID of the location to assign as the shipping origin. */
    locationId: Scalars['ID']} })
    /** Activates an automatic discount. */
    discountAutomaticActivate?: (DiscountAutomaticActivatePayloadGenqlSelection & { __args: {
    /** The ID of the automatic discount to activate. */
    id: Scalars['ID']} })
    /** Creates an app discount. */
    discountAutomaticAppCreate?: (DiscountAutomaticAppCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the app discount. */
    automaticAppDiscount: DiscountAutomaticAppInput} })
    /** Updates an automatic app discount. */
    discountAutomaticAppUpdate?: (DiscountAutomaticAppUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the automatic app discount to update. */
    id: Scalars['ID'], 
    /** The input fields required to update the automatic app discount. */
    automaticAppDiscount: DiscountAutomaticAppInput} })
    /** Creates a basic automatic discount. */
    discountAutomaticBasicCreate?: (DiscountAutomaticBasicCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the automatic discount. */
    automaticBasicDiscount: DiscountAutomaticBasicInput} })
    /** Updates a basic automatic discount. */
    discountAutomaticBasicUpdate?: (DiscountAutomaticBasicUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the automatic discount to update. */
    id: Scalars['ID'], 
    /** The input data used to update the automatic discount. */
    automaticBasicDiscount: DiscountAutomaticBasicInput} })
    /**
     * Asynchronously delete automatic discounts in bulk if a `search` or `saved_search_id` argument is provided or if a
     * maximum discount threshold is reached (1,000). Otherwise, deletions will occur inline.
     * **Warning:** All automatic discounts will be deleted if a blank `search` argument is provided.
     * 
     */
    discountAutomaticBulkDelete?: (DiscountAutomaticBulkDeletePayloadGenqlSelection & { __args: {
    /**
     * The search query for filtering automatic discounts to delete.
     * 
     * For more information on the list of supported fields and search syntax, refer to the [AutomaticDiscountNodes query section](https://shopify.dev/api/admin-graphql/latest/queries/automaticDiscountNodes#argument-automaticdiscountnodes-query).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the saved search to use for filtering automatic discounts to delete. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the automatic discounts to delete. */
    ids?: (Scalars['ID'][] | null)} })
    /** Creates a BXGY automatic discount. */
    discountAutomaticBxgyCreate?: (DiscountAutomaticBxgyCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the automatic discount. */
    automaticBxgyDiscount: DiscountAutomaticBxgyInput} })
    /** Updates an existing Buy X, Get Y (BXGY) automatic discount. */
    discountAutomaticBxgyUpdate?: (DiscountAutomaticBxgyUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the automatic discount to update. */
    id: Scalars['ID'], 
    /** The input data used to update the automatic discount. */
    automaticBxgyDiscount: DiscountAutomaticBxgyInput} })
    /** Deactivates an automatic discount. */
    discountAutomaticDeactivate?: (DiscountAutomaticDeactivatePayloadGenqlSelection & { __args: {
    /** The ID of the automatic discount to deactivate. */
    id: Scalars['ID']} })
    /** Deletes an automatic discount. */
    discountAutomaticDelete?: (DiscountAutomaticDeletePayloadGenqlSelection & { __args: {
    /** The ID of the automatic discount to delete. */
    id: Scalars['ID']} })
    /** Activates a code discount. */
    discountCodeActivate?: (DiscountCodeActivatePayloadGenqlSelection & { __args: {
    /** The ID of the code discount to activate. */
    id: Scalars['ID']} })
    /** Creates a code app discount. */
    discountCodeAppCreate?: (DiscountCodeAppCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the app discount. */
    codeAppDiscount: DiscountCodeAppInput} })
    /** Updates a code app discount. */
    discountCodeAppUpdate?: (DiscountCodeAppUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the code app discount to update. */
    id: Scalars['ID'], 
    /** The input fields required to update the code app discount. */
    codeAppDiscount: DiscountCodeAppInput} })
    /** Creates a basic code discount. */
    discountCodeBasicCreate?: (DiscountCodeBasicCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the code discount. */
    basicCodeDiscount: DiscountCodeBasicInput} })
    /** Updates a basic code discount. */
    discountCodeBasicUpdate?: (DiscountCodeBasicUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the code discount to update. */
    id: Scalars['ID'], 
    /** The input data used to update the code discount. */
    basicCodeDiscount: DiscountCodeBasicInput} })
    /**
     * Asynchronously activate code discounts in bulk using a search query, a saved search ID, or a list of code discount IDs.
     * 
     */
    discountCodeBulkActivate?: (DiscountCodeBulkActivatePayloadGenqlSelection & { __args: {
    /**
     * The search query for filtering code discounts.
     * 
     * For more information on the list of supported fields and search syntax, refer to the [CodeDiscountNodes query section](https://shopify.dev/api/admin-graphql/latest/queries/codeDiscountNodes#argument-codediscountnodes-query).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the saved search. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the code discounts to activate. */
    ids?: (Scalars['ID'][] | null)} })
    /**
     * Asynchronously deactivate code discounts in bulk using a search query, a saved search ID, or a list of code discount IDs.
     * 
     */
    discountCodeBulkDeactivate?: (DiscountCodeBulkDeactivatePayloadGenqlSelection & { __args: {
    /**
     * The search query for filtering code discounts.
     * 
     * For more information on the list of supported fields and search syntax, refer to the [CodeDiscountNodes query section](https://shopify.dev/api/admin-graphql/latest/queries/codeDiscountNodes#argument-codediscountnodes-query).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the saved search. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the code discounts to deactivate. */
    ids?: (Scalars['ID'][] | null)} })
    /**
     * Asynchronously delete code discounts in bulk using a search query, a saved search ID, or a list of code discount IDs.
     * 
     */
    discountCodeBulkDelete?: (DiscountCodeBulkDeletePayloadGenqlSelection & { __args: {
    /**
     * The search query for filtering code discounts to delete.
     * 
     * For more information on the list of supported fields and search syntax, refer to the [CodeDiscountNodes query section](https://shopify.dev/api/admin-graphql/latest/queries/codeDiscountNodes#argument-codediscountnodes-query).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the saved search to use for filtering code discounts to delete. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the code discounts to delete. */
    ids?: (Scalars['ID'][] | null)} })
    /** Creates a Buy X get Y (BXGY) code discount. */
    discountCodeBxgyCreate?: (DiscountCodeBxgyCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the code discount. */
    bxgyCodeDiscount: DiscountCodeBxgyInput} })
    /** Updates a Buy X, Get Y (BXGY) code discount. */
    discountCodeBxgyUpdate?: (DiscountCodeBxgyUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the code discount to update. */
    id: Scalars['ID'], 
    /** The input data used to update the code discount. */
    bxgyCodeDiscount: DiscountCodeBxgyInput} })
    /** Deactivates a code discount. */
    discountCodeDeactivate?: (DiscountCodeDeactivatePayloadGenqlSelection & { __args: {
    /** The ID of the code discount to deactivate. */
    id: Scalars['ID']} })
    /** Deletes a code discount. */
    discountCodeDelete?: (DiscountCodeDeletePayloadGenqlSelection & { __args: {
    /** The ID of the code discount to delete. */
    id: Scalars['ID']} })
    /** Creates a free shipping code discount. */
    discountCodeFreeShippingCreate?: (DiscountCodeFreeShippingCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the code discount. */
    freeShippingCodeDiscount: DiscountCodeFreeShippingInput} })
    /** Updates a free shipping code discount. */
    discountCodeFreeShippingUpdate?: (DiscountCodeFreeShippingUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the code discount to update. */
    id: Scalars['ID'], 
    /** The input data used to update the code discount. */
    freeShippingCodeDiscount: DiscountCodeFreeShippingInput} })
    /**
     * Asynchronously delete discount redeem codes in bulk. Specify the redeem codes to delete by providing a
     * search query, a saved search ID, or a list of redeem code IDs.
     * 
     */
    discountCodeRedeemCodeBulkDelete?: (DiscountCodeRedeemCodeBulkDeletePayloadGenqlSelection & { __args: {
    /** The ID of the redeem code's discount. */
    discountId: Scalars['ID'], 
    /** The search query for filtering discount redeem codes. */
    search?: (Scalars['String'] | null), 
    /** The ID of the saved search. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the discount redeem codes to delete. */
    ids?: (Scalars['ID'][] | null)} })
    /**
     * Asynchronously add discount redeem codes in bulk. Specify the codes to add
     * and the discount code ID that the codes will belong to.
     * 
     */
    discountRedeemCodeBulkAdd?: (DiscountRedeemCodeBulkAddPayloadGenqlSelection & { __args: {
    /** The ID of the code discount that the codes will be added to. */
    discountId: Scalars['ID'], 
    /** The list of codes that will be added to the code discount. Maximum 100 codes permitted. */
    codes: DiscountRedeemCodeInput[]} })
    /** Updates a dispute evidence. */
    disputeEvidenceUpdate?: (DisputeEvidenceUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the dispute evidence to be updated. */
    id: Scalars['ID'], 
    /** The updated properties for a dispute evidence. */
    input: ShopifyPaymentsDisputeEvidenceUpdateInput} })
    /** Adds tags to multiple draft orders. */
    draftOrderBulkAddTags?: (DraftOrderBulkAddTagsPayloadGenqlSelection & { __args: {
    /**
     * The conditions for filtering draft orders on.
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the draft order saved search for filtering draft orders on. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the draft orders to add tags to. */
    ids?: (Scalars['ID'][] | null), 
    /** List of tags to be added. */
    tags: Scalars['String'][]} })
    /** Deletes multiple draft orders. */
    draftOrderBulkDelete?: (DraftOrderBulkDeletePayloadGenqlSelection & { __args: {
    /**
     * The conditions for filtering draft orders on.
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the draft order saved search for filtering draft orders on. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the draft orders to delete. */
    ids?: (Scalars['ID'][] | null)} })
    /** Removes tags from multiple draft orders. */
    draftOrderBulkRemoveTags?: (DraftOrderBulkRemoveTagsPayloadGenqlSelection & { __args: {
    /**
     * The conditions for filtering draft orders on.
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax).
     * 
     */
    search?: (Scalars['String'] | null), 
    /** The ID of the draft order saved search for filtering draft orders on. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** The IDs of the draft orders to remove tags from. */
    ids?: (Scalars['ID'][] | null), 
    /** List of tags to be removed. */
    tags: Scalars['String'][]} })
    /**
     * Calculates the properties of a draft order. Useful for determining information
     * such as total taxes or price without actually creating a draft order.
     * 
     */
    draftOrderCalculate?: (DraftOrderCalculatePayloadGenqlSelection & { __args: {
    /** The fields for the draft order. */
    input: DraftOrderInput} })
    /** Completes a draft order and creates an order. */
    draftOrderComplete?: (DraftOrderCompletePayloadGenqlSelection & { __args: {
    /** The draft order to complete. */
    id: Scalars['ID'], 
    /** Whether the payment is pending. */
    paymentPending?: (Scalars['Boolean'] | null), 
    /** The gateway for the completed draft order. */
    paymentGatewayId?: (Scalars['ID'] | null), 
    /** A channel definition handle used for sales channel attribution. */
    sourceName?: (Scalars['String'] | null)} })
    /** Creates a draft order. */
    draftOrderCreate?: (DraftOrderCreatePayloadGenqlSelection & { __args: {
    /** The fields used to create the draft order. */
    input: DraftOrderInput} })
    /** Creates a Draft Order from Order. */
    draftOrderCreateFromOrder?: (DraftOrderCreateFromOrderPayloadGenqlSelection & { __args: {
    /** Specifies the Order's id that we create the Draft Order from. */
    orderId: Scalars['ID']} })
    /** Creates a merchant checkout for the given draft order. */
    draftOrderCreateMerchantCheckout?: (DraftOrderCreateMerchantCheckoutPayloadGenqlSelection & { __args: {
    /** Specifies the Draft order's id that we create the checkout for. */
    id: Scalars['ID']} })
    /** Deletes a draft order. */
    draftOrderDelete?: (DraftOrderDeletePayloadGenqlSelection & { __args: {
    /** Specify the draft order to delete by its ID. */
    input: DraftOrderDeleteInput} })
    /** Duplicates a draft order. */
    draftOrderDuplicate?: (DraftOrderDuplicatePayloadGenqlSelection & { __args?: {
    /** The ID of the draft order to duplicate. */
    id?: (Scalars['ID'] | null)} })
    /** Previews a draft order invoice email. */
    draftOrderInvoicePreview?: (DraftOrderInvoicePreviewPayloadGenqlSelection & { __args: {
    /** Specifies the draft order invoice email to preview. */
    id: Scalars['ID'], 
    /** Specifies the draft order invoice email fields. */
    email?: (EmailInput | null)} })
    /** Sends an email invoice for a draft order. */
    draftOrderInvoiceSend?: (DraftOrderInvoiceSendPayloadGenqlSelection & { __args: {
    /** Specifies the draft order to send the invoice for. */
    id: Scalars['ID'], 
    /** Specifies the draft order invoice email fields. */
    email?: (EmailInput | null)} })
    /**
     * Updates a draft order.
     * 
     * If a checkout has been started for a draft order, any update to the draft will unlink the checkout. Checkouts
     * are created but not immediately completed when opening the merchant credit card modal in the admin, and when a
     * buyer opens the invoice URL. This is usually fine, but there is an edge case where a checkout is in progress
     * and the draft is updated before the checkout completes. This will not interfere with the checkout and order
     * creation, but if the link from draft to checkout is broken the draft will remain open even after the order is
     * created.
     * 
     */
    draftOrderUpdate?: (DraftOrderUpdatePayloadGenqlSelection & { __args: {
    /** Specifies the draft order to update. */
    id: Scalars['ID'], 
    /** The draft order properties to update. */
    input: DraftOrderInput} })
    /**
     * Updates the server pixel to connect to an EventBridge endpoint.
     * Running this mutation deletes any previous subscriptions for the server pixel.
     * 
     */
    eventBridgeServerPixelUpdate?: (EventBridgeServerPixelUpdatePayloadGenqlSelection & { __args: {
    /** The ARN for the EventBridge endpoint to which customer events are to be sent. */
    arn: Scalars['ARN']} })
    /**
     * Creates a new Amazon EventBridge webhook subscription.
     * 
     */
    eventBridgeWebhookSubscriptionCreate?: (EventBridgeWebhookSubscriptionCreatePayloadGenqlSelection & { __args: {
    /** The type of event that triggers the webhook. */
    topic: WebhookSubscriptionTopic, 
    /** Specifies the input fields for an EventBridge webhook subscription. */
    webhookSubscription: EventBridgeWebhookSubscriptionInput} })
    /**
     * Updates an Amazon EventBridge webhook subscription.
     * 
     */
    eventBridgeWebhookSubscriptionUpdate?: (EventBridgeWebhookSubscriptionUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the webhook subscription to update. */
    id: Scalars['ID'], 
    /** Specifies the input fields for an EventBridge webhook subscription. */
    webhookSubscription: EventBridgeWebhookSubscriptionInput} })
    /** Acknowledges file update failure by resetting FAILED status to READY and clearing any media errors. */
    fileAcknowledgeUpdateFailed?: (FileAcknowledgeUpdateFailedPayloadGenqlSelection & { __args: {
    /** Specifies the file(s) to acknowledge the failed updates of. */
    fileIds: Scalars['ID'][]} })
    /**
     * Creates file assets using an external URL or for files that were previously uploaded using the
     * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stageduploadscreate).
     * These files are added to the [Files page](https://shopify.com/admin/settings/files) in Shopify admin.
     * 
     */
    fileCreate?: (FileCreatePayloadGenqlSelection & { __args: {
    /** List of new files to be created. */
    files: FileCreateInput[]} })
    /** Deletes existing file assets that were uploaded to Shopify. */
    fileDelete?: (FileDeletePayloadGenqlSelection & { __args: {
    /** The IDs of the files to be deleted. */
    fileIds: Scalars['ID'][]} })
    /** Updates an existing file asset that was uploaded to Shopify. */
    fileUpdate?: (FileUpdatePayloadGenqlSelection & { __args: {
    /** List of files to be updated. */
    files: FileUpdateInput[]} })
    /** Triggers any workflows that begin with the trigger specified in the request body. To learn more, refer to [_Create Shopify Flow triggers_](https://shopify.dev/apps/flow/triggers). */
    flowTriggerReceive?: (FlowTriggerReceivePayloadGenqlSelection & { __args: {
    /** The payload needed to run the Trigger. */
    body: Scalars['String']} })
    /** Cancels a fulfillment. */
    fulfillmentCancel?: (FulfillmentCancelPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment to be canceled. */
    id: Scalars['ID']} })
    /**
     * Creates a fulfillment for one or many fulfillment orders.
     * The fulfillment orders are associated with the same order and are assigned to the same location.
     * 
     */
    fulfillmentCreateV2?: (FulfillmentCreateV2PayloadGenqlSelection & { __args: {
    /** The input fields used to create a fulfillment from fulfillment orders. */
    fulfillment: FulfillmentV2Input, 
    /** An optional message for the fulfillment request. */
    message?: (Scalars['String'] | null)} })
    /** Creates a fulfillment event for a specified fulfillment. */
    fulfillmentEventCreate?: (FulfillmentEventCreatePayloadGenqlSelection & { __args: {
    /** The input fields used to create a fulfillment event for a fulfillment. */
    fulfillmentEvent: FulfillmentEventInput} })
    /** Accept a cancellation request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderAcceptCancellationRequest?: (FulfillmentOrderAcceptCancellationRequestPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order associated with the cancellation request. */
    id: Scalars['ID'], 
    /** An optional reason for accepting the cancellation request. */
    message?: (Scalars['String'] | null)} })
    /** Accepts a fulfillment request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderAcceptFulfillmentRequest?: (FulfillmentOrderAcceptFulfillmentRequestPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order associated with the fulfillment request. */
    id: Scalars['ID'], 
    /** An optional reason for accepting the fulfillment request. */
    message?: (Scalars['String'] | null)} })
    /** Marks a fulfillment order as canceled. */
    fulfillmentOrderCancel?: (FulfillmentOrderCancelPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order to mark as canceled. */
    id: Scalars['ID']} })
    /** Marks an in-progress fulfillment order as incomplete, indicating the fulfillment service is unable to ship any remaining items and intends to close the fulfillment order. */
    fulfillmentOrderClose?: (FulfillmentOrderClosePayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order to mark as incomplete. */
    id: Scalars['ID'], 
    /** An optional reason for marking the fulfillment order as incomplete. */
    message?: (Scalars['String'] | null)} })
    /** Applies a fulfillment hold on an open fulfillment order. */
    fulfillmentOrderHold?: (FulfillmentOrderHoldPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order on which a fulfillment hold is applied. */
    id: Scalars['ID'], 
    /** The details of the fulfillment hold applied on the fulfillment order. */
    fulfillmentHold: FulfillmentOrderHoldInput} })
    /**
     * Mark line items associated with a fulfillment order as being ready for pickup by a customer.
     * 
     * Sends a Ready For Pickup notification to the customer to let them know that their order is ready
     * to be picked up.
     * 
     */
    fulfillmentOrderLineItemsPreparedForPickup?: (FulfillmentOrderLineItemsPreparedForPickupPayloadGenqlSelection & { __args: {
    /** The input for marking fulfillment order line items as ready for pickup. */
    input: FulfillmentOrderLineItemsPreparedForPickupInput} })
    /**
     * Merges a set or multiple sets of fulfillment orders together into one based on
     * line item inputs and quantities.
     * 
     */
    fulfillmentOrderMerge?: (FulfillmentOrderMergePayloadGenqlSelection & { __args: {
    /** One or more sets of fulfillment orders to be merged. */
    fulfillmentOrderMergeInputs: FulfillmentOrderMergeInput[]} })
    /**
     * Changes the location which is assigned to fulfill a number of unfulfilled fulfillment order line items.
     * 
     * Line items which have already been fulfilled can't be re-assigned
     * and will always remain assigned to the original location.
     * 
     * You can't change the assigned location while a fulfillment order has a
     * [request status](https://shopify.dev/docs/api/admin-graphql/latest/enums/FulfillmentOrderRequestStatus)
     * of `SUBMITTED`, `ACCEPTED`, `CANCELLATION_REQUESTED`, or `CANCELLATION_REJECTED`.
     * These request statuses mean that a fulfillment order is awaiting action by a fulfillment service
     * and can't be re-assigned without first having the fulfillment service accept a cancellation request.
     * This behavior is intended to prevent items from being fulfilled by multiple locations or fulfillment services.
     * 
     * ### How re-assigning line items affects fulfillment orders
     * 
     * **First scenario:** Re-assign all line items belonging to a fulfillment order to a new location.
     * 
     * In this case, the
     * [assignedLocation](https://shopify.dev/docs/api/admin-graphql/latest/objects/fulfillmentorder#field-fulfillmentorder-assignedlocation)
     * of the original fulfillment order will be updated to the new location.
     * 
     * **Second scenario:** Re-assign a subset of the line items belonging to a fulfillment order to a new location.
     * You can specify a subset of line items using the `fulfillmentOrderLineItems` parameter
     * (available as of the `2023-04` API version),
     * or specify that the original fulfillment order contains line items which have already been fulfilled.
     * 
     * If the new location is already assigned to another active fulfillment order, on the same order,
     * then the line items are moved to the existing fulfillment order.
     * Otherwise, a new fulfillment order is created for the new location, and the line items are moved to the new location.
     * 
     */
    fulfillmentOrderMove?: (FulfillmentOrderMovePayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order to be moved. */
    id: Scalars['ID'], 
    /** The ID of the location where the fulfillment order will be moved. */
    newLocationId: Scalars['ID'], 
    /**
     * The fulfillment order line items to be moved.
     * If left blank, all unfulfilled line items belonging to the fulfillment order are moved.
     * 
     */
    fulfillmentOrderLineItems?: (FulfillmentOrderLineItemInput[] | null)} })
    /** Marks a scheduled fulfillment order as open. */
    fulfillmentOrderOpen?: (FulfillmentOrderOpenPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order to mark as open. */
    id: Scalars['ID']} })
    /** Rejects a cancellation request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderRejectCancellationRequest?: (FulfillmentOrderRejectCancellationRequestPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order associated with the cancellation request. */
    id: Scalars['ID'], 
    /** An optional reason for rejecting the cancellation request. */
    message?: (Scalars['String'] | null)} })
    /** Rejects a fulfillment request sent to a fulfillment service for a fulfillment order. */
    fulfillmentOrderRejectFulfillmentRequest?: (FulfillmentOrderRejectFulfillmentRequestPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order associated with the fulfillment request. */
    id: Scalars['ID'], 
    /** The reason for the fulfillment order rejection. */
    reason?: (FulfillmentOrderRejectionReason | null), 
    /** An optional reason for rejecting the fulfillment request. */
    message?: (Scalars['String'] | null), 
    /** A list of rejected line items. */
    lineItems?: (IncomingRequestLineItemInput[] | null)} })
    /** Releases the fulfillment hold on a fulfillment order. */
    fulfillmentOrderReleaseHold?: (FulfillmentOrderReleaseHoldPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order for which to release the fulfillment hold. */
    id: Scalars['ID'], 
    /** A configurable ID used to track the automation system releasing this hold. */
    externalId?: (Scalars['String'] | null)} })
    /** Reschedules a scheduled fulfillment order. */
    fulfillmentOrderReschedule?: (FulfillmentOrderReschedulePayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order to reschedule. */
    id: Scalars['ID'], 
    /** The new fulfill at date of the fulfillment order. */
    fulfillAt: Scalars['DateTime']} })
    /** Splits a fulfillment order or orders based on line item inputs and quantities. */
    fulfillmentOrderSplit?: (FulfillmentOrderSplitPayloadGenqlSelection & { __args: {
    /** The fulfillment orders, line items and quantities to be split into new fulfillment orders. */
    fulfillmentOrderSplits: FulfillmentOrderSplitInput[]} })
    /** Sends a cancellation request to the fulfillment service of a fulfillment order. */
    fulfillmentOrderSubmitCancellationRequest?: (FulfillmentOrderSubmitCancellationRequestPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order associated with the cancellation request. */
    id: Scalars['ID'], 
    /** An optional reason for the cancellation request. */
    message?: (Scalars['String'] | null)} })
    /** Sends a fulfillment request to the fulfillment service of a fulfillment order. */
    fulfillmentOrderSubmitFulfillmentRequest?: (FulfillmentOrderSubmitFulfillmentRequestPayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment order associated with fulfillment request. */
    id: Scalars['ID'], 
    /** An optional message for the fulfillment request. */
    message?: (Scalars['String'] | null), 
    /**
     * Whether the customer should be notified when fulfillments are created for this fulfillment order.
     * 
     */
    notifyCustomer?: (Scalars['Boolean'] | null), 
    /**
     * The fulfillment order line items to be requested for fulfillment.
     * If left blank, all line items of the fulfillment order are requested for fulfillment.
     * 
     */
    fulfillmentOrderLineItems?: (FulfillmentOrderLineItemInput[] | null), 
    /** A reference to the [ShippingMethod](https://shopify.dev/api/admin-graphql/latest/objects/shippingmethod) code, such as `FREE_SHIPPING`. */
    shippingMethod?: (Scalars['String'] | null)} })
    /** Releases the fulfillment holds on a list of fulfillment orders. */
    fulfillmentOrdersReleaseHolds?: (FulfillmentOrdersReleaseHoldsPayloadGenqlSelection & { __args: {
    /** The IDs of the fulfillment orders for which to release the fulfillment holds. */
    ids: Scalars['ID'][], 
    /** A configurable ID used to track the automation system releasing these holds. */
    externalId?: (Scalars['String'] | null)} })
    /** Sets the latest date and time by which the fulfillment orders need to be fulfilled. */
    fulfillmentOrdersSetFulfillmentDeadline?: (FulfillmentOrdersSetFulfillmentDeadlinePayloadGenqlSelection & { __args: {
    /** The IDs of the fulfillment orders for which the deadline is being set. */
    fulfillmentOrderIds: Scalars['ID'][], 
    /** The new fulfillment deadline of the fulfillment orders. */
    fulfillmentDeadline: Scalars['DateTime']} })
    /** Creates a fulfillment service. */
    fulfillmentServiceCreate?: (FulfillmentServiceCreatePayloadGenqlSelection & { __args: {
    /** The name of the fulfillment service. */
    name: Scalars['String'], 
    /**
     * The URL to send requests for the fulfillment service. The following considerations apply:
     * 
     * - Shopify queries the <code>callback_url/fetch_tracking_numbers</code> endpoint to retrieve tracking numbers
     *     for orders, if `trackingSupport` is set to `true`.
     * - Shopify queries the <code>callback_url/fetch_stock</code> endpoint to retrieve inventory levels,
     *     if `inventoryManagement` is set to `true`.
     * - Shopify uses the <code>callback_url/fulfillment_order_notification</code> endpoint to send
     *     [fulfillment and cancellation requests](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations).
     * 
     */
    callbackUrl: Scalars['URL'], 
    /**
     * Whether the fulfillment service provides tracking numbers for packages.
     * 
     */
    trackingSupport?: (Scalars['Boolean'] | null), 
    /**
     * Whether the fulfillment service uses the [fulfillment order based workflow](
     *   https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments
     * ) for managing fulfillments.
     * 
     * [As of 2022-07 API version](https://shopify.dev/changelog/legacy-fulfillment-api-deprecation),
     * the fulfillment order based workflow is the only way to manage fulfillments,
     * and `fulfillmentOrdersOptIn` must be set to `true`.
     * 
     */
    fulfillmentOrdersOptIn: Scalars['Boolean'], 
    /** Whether the fulfillment service can stock inventory alongside other locations. */
    permitsSkuSharing?: (Scalars['Boolean'] | null), 
    /**
     * Whether the fulfillment service manages product inventory and provides updates to Shopify.
     * 
     */
    inventoryManagement?: (Scalars['Boolean'] | null)} })
    /** Deletes a fulfillment service. */
    fulfillmentServiceDelete?: (FulfillmentServiceDeletePayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment service to delete. */
    id: Scalars['ID'], 
    /**
     * The ID of the location where inventory and commitments will be relocated
     * after the fulfillment service is deleted.
     * 
     */
    destinationLocationId?: (Scalars['ID'] | null)} })
    /** Updates a fulfillment service. */
    fulfillmentServiceUpdate?: (FulfillmentServiceUpdatePayloadGenqlSelection & { __args: {
    /** The id of the fulfillment service. */
    id: Scalars['ID'], 
    /** The name of the fulfillment service. */
    name?: (Scalars['String'] | null), 
    /**
     * The URL to send requests for the fulfillment service. The following considerations apply:
     * 
     * - Shopify queries the <code>callback_url/fetch_tracking_numbers</code> endpoint to retrieve tracking numbers
     *     for orders, if `trackingSupport` is set to `true`.
     * - Shopify queries the <code>callback_url/fetch_stock</code> endpoint to retrieve inventory levels,
     *     if `inventoryManagement` is set to `true`.
     * - Shopify uses the <code>callback_url/fulfillment_order_notification</code> endpoint to send
     *     [fulfillment and cancellation requests](https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments#step-2-receive-fulfillment-requests-and-cancellations).
     * 
     */
    callbackUrl?: (Scalars['URL'] | null), 
    /**
     * Whether the fulfillment service provides tracking numbers for packages.
     * 
     */
    trackingSupport?: (Scalars['Boolean'] | null), 
    /**
     * Whether the fulfillment service uses the [fulfillment order based workflow](
     *   https://shopify.dev/apps/fulfillment/fulfillment-service-apps/manage-fulfillments
     * ) for managing fulfillments.
     * 
     * [As of 2022-07 API version](https://shopify.dev/changelog/legacy-fulfillment-api-deprecation),
     * the fulfillment order based workflow is the only way to manage fulfillments,
     * and `true` is the only valid value for `fulfillmentOrdersOptIn`.
     * 
     */
    fulfillmentOrdersOptIn?: (Scalars['Boolean'] | null), 
    /** Whether the fulfillment service can stock inventory alongside other locations. */
    permitsSkuSharing?: (Scalars['Boolean'] | null)} })
    /** Updates tracking information for a fulfillment. */
    fulfillmentTrackingInfoUpdateV2?: (FulfillmentTrackingInfoUpdateV2PayloadGenqlSelection & { __args: {
    /** The ID of the fulfillment. */
    fulfillmentId: Scalars['ID'], 
    /** The tracking input for the mutation, including tracking URL, number, and company. */
    trackingInfoInput: FulfillmentTrackingInput, 
    /**
     * Whether the customer will be notified of this update and future updates for the fulfillment.
     * If this field is left blank, then notifications won't be sent to the customer when the fulfillment is updated.
     * 
     */
    notifyCustomer?: (Scalars['Boolean'] | null)} })
    /** Create a gift card. */
    giftCardCreate?: (GiftCardCreatePayloadGenqlSelection & { __args: {
    /** The input fields to create a gift card. */
    input: GiftCardCreateInput} })
    /**
     * Disable a gift card. A disabled gift card cannot be used by a customer. A disabled gift card cannot be re-enabled.
     * 
     */
    giftCardDisable?: (GiftCardDisablePayloadGenqlSelection & { __args: {
    /** The ID of the gift card to disable. */
    id: Scalars['ID']} })
    /** Update a gift card. */
    giftCardUpdate?: (GiftCardUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the gift card to be updated. */
    id: Scalars['ID'], 
    /** The input fields to update the gift card. */
    input: GiftCardUpdateInput} })
    /** Activate an inventory item at a location. */
    inventoryActivate?: (InventoryActivatePayloadGenqlSelection & { __args: {
    /** The ID of the inventory item to activate. */
    inventoryItemId: Scalars['ID'], 
    /** The ID of the location of the inventory item being activated. */
    locationId: Scalars['ID'], 
    /** The initial available quantity of the inventory item being activated at the location. */
    available?: (Scalars['Int'] | null), 
    /** The initial on_hand quantity of the inventory item being activated at the location. */
    onHand?: (Scalars['Int'] | null)} })
    /** Apply changes to inventory quantities. */
    inventoryAdjustQuantities?: (InventoryAdjustQuantitiesPayloadGenqlSelection & { __args: {
    /** The information required to adjust inventory quantities. */
    input: InventoryAdjustQuantitiesInput} })
    /**
     * @deprecated Use `inventoryAdjustQuantities` instead.
     * Adjusts the inventory by a certain quantity.
     */
    inventoryAdjustQuantity?: (InventoryAdjustQuantityPayloadGenqlSelection & { __args: {
    /** Provides the input fields required to update an inventory level. */
    input: InventoryAdjustQuantityInput} })
    /**
     * @deprecated Use `inventoryAdjustQuantities` instead.
     * Adjusts the inventory at a location for multiple inventory items.
     */
    inventoryBulkAdjustQuantityAtLocation?: (InventoryBulkAdjustQuantityAtLocationPayloadGenqlSelection & { __args: {
    /** Specifies adjustments for items. */
    inventoryItemAdjustments: InventoryAdjustItemInput[], 
    /** Specifies where the item should be adjusted. */
    locationId: Scalars['ID']} })
    /** Modify the activation status of an inventory item at locations. Activating an inventory item at a particular location allows that location to stock that inventory item. Deactivating an inventory item at a location removes the inventory item's quantities and turns off the inventory item from that location. */
    inventoryBulkToggleActivation?: (InventoryBulkToggleActivationPayloadGenqlSelection & { __args: {
    /** The ID of the inventory item to modify the activation status locations for. */
    inventoryItemId: Scalars['ID'], 
    /** A list of pairs of locations and activate status to update for the specified inventory item. */
    inventoryItemUpdates: InventoryBulkToggleActivationInput[]} })
    /** Removes an inventory item's quantities from a location, and turns off inventory at the location. */
    inventoryDeactivate?: (InventoryDeactivatePayloadGenqlSelection & { __args: {
    /** The ID of the inventory level to deactivate. */
    inventoryLevelId: Scalars['ID']} })
    /** Updates an inventory item. */
    inventoryItemUpdate?: (InventoryItemUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the inventory item to update. */
    id: Scalars['ID'], 
    /** The input fields that update an [`inventoryItem`](https://shopify.dev/api/admin-graphql/latest/queries/inventoryitem). */
    input: InventoryItemUpdateInput} })
    /** Moves inventory between inventory quantity names at a single location. */
    inventoryMoveQuantities?: (InventoryMoveQuantitiesPayloadGenqlSelection & { __args: {
    /** The information required to move inventory quantities. */
    input: InventoryMoveQuantitiesInput} })
    /** Set inventory on-hand quantities using absolute values. */
    inventorySetOnHandQuantities?: (InventorySetOnHandQuantitiesPayloadGenqlSelection & { __args: {
    /** The information required to set inventory on hand quantities. */
    input: InventorySetOnHandQuantitiesInput} })
    /** Activates a location. */
    locationActivate?: (LocationActivatePayloadGenqlSelection & { __args: {
    /** The ID of a location to activate. */
    locationId: Scalars['ID']} })
    /** Adds a new location. */
    locationAdd?: (LocationAddPayloadGenqlSelection & { __args: {
    /** The properties of the location to add. */
    input: LocationAddInput} })
    /** Deactivates a location and moves inventory, pending orders, and moving transfers to a destination location. */
    locationDeactivate?: (LocationDeactivatePayloadGenqlSelection & { __args: {
    /** The ID of a location to deactivate. */
    locationId: Scalars['ID'], 
    /** The ID of a destination location to which inventory, pending orders and moving transfers will be moved from the location to deactivate. */
    destinationLocationId?: (Scalars['ID'] | null)} })
    /** Deletes a location. */
    locationDelete?: (LocationDeletePayloadGenqlSelection & { __args: {
    /** The ID of a location to delete. */
    locationId: Scalars['ID']} })
    /** Edits an existing location. */
    locationEdit?: (LocationEditPayloadGenqlSelection & { __args: {
    /** The ID of a location to edit. */
    id: Scalars['ID'], 
    /** The updated properties for the location. */
    input: LocationEditInput} })
    /** Disables local pickup for a location. */
    locationLocalPickupDisable?: (LocationLocalPickupDisablePayloadGenqlSelection & { __args: {
    /** The ID of the location to disable local pickup for. */
    locationId: Scalars['ID']} })
    /** Enables local pickup for a location. */
    locationLocalPickupEnable?: (LocationLocalPickupEnablePayloadGenqlSelection & { __args: {
    /** The settings required to enable local pickup for a location. */
    localPickupSettings: DeliveryLocationLocalPickupEnableInput} })
    /** Creates a new market. */
    marketCreate?: (MarketCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new market. */
    input: MarketCreateInput} })
    /** Updates currency settings of a market. */
    marketCurrencySettingsUpdate?: (MarketCurrencySettingsUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the market definition to target. */
    marketId: Scalars['ID'], 
    /** Properties to update for the market currency settings. */
    input: MarketCurrencySettingsUpdateInput} })
    /** Deletes a market definition. */
    marketDelete?: (MarketDeletePayloadGenqlSelection & { __args: {
    /** The ID of the market to delete. */
    id: Scalars['ID']} })
    /** Creates or updates market localizations. */
    marketLocalizationsRegister?: (MarketLocalizationsRegisterPayloadGenqlSelection & { __args: {
    /** The ID of the resource that is being localized within the context of a market. */
    resourceId: Scalars['ID'], 
    /** The input fields for a market localization. */
    marketLocalizations: MarketLocalizationRegisterInput[]} })
    /** Deletes market localizations. */
    marketLocalizationsRemove?: (MarketLocalizationsRemovePayloadGenqlSelection & { __args: {
    /** The ID of the resource for which market localizations are being deleted. */
    resourceId: Scalars['ID'], 
    /** The list of market localization keys. */
    marketLocalizationKeys: Scalars['String'][], 
    /** The list of market IDs. */
    marketIds: Scalars['ID'][]} })
    /** Deletes a market region. */
    marketRegionDelete?: (MarketRegionDeletePayloadGenqlSelection & { __args: {
    /** The ID of the market region to delete. */
    id: Scalars['ID']} })
    /** Creates regions that belong to an existing market. */
    marketRegionsCreate?: (MarketRegionsCreatePayloadGenqlSelection & { __args: {
    /** The ID of the market to add the regions to. */
    marketId: Scalars['ID'], 
    /**
     * The regions to be created.
     * 
     */
    regions: MarketRegionCreateInput[]} })
    /** Updates the properties of a market. */
    marketUpdate?: (MarketUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the market to update. */
    id: Scalars['ID'], 
    /** The properties to update. */
    input: MarketUpdateInput} })
    /** Creates a web presence for a market. */
    marketWebPresenceCreate?: (MarketWebPresenceCreatePayloadGenqlSelection & { __args: {
    /** The ID of the market for which to create a web presence. */
    marketId: Scalars['ID'], 
    /**
     * The details of the web presence to be created.
     * 
     */
    webPresence: MarketWebPresenceCreateInput} })
    /** Deletes a market web presence. */
    marketWebPresenceDelete?: (MarketWebPresenceDeletePayloadGenqlSelection & { __args: {
    /** The ID of the market for which to delete the web presence. */
    marketId: Scalars['ID']} })
    /** Updates a market web presence. */
    marketWebPresenceUpdate?: (MarketWebPresenceUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the market for which to update the web presence. */
    marketId: Scalars['ID'], 
    /**
     * The web_presence fields used to update the market's web presence.
     * 
     */
    webPresence: MarketWebPresenceUpdateInput} })
    /** Create new marketing activity. */
    marketingActivityCreate?: (MarketingActivityCreatePayloadGenqlSelection & { __args: {
    /** The Input of marketing activity create. */
    input: MarketingActivityCreateInput} })
    /** Creates a new external marketing activity. */
    marketingActivityCreateExternal?: (MarketingActivityCreateExternalPayloadGenqlSelection & { __args: {
    /** The input field for creating a external marketing activity. */
    input: MarketingActivityCreateExternalInput} })
    /** Updates a marketing activity with the latest information. */
    marketingActivityUpdate?: (MarketingActivityUpdatePayloadGenqlSelection & { __args: {
    /** The Input of the marketing activity. */
    input: MarketingActivityUpdateInput} })
    /** Update an external marketing activity. */
    marketingActivityUpdateExternal?: (MarketingActivityUpdateExternalPayloadGenqlSelection & { __args: {
    /** The input to update the external marketing activity. */
    input: MarketingActivityUpdateExternalInput, 
    /** The ID of the marketing activity. You must provide one of the following values: marketing activity ID, remote ID, or UTM must be provided. */
    marketingActivityId?: (Scalars['ID'] | null), 
    /** The remote ID of the marketing event associated with the marketing activity. You must provide one of the following values: marketing activity ID, remote ID, or UTM must be provided. */
    remoteId?: (Scalars['String'] | null), 
    /** The UTM parameters associated with marketing activities to filter by.You must provide one of the following values: marketing activity ID, remote ID, or UTM must be provided. */
    utm?: (UTMInput | null)} })
    /** Creates a new marketing event engagement for a marketing activity or a marketing channel. */
    marketingEngagementCreate?: (MarketingEngagementCreatePayloadGenqlSelection & { __args: {
    /** The identifier of the marketing activity created using one of the MarketingActivity APIs. */
    marketingActivityId: Scalars['ID'], 
    /** The marketing engagement's attributes. */
    marketingEngagement: MarketingEngagementInput} })
    /**
     * Creates a metafield definition.
     * 
     */
    metafieldDefinitionCreate?: (MetafieldDefinitionCreatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields for a metafield definition. */
    definition: MetafieldDefinitionInput} })
    /**
     * Delete a metafield definition.
     * Optionally deletes all associated metafields asynchronously when specified.
     * 
     */
    metafieldDefinitionDelete?: (MetafieldDefinitionDeletePayloadGenqlSelection & { __args: {
    /** The id of the metafield definition to delete. */
    id: Scalars['ID'], 
    /** Whether to delete all associated metafields. */
    deleteAllAssociatedMetafields?: (Scalars['Boolean'] | null)} })
    /**
     * You can organize your metafields in your Shopify admin by pinning/unpinning metafield definitions.
     * The order of your pinned metafield definitions determines the order in which your metafields are displayed
     * on the corresponding pages in your Shopify admin. By default, only pinned metafields are automatically displayed.
     * 
     */
    metafieldDefinitionPin?: (MetafieldDefinitionPinPayloadGenqlSelection & { __args: {
    /** The ID of the metafield definition to pin. */
    definitionId: Scalars['ID']} })
    /**
     * You can organize your metafields in your Shopify admin by pinning/unpinning metafield definitions.
     * The order of your pinned metafield definitions determines the order in which your metafields are displayed
     * on the corresponding pages in your Shopify admin. By default, only pinned metafields are automatically displayed.
     * 
     */
    metafieldDefinitionUnpin?: (MetafieldDefinitionUnpinPayloadGenqlSelection & { __args: {
    /** The ID of the metafield definition to unpin. */
    definitionId: Scalars['ID']} })
    /**
     * Updates a metafield definition.
     * 
     */
    metafieldDefinitionUpdate?: (MetafieldDefinitionUpdatePayloadGenqlSelection & { __args: {
    /** The input fields for the metafield definition update. */
    definition: MetafieldDefinitionUpdateInput} })
    /** Deletes a metafield. */
    metafieldDelete?: (MetafieldDeletePayloadGenqlSelection & { __args: {input: MetafieldDeleteInput} })
    /**
     * Creates a `MetafieldStorefrontVisibility` record to make all metafields that belong to the specified resource
     * and have the established `namespace` and `key` combination visible in the Storefront API.
     * 
     */
    metafieldStorefrontVisibilityCreate?: (MetafieldStorefrontVisibilityCreatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields for a `MetafieldStorefrontVisibility` record. */
    input: MetafieldStorefrontVisibilityInput} })
    /**
     * Deletes a `MetafieldStorefrontVisibility` record. All metafields that belongs to the specified record will no
     * longer be visible in the Storefront API.
     * 
     */
    metafieldStorefrontVisibilityDelete?: (MetafieldStorefrontVisibilityDeletePayloadGenqlSelection & { __args: {
    /** The ID of the `MetafieldStorefrontVisibility` record to delete. */
    id: Scalars['ID']} })
    /**
     * Sets metafield values. Metafield values will be set regardless if they were previously created or not.
     * 
     * Allows a maximum of 25 metafields to be set at a time.
     * 
     * Note that this operation is atomic as of `2023-01`, meaning no changes are persisted if any error is
     * encountered.
     * 
     */
    metafieldsSet?: (MetafieldsSetPayloadGenqlSelection & { __args: {
    /** The list of metafield values to set. Maximum of 25. */
    metafields: MetafieldsSetInput[]} })
    /** Asynchronously delete metaobjects and their associated metafields in bulk. */
    metaobjectBulkDelete?: (MetaobjectBulkDeletePayloadGenqlSelection & { __args: {
    /**
     * Specifies the condition by which metaobjects are deleted.
     * Exactly one field of input is required.
     * 
     */
    where: MetaobjectBulkDeleteWhereCondition} })
    /** Creates a new metaobject. */
    metaobjectCreate?: (MetaobjectCreatePayloadGenqlSelection & { __args: {
    /** The parameters for the metaobject to create. */
    metaobject: MetaobjectCreateInput} })
    /** Creates a new metaobject definition. */
    metaobjectDefinitionCreate?: (MetaobjectDefinitionCreatePayloadGenqlSelection & { __args: {
    /** The input fields for creating a metaobject definition. */
    definition: MetaobjectDefinitionCreateInput} })
    /**
     * Deletes the specified metaobject definition.
     * Also deletes all related metafield definitions, metaobjects, and metafields asynchronously.
     * 
     */
    metaobjectDefinitionDelete?: (MetaobjectDefinitionDeletePayloadGenqlSelection & { __args: {
    /** The ID of the metaobjects definition to delete. */
    id: Scalars['ID']} })
    /** Updates a metaobject definition with new settings and metafield definitions. */
    metaobjectDefinitionUpdate?: (MetaobjectDefinitionUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the metaobject definition to update. */
    id: Scalars['ID'], 
    /** The input fields for updating a metaobject definition. */
    definition: MetaobjectDefinitionUpdateInput} })
    /** Deletes the specified metaobject and its associated metafields. */
    metaobjectDelete?: (MetaobjectDeletePayloadGenqlSelection & { __args: {
    /** The ID of the metaobject to delete. */
    id: Scalars['ID']} })
    /** Updates an existing metaobject. */
    metaobjectUpdate?: (MetaobjectUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the metaobject to update. */
    id: Scalars['ID'], 
    /** Specifies parameters to update on the metaobject. */
    metaobject: MetaobjectUpdateInput} })
    /**
     * Retrieves a metaobject by handle, then updates it with the provided input values.
     * If no matching metaobject is found, a new metaobject is created with the provided input values.
     * 
     */
    metaobjectUpsert?: (MetaobjectUpsertPayloadGenqlSelection & { __args: {
    /** The identifier of the metaobject to upsert. */
    handle: MetaobjectHandleInput, 
    /** The parameters to upsert the metaobject. */
    metaobject: MetaobjectUpsertInput} })
    /** Captures payment for an authorized transaction on an order. An order can only be captured if it has a successful authorization transaction. Capturing an order will claim the money reserved by the authorization. */
    orderCapture?: (OrderCapturePayloadGenqlSelection & { __args: {
    /** The input for the mutation. */
    input: OrderCaptureInput} })
    /**
     * Closes an open order.
     * 
     */
    orderClose?: (OrderClosePayloadGenqlSelection & { __args: {
    /** The input for the mutation. */
    input: OrderCloseInput} })
    /** Creates a payment for an order by mandate. */
    orderCreateMandatePayment?: (OrderCreateMandatePaymentPayloadGenqlSelection & { __args: {
    /** The ID of the order to collect the balance for. */
    id: Scalars['ID'], 
    /** The ID of the payment schedule to collect the balance for. */
    paymentScheduleId?: (Scalars['ID'] | null), 
    /** A unique key to identify the payment request. */
    idempotencyKey: Scalars['String'], 
    /** The mandate ID used for payment. */
    mandateId: Scalars['ID'], 
    /**
     * Whether the payment should be authorized or captured. If `false`, then the authorization of
     *             the payment is triggered.
     */
    autoCapture?: (Scalars['Boolean'] | null)} })
    /** Adds a custom line item to an existing order. For example, you could add a gift wrapping service as a [custom line item](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing#add-a-custom-line-item). To learn how to edit existing orders, refer to [Edit an existing order with Admin API](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing). */
    orderEditAddCustomItem?: (OrderEditAddCustomItemPayloadGenqlSelection & { __args: {
    /**
     * The ID of the [calculated order](https://shopify.dev/api/admin-graphql/latest/objects/calculatedorder)
     * to which the custom item is added.
     * 
     */
    id: Scalars['ID'], 
    /** The name of the custom item to add. */
    title: Scalars['String'], 
    /**
     * The ID of the retail [location](https://shopify.dev/api/admin-graphql/latest/objects/location)
     * (if applicable) from which the custom item is sold. Used for tax calculations. A default location will be chosen automatically if none is provided.
     * 
     */
    locationId?: (Scalars['ID'] | null), 
    /** The unit price of the custom item. This value can't be negative. */
    price: MoneyInput, 
    /** The quantity of the custom item. This value must be greater than zero. */
    quantity: Scalars['Int'], 
    /** Whether the custom item is taxable. Defaults to `true`. */
    taxable?: (Scalars['Boolean'] | null), 
    /** Whether the custom item requires shipping. Defaults to `false`. */
    requiresShipping?: (Scalars['Boolean'] | null)} })
    /** Adds a discount to a newly added line item on the current order edit. More information on how to use the GraphQL Admin API to edit an existing order, refer to [Edit existing orders](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing). */
    orderEditAddLineItemDiscount?: (OrderEditAddLineItemDiscountPayloadGenqlSelection & { __args: {
    /** The ID of the calculated order to update. */
    id: Scalars['ID'], 
    /** The ID of a newly added calculated line item to add the discount to. */
    lineItemId: Scalars['ID'], 
    /** The discount to add to the line item. */
    discount: OrderEditAppliedDiscountInput} })
    /** Adds a line item from an existing product variant. */
    orderEditAddVariant?: (OrderEditAddVariantPayloadGenqlSelection & { __args: {
    /**
     * The ID of the [calculated order](https://shopify.dev/api/admin-graphql/latest/objects/calculatedorder)
     * to edit.
     * 
     */
    id: Scalars['ID'], 
    /** The ID of the variant to add. */
    variantId: Scalars['ID'], 
    /**
     * The ID of the [location](https://shopify.dev/api/admin-graphql/latest/objects/location)
     * to check for inventory availability. A default location ID is chosen automatically if none is provided.
     * 
     */
    locationId?: (Scalars['ID'] | null), 
    /** The quantity of the item to add to the order. Must be a positive value. */
    quantity: Scalars['Int'], 
    /** Whether the mutation can create a line item for a variant that's already on the calculated order. */
    allowDuplicates?: (Scalars['Boolean'] | null)} })
    /**
     * Starts editing an order. Mutations are operating on `OrderEdit`.
     * All order edits start with `orderEditBegin`, have any number of `orderEdit`* mutations made, and end with `orderEditCommit`.
     * 
     */
    orderEditBegin?: (OrderEditBeginPayloadGenqlSelection & { __args: {
    /** The ID of the order to begin editing. */
    id: Scalars['ID']} })
    /**
     * Applies and saves staged changes to an order. Mutations are operating on `OrderEdit`.
     * All order edits start with `orderEditBegin`, have any number of `orderEdit`* mutations made, and end with `orderEditCommit`.
     * 
     */
    orderEditCommit?: (OrderEditCommitPayloadGenqlSelection & { __args: {
    /** The ID of the calculated order that will have its changes applied to the order. */
    id: Scalars['ID'], 
    /** Whether to notify the customer or not. */
    notifyCustomer?: (Scalars['Boolean'] | null), 
    /** Note for staff members. */
    staffNote?: (Scalars['String'] | null)} })
    /** Removes a line item discount that was applied as part of an order edit. */
    orderEditRemoveLineItemDiscount?: (OrderEditRemoveLineItemDiscountPayloadGenqlSelection & { __args: {
    /**
     * The ID of the [calculated order](https://shopify.dev/api/admin-graphql/latest/objects/calculatedorder)
     * from which to remove the discount.
     * 
     */
    id: Scalars['ID'], 
    /**
     * The ID of the [calculated discount application](https://shopify.dev/api/admin-graphql/latest/interfaces/calculateddiscountapplication)
     * to remove.
     * 
     */
    discountApplicationId: Scalars['ID']} })
    /** Sets the quantity of a line item on an order that is being edited. More information on how to use the GraphQL Admin API to edit an existing order, refer to [Edit existing orders](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing). */
    orderEditSetQuantity?: (OrderEditSetQuantityPayloadGenqlSelection & { __args: {
    /** The ID of the calculated order to edit. The edit changes the quantity on the line item. */
    id: Scalars['ID'], 
    /** The ID of the line item to edit. */
    lineItemId: Scalars['ID'], 
    /** The new quantity to set for the line item. This value cannot be negative. */
    quantity: Scalars['Int'], 
    /**
     * Whether or not to restock the line item when the updated quantity is less than the original quantity.
     * 
     */
    restock?: (Scalars['Boolean'] | null)} })
    /** Sends an email invoice for an order. */
    orderInvoiceSend?: (OrderInvoiceSendPayloadGenqlSelection & { __args: {
    /** The order associated with the invoice. */
    id: Scalars['ID'], 
    /** The email input fields for the order invoice. The `bcc` and `from` fields should be store or staff account emails. */
    email?: (EmailInput | null)} })
    /**
     * Marks an order as paid. You can only mark an order as paid if it isn't already fully paid.
     * 
     */
    orderMarkAsPaid?: (OrderMarkAsPaidPayloadGenqlSelection & { __args: {
    /** The input for the mutation. */
    input: OrderMarkAsPaidInput} })
    /**
     * Opens a closed order.
     * 
     */
    orderOpen?: (OrderOpenPayloadGenqlSelection & { __args: {
    /** The input for the mutation. */
    input: OrderOpenInput} })
    /** Updates the fields of an order. */
    orderUpdate?: (OrderUpdatePayloadGenqlSelection & { __args: {
    /** The input for the mutation. */
    input: OrderInput} })
    /** Activates and deactivates payment customizations. */
    paymentCustomizationActivation?: (PaymentCustomizationActivationPayloadGenqlSelection & { __args: {
    /** The global IDs of the payment customizations. */
    ids: Scalars['ID'][], 
    /** The enabled status of the payment customizations. */
    enabled: Scalars['Boolean']} })
    /** Creates a payment customization. */
    paymentCustomizationCreate?: (PaymentCustomizationCreatePayloadGenqlSelection & { __args: {
    /** The input data used to create the payment customization. */
    paymentCustomization: PaymentCustomizationInput} })
    /** Deletes a payment customization. */
    paymentCustomizationDelete?: (PaymentCustomizationDeletePayloadGenqlSelection & { __args: {
    /** The global ID of the payment customization. */
    id: Scalars['ID']} })
    /** Updates a payment customization. */
    paymentCustomizationUpdate?: (PaymentCustomizationUpdatePayloadGenqlSelection & { __args: {
    /** The global ID of the payment customization. */
    id: Scalars['ID'], 
    /** The input data used to update the payment customization. */
    paymentCustomization: PaymentCustomizationInput} })
    /** Sends an email payment reminder for a payment schedule. */
    paymentReminderSend?: (PaymentReminderSendPayloadGenqlSelection & { __args: {
    /** The payment schedule id associated with the reminder. */
    paymentScheduleId: Scalars['ID']} })
    /** Create payment terms on an order. To create payment terms on a draft order, use a draft order mutation and include the request with the `DraftOrderInput`. */
    paymentTermsCreate?: (PaymentTermsCreatePayloadGenqlSelection & { __args: {
    /** Specifies the reference orderId to add the payment terms for. */
    referenceId: Scalars['ID'], 
    /** The attributes used to create the payment terms. */
    paymentTermsAttributes: PaymentTermsCreateInput} })
    /** Delete payment terms for an order. To delete payment terms on a draft order, use a draft order mutation and include the request with the `DraftOrderInput`. */
    paymentTermsDelete?: (PaymentTermsDeletePayloadGenqlSelection & { __args: {
    /** The input fields used to delete the payment terms. */
    input: PaymentTermsDeleteInput} })
    /** Update payment terms on an order. To update payment terms on a draft order, use a draft order mutation and include the request with the `DraftOrderInput`. */
    paymentTermsUpdate?: (PaymentTermsUpdatePayloadGenqlSelection & { __args: {
    /** The input fields used to update the payment terms. */
    input: PaymentTermsUpdateInput} })
    /** Creates a price list. You can use the `priceListCreate` mutation to create a new price list for a country. This enables you to sell your products with international pricing. */
    priceListCreate?: (PriceListCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new price list. */
    input: PriceListCreateInput} })
    /** Deletes a price list. For example, you can delete a price list so that it no longer applies for products in the associated market. */
    priceListDelete?: (PriceListDeletePayloadGenqlSelection & { __args: {
    /** The ID of the price list to be deleted. */
    id: Scalars['ID']} })
    /** Creates or updates fixed prices on a price list. You can use the `priceListFixedPricesAdd` mutation to set a fixed price for specific product variants. This lets you change product variant pricing on a per country basis. Any existing fixed price list prices for these variants will be overwritten. */
    priceListFixedPricesAdd?: (PriceListFixedPricesAddPayloadGenqlSelection & { __args: {
    /** The ID of the price list to which the fixed prices will be added or updated. */
    priceListId: Scalars['ID'], 
    /** The list of fixed prices to add or update in the price list. */
    prices: PriceListPriceInput[]} })
    /** Updates the fixed prices for all variants for a product on a price list. You can use the `priceListFixedPricesByProductUpdate` mutation to set or remove a fixed price for all variants of a product associated with the price list. */
    priceListFixedPricesByProductUpdate?: (PriceListFixedPricesByProductUpdatePayloadGenqlSelection & { __args: {
    /** A list of `PriceListProductPriceInput` that identifies which products to update the fixed prices for. */
    pricesToAdd?: (PriceListProductPriceInput[] | null), 
    /** A list of product IDs that identifies which products to remove the fixed prices for. */
    pricesToDeleteByProductIds?: (Scalars['ID'][] | null), 
    /** The price list to update the prices for. */
    priceListId: Scalars['ID']} })
    /** Deletes specific fixed prices from a price list using a product variant ID. You can use the `priceListFixedPricesDelete` mutation to delete a set of fixed prices from a price list. After deleting the set of fixed prices from the price list, the price of each product variant reverts to the original price that was determined by the price list adjustment. */
    priceListFixedPricesDelete?: (PriceListFixedPricesDeletePayloadGenqlSelection & { __args: {
    /** The ID of the price list from which the fixed prices will be removed. */
    priceListId: Scalars['ID'], 
    /** A list of product variant IDs whose fixed prices will be removed from the price list. */
    variantIds: Scalars['ID'][]} })
    /** Updates fixed prices on a price list. You can use the `priceListFixedPricesUpdate` mutation to set a fixed price for specific product variants or to delete prices for variants associated with the price list. */
    priceListFixedPricesUpdate?: (PriceListFixedPricesUpdatePayloadGenqlSelection & { __args: {
    /** The price list that the prices will be updated against. */
    priceListId: Scalars['ID'], 
    /** The fixed prices to add. */
    pricesToAdd: PriceListPriceInput[], 
    /** A list of product variant IDs to remove from the price list. */
    variantIdsToDelete: Scalars['ID'][]} })
    /**
     * Updates a price list.
     * If you modify the currency, then any fixed prices set on the price list will be deleted.
     * 
     */
    priceListUpdate?: (PriceListUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the price list to update. */
    id: Scalars['ID'], 
    /** The input data used to update the price list. */
    input: PriceListUpdateInput} })
    /**
     * @deprecated Use `discountCodeActivate` instead.
     * Activate a price rule.
     */
    priceRuleActivate?: (PriceRuleActivatePayloadGenqlSelection & { __args: {
    /** ID of the price rule to update. */
    id: Scalars['ID']} })
    /**
     * @deprecated Use `discountCodeBasicCreate` instead.
     * Create a price rule using the input.
     */
    priceRuleCreate?: (PriceRuleCreatePayloadGenqlSelection & { __args: {
    /** The input fields to create a price rule. */
    priceRule: PriceRuleInput, 
    /** The input fields to create a discount code for the price rule. */
    priceRuleDiscountCode?: (PriceRuleDiscountCodeInput | null)} })
    /**
     * @deprecated Use `discountCodeDeactivate` instead.
     * Deactivate a price rule.
     */
    priceRuleDeactivate?: (PriceRuleDeactivatePayloadGenqlSelection & { __args: {
    /** ID of the price rule to update. */
    id: Scalars['ID']} })
    /**
     * @deprecated Use `discountCodeDelete` instead.
     * Delete a price rule.
     */
    priceRuleDelete?: (PriceRuleDeletePayloadGenqlSelection & { __args: {
    /** The ID of the price rule object. */
    id: Scalars['ID']} })
    /**
     * @deprecated Use `discountRedeemCodeBulkAdd` instead.
     * Create a discount code for a price rule.
     */
    priceRuleDiscountCodeCreate?: (PriceRuleDiscountCodeCreatePayloadGenqlSelection & { __args: {
    /** The ID of the price rule object. */
    priceRuleId: Scalars['ID'], 
    /** The code to create for the price rule. */
    code: Scalars['String']} })
    /**
     * @deprecated Use `discountCodeBasicUpdate` instead.
     * Update a discount code for a price rule.
     */
    priceRuleDiscountCodeUpdate?: (PriceRuleDiscountCodeUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the price rule object. */
    priceRuleId: Scalars['ID'], 
    /** The new code of a price rule. */
    code: Scalars['String']} })
    /**
     * @deprecated Use `discountCodeBasicUpdate` instead.
     * Updates a price rule using its ID and an input.
     */
    priceRuleUpdate?: (PriceRuleUpdatePayloadGenqlSelection & { __args: {
    /** ID of the price rule to update. */
    id: Scalars['ID'], 
    /** The input fields to update a price rule. */
    priceRule: PriceRuleInput, 
    /** The input fields to update the discount code of the price rule. */
    priceRuleDiscountCode?: (PriceRuleDiscountCodeInput | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Deletes a private metafield.
     * Private metafields are automatically deleted when the app that created them is uninstalled.
     * 
     */
    privateMetafieldDelete?: (PrivateMetafieldDeletePayloadGenqlSelection & { __args: {
    /** The input fields for the private metafield to delete. */
    input: PrivateMetafieldDeleteInput} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Creates or updates a private metafield. Use private metafields when you don't want the metafield data to be accessible by merchants or other apps.
     * Private metafields are accessible only by the application that created them and only from the GraphQL Admin API.
     * 
     * An application can create a maximum of 10 private metafields per shop resource.
     * 
     */
    privateMetafieldUpsert?: (PrivateMetafieldUpsertPayloadGenqlSelection & { __args: {
    /** Specifies the input fields for the private metafield. */
    input: PrivateMetafieldInput} })
    /**
     * @deprecated Use `productCreateMedia` instead.
     * Appends images to a product.
     */
    productAppendImages?: (ProductAppendImagesPayloadGenqlSelection & { __args: {
    /** Specifies the new images and the product that they're being added to. */
    input: ProductAppendImagesInput} })
    /** Changes the status of a product. This allows you to set the availability of the product across all channels. */
    productChangeStatus?: (ProductChangeStatusPayloadGenqlSelection & { __args: {
    /** The ID of the product. */
    productId: Scalars['ID'], 
    /** The status to be assigned to the product. */
    status: ProductStatus} })
    /**
     * Creates a product.
     * 
     * If you need to create a product with many
     * [variants](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput)
     * that are active at several
     * [locations](https://shopify.dev/api/admin-graphql/latest/input-objects/InventoryLevelInput),
     * especially with a lot of
     * [collections](https://shopify.dev/api/admin-graphql/latest/mutations/productCreate#field-productinput-collectionstojoin)
     * and
     * [tags](https://shopify.dev/api/admin-graphql/latest/mutations/productCreate#field-productinput-tags),
     * then you should first create the product with just the variants.
     * 
     * After the product is created, you can activate the variants at locations
     * and add the other related objects to the product. This reduces the size of each mutation and increases the likelihood that it will
     * complete before the operation times out.
     * 
     * The following example shows how you might break up product creation and object association into multiple steps:
     * 
     * 1. Create the product with variants. Don't specify any tags or collections on the product, and don't specify
     * [inventory quantities](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput#field-productvariantinput-inventoryquantities)
     * for each variant.
     * 
     * 2. After the product is created, add tags to the product using the
     * [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsAdd) mutation, and add collections using the
     * [collectionsAddProducts](https://shopify.dev/api/admin-graphql/latest/mutations/collectionAddProducts) mutation.
     * 
     * 3. Use the [inventoryBulkToggleActivation](https://shopify.dev/api/admin-graphql/latest/mutations/inventoryBulkToggleActivation) mutation
     * on each [inventory item](https://shopify.dev/api/admin-graphql/latest/objects/InventoryItem) to activate it at the appropriate locations.
     * 
     * 4. After activating the variants at the locations, adjust inventory quantities at each location using the
     * [inventoryBulkAdjustQuantityAtLocation](https://shopify.dev/api/admin-graphql/latest/mutations/inventoryBulkAdjustQuantityAtLocation) mutation.
     * 
     */
    productCreate?: (ProductCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new product. */
    input: ProductInput, 
    /** List of new media to be added to the product. */
    media?: (CreateMediaInput[] | null)} })
    /** Creates media for a product. */
    productCreateMedia?: (ProductCreateMediaPayloadGenqlSelection & { __args: {
    /** Specifies the product associated with the media. */
    productId: Scalars['ID'], 
    /** List of new media to be added to a product. */
    media: CreateMediaInput[]} })
    /**
     * Deletes a product, including all associated variants and media.
     * 
     * As of API version `2023-01`, if you need to delete a large product, such as one that has many
     * [variants](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput)
     * that are active at several
     * [locations](https://shopify.dev/api/admin-graphql/latest/input-objects/InventoryLevelInput),
     * you may encounter timeout errors. To avoid these timeout errors, you can instead use the asynchronous
     * [ProductDeleteAsync](https://shopify.dev/api/admin-graphql/latest/mutations/productDeleteAsync)
     * mutation.
     * 
     */
    productDelete?: (ProductDeletePayloadGenqlSelection & { __args: {
    /** Specifies the product to delete by its ID. */
    input: ProductDeleteInput} })
    /**
     * Deletes a product asynchronously, including all associated variants and media.
     * 
     */
    productDeleteAsync?: (ProductDeleteAsyncPayloadGenqlSelection & { __args: {
    /** The ID of the product to be deleted. */
    productId: Scalars['ID']} })
    /**
     * @deprecated Use `productDeleteMedia` instead.
     * Removes product images from the product.
     */
    productDeleteImages?: (ProductDeleteImagesPayloadGenqlSelection & { __args: {
    /** This is the ID of the product. */
    id: Scalars['ID'], 
    /** This is the array of image IDs to delete from the product. */
    imageIds: Scalars['ID'][]} })
    /** Deletes media for a product. */
    productDeleteMedia?: (ProductDeleteMediaPayloadGenqlSelection & { __args: {
    /** Specifies the product ID from which the media will be deleted. */
    productId: Scalars['ID'], 
    /** The media IDs to be deleted. */
    mediaIds: Scalars['ID'][]} })
    /**
     * Duplicates a product.
     * 
     * As of API version `2023-01`, if you need to duplicate a large product, such as one that has many
     * [variants](https://shopify.dev/api/admin-graphql/latest/input-objects/ProductVariantInput)
     * that are active at several
     * [locations](https://shopify.dev/api/admin-graphql/latest/input-objects/InventoryLevelInput),
     * you may encounter timeout errors. To avoid these timeout errors, you can instead use the asynchronous
     * [ProductDuplicateAsyncV2](https://shopify.dev/api/admin-graphql/latest/mutations/productDuplicateAsyncV2)
     * mutation.
     * 
     */
    productDuplicate?: (ProductDuplicatePayloadGenqlSelection & { __args: {
    /** The ID of the product to be duplicated. */
    productId: Scalars['ID'], 
    /** The new title of the product. */
    newTitle: Scalars['String'], 
    /** The new status of the product. If no value is provided the status will be inherited from the original product. */
    newStatus?: (ProductStatus | null), 
    /** Specifies whether or not to duplicate images. */
    includeImages?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `productDuplicateAsyncV2` instead.
     * Asynchronously duplicate a single product.
     * 
     */
    productDuplicateAsync?: (ProductDuplicateAsyncPayloadGenqlSelection & { __args: {
    /** The params for duplicating the product. */
    input: ProductDuplicateAsyncInput} })
    /**
     * Asynchronously duplicate a single product.
     * 
     */
    productDuplicateAsyncV2?: (ProductDuplicateAsyncV2PayloadGenqlSelection & { __args: {
    /** The params for duplicating the product. */
    input: ProductDuplicateAsyncInput} })
    /** Creates a product feed for a specific publication. */
    productFeedCreate?: (ProductFeedCreatePayloadGenqlSelection & { __args?: {
    /** The properties of the new product feed. */
    input?: (ProductFeedInput | null)} })
    /** Deletes a product feed for a specific publication. */
    productFeedDelete?: (ProductFeedDeletePayloadGenqlSelection & { __args: {
    /** The ID of the product feed to be deleted. */
    id: Scalars['ID']} })
    /** Runs the full product sync for a given shop. */
    productFullSync?: (ProductFullSyncPayloadGenqlSelection & { __args: {
    /** Syncs only products that haven't changed since the specified timestamp. */
    beforeUpdatedAt?: (Scalars['DateTime'] | null), 
    /** The product feed which needs syncing. */
    id: Scalars['ID'], 
    /** Syncs only products that have changed since the specified timestamp. */
    updatedAtSince?: (Scalars['DateTime'] | null)} })
    /**
     * @deprecated Use `productUpdateMedia` instead.
     * Updates an image of a product.
     */
    productImageUpdate?: (ProductImageUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the product on which to update the image. */
    productId: Scalars['ID'], 
    /** Image to be updated. */
    image: ImageInput} })
    /**
     * Adds multiple selling plan groups to a product.
     * 
     */
    productJoinSellingPlanGroups?: (ProductJoinSellingPlanGroupsPayloadGenqlSelection & { __args: {
    /** The ID of the product. */
    id: Scalars['ID'], 
    /** The IDs of the selling plan groups to add. */
    sellingPlanGroupIds: Scalars['ID'][]} })
    /**
     * Removes multiple groups from a product.
     * 
     */
    productLeaveSellingPlanGroups?: (ProductLeaveSellingPlanGroupsPayloadGenqlSelection & { __args: {
    /** The ID of the product. */
    id: Scalars['ID'], 
    /** The IDs of the selling plan groups to add. */
    sellingPlanGroupIds: Scalars['ID'][]} })
    /**
     * @deprecated Use `publishablePublish` instead.
     * Publishes a product. Products that are sold exclusively on subscription (`requiresSellingPlan: true`) can only be published on online stores.
     */
    productPublish?: (ProductPublishPayloadGenqlSelection & { __args: {
    /** Specifies the product to publish and the channels to publish it to. */
    input: ProductPublishInput} })
    /**
     * @deprecated Use `productReorderMedia` instead.
     * Asynchronously reorders a set of images for a given product.
     */
    productReorderImages?: (ProductReorderImagesPayloadGenqlSelection & { __args: {
    /** The ID of the product on which to reorder images. */
    id: Scalars['ID'], 
    /** A list of moves to perform which will be evaluated in order. */
    moves: MoveInput[]} })
    /** Asynchronously reorders the media attached to a product. */
    productReorderMedia?: (ProductReorderMediaPayloadGenqlSelection & { __args: {
    /** The ID of the product on which to reorder medias. */
    id: Scalars['ID'], 
    /** A list of moves to perform which will be evaluated in order. */
    moves: MoveInput[]} })
    /**
     * @deprecated Use `publishableUnpublish` instead.
     * Unpublishes a product.
     */
    productUnpublish?: (ProductUnpublishPayloadGenqlSelection & { __args: {
    /** Specifies the product to unpublish and the channel to unpublish it from. */
    input: ProductUnpublishInput} })
    /**
     * Updates a product. If you update a product and only include some variants in the update,
     * then any variants not included will be deleted. To safely manage variants without the risk of
     * deleting excluded variants, use
     * [productVariantsBulkUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantsbulkupdate).
     * If you want to update a single variant, then use
     * [productVariantUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantupdate).
     * 
     */
    productUpdate?: (ProductUpdatePayloadGenqlSelection & { __args: {
    /** The updated properties for a product. */
    input: ProductInput, 
    /** List of new media to be added to the product. */
    media?: (CreateMediaInput[] | null)} })
    /** Updates media for a product. */
    productUpdateMedia?: (ProductUpdateMediaPayloadGenqlSelection & { __args: {
    /** Specifies the product on which media will be updated. */
    productId: Scalars['ID'], 
    /** A list of media updates. */
    media: UpdateMediaInput[]} })
    /** Appends media from a product to variants of the product. */
    productVariantAppendMedia?: (ProductVariantAppendMediaPayloadGenqlSelection & { __args: {
    /** Specifies the product associated to the media. */
    productId: Scalars['ID'], 
    /** A list of pairs of variants and media to be attached to the variants. */
    variantMedia: ProductVariantAppendMediaInput[]} })
    /** Creates a product variant. */
    productVariantCreate?: (ProductVariantCreatePayloadGenqlSelection & { __args: {
    /** The properties for the new product variant. */
    input: ProductVariantInput} })
    /** Deletes a product variant. */
    productVariantDelete?: (ProductVariantDeletePayloadGenqlSelection & { __args: {
    /** The ID of the product variant to be deleted. */
    id: Scalars['ID']} })
    /** Detaches media from product variants. */
    productVariantDetachMedia?: (ProductVariantDetachMediaPayloadGenqlSelection & { __args: {
    /** Specifies the product to which the variants and media are associated. */
    productId: Scalars['ID'], 
    /** A list of pairs of variants and media to be deleted from the variants. */
    variantMedia: ProductVariantDetachMediaInput[]} })
    /**
     * Adds multiple selling plan groups to a product variant.
     * 
     */
    productVariantJoinSellingPlanGroups?: (ProductVariantJoinSellingPlanGroupsPayloadGenqlSelection & { __args: {
    /** The ID of the product variant. */
    id: Scalars['ID'], 
    /** The IDs of the selling plan groups to add. */
    sellingPlanGroupIds: Scalars['ID'][]} })
    /**
     * Remove multiple groups from a product variant.
     * 
     */
    productVariantLeaveSellingPlanGroups?: (ProductVariantLeaveSellingPlanGroupsPayloadGenqlSelection & { __args: {
    /** The ID of the product variant. */
    id: Scalars['ID'], 
    /** The IDs of the selling plan groups to leave. */
    sellingPlanGroupIds: Scalars['ID'][]} })
    /** Creates new bundles, updates existing bundles, and removes bundle components for one or multiple bundles. */
    productVariantRelationshipBulkUpdate?: (ProductVariantRelationshipBulkUpdatePayloadGenqlSelection & { __args: {
    /** The input options for the product variant being updated. */
    input: ProductVariantRelationshipUpdateInput[]} })
    /** Updates a product variant. */
    productVariantUpdate?: (ProductVariantUpdatePayloadGenqlSelection & { __args: {
    /** The updated properties for the product variant. */
    input: ProductVariantInput} })
    /**
     * Creates product variants in bulk. If you want to create a single variant, then use
     * [productVariantCreate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantcreate).
     * 
     */
    productVariantsBulkCreate?: (ProductVariantsBulkCreatePayloadGenqlSelection & { __args: {
    /** An array of product variants to be created. */
    variants: ProductVariantsBulkInput[], 
    /** The ID of the product on which to create the variants. */
    productId: Scalars['ID'], 
    /** List of new media to be added to the product. */
    media?: (CreateMediaInput[] | null)} })
    /**
     * Deletes product variants in bulk. If you want to delete a single variant, then use
     * [productVariantDelete](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantdelete).
     * 
     */
    productVariantsBulkDelete?: (ProductVariantsBulkDeletePayloadGenqlSelection & { __args: {
    /** An array of product variants IDs to delete. */
    variantsIds: Scalars['ID'][], 
    /** The ID of the product with the variants to update. */
    productId: Scalars['ID']} })
    /** Reorder product variants in bulk. */
    productVariantsBulkReorder?: (ProductVariantsBulkReorderPayloadGenqlSelection & { __args: {
    /** The product ID of the variants to be reordered. */
    productId: Scalars['ID'], 
    /** An array of variant positions. */
    positions: ProductVariantPositionInput[]} })
    /**
     * Updates product variants in bulk. If you want to update a single variant, then use
     * [productVariantUpdate](https://shopify.dev/api/admin-graphql/latest/mutations/productvariantupdate).
     * 
     */
    productVariantsBulkUpdate?: (ProductVariantsBulkUpdatePayloadGenqlSelection & { __args: {
    /** An array of product variants to update. */
    variants: ProductVariantsBulkInput[], 
    /** The ID of the product associated with the variants to update. */
    productId: Scalars['ID'], 
    /** List of new media to be added to the product. */
    media?: (CreateMediaInput[] | null), 
    /**
     * When partial updates are allowed, valid variant changes may be persisted even if some of
     * the variants updated have invalid data and cannot be persisted.
     * When partial updates are not allowed, any error will prevent all variants from updating.
     * 
     */
    allowPartialUpdates?: (Scalars['Boolean'] | null)} })
    /**
     * Updates the server pixel to connect to a Google PubSub endpoint.
     * Running this mutation deletes any previous subscriptions for the server pixel.
     * 
     */
    pubSubServerPixelUpdate?: (PubSubServerPixelUpdatePayloadGenqlSelection & { __args: {
    /** The Google PubSub project ID. */
    pubSubProject: Scalars['String'], 
    /** The Google PubSub topic ID. */
    pubSubTopic: Scalars['String']} })
    /** Creates a new Google Cloud Pub/Sub webhook subscription. */
    pubSubWebhookSubscriptionCreate?: (PubSubWebhookSubscriptionCreatePayloadGenqlSelection & { __args: {
    /** The type of event that triggers the webhook. */
    topic: WebhookSubscriptionTopic, 
    /** Specifies the input fields for a Google Cloud Pub/Sub webhook subscription. */
    webhookSubscription: PubSubWebhookSubscriptionInput} })
    /** Updates a Google Cloud Pub/Sub webhook subscription. */
    pubSubWebhookSubscriptionUpdate?: (PubSubWebhookSubscriptionUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the webhook subscription to update. */
    id: Scalars['ID'], 
    /** Specifies the input fields for a Google Cloud Pub/Sub webhook subscription. */
    webhookSubscription?: (PubSubWebhookSubscriptionInput | null)} })
    /**
     * Creates a publication.
     * 
     */
    publicationCreate?: (PublicationCreatePayloadGenqlSelection & { __args: {
    /** The input fields to use when creating the publication. */
    input: PublicationCreateInput} })
    /**
     * Deletes a publication.
     * 
     */
    publicationDelete?: (PublicationDeletePayloadGenqlSelection & { __args: {
    /** The ID of the publication to delete. */
    id: Scalars['ID']} })
    /**
     * Updates a publication.
     * 
     */
    publicationUpdate?: (PublicationUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the publication to update. */
    id: Scalars['ID'], 
    /** The input fields to use when updating the publication. */
    input: PublicationUpdateInput} })
    /** Publishes a resource to a channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. Products that are sold exclusively on subscription (`requiresSellingPlan: true`) can be published only on online stores. */
    publishablePublish?: (PublishablePublishPayloadGenqlSelection & { __args: {
    /** The resource to create or update publications for. */
    id: Scalars['ID'], 
    /** Specifies the input fields required to publish a resource. */
    input: PublicationInput[]} })
    /** Publishes a resource to current channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. Products that are sold exclusively on subscription (`requiresSellingPlan: true`) can be published only on online stores. */
    publishablePublishToCurrentChannel?: (PublishablePublishToCurrentChannelPayloadGenqlSelection & { __args: {
    /** The resource to create or update publications for. */
    id: Scalars['ID']} })
    /** Unpublishes a resource from a channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. */
    publishableUnpublish?: (PublishableUnpublishPayloadGenqlSelection & { __args: {
    /** The resource to delete or update publications for. */
    id: Scalars['ID'], 
    /** Specifies the input fields required to unpublish a resource. */
    input: PublicationInput[]} })
    /** Unpublishes a resource from the current channel. If the resource is a product, then it's visible in the channel only if the product status is `active`. */
    publishableUnpublishToCurrentChannel?: (PublishableUnpublishToCurrentChannelPayloadGenqlSelection & { __args: {
    /** The resource to delete or update publications for. */
    id: Scalars['ID']} })
    /**
     * Creates or updates existing quantity rules on a price list.
     * You can use the `quantityRulesAdd` mutation to set order level minimums, maximumums and increments for specific product variants.
     * 
     */
    quantityRulesAdd?: (QuantityRulesAddPayloadGenqlSelection & { __args: {
    /** The ID of the price list to which the quantity rules will be added or updated. */
    priceListId: Scalars['ID'], 
    /** The list of quantity rules to add or update in the price list. */
    quantityRules: QuantityRuleInput[]} })
    /**
     * Deletes specific quantity rules from a price list using a product variant ID.
     * You can use the `quantityRulesDelete` mutation to delete a set of quantity rules from a price list.
     * 
     */
    quantityRulesDelete?: (QuantityRulesDeletePayloadGenqlSelection & { __args: {
    /** The ID of the price list from which the quantity rules will be deleted. */
    priceListId: Scalars['ID'], 
    /**
     * A list of product variant IDs whose quantity rules will be removed from the price list.
     * 
     */
    variantIds: Scalars['ID'][]} })
    /** Creates a refund. */
    refundCreate?: (RefundCreatePayloadGenqlSelection & { __args: {
    /** The input fields that are used in the mutation for creating a refund. */
    input: RefundInput} })
    /**
     * Approves a customer's return request.
     * If this mutation is successful, then the `Return.status` field of the
     * approved return is set to `OPEN`.
     * 
     */
    returnApproveRequest?: (ReturnApproveRequestPayloadGenqlSelection & { __args: {
    /** The input fields to approve a return. */
    input: ReturnApproveRequestInput} })
    /**
     * Cancels a return and restores the items back to being fulfilled.
     * Canceling a return is only available before any work has been done
     * on the return (such as an inspection or refund).
     * 
     */
    returnCancel?: (ReturnCancelPayloadGenqlSelection & { __args: {
    /** The ID of the return to cancel. */
    id: Scalars['ID'], 
    /** Whether the customer receives an email notification regarding the canceled return. */
    notifyCustomer?: (Scalars['Boolean'] | null)} })
    /**
     * Indicates a return is complete, either when a refund has been made and items restocked,
     * or simply when it has been marked as returned in the system.
     * 
     */
    returnClose?: (ReturnClosePayloadGenqlSelection & { __args: {
    /** The ID of the return to close. */
    id: Scalars['ID']} })
    /** Creates a return. */
    returnCreate?: (ReturnCreatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields for a return. */
    returnInput: ReturnInput} })
    /**
     * Declines a return on an order.
     * When a return is declined, each `ReturnLineItem.fulfillmentLineItem` can be associated to a new return.
     * Use the `ReturnCreate` or `ReturnRequest` mutation to initiate a new return.
     * 
     */
    returnDeclineRequest?: (ReturnDeclineRequestPayloadGenqlSelection & { __args: {
    /** The input fields for declining a customer's return request. */
    input: ReturnDeclineRequestInput} })
    /** Refunds a return and associates it with the related return request. */
    returnRefund?: (ReturnRefundPayloadGenqlSelection & { __args: {
    /** The input fields to refund a return. */
    returnRefundInput: ReturnRefundInput} })
    /** Reopens a closed return. */
    returnReopen?: (ReturnReopenPayloadGenqlSelection & { __args: {
    /** The ID of the return to reopen. */
    id: Scalars['ID']} })
    /**
     * A customer's return request that hasn't been approved or declined.
     * This mutation sets the value of the `Return.status` field to `REQUESTED`.
     * To create a return that has the `Return.status` field set to `OPEN`, use the `returnCreate` mutation.
     * 
     */
    returnRequest?: (ReturnRequestPayloadGenqlSelection & { __args: {
    /** The input fields for requesting a return. */
    input: ReturnRequestInput} })
    /** Creates a new reverse delivery with associated external shipping information. */
    reverseDeliveryCreateWithShipping?: (ReverseDeliveryCreateWithShippingPayloadGenqlSelection & { __args: {
    /** The ID of the reverse fulfillment order that's associated to the reverse delivery. */
    reverseFulfillmentOrderId: Scalars['ID'], 
    /**
     * The reverse delivery line items to be created. If an empty array is provided, then this mutation
     *           will create a reverse delivery line item for each reverse fulfillment order line item, with its quantity equal
     *           to the reverse fulfillment order line item total quantity.
     */
    reverseDeliveryLineItems: ReverseDeliveryLineItemInput[], 
    /** The tracking information for the reverse delivery. */
    trackingInput?: (ReverseDeliveryTrackingInput | null), 
    /** The return label file information for the reverse delivery. */
    labelInput?: (ReverseDeliveryLabelInput | null), 
    /** When `true` the customer is notified with delivery instructions if the `ReverseFulfillmentOrder.order.email` is present. */
    notifyCustomer?: (Scalars['Boolean'] | null)} })
    /**
     * Disposes reverse delivery line items for a reverse delivery on the same shop.
     * 
     */
    reverseDeliveryDispose?: (ReverseDeliveryDisposePayloadGenqlSelection & { __args: {
    /** The input parameters required to dispose reverse delivery line items. */
    dispositionInputs: ReverseDeliveryDisposeInput[]} })
    /** Updates a reverse delivery with associated external shipping information. */
    reverseDeliveryShippingUpdate?: (ReverseDeliveryShippingUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the reverse delivery to update. */
    reverseDeliveryId: Scalars['ID'], 
    /** The tracking information for the reverse delivery. */
    trackingInput?: (ReverseDeliveryTrackingInput | null), 
    /** The return label file information for the reverse delivery. */
    labelInput?: (ReverseDeliveryLabelInput | null), 
    /** If `true` and an email address exists on the `ReverseFulfillmentOrder.order`, then the customer is notified with the updated delivery instructions. */
    notifyCustomer?: (Scalars['Boolean'] | null)} })
    /**
     * Disposes reverse fulfillment order line items.
     * 
     */
    reverseFulfillmentOrderDispose?: (ReverseFulfillmentOrderDisposePayloadGenqlSelection & { __args: {
    /** The input parameters required to dispose reverse fulfillment order line items. */
    dispositionInputs: ReverseFulfillmentOrderDisposeInput[]} })
    /** Creates a saved search. */
    savedSearchCreate?: (SavedSearchCreatePayloadGenqlSelection & { __args: {
    /** Specifies the input fields for a saved search. */
    input: SavedSearchCreateInput} })
    /** Delete a saved search. */
    savedSearchDelete?: (SavedSearchDeletePayloadGenqlSelection & { __args: {
    /** The input fields to delete a saved search. */
    input: SavedSearchDeleteInput} })
    /** Updates a saved search. */
    savedSearchUpdate?: (SavedSearchUpdatePayloadGenqlSelection & { __args: {
    /** The input fields to update a saved search. */
    input: SavedSearchUpdateInput} })
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Creates a new script tag.
     * 
     */
    scriptTagCreate?: (ScriptTagCreatePayloadGenqlSelection & { __args: {
    /** The input fields for a script tag. */
    input: ScriptTagInput} })
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Deletes a script tag.
     * 
     */
    scriptTagDelete?: (ScriptTagDeletePayloadGenqlSelection & { __args: {
    /** The ID of the script tag to delete. */
    id: Scalars['ID']} })
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Updates a script tag.
     * 
     */
    scriptTagUpdate?: (ScriptTagUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the script tag to update. */
    id: Scalars['ID'], 
    /** Specifies the input fields for a script tag. */
    input: ScriptTagInput} })
    /** Creates a segment. */
    segmentCreate?: (SegmentCreatePayloadGenqlSelection & { __args: {
    /** The name of the segment to be created. Segment names must be unique. */
    name: Scalars['String'], 
    /** A precise definition of the segment. The definition is composed of a combination of conditions on facts about customers such as `email_subscription_status = 'SUBSCRIBED'` with [this syntax](https://shopify.dev/api/shopifyql/segment-query-language-reference). */
    query: Scalars['String']} })
    /** Deletes a segment. */
    segmentDelete?: (SegmentDeletePayloadGenqlSelection & { __args: {
    /** Specifies the segment to delete. */
    id: Scalars['ID']} })
    /** Updates a segment. */
    segmentUpdate?: (SegmentUpdatePayloadGenqlSelection & { __args: {
    /** Specifies the segment to be updated. */
    id: Scalars['ID'], 
    /** The new name for the segment. */
    name?: (Scalars['String'] | null), 
    /** A precise definition of the segment. The definition is composed of a combination of conditions on facts about customers such as `email_subscription_status = 'SUBSCRIBED'` with [this syntax](https://shopify.dev/api/shopifyql/segment-query-language-reference). */
    query?: (Scalars['String'] | null)} })
    /**
     * Adds multiple product variants to a selling plan group.
     * 
     */
    sellingPlanGroupAddProductVariants?: (SellingPlanGroupAddProductVariantsPayloadGenqlSelection & { __args: {
    /** The ID of the selling plan group. */
    id: Scalars['ID'], 
    /** The IDs of the product variants to add. */
    productVariantIds: Scalars['ID'][]} })
    /**
     * Adds multiple products to a selling plan group.
     * 
     */
    sellingPlanGroupAddProducts?: (SellingPlanGroupAddProductsPayloadGenqlSelection & { __args: {
    /** The ID of the selling plan group. */
    id: Scalars['ID'], 
    /** The IDs of the products to add. */
    productIds: Scalars['ID'][]} })
    /** Creates a Selling Plan Group. */
    sellingPlanGroupCreate?: (SellingPlanGroupCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new Selling Plan Group. */
    input: SellingPlanGroupInput, 
    /** The resources this Selling Plan Group should be applied to. */
    resources?: (SellingPlanGroupResourceInput | null)} })
    /** Delete a Selling Plan Group. */
    sellingPlanGroupDelete?: (SellingPlanGroupDeletePayloadGenqlSelection & { __args: {
    /** The id of the selling plan group to delete. */
    id: Scalars['ID']} })
    /**
     * Removes multiple product variants from a selling plan group.
     * 
     */
    sellingPlanGroupRemoveProductVariants?: (SellingPlanGroupRemoveProductVariantsPayloadGenqlSelection & { __args: {
    /** The ID of the selling plan group. */
    id: Scalars['ID'], 
    /** The IDs of the product variants to remove. */
    productVariantIds: Scalars['ID'][]} })
    /**
     * Removes multiple products from a selling plan group.
     * 
     */
    sellingPlanGroupRemoveProducts?: (SellingPlanGroupRemoveProductsPayloadGenqlSelection & { __args: {
    /** The ID of the selling plan group. */
    id: Scalars['ID'], 
    /** The IDs of the products to remove. */
    productIds: Scalars['ID'][]} })
    /** Update a Selling Plan Group. */
    sellingPlanGroupUpdate?: (SellingPlanGroupUpdatePayloadGenqlSelection & { __args: {
    /** The Selling Plan Group to update. */
    id: Scalars['ID'], 
    /** The properties of the Selling Plan Group to update. */
    input?: (SellingPlanGroupInput | null)} })
    /** Creates a new unconfigured server pixel. A single server pixel can exist for an app and shop combination. If you call this mutation when a server pixel already exists, then an error will return. */
    serverPixelCreate?: ServerPixelCreatePayloadGenqlSelection
    /** Deletes the Server Pixel associated with the current app & shop. */
    serverPixelDelete?: ServerPixelDeletePayloadGenqlSelection
    /** Deletes a shipping package. */
    shippingPackageDelete?: (ShippingPackageDeletePayloadGenqlSelection & { __args: {
    /** The ID of the shipping package to remove. */
    id: Scalars['ID']} })
    /**
     * Set a shipping package as the default.
     * The default shipping package is the one used to calculate shipping costs on checkout.
     * 
     */
    shippingPackageMakeDefault?: (ShippingPackageMakeDefaultPayloadGenqlSelection & { __args: {
    /** The ID of the shipping package to set as the default. */
    id: Scalars['ID']} })
    /** Updates a shipping package. */
    shippingPackageUpdate?: (ShippingPackageUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the shipping package to update. */
    id: Scalars['ID'], 
    /** Specifies the input fields for a shipping package. */
    shippingPackage: CustomShippingPackageInput} })
    /** Deletes a locale for a shop. This also deletes all translations of this locale. */
    shopLocaleDisable?: (ShopLocaleDisablePayloadGenqlSelection & { __args: {
    /** ISO code of the locale to delete. */
    locale: Scalars['String']} })
    /** Adds a locale for a shop. The newly added locale is in the unpublished state. */
    shopLocaleEnable?: (ShopLocaleEnablePayloadGenqlSelection & { __args: {
    /** ISO code of the locale to enable. */
    locale: Scalars['String'], 
    /** The list of markets web presences to add the locale to. */
    marketWebPresenceIds?: (Scalars['ID'][] | null)} })
    /** Updates a locale for a shop. */
    shopLocaleUpdate?: (ShopLocaleUpdatePayloadGenqlSelection & { __args: {
    /** ISO code of the locale to update. */
    locale: Scalars['String'], 
    /** Specifies the input fields for a shop locale. */
    shopLocale: ShopLocaleInput} })
    /** Updates a shop policy. */
    shopPolicyUpdate?: (ShopPolicyUpdatePayloadGenqlSelection & { __args: {
    /** The properties to use when updating the shop policy. */
    shopPolicy: ShopPolicyInput} })
    /**
     * The `ResourceFeedback` object lets your app report the status of shops and their resources. For example, if
     * your app is a marketplace channel, then you can use resource feedback to alert merchants that they need to connect their marketplace account by signing in.
     * 
     * Resource feedback notifications are displayed to the merchant on the home screen of their Shopify admin, and in the product details view for any products that are published to your app.
     * 
     * This resource should be used only in cases where you're describing steps that a merchant is required to complete. If your app offers optional or promotional set-up steps, or if it makes recommendations, then don't use resource feedback to let merchants know about them.
     * 
     * ## Sending feedback on a shop
     * 
     * You can send resource feedback on a shop to let the merchant know what steps they need to take to make sure that your app is set up correctly. Feedback can have one of two states: `requires_action` or `success`. You need to send a `requires_action` feedback request for each step that the merchant is required to complete.
     * 
     * If there are multiple set-up steps that require merchant action, then send feedback with a state of `requires_action` as merchants complete prior steps. And to remove the feedback message from the Shopify admin, send a `success` feedback request.
     * 
     * #### Important
     * Sending feedback replaces previously sent feedback for the shop. Send a new `shopResourceFeedbackCreate` mutation to push the latest state of a shop or its resources to Shopify.
     * 
     */
    shopResourceFeedbackCreate?: (ShopResourceFeedbackCreatePayloadGenqlSelection & { __args: {
    /** The fields required to create shop feedback. */
    input: ResourceFeedbackCreateInput} })
    /**
     * @deprecated Use `stagedUploadsCreate` instead.
     * Generates the URL and signed paramaters needed to upload an asset to Shopify.
     */
    stagedUploadTargetGenerate?: (StagedUploadTargetGeneratePayloadGenqlSelection & { __args: {
    /** The input fields for generating a staged upload. */
    input: StagedUploadTargetGenerateInput} })
    /**
     * @deprecated Use `stagedUploadsCreate` instead.
     * Uploads multiple images.
     */
    stagedUploadTargetsGenerate?: (StagedUploadTargetsGeneratePayloadGenqlSelection & { __args: {
    /** The input fields for generating staged uploads. */
    input: StageImageInput[]} })
    /**
     * Creates staged upload targets for each input. This is the first step in the upload process.
     * The returned staged upload targets' URL and parameter fields can be used to send a request
     * to upload the file described in the corresponding input.
     * 
     * For more information on the upload process, refer to
     * [Upload media to Shopify](https://shopify.dev/apps/online-store/media/products#step-1-upload-media-to-shopify).
     * 
     */
    stagedUploadsCreate?: (StagedUploadsCreatePayloadGenqlSelection & { __args: {
    /** The information required to generate staged upload targets. */
    input: StagedUploadInput[]} })
    /**
     * Activates the specified standard metafield definition from its template.
     * 
     * Refer to the [list of standard metafield definition templates](https://shopify.dev/apps/metafields/definitions/standard-definitions).
     * 
     */
    standardMetafieldDefinitionEnable?: (StandardMetafieldDefinitionEnablePayloadGenqlSelection & { __args: {
    /** The resource type that the metafield definition is scoped to. */
    ownerType: MetafieldOwnerType, 
    /** The ID of the standard metafield definition template to enable. */
    id?: (Scalars['ID'] | null), 
    /** The namespace of the standard metafield to enable. Used in combination with `key`. */
    namespace?: (Scalars['String'] | null), 
    /** The key of the standard metafield to enable. Used in combination with `namespace`. */
    key?: (Scalars['String'] | null), 
    /** Whether to pin the metafield definition. */
    pin: Scalars['Boolean'], 
    /** Whether metafields for the definition are visible using the Storefront API. */
    visibleToStorefrontApi?: (Scalars['Boolean'] | null), 
    /** Whether the metafield definition can be used as a collection condition. */
    useAsCollectionCondition?: (Scalars['Boolean'] | null)} })
    /**
     * Enables the specified standard metaobject definition from its template.
     * 
     */
    standardMetaobjectDefinitionEnable?: (StandardMetaobjectDefinitionEnablePayloadGenqlSelection & { __args: {
    /** The type of the metaobject definition to enable. */
    type: Scalars['String']} })
    /** Creates a storefront access token. An app can have a maximum of 100 active storefront access tokens for each shop. */
    storefrontAccessTokenCreate?: (StorefrontAccessTokenCreatePayloadGenqlSelection & { __args: {
    /** Provides the input fields for creating a storefront access token. */
    input: StorefrontAccessTokenInput} })
    /** Deletes a storefront access token. */
    storefrontAccessTokenDelete?: (StorefrontAccessTokenDeletePayloadGenqlSelection & { __args: {
    /** Provides the input fields required to delete a storefront access token. */
    input: StorefrontAccessTokenDeleteInput} })
    /**
     * Creates a new subscription billing attempt. For more information, refer to [Create a subscription contract](https://shopify.dev/docs/apps/selling-strategies/subscriptions/contracts/create#step-4-create-a-billing-attempt).
     * 
     */
    subscriptionBillingAttemptCreate?: (SubscriptionBillingAttemptCreatePayloadGenqlSelection & { __args: {
    /** The ID of the subscription contract. */
    subscriptionContractId: Scalars['ID'], 
    /** The information to apply as a billing attempt. */
    subscriptionBillingAttemptInput: SubscriptionBillingAttemptInput} })
    /** Commits the updates of a Subscription Billing Cycle Contract draft. */
    subscriptionBillingCycleContractDraftCommit?: (SubscriptionBillingCycleContractDraftCommitPayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract draft to commit. */
    draftId: Scalars['ID']} })
    /** Concatenates a contract to a Subscription Draft. */
    subscriptionBillingCycleContractDraftConcatenate?: (SubscriptionBillingCycleContractDraftConcatenatePayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract draft to update. */
    draftId: Scalars['ID'], 
    /**
     * An array of Subscription Contracts with their selected billing cycles to concatenate to the subscription draft.
     * 
     */
    concatenatedBillingCycleContracts: SubscriptionBillingCycleInput[]} })
    /** Edit the contents of a subscription contract for the specified billing cycle. */
    subscriptionBillingCycleContractEdit?: (SubscriptionBillingCycleContractEditPayloadGenqlSelection & { __args: {
    /** Input object for selecting and using billing cycles. */
    billingCycleInput: SubscriptionBillingCycleInput} })
    /** Delete the current or future schedule and contract edits of a subscription billing cycle. */
    subscriptionBillingCycleEditDelete?: (SubscriptionBillingCycleEditDeletePayloadGenqlSelection & { __args: {
    /** Input object used to select and use billing cycles. */
    billingCycleInput: SubscriptionBillingCycleInput} })
    /** Delete the current or future schedule and contract edits of a list of subscription billing cycles. */
    subscriptionBillingCycleEditsDelete?: (SubscriptionBillingCycleEditsDeletePayloadGenqlSelection & { __args: {
    /** The globally-unique identifier of the subscription contract that the billing cycle belongs to. */
    contractId: Scalars['ID'], 
    /** Select billing cycles to be deleted. */
    targetSelection: SubscriptionBillingCyclesTargetSelection} })
    /** Modify the schedule of a specific billing cycle. */
    subscriptionBillingCycleScheduleEdit?: (SubscriptionBillingCycleScheduleEditPayloadGenqlSelection & { __args: {
    /** Input object for selecting and using billing cycles. */
    billingCycleInput: SubscriptionBillingCycleInput, 
    /** Data used to create or modify billing cycle schedule edit. */
    input: SubscriptionBillingCycleScheduleEditInput} })
    /** Creates a Subscription Contract. */
    subscriptionContractAtomicCreate?: (SubscriptionContractAtomicCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new Subscription Contract. */
    input: SubscriptionContractAtomicCreateInput} })
    /** Creates a Subscription Contract. */
    subscriptionContractCreate?: (SubscriptionContractCreatePayloadGenqlSelection & { __args: {
    /** The properties of the new Subscription Contract. */
    input: SubscriptionContractCreateInput} })
    /** Allows for the easy change of a Product in a Contract or a Product price change. */
    subscriptionContractProductChange?: (SubscriptionContractProductChangePayloadGenqlSelection & { __args: {
    /** The ID of the subscription contract. */
    subscriptionContractId: Scalars['ID'], 
    /** The gid of the Subscription Line to update. */
    lineId: Scalars['ID'], 
    /** The properties of the Product changes. */
    input: SubscriptionContractProductChangeInput} })
    /** Sets the next billing date of a Subscription Contract. */
    subscriptionContractSetNextBillingDate?: (SubscriptionContractSetNextBillingDatePayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract to set the next billing date for. */
    contractId: Scalars['ID'], 
    /** The next billing date. */
    date: Scalars['DateTime']} })
    /** Updates a Subscription Contract. */
    subscriptionContractUpdate?: (SubscriptionContractUpdatePayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract to update. */
    contractId: Scalars['ID']} })
    /** Commits the updates of a Subscription Contract draft. */
    subscriptionDraftCommit?: (SubscriptionDraftCommitPayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract draft to commit. */
    draftId: Scalars['ID']} })
    /** Adds a subscription discount to a subscription draft. */
    subscriptionDraftDiscountAdd?: (SubscriptionDraftDiscountAddPayloadGenqlSelection & { __args: {
    /** The ID of the Subscription Contract draft to add a subscription discount to. */
    draftId: Scalars['ID'], 
    /** The properties of the new Subscription Discount. */
    input: SubscriptionManualDiscountInput} })
    /** Applies a code discount on the subscription draft. */
    subscriptionDraftDiscountCodeApply?: (SubscriptionDraftDiscountCodeApplyPayloadGenqlSelection & { __args: {
    /** The gid of the subscription contract draft to apply a subscription code discount on. */
    draftId: Scalars['ID'], 
    /** Code discount redeem code. */
    redeemCode: Scalars['String']} })
    /** Removes a subscription discount from a subscription draft. */
    subscriptionDraftDiscountRemove?: (SubscriptionDraftDiscountRemovePayloadGenqlSelection & { __args: {
    /** The gid of the subscription contract draft to remove a subscription discount from. */
    draftId: Scalars['ID'], 
    /** The gid of the subscription draft discount to remove. */
    discountId: Scalars['ID']} })
    /** Updates a subscription discount on a subscription draft. */
    subscriptionDraftDiscountUpdate?: (SubscriptionDraftDiscountUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the Subscription Contract draft to update a subscription discount on. */
    draftId: Scalars['ID'], 
    /** The gid of the Subscription Discount to update. */
    discountId: Scalars['ID'], 
    /** The properties to update on the Subscription Discount. */
    input: SubscriptionManualDiscountInput} })
    /** Adds a subscription free shipping discount to a subscription draft. */
    subscriptionDraftFreeShippingDiscountAdd?: (SubscriptionDraftFreeShippingDiscountAddPayloadGenqlSelection & { __args: {
    /** The ID of the subscription contract draft to add a subscription free shipping discount to. */
    draftId: Scalars['ID'], 
    /** The properties of the new subscription free shipping discount. */
    input: SubscriptionFreeShippingDiscountInput} })
    /** Updates a subscription free shipping discount on a subscription draft. */
    subscriptionDraftFreeShippingDiscountUpdate?: (SubscriptionDraftFreeShippingDiscountUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the Subscription Contract draft to update a subscription discount on. */
    draftId: Scalars['ID'], 
    /** The gid of the Subscription Discount to update. */
    discountId: Scalars['ID'], 
    /** The properties to update on the Subscription Free Shipping Discount. */
    input: SubscriptionFreeShippingDiscountInput} })
    /** Adds a subscription line to a subscription draft. */
    subscriptionDraftLineAdd?: (SubscriptionDraftLineAddPayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract draft to add a subscription line to. */
    draftId: Scalars['ID'], 
    /** The properties of the new Subscription Line. */
    input: SubscriptionLineInput} })
    /** Removes a subscription line from a subscription draft. */
    subscriptionDraftLineRemove?: (SubscriptionDraftLineRemovePayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract draft to remove a subscription line from. */
    draftId: Scalars['ID'], 
    /** The gid of the Subscription Line to remove. */
    lineId: Scalars['ID']} })
    /** Updates a subscription line on a subscription draft. */
    subscriptionDraftLineUpdate?: (SubscriptionDraftLineUpdatePayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Contract draft to update a subscription line from. */
    draftId: Scalars['ID'], 
    /** The gid of the Subscription Line to update. */
    lineId: Scalars['ID'], 
    /** The properties of the new Subscription Line. */
    input: SubscriptionLineUpdateInput} })
    /** Updates a Subscription Draft. */
    subscriptionDraftUpdate?: (SubscriptionDraftUpdatePayloadGenqlSelection & { __args: {
    /** The gid of the Subscription Draft to update. */
    draftId: Scalars['ID'], 
    /** The properties of the new Subscription Contract. */
    input: SubscriptionDraftInput} })
    /** Add tags to an order, a draft order, a customer, a product, or an online store article. */
    tagsAdd?: (TagsAddPayloadGenqlSelection & { __args: {
    /** The ID of a resource to add tags to. */
    id: Scalars['ID'], 
    /**
     * A list of tags to add to the resource. Can be an array of strings or a single string composed of a comma-separated list of values. Example values: `["tag1", "tag2", "tag3"]`, `"tag1, tag2, tag3"`.
     * 
     */
    tags: Scalars['String'][]} })
    /** Remove tags from an order, a draft order, a customer, a product, or an online store article. */
    tagsRemove?: (TagsRemovePayloadGenqlSelection & { __args: {
    /** The ID of the resource to remove tags from. */
    id: Scalars['ID'], 
    /**
     * A list of tags to remove from the resource in the form of an array of strings. Example value: `["tag1", "tag2", "tag3"]`.
     * 
     */
    tags: Scalars['String'][]} })
    /**
     * Allows tax app configurations for tax partners.
     * 
     */
    taxAppConfigure?: (TaxAppConfigurePayloadGenqlSelection & { __args: {
    /** Configures whether the tax app is correctly configured and ready to be used. */
    ready: Scalars['Boolean']} })
    /** Creates or updates translations. */
    translationsRegister?: (TranslationsRegisterPayloadGenqlSelection & { __args: {
    /** ID of the resource that is being translated. */
    resourceId: Scalars['ID'], 
    /** Specifies the input fields for a translation. */
    translations: TranslationInput[]} })
    /** Deletes translations. */
    translationsRemove?: (TranslationsRemovePayloadGenqlSelection & { __args: {
    /** ID of the translatable resource for which translations are being deleted. */
    resourceId: Scalars['ID'], 
    /** The list of translation keys. */
    translationKeys: Scalars['String'][], 
    /** The list of translation locales. Only locales returned in `shopLocales` are valid. */
    locales: Scalars['String'][], 
    /** The list of market IDs. */
    marketIds?: (Scalars['ID'][] | null)} })
    /**
     * Asynchronously delete [URL redirects](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) in bulk.
     * 
     */
    urlRedirectBulkDeleteAll?: UrlRedirectBulkDeleteAllPayloadGenqlSelection
    /**
     * Asynchronously delete [URLRedirect](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) 
     * objects in bulk by IDs.
     * Learn more about [URLRedirect](https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect) 
     * objects.
     * 
     */
    urlRedirectBulkDeleteByIds?: (UrlRedirectBulkDeleteByIdsPayloadGenqlSelection & { __args: {
    /**
     * A list of [`URLRedirect`](
     *             https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect
     *           ) object IDs to delete.
     */
    ids: Scalars['ID'][]} })
    /** Asynchronously delete redirects in bulk. */
    urlRedirectBulkDeleteBySavedSearch?: (UrlRedirectBulkDeleteBySavedSearchPayloadGenqlSelection & { __args: {
    /** The ID of the URL redirect saved search for filtering. */
    savedSearchId: Scalars['ID']} })
    /** Asynchronously delete redirects in bulk. */
    urlRedirectBulkDeleteBySearch?: (UrlRedirectBulkDeleteBySearchPayloadGenqlSelection & { __args: {
    /** Search query for filtering redirects on (both Redirect from and Redirect to fields). */
    search: Scalars['String']} })
    /**
     * Creates a [`UrlRedirect`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) object.
     * 
     */
    urlRedirectCreate?: (UrlRedirectCreatePayloadGenqlSelection & { __args: {
    /** The fields to use when creating the redirect. */
    urlRedirect: UrlRedirectInput} })
    /**
     * Deletes a [`UrlRedirect`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) object.
     * 
     */
    urlRedirectDelete?: (UrlRedirectDeletePayloadGenqlSelection & { __args: {
    /** The ID of the redirect to delete. */
    id: Scalars['ID']} })
    /**
     * Creates a [`UrlRedirectImport`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirectImport) object.
     * 
     * After creating the `UrlRedirectImport` object, the `UrlRedirectImport` request can be performed using the [`urlRedirectImportSubmit`](https://shopify.dev/api/admin-graphql/latest/mutations/urlRedirectImportSubmit) mutation.
     * 
     */
    urlRedirectImportCreate?: (UrlRedirectImportCreatePayloadGenqlSelection & { __args: {
    /**
     * The staged upload URL of the CSV file.
     * You can download [a sample URL redirect CSV file](https://help.shopify.com/csv/sample-redirect-template.csv)).
     * 
     */
    url: Scalars['URL']} })
    /**
     * Submits a `UrlRedirectImport` request to be processed.
     * 
     * The `UrlRedirectImport` request is first created with the [`urlRedirectImportCreate`](https://shopify.dev/api/admin-graphql/latest/mutations/urlRedirectImportCreate) mutation.
     * 
     */
    urlRedirectImportSubmit?: (UrlRedirectImportSubmitPayloadGenqlSelection & { __args: {
    /**
     * The ID of the [`UrlRedirectImport`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirectImport) object.
     * 
     */
    id: Scalars['ID']} })
    /**
     * Updates a URL redirect.
     * 
     */
    urlRedirectUpdate?: (UrlRedirectUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the URL redirect to update. */
    id: Scalars['ID'], 
    /** The input fields required to update the URL redirect. */
    urlRedirect: UrlRedirectInput} })
    /** Creates a new web pixel settings. */
    webPixelCreate?: (WebPixelCreatePayloadGenqlSelection & { __args: {
    /** The web pixel settings in JSON format. */
    webPixel: WebPixelInput} })
    /** Deletes the web pixel shop settings. */
    webPixelDelete?: (WebPixelDeletePayloadGenqlSelection & { __args: {
    /** The ID of the web pixel to delete. */
    id: Scalars['ID']} })
    /** Updates the web pixel settings. */
    webPixelUpdate?: (WebPixelUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the web pixel to update. */
    id: Scalars['ID'], 
    /** The web pixel settings in JSON format. */
    webPixel: WebPixelInput} })
    /**
     * Creates a new webhook subscription.
     * 
     */
    webhookSubscriptionCreate?: (WebhookSubscriptionCreatePayloadGenqlSelection & { __args: {
    /** The type of event that triggers the webhook. */
    topic: WebhookSubscriptionTopic, 
    /** Specifies the input fields for a webhook subscription. */
    webhookSubscription: WebhookSubscriptionInput} })
    /**
     * Deletes a webhook subscription.
     * 
     */
    webhookSubscriptionDelete?: (WebhookSubscriptionDeletePayloadGenqlSelection & { __args: {
    /** The ID of the webhook subscription to delete. */
    id: Scalars['ID']} })
    /**
     * Updates a webhook subscription.
     * 
     */
    webhookSubscriptionUpdate?: (WebhookSubscriptionUpdatePayloadGenqlSelection & { __args: {
    /** The ID of the webhook subscription to update. */
    id: Scalars['ID'], 
    /** Specifies the input fields for a webhook subscription. */
    webhookSubscription: WebhookSubscriptionInput} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A signed upload parameter for uploading an asset to Shopify.
 * 
 * Deprecated in favor of
 * [StagedUploadParameter](https://shopify.dev/api/admin-graphql/latest/objects/StagedUploadParameter),
 * which is used in
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget)
 * and returned by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface MutationsStagedUploadTargetGenerateUploadParameterGenqlSelection{
    /** The upload parameter name. */
    name?: boolean | number
    /** The upload parameter value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A default cursor that you can use in queries to paginate your results. Each edge in a connection can
 * return a cursor, which is a reference to the edge's position in the connection. You can use an edge's cursor as
 * the starting point to retrieve the nodes before or after it in a connection.
 * 
 * To learn more about using cursor-based pagination, refer to
 * [Paginating results with GraphQL](https://shopify.dev/api/usage/pagination-graphql).
 * 
 */
export interface NavigableGenqlSelection{
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    on_AbandonedCheckout?: AbandonedCheckoutGenqlSelection
    on_Company?: CompanyGenqlSelection
    on_CompanyLocation?: CompanyLocationGenqlSelection
    on_DraftOrder?: DraftOrderGenqlSelection
    on_OnlineStoreArticle?: OnlineStoreArticleGenqlSelection
    on_OnlineStorePage?: OnlineStorePageGenqlSelection
    on_Product?: ProductGenqlSelection
    on_ProductVariant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A navigation item, holding basic link attributes. */
export interface NavigationItemGenqlSelection{
    /** The unique identifier of the navigation item. */
    id?: boolean | number
    /** The name of the navigation item. */
    title?: boolean | number
    /** The URL of the page that the navigation item links to. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An object with an ID field to support global identification, in accordance with the
 * [Relay specification](https://relay.dev/graphql/objectidentification.htm#sec-Node-Interface).
 * This interface is used by the [node](https://shopify.dev/api/admin-graphql/unstable/queries/node)
 * and [nodes](https://shopify.dev/api/admin-graphql/unstable/queries/nodes) queries.
 * 
 */
export interface NodeGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    on_AbandonedCheckout?: AbandonedCheckoutGenqlSelection
    on_Abandonment?: AbandonmentGenqlSelection
    on_AddAllProductsOperation?: AddAllProductsOperationGenqlSelection
    on_AdditionalFee?: AdditionalFeeGenqlSelection
    on_App?: AppGenqlSelection
    on_AppCatalog?: AppCatalogGenqlSelection
    on_AppCredit?: AppCreditGenqlSelection
    on_AppInstallation?: AppInstallationGenqlSelection
    on_AppPurchaseOneTime?: AppPurchaseOneTimeGenqlSelection
    on_AppRevenueAttributionRecord?: AppRevenueAttributionRecordGenqlSelection
    on_AppSubscription?: AppSubscriptionGenqlSelection
    on_AppUsageRecord?: AppUsageRecordGenqlSelection
    on_BasicEvent?: BasicEventGenqlSelection
    on_BulkOperation?: BulkOperationGenqlSelection
    on_CalculatedOrder?: CalculatedOrderGenqlSelection
    on_CartTransform?: CartTransformGenqlSelection
    on_CatalogCsvOperation?: CatalogCsvOperationGenqlSelection
    on_Channel?: ChannelGenqlSelection
    on_ChannelDefinition?: ChannelDefinitionGenqlSelection
    on_ChannelInformation?: ChannelInformationGenqlSelection
    on_CheckoutProfile?: CheckoutProfileGenqlSelection
    on_Collection?: CollectionGenqlSelection
    on_CommentEvent?: CommentEventGenqlSelection
    on_Company?: CompanyGenqlSelection
    on_CompanyAddress?: CompanyAddressGenqlSelection
    on_CompanyContact?: CompanyContactGenqlSelection
    on_CompanyContactRole?: CompanyContactRoleGenqlSelection
    on_CompanyContactRoleAssignment?: CompanyContactRoleAssignmentGenqlSelection
    on_CompanyLocation?: CompanyLocationGenqlSelection
    on_CompanyLocationCatalog?: CompanyLocationCatalogGenqlSelection
    on_Customer?: CustomerGenqlSelection
    on_CustomerPaymentMethod?: CustomerPaymentMethodGenqlSelection
    on_CustomerSegmentMembersQuery?: CustomerSegmentMembersQueryGenqlSelection
    on_CustomerVisit?: CustomerVisitGenqlSelection
    on_DeliveryCarrierService?: DeliveryCarrierServiceGenqlSelection
    on_DeliveryCondition?: DeliveryConditionGenqlSelection
    on_DeliveryCountry?: DeliveryCountryGenqlSelection
    on_DeliveryCustomization?: DeliveryCustomizationGenqlSelection
    on_DeliveryLocationGroup?: DeliveryLocationGroupGenqlSelection
    on_DeliveryMethod?: DeliveryMethodGenqlSelection
    on_DeliveryMethodDefinition?: DeliveryMethodDefinitionGenqlSelection
    on_DeliveryParticipant?: DeliveryParticipantGenqlSelection
    on_DeliveryProfile?: DeliveryProfileGenqlSelection
    on_DeliveryProfileItem?: DeliveryProfileItemGenqlSelection
    on_DeliveryProvince?: DeliveryProvinceGenqlSelection
    on_DeliveryRateDefinition?: DeliveryRateDefinitionGenqlSelection
    on_DeliveryZone?: DeliveryZoneGenqlSelection
    on_DiscountAutomaticBxgy?: DiscountAutomaticBxgyGenqlSelection
    on_DiscountAutomaticNode?: DiscountAutomaticNodeGenqlSelection
    on_DiscountCodeNode?: DiscountCodeNodeGenqlSelection
    on_DiscountNode?: DiscountNodeGenqlSelection
    on_DiscountRedeemCodeBulkCreation?: DiscountRedeemCodeBulkCreationGenqlSelection
    on_Domain?: DomainGenqlSelection
    on_DraftOrder?: DraftOrderGenqlSelection
    on_DraftOrderLineItem?: DraftOrderLineItemGenqlSelection
    on_DraftOrderTag?: DraftOrderTagGenqlSelection
    on_Duty?: DutyGenqlSelection
    on_ExchangeV2?: ExchangeV2GenqlSelection
    on_ExternalVideo?: ExternalVideoGenqlSelection
    on_Fulfillment?: FulfillmentGenqlSelection
    on_FulfillmentEvent?: FulfillmentEventGenqlSelection
    on_FulfillmentLineItem?: FulfillmentLineItemGenqlSelection
    on_FulfillmentOrder?: FulfillmentOrderGenqlSelection
    on_FulfillmentOrderDestination?: FulfillmentOrderDestinationGenqlSelection
    on_FulfillmentOrderLineItem?: FulfillmentOrderLineItemGenqlSelection
    on_FulfillmentOrderMerchantRequest?: FulfillmentOrderMerchantRequestGenqlSelection
    on_GenericFile?: GenericFileGenqlSelection
    on_GiftCard?: GiftCardGenqlSelection
    on_InventoryAdjustmentGroup?: InventoryAdjustmentGroupGenqlSelection
    on_InventoryItem?: InventoryItemGenqlSelection
    on_InventoryLevel?: InventoryLevelGenqlSelection
    on_LineItem?: LineItemGenqlSelection
    on_LineItemMutable?: LineItemMutableGenqlSelection
    on_Location?: LocationGenqlSelection
    on_MailingAddress?: MailingAddressGenqlSelection
    on_Market?: MarketGenqlSelection
    on_MarketCatalog?: MarketCatalogGenqlSelection
    on_MarketRegionCountry?: MarketRegionCountryGenqlSelection
    on_MarketWebPresence?: MarketWebPresenceGenqlSelection
    on_MarketingActivity?: MarketingActivityGenqlSelection
    on_MarketingEvent?: MarketingEventGenqlSelection
    on_MediaImage?: MediaImageGenqlSelection
    on_Metafield?: MetafieldGenqlSelection
    on_MetafieldDefinition?: MetafieldDefinitionGenqlSelection
    on_MetafieldStorefrontVisibility?: MetafieldStorefrontVisibilityGenqlSelection
    on_Metaobject?: MetaobjectGenqlSelection
    on_MetaobjectDefinition?: MetaobjectDefinitionGenqlSelection
    on_Model3d?: Model3dGenqlSelection
    on_OnlineStoreArticle?: OnlineStoreArticleGenqlSelection
    on_OnlineStoreBlog?: OnlineStoreBlogGenqlSelection
    on_OnlineStorePage?: OnlineStorePageGenqlSelection
    on_Order?: OrderGenqlSelection
    on_OrderDisputeSummary?: OrderDisputeSummaryGenqlSelection
    on_OrderTransaction?: OrderTransactionGenqlSelection
    on_PaymentCustomization?: PaymentCustomizationGenqlSelection
    on_PaymentMandate?: PaymentMandateGenqlSelection
    on_PaymentSchedule?: PaymentScheduleGenqlSelection
    on_PaymentTerms?: PaymentTermsGenqlSelection
    on_PaymentTermsTemplate?: PaymentTermsTemplateGenqlSelection
    on_PriceList?: PriceListGenqlSelection
    on_PriceRule?: PriceRuleGenqlSelection
    on_PriceRuleDiscountCode?: PriceRuleDiscountCodeGenqlSelection
    on_PrivateMetafield?: PrivateMetafieldGenqlSelection
    on_Product?: ProductGenqlSelection
    on_ProductFeed?: ProductFeedGenqlSelection
    on_ProductOption?: ProductOptionGenqlSelection
    on_ProductTaxonomyNode?: ProductTaxonomyNodeGenqlSelection
    on_ProductVariant?: ProductVariantGenqlSelection
    on_ProductVariantComponent?: ProductVariantComponentGenqlSelection
    on_Publication?: PublicationGenqlSelection
    on_PublicationResourceOperation?: PublicationResourceOperationGenqlSelection
    on_Refund?: RefundGenqlSelection
    on_Return?: ReturnGenqlSelection
    on_ReturnLineItem?: ReturnLineItemGenqlSelection
    on_ReturnableFulfillment?: ReturnableFulfillmentGenqlSelection
    on_ReverseDelivery?: ReverseDeliveryGenqlSelection
    on_ReverseDeliveryLineItem?: ReverseDeliveryLineItemGenqlSelection
    on_ReverseFulfillmentOrder?: ReverseFulfillmentOrderGenqlSelection
    on_ReverseFulfillmentOrderDisposition?: ReverseFulfillmentOrderDispositionGenqlSelection
    on_ReverseFulfillmentOrderLineItem?: ReverseFulfillmentOrderLineItemGenqlSelection
    on_SaleAdditionalFee?: SaleAdditionalFeeGenqlSelection
    on_SavedSearch?: SavedSearchGenqlSelection
    on_ScriptTag?: ScriptTagGenqlSelection
    on_Segment?: SegmentGenqlSelection
    on_SellingPlan?: SellingPlanGenqlSelection
    on_SellingPlanGroup?: SellingPlanGroupGenqlSelection
    on_ServerPixel?: ServerPixelGenqlSelection
    on_Shop?: ShopGenqlSelection
    on_ShopAddress?: ShopAddressGenqlSelection
    on_ShopPolicy?: ShopPolicyGenqlSelection
    on_ShopifyPaymentsAccount?: ShopifyPaymentsAccountGenqlSelection
    on_ShopifyPaymentsBankAccount?: ShopifyPaymentsBankAccountGenqlSelection
    on_ShopifyPaymentsDispute?: ShopifyPaymentsDisputeGenqlSelection
    on_ShopifyPaymentsDisputeEvidence?: ShopifyPaymentsDisputeEvidenceGenqlSelection
    on_ShopifyPaymentsDisputeFileUpload?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    on_ShopifyPaymentsDisputeFulfillment?: ShopifyPaymentsDisputeFulfillmentGenqlSelection
    on_ShopifyPaymentsPayout?: ShopifyPaymentsPayoutGenqlSelection
    on_ShopifyPaymentsVerification?: ShopifyPaymentsVerificationGenqlSelection
    on_StaffMember?: StaffMemberGenqlSelection
    on_StandardMetafieldDefinitionTemplate?: StandardMetafieldDefinitionTemplateGenqlSelection
    on_StorefrontAccessToken?: StorefrontAccessTokenGenqlSelection
    on_SubscriptionBillingAttempt?: SubscriptionBillingAttemptGenqlSelection
    on_SubscriptionContract?: SubscriptionContractGenqlSelection
    on_SubscriptionDraft?: SubscriptionDraftGenqlSelection
    on_TenderTransaction?: TenderTransactionGenqlSelection
    on_TransactionFee?: TransactionFeeGenqlSelection
    on_UrlRedirect?: UrlRedirectGenqlSelection
    on_UrlRedirectImport?: UrlRedirectImportGenqlSelection
    on_Video?: VideoGenqlSelection
    on_WebPixel?: WebPixelGenqlSelection
    on_WebhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for dimensions of an object. */
export interface ObjectDimensionsInput {
/** The length in `unit`s. */
length: Scalars['Float'],
/** The width in `unit`s. */
width: Scalars['Float'],
/** The height in `unit`s. */
height: Scalars['Float'],
/** Unit of measurement for `length`, `width`, and `height`. */
unit: LengthUnit}


/**
 * An article in the blogging system. You can query articles from
 * [the REST API](https://shopify.dev/api/admin-rest/latest/resources/article)
 * if you need to access more information about an article. Currently, `OnlineStoreArticle` is
 * only useful to pass an article `id` to the `tagsAdd` mutation. For more information, refer to
 * the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd) mutation.
 * 
 */
export interface OnlineStoreArticleGenqlSelection{
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Shopify stores come with a built-in blogging engine, allowing a shop to have one or more blogs.  Blogs are meant
 * to be used as a type of magazine or newsletter for the shop, with content that changes over time.
 * 
 */
export interface OnlineStoreBlogGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A custom page on the Online Store. */
export interface OnlineStorePageGenqlSelection{
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Online Store preview URL of the object. */
export interface OnlineStorePreviewableGenqlSelection{
    /** The online store preview URL. */
    onlineStorePreviewUrl?: boolean | number
    on_Product?: ProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An order is a customer's request to purchase one or more products from a shop. You can retrieve and update orders using the `Order` object.
 * Learn more about
 * [editing an existing order with the GraphQL Admin API](https://shopify.dev/apps/fulfillment/order-management-apps/order-editing).
 * 
 * Only the last 60 days' worth of orders from a store are accessible from the `Order` object by default. If you want to access older orders,
 * then you need to [request access to all orders](https://shopify.dev/api/usage/access-scopes#orders-permissions). If your app is granted
 * access, then you can add the `read_all_orders` scope to your app along with `read_orders` or `write_orders`.
 * [Private apps](https://shopify.dev/apps/auth/basic-http) are not affected by this change and are automatically granted the scope.
 * 
 * **Caution:** Only use this data if it's required for your app's functionality. Shopify will restrict [access to scopes](https://shopify.dev/api/usage/access-scopes) for apps that don't have a legitimate use for the associated data.
 * 
 */
export interface OrderGenqlSelection{
    /** A list of addtional fees applied to the order. */
    additionalFees?: AdditionalFeeGenqlSelection
    /** A list of sales agreements associated with the order. */
    agreements?: (SalesAgreementConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `happened_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * A list of messages that appear on the order page in the Shopify admin.
     * 
     */
    alerts?: ResourceAlertGenqlSelection
    /** The application that created the order. */
    app?: OrderAppGenqlSelection
    /** The billing address of the customer. */
    billingAddress?: MailingAddressGenqlSelection
    /** Whether the billing address matches the shipping address. */
    billingAddressMatchesShippingAddress?: boolean | number
    /** Whether the order can be manually marked as paid. */
    canMarkAsPaid?: boolean | number
    /** Whether a customer email exists for the order. */
    canNotifyCustomer?: boolean | number
    /**
     * The reason provided when the order was canceled.
     * Returns `null` if the order wasn't canceled.
     * 
     */
    cancelReason?: boolean | number
    /**
     * The date and time when the order was canceled.
     * Returns `null` if the order wasn't canceled.
     * 
     */
    cancelledAt?: boolean | number
    /**
     * Whether payment for the order can be captured.
     * 
     */
    capturable?: boolean | number
    /**
     * @deprecated Use `cartDiscountAmountSet` instead.
     * The total order-level discount amount, before returns, in shop currency.
     */
    cartDiscountAmount?: boolean | number
    /** The total order-level discount amount, before returns, in shop and presentment currencies. */
    cartDiscountAmountSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `publication` instead.
     * The channel that created the order.
     */
    channel?: ChannelGenqlSelection
    /** Details about the channel that created the order. */
    channelInformation?: ChannelInformationGenqlSelection
    /** The IP address of the API client that created the order. */
    clientIp?: boolean | number
    /** Whether the order is closed. */
    closed?: boolean | number
    /**
     * The date and time when the order was closed.
     * Returns `null` if the order is not closed.
     * 
     */
    closedAt?: boolean | number
    /**
     * A randomly generated alpha-numeric identifier for the order that may be shown to the customer
     * instead of the sequential order name. For example, "XPAV284CT", "R50KELTJP" or "35PKUN0UJ".
     * This value isn't guaranteed to be unique.
     * 
     */
    confirmationNumber?: boolean | number
    /** Whether inventory has been reserved for the order. */
    confirmed?: boolean | number
    /** Date and time when the order was created in Shopify. */
    createdAt?: boolean | number
    /** The shop currency when the order was placed. */
    currencyCode?: boolean | number
    /**
     * The current order-level discount amount after all order updates, in shop and presentment currencies.
     * 
     */
    currentCartDiscountAmountSet?: MoneyBagGenqlSelection
    /** The sum of the quantities for all line items that contribute to the order's current subtotal price. */
    currentSubtotalLineItemsQuantity?: boolean | number
    /**
     * The sum of the prices for all line items after discounts and returns, in shop and presentment currencies.
     * If `taxesIncluded` is `true`, then the subtotal also includes tax.
     * 
     */
    currentSubtotalPriceSet?: MoneyBagGenqlSelection
    /**
     * A list of all tax lines applied to line items on the order, after returns.
     * Tax line prices represent the total price for all tax lines with the same `rate` and `title`.
     * 
     */
    currentTaxLines?: TaxLineGenqlSelection
    /**
     * The total amount of additional fees after returns, in shop and presentment currencies.
     * Returns `null` if there are no additional fees for the order.
     * 
     */
    currentTotalAdditionalFeesSet?: MoneyBagGenqlSelection
    /**
     * The total amount discounted on the order after returns, in shop and presentment currencies.
     * This includes both order and line level discounts.
     * 
     */
    currentTotalDiscountsSet?: MoneyBagGenqlSelection
    /**
     * The total amount of duties after returns, in shop and presentment currencies.
     * Returns `null` if duties aren't applicable.
     * 
     */
    currentTotalDutiesSet?: MoneyBagGenqlSelection
    /**
     * The total price of the order, after returns, in shop and presentment currencies.
     * This includes taxes and discounts.
     * 
     */
    currentTotalPriceSet?: MoneyBagGenqlSelection
    /**
     * The sum of the prices of all tax lines applied to line items on the order, after returns, in shop and presentment currencies.
     * 
     */
    currentTotalTaxSet?: MoneyBagGenqlSelection
    /** The total weight of the order after returns, in grams. */
    currentTotalWeight?: boolean | number
    /**
     * A list of the custom attributes added to the order.
     * 
     */
    customAttributes?: AttributeGenqlSelection
    /** The customer that placed the order. */
    customer?: CustomerGenqlSelection
    /** Whether the customer agreed to receive marketing materials. */
    customerAcceptsMarketing?: boolean | number
    /**
     * @deprecated Use `customerJourneySummary` instead.
     * The customer's visits and interactions with the online store before placing the order.
     * 
     */
    customerJourney?: CustomerJourneyGenqlSelection
    /**
     * The customer's visits and interactions with the online store before placing the order.
     * 
     */
    customerJourneySummary?: CustomerJourneySummaryGenqlSelection
    /**
     * A two-letter or three-letter language code, optionally followed by a region modifier.
     * 
     */
    customerLocale?: boolean | number
    /** A list of discounts that are applied to the order, not including order edits and refunds. */
    discountApplications?: (DiscountApplicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The discount code used for the order. */
    discountCode?: boolean | number
    /** The discount codes used for the order. */
    discountCodes?: boolean | number
    /**
     * The primary address of the customer.
     * Returns `null` if neither the shipping address nor the billing address was provided.
     * 
     */
    displayAddress?: MailingAddressGenqlSelection
    /**
     * The financial status of the order that can be shown to the merchant.
     * This field does not capture all the details of an order's financial state. It should only be used for display summary purposes.
     * 
     */
    displayFinancialStatus?: boolean | number
    /**
     * The fulfillment status for the order that can be shown to the merchant.
     * This field does not capture all the details of an order's fulfillment state. It should only be used for display summary purposes.
     * For a more granular view of the fulfillment status, refer to the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object.
     * 
     */
    displayFulfillmentStatus?: boolean | number
    /** A list of the disputes associated with the order. */
    disputes?: OrderDisputeSummaryGenqlSelection
    /** Whether the order has had any edits applied. */
    edited?: boolean | number
    /** The email address associated with the customer. */
    email?: boolean | number
    /**
     * Whether taxes on the order are estimated.
     * This field returns `false` when taxes on the order are finalized and aren't subject to any changes.
     * 
     */
    estimatedTaxes?: boolean | number
    /** A list of events associated with the order. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A list of ExchangeV2s for the order. */
    exchangeV2s?: (ExchangeV2ConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `completed_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * Whether there are line items that can be fulfilled.
     * This field returns `false` when the order has no fulfillable line items.
     * For a more granular view of the fulfillment status, refer to the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object.
     * 
     */
    fulfillable?: boolean | number
    /**
     * A list of fulfillment orders for a specific order.
     * 
     * [FulfillmentOrder API access scopes](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder#api-access-scopes)
     * govern which fulfillments orders are returned.
     * An API client will only receive a subset of the fulfillment orders which belong to an order
     * if they don't have the necessary access scopes to view all of the fulfillment orders.
     * In the case that an API client does not have the access scopes necessary to view
     * any of the fulfillment orders that belong to an order, an empty array will be returned.
     * 
     */
    fulfillmentOrders?: (FulfillmentOrderConnectionGenqlSelection & { __args: {
    /**
     * Whether fulfillment orders that are hidden from the merchant are included.
     * For example, fulfillment orders that were closed after being combined or moved are hidden.
     * 
     */
    displayable?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `assigned_location_id`
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of shipments for the order. */
    fulfillments?: (FulfillmentGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /** Whether the order has been paid in full. */
    fullyPaid?: boolean | number
    /** Whether the merchant added a timeline comment to the order. */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.landingPageHtml` instead
     * The URL of the first page of the online store that the customer visited before they submitted the order.
     */
    landingPageDisplayText?: boolean | number
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.landingPage` instead
     * The first page of the online store that the customer visited before they submitted the order.
     */
    landingPageUrl?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** A list of the order's line items. */
    lineItems?: (LineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `lineItems` instead.
     * A list of the order's line items.
     */
    lineItemsMutable?: (LineItemMutableConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** List of localization extensions for the resource. */
    localizationExtensions?: (LocalizationExtensionConnectionGenqlSelection & { __args?: {
    /** The country codes of the extensions. */
    countryCodes?: (CountryCode[] | null), 
    /** The purpose of the extensions. */
    purposes?: (LocalizationExtensionPurpose[] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `physicalLocation` instead.
     * The fulfillment location that was assigned when the order was created.
     * Use the [`FulfillmentOrder`](https://shopify.dev/api/admin-graphql/latest/objects/fulfillmentorder) object for up-to-date fulfillment location information.
     * 
     */
    location?: boolean | number
    /** Whether the order can be edited by the merchant. For example, canceled orders can’t be edited. */
    merchantEditable?: boolean | number
    /**
     * A list of reasons why the order can't be edited. For example, "Canceled orders can’t be edited".
     * 
     */
    merchantEditableErrors?: boolean | number
    /** The application acting as the Merchant of Record for the order. */
    merchantOfRecordApp?: OrderAppGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The unique identifier for the order that appears on the order page in the Shopify admin and the order status page.
     * For example, "#1001", "EN1001", or "1001-A".
     * This value isn't unique across multiple stores.
     * 
     */
    name?: boolean | number
    /**
     * @deprecated Use `netPaymentSet` instead.
     * The net payment for the order, based on the total amount received minus the total amount refunded, in shop currency.
     * 
     */
    netPayment?: boolean | number
    /** The net payment for the order, based on the total amount received minus the total amount refunded, in shop and presentment currencies. */
    netPaymentSet?: MoneyBagGenqlSelection
    /**
     * A list of line items that can't be fulfilled.
     * For example, tips and fully refunded line items can't be fulfilled.
     * For a more granular view of the fulfillment status, refer to the [FulfillmentOrder](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentOrder) object.
     * 
     */
    nonFulfillableLineItems?: (LineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The contents of the note associated with the order.
     * 
     */
    note?: boolean | number
    /**
     * The total amount of additional fees after returns, in shop and presentment currencies.
     * Returns `null` if there are no additional fees for the order.
     * 
     */
    originalTotalAdditionalFeesSet?: MoneyBagGenqlSelection
    /**
     * The total amount of duties before returns, in shop and presentment currencies.
     * Returns `null` if duties aren't applicable.
     * 
     */
    originalTotalDutiesSet?: MoneyBagGenqlSelection
    /** The total price of the order at the time of order creation, in shop and presentment currencies. */
    originalTotalPriceSet?: MoneyBagGenqlSelection
    /** The payment collection details for the order. */
    paymentCollectionDetails?: OrderPaymentCollectionDetailsGenqlSelection
    /**
     * A list of the names of all payment gateways used for the order.
     * For example, "Shopify Payments" and "Cash on Delivery (COD)".
     * 
     */
    paymentGatewayNames?: boolean | number
    /** The payment terms associated with the order. */
    paymentTerms?: PaymentTermsGenqlSelection
    /** The phone number associated with the customer. */
    phone?: boolean | number
    /**
     * The fulfillment location that was assigned when the order was created.
     * Use the [`FulfillmentOrder`](https://shopify.dev/api/admin-graphql/latest/objects/fulfillmentorder) object for up to date fulfillment location information.
     * 
     */
    physicalLocation?: LocationGenqlSelection
    /** The PO number associated with the order. */
    poNumber?: boolean | number
    /** The payment `CurrencyCode` of the customer for the order. */
    presentmentCurrencyCode?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The date and time when the order was processed.
     * This date and time might not match the date and time when the order was created.
     * 
     */
    processedAt?: boolean | number
    /** The publication that the order was created from. */
    publication?: PublicationGenqlSelection
    /** The purchasing entity for the order. */
    purchasingEntity?: PurchasingEntityGenqlSelection
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.referralCode` instead
     * The marketing referral code from the link that the customer clicked to visit the store.
     * Supports the following URL attributes: "ref", "source", or "r".
     * For example, if the URL is `{shop}.myshopify.com/products/slide?ref=j2tj1tn2`, then this value is `j2tj1tn2`.
     * 
     */
    referralCode?: boolean | number
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.referralInfoHtml` instead
     * A web domain or short description of the source that sent the customer to your online store. For example, "shopify.com" or "email".
     * 
     */
    referrerDisplayText?: boolean | number
    /**
     * @deprecated Use `customerJourneySummary.lastVisit.referrerUrl` instead
     * The URL of the webpage where the customer clicked a link that sent them to your online store.
     * 
     */
    referrerUrl?: boolean | number
    /** The difference between the suggested and actual refund amount of all refunds that have been applied to the order. A positive value indicates a difference in the merchant's favor, and a negative value indicates a difference in the customer's favor. */
    refundDiscrepancySet?: MoneyBagGenqlSelection
    /**
     * Whether the order can be refunded.
     * 
     */
    refundable?: boolean | number
    /** A list of refunds that have been applied to the order. */
    refunds?: (RefundGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /** The URL of the source that the order originated from, if found in the domain registry. */
    registeredSourceUrl?: boolean | number
    /**
     * Whether the order has shipping lines or at least one line item on the order that requires shipping.
     * 
     */
    requiresShipping?: boolean | number
    /**
     * Whether any line item on the order can be restocked.
     * 
     */
    restockable?: boolean | number
    /** The order's aggregated return status for display purposes. */
    returnStatus?: boolean | number
    /** A list of returns for the order. */
    returns?: (ReturnConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The fraud risk level of the order. */
    riskLevel?: boolean | number
    /** A list of risks associated with the order. */
    risks?: (OrderRiskGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /** The mailing address of the customer. */
    shippingAddress?: MailingAddressGenqlSelection
    /** A summary of all shipping costs on the order. */
    shippingLine?: ShippingLineGenqlSelection
    /** A list of the order's shipping lines. */
    shippingLines?: (ShippingLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * A unique POS or third party order identifier.
     * For example, "1234-12-1000" or "111-98567-54". The `receipt_number` field is derived from this value for POS orders.
     * 
     */
    sourceIdentifier?: boolean | number
    /** The sum of the quantities for all line items that contribute to the order's subtotal price. */
    subtotalLineItemsQuantity?: boolean | number
    /**
     * @deprecated Use `subtotalPriceSet` instead.
     * The sum of the prices for all line items after discounts and before returns, in shop currency.
     * If `taxesIncluded` is `true`, then the subtotal also includes tax.
     * 
     */
    subtotalPrice?: boolean | number
    /**
     * The sum of the prices for all line items after discounts and before returns, in shop and presentment currencies.
     * If `taxesIncluded` is `true`, then the subtotal also includes tax.
     * 
     */
    subtotalPriceSet?: MoneyBagGenqlSelection
    /** A suggested refund for the order. */
    suggestedRefund?: (SuggestedRefundGenqlSelection & { __args?: {
    /**
     * The amount to refund for shipping. Overrides the `refundShipping` argument.
     * Use the `shippingAmountV2` argument for multi-currency orders.
     * 
     */
    shippingAmount?: (Scalars['Money'] | null), 
    /** Whether to refund the full shipping amount. */
    refundShipping?: (Scalars['Boolean'] | null), 
    /** The line items from the order to include in the refund. */
    refundLineItems?: (RefundLineItemInput[] | null), 
    /** The duties from the order to include in the refund. */
    refundDuties?: (RefundDutyInput[] | null), 
    /**
     * Whether the suggested refund should be created from all refundable line items on the order.
     * If `true`, the `refundLineItems` argument will be ignored.
     * 
     */
    suggestFullRefund?: (Scalars['Boolean'] | null)} })
    /**
     * A comma separated list of tags associated with the order. Updating `tags` overwrites
     * any existing tags that were previously added to the order. To add new tags without overwriting
     * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
     * mutation.
     * 
     */
    tags?: boolean | number
    /** Whether taxes are exempt on the order. */
    taxExempt?: boolean | number
    /**
     * A list of all tax lines applied to line items on the order, before returns.
     * Tax line prices represent the total price for all tax lines with the same `rate` and `title`.
     * 
     */
    taxLines?: TaxLineGenqlSelection
    /** Whether taxes are included in the subtotal price of the order. */
    taxesIncluded?: boolean | number
    /**
     * Whether the order is a test.
     * Test orders are made using the Shopify Bogus Gateway or a payment provider with test mode enabled.
     * A test order cannot be converted into a real order and vice versa.
     * 
     */
    test?: boolean | number
    /**
     * @deprecated Use `totalCapturableSet` instead.
     * The authorized amount that is uncaptured or undercaptured, in shop currency.
     * This amount isn't adjusted for returns.
     * 
     */
    totalCapturable?: boolean | number
    /**
     * The authorized amount that is uncaptured or undercaptured, in shop and presentment currencies.
     * This amount isn't adjusted for returns.
     * 
     */
    totalCapturableSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalDiscountsSet` instead.
     * The total amount discounted on the order before returns, in shop currency.
     * This includes both order and line level discounts.
     * 
     */
    totalDiscounts?: boolean | number
    /**
     * The total amount discounted on the order before returns, in shop and presentment currencies.
     * This includes both order and line level discounts.
     * 
     */
    totalDiscountsSet?: MoneyBagGenqlSelection
    /**
     * The total amount not yet transacted for the order, in shop and presentment currencies.
     * A positive value indicates a difference in the merchant's favor (payment from customer to merchant) and a negative value indicates a difference in the customer's favor (refund from merchant to customer).
     * 
     */
    totalOutstandingSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalPriceSet` instead.
     * The total price of the order, before returns, in shop currency.
     * This includes taxes and discounts.
     * 
     */
    totalPrice?: boolean | number
    /**
     * The total price of the order, before returns, in shop and presentment currencies.
     * This includes taxes and discounts.
     * 
     */
    totalPriceSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalReceivedSet` instead.
     * The total amount received from the customer before returns, in shop currency.
     */
    totalReceived?: boolean | number
    /** The total amount received from the customer before returns, in shop and presentment currencies. */
    totalReceivedSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalRefundedSet` instead.
     * The total amount that was refunded, in shop currency.
     */
    totalRefunded?: boolean | number
    /** The total amount that was refunded, in shop and presentment currencies. */
    totalRefundedSet?: MoneyBagGenqlSelection
    /** The total amount of shipping that was refunded, in shop and presentment currencies. */
    totalRefundedShippingSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalShippingPriceSet` instead.
     * The total shipping amount before discounts and returns, in shop currency.
     */
    totalShippingPrice?: boolean | number
    /** The total shipping amount before discounts and returns, in shop and presentment currencies. */
    totalShippingPriceSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalTaxSet` instead.
     * The total tax amount before returns, in shop currency.
     */
    totalTax?: boolean | number
    /** The total tax amount before returns, in shop and presentment currencies. */
    totalTaxSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalTipReceivedSet` instead.
     * The sum of all tip amounts for the order, in shop currency.
     */
    totalTipReceived?: MoneyV2GenqlSelection
    /** The sum of all tip amounts for the order, in shop and presentment currencies. */
    totalTipReceivedSet?: MoneyBagGenqlSelection
    /** The total weight of the order before returns, in grams. */
    totalWeight?: boolean | number
    /** A list of transactions associated with the order. */
    transactions?: (OrderTransactionGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null), 
    /**
     * Filter transactions by whether they are capturable.
     * 
     */
    capturable?: (Scalars['Boolean'] | null), 
    /**
     * Filter transactions by whether they can be resolved manually.
     * For example, fully captured or voided transactions aren't manually resolvable.
     * 
     */
    manuallyResolvable?: (Scalars['Boolean'] | null)} })
    /**
     * Whether no payments have been made for the order.
     * 
     */
    unpaid?: boolean | number
    /** The date and time when the order was modified last. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An agreement associated with an order placement. */
export interface OrderAgreementGenqlSelection{
    /** The application that created the agreement. */
    app?: AppGenqlSelection
    /** The date and time at which the agreement occured. */
    happenedAt?: boolean | number
    /** The unique ID for the agreement. */
    id?: boolean | number
    /** The order associated with the agreement. */
    order?: OrderGenqlSelection
    /** The reason the agremeent was created. */
    reason?: boolean | number
    /** The sales associated with the agreement. */
    sales?: (SaleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The staff member associated with the agreement. */
    user?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The [application](https://shopify.dev/apps) that created the order.
 * 
 */
export interface OrderAppGenqlSelection{
    /** The application icon. */
    icon?: ImageGenqlSelection
    /** The application ID. */
    id?: boolean | number
    /** The name of the application. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the authorized transaction to capture and the total amount to capture from it. */
export interface OrderCaptureInput {
/** The ID of the order to capture. */
id: Scalars['ID'],
/** The ID of the authorized transaction to capture. */
parentTransactionId: Scalars['ID'],
/** The amount to capture. The capture amount can't be greater than the amount of the authorized transaction. */
amount: Scalars['Money'],
/** The currency (in ISO format) that is used to capture the order. This must be the presentment currency (the currency used by the customer) and is a required field for orders where the currency and presentment currency differ. */
currency?: (CurrencyCode | null)}


/** Return type for `orderCapture` mutation. */
export interface OrderCapturePayloadGenqlSelection{
    /** The created capture transaction. */
    transaction?: OrderTransactionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying an open order to close. */
export interface OrderCloseInput {
/** The ID of the order to close. */
id: Scalars['ID']}


/** Return type for `orderClose` mutation. */
export interface OrderClosePayloadGenqlSelection{
    /** The closed order. */
    order?: OrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Orders.
 * 
 */
export interface OrderConnectionGenqlSelection{
    /** A list of edges. */
    edges?: OrderEdgeGenqlSelection
    /** A list of the nodes contained in OrderEdge. */
    nodes?: OrderGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderCreateMandatePayment` mutation. */
export interface OrderCreateMandatePaymentPayloadGenqlSelection{
    /** The async job used for charging the payment. */
    job?: JobGenqlSelection
    /** The Unique ID for the created payment. */
    paymentReferenceId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: OrderCreateMandatePaymentUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `OrderCreateMandatePayment`. */
export interface OrderCreateMandatePaymentUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A summary of the important details for a dispute on an order. */
export interface OrderDisputeSummaryGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The type that the dispute was initiated as. */
    initiatedAs?: boolean | number
    /** The current status of the dispute. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Order and a cursor during pagination.
 * 
 */
export interface OrderEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of OrderEdge. */
    node?: OrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderEditAddCustomItem` mutation. */
export interface OrderEditAddCustomItemPayloadGenqlSelection{
    /** The custom line item that will be added to the order based on the current edits. */
    calculatedLineItem?: CalculatedLineItemGenqlSelection
    /** An order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderEditAddLineItemDiscount` mutation. */
export interface OrderEditAddLineItemDiscountPayloadGenqlSelection{
    /** The discount applied to a line item during this order edit. */
    addedDiscountStagedChange?: OrderStagedChangeAddLineItemDiscountGenqlSelection
    /** The line item with the edits applied but not saved. */
    calculatedLineItem?: CalculatedLineItemGenqlSelection
    /** An order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderEditAddVariant` mutation. */
export interface OrderEditAddVariantPayloadGenqlSelection{
    /**
     * The [calculated line item](https://shopify.dev/api/admin-graphql/latest/objects/calculatedlineitem)
     * that's added during this order edit.
     * 
     */
    calculatedLineItem?: CalculatedLineItemGenqlSelection
    /**
     * The [calculated order](https://shopify.dev/api/admin-graphql/latest/objects/calculatedorder)
     * with the edits applied but not saved.
     * 
     */
    calculatedOrder?: CalculatedOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An agreement associated with an edit to the order. */
export interface OrderEditAgreementGenqlSelection{
    /** The application that created the agreement. */
    app?: AppGenqlSelection
    /** The date and time at which the agreement occured. */
    happenedAt?: boolean | number
    /** The unique ID for the agreement. */
    id?: boolean | number
    /** The reason the agremeent was created. */
    reason?: boolean | number
    /** The sales associated with the agreement. */
    sales?: (SaleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The staff member associated with the agreement. */
    user?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to add a discount during an order edit. */
export interface OrderEditAppliedDiscountInput {
/** The description of the discount. */
description?: (Scalars['String'] | null),
/** The value of the discount as a fixed amount. */
fixedValue?: (MoneyInput | null),
/** The value of the discount as a percentage. */
percentValue?: (Scalars['Float'] | null)}


/** Return type for `orderEditBegin` mutation. */
export interface OrderEditBeginPayloadGenqlSelection{
    /** The order that will be edited. */
    calculatedOrder?: CalculatedOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderEditCommit` mutation. */
export interface OrderEditCommitPayloadGenqlSelection{
    /** The order with changes applied. */
    order?: OrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderEditRemoveLineItemDiscount` mutation. */
export interface OrderEditRemoveLineItemDiscountPayloadGenqlSelection{
    /** The calculated line item after removal of the discount. */
    calculatedLineItem?: CalculatedLineItemGenqlSelection
    /** An order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `orderEditSetQuantity` mutation. */
export interface OrderEditSetQuantityPayloadGenqlSelection{
    /** The calculated line item with the edits applied but not saved. */
    calculatedLineItem?: CalculatedLineItemGenqlSelection
    /** The calculated order with the edits applied but not saved. */
    calculatedOrder?: CalculatedOrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying the information to be updated on an order when using the orderUpdate mutation. */
export interface OrderInput {
/** The ID of the order to update. */
id: Scalars['ID'],
/** A new customer email address for the order. Overwrites the existing email address. */
email?: (Scalars['String'] | null),
/** The new contents for the note associated with the order. Overwrites the existing note. */
note?: (Scalars['String'] | null),
/** A new list of tags for the order. Overwrites the existing tags. */
tags?: (Scalars['String'][] | null),
/** The new shipping address for the order. Overwrites the existing shipping address. */
shippingAddress?: (MailingAddressInput | null),
/** A new list of custom attributes for the order. Overwrites the existing custom attributes. */
customAttributes?: (AttributeInput[] | null),
/** A list of new metafields to add to the existing metafields for the order. */
metafields?: (MetafieldInput[] | null),
/** A list of new [localization extensions](https://shopify.dev/api/admin-graphql/latest/objects/localizationextension) to add to the existing list of localization extensions for the order. */
localizationExtensions?: (LocalizationExtensionInput[] | null),
/** The new purchase order number for the order. */
poNumber?: (Scalars['String'] | null)}


/** Return type for `orderInvoiceSend` mutation. */
export interface OrderInvoiceSendPayloadGenqlSelection{
    /** The order associated with the invoice email. */
    order?: OrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: OrderInvoiceSendUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `OrderInvoiceSend`. */
export interface OrderInvoiceSendUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying the order to mark as paid. */
export interface OrderMarkAsPaidInput {
/** The ID of the order to mark as paid. */
id: Scalars['ID']}


/** Return type for `orderMarkAsPaid` mutation. */
export interface OrderMarkAsPaidPayloadGenqlSelection{
    /** The order marked as paid. */
    order?: OrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying a closed order to open. */
export interface OrderOpenInput {
/** The ID of the order to open. */
id: Scalars['ID']}


/** Return type for `orderOpen` mutation. */
export interface OrderOpenPayloadGenqlSelection{
    /** The opened order. */
    order?: OrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The payment collection details for an order that requires additional payment following an edit to the order. */
export interface OrderPaymentCollectionDetailsGenqlSelection{
    /** The URL to use for collecting an additional payment on the order. */
    additionalPaymentCollectionUrl?: boolean | number
    /** The list of vaulted payment methods for the order with their permissions. */
    vaultedPaymentMethods?: PaymentMandateGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The status of a customer's payment for an order. */
export interface OrderPaymentStatusGenqlSelection{
    /** A message describing an error during the asynchronous processing of a payment. */
    errorMessage?: boolean | number
    /** The ID of the payment, initially returned by an `orderCreateMandatePayment` or `orderCreatePayment` mutation. */
    paymentReferenceId?: boolean | number
    /** The status of the payment. */
    status?: boolean | number
    /** A translated message describing an error during the asynchronous processing of a payment. */
    translatedErrorMessage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a fraud check on an order. */
export interface OrderRiskGenqlSelection{
    /** Whether the risk level is shown in the Shopify admin. If false, then this order risk is ignored when Shopify determines the overall risk level for the order. */
    display?: boolean | number
    /**
     * The likelihood that an order is fraudulent, based on this order risk.
     * 
     * The level can be set by Shopify risk analysis or by an app.
     * 
     */
    level?: boolean | number
    /** The risk message that's shown to the merchant in the Shopify admin. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A change that has been applied to an order.
 * 
 */
export interface OrderStagedChangeGenqlSelection{
    on_OrderStagedChangeAddCustomItem?:OrderStagedChangeAddCustomItemGenqlSelection,
    on_OrderStagedChangeAddLineItemDiscount?:OrderStagedChangeAddLineItemDiscountGenqlSelection,
    on_OrderStagedChangeAddShippingLine?:OrderStagedChangeAddShippingLineGenqlSelection,
    on_OrderStagedChangeAddVariant?:OrderStagedChangeAddVariantGenqlSelection,
    on_OrderStagedChangeDecrementItem?:OrderStagedChangeDecrementItemGenqlSelection,
    on_OrderStagedChangeIncrementItem?:OrderStagedChangeIncrementItemGenqlSelection,
    __typename?: boolean | number
}


/**
 * A change to the order representing the addition of a
 * custom line item. For example, you might want to add gift wrapping service
 * as a custom line item.
 * 
 */
export interface OrderStagedChangeAddCustomItemGenqlSelection{
    /** The price of an individual item without any discounts applied. This value cannot be negative. */
    originalUnitPrice?: MoneyV2GenqlSelection
    /** The quantity of the custom item to add to the order. This value must be greater than zero. */
    quantity?: boolean | number
    /** The title of the custom item. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The discount applied to an item that was added during the current order edit.
 * 
 */
export interface OrderStagedChangeAddLineItemDiscountGenqlSelection{
    /** The description of the discount. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The pricing value of the discount. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A new [shipping line](https://shopify.dev/api/admin-graphql/latest/objects/shippingline)
 * added as part of an order edit.
 * 
 */
export interface OrderStagedChangeAddShippingLineGenqlSelection{
    /** The phone number at the shipping address. */
    phone?: boolean | number
    /**
     * The shipping line's title that is shown to the buyer.
     * 
     */
    presentmentTitle?: boolean | number
    /** The price that applies to the shipping line. */
    price?: MoneyV2GenqlSelection
    /** The title of the shipping line. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A change to the order representing the addition of an existing product variant.
 * 
 */
export interface OrderStagedChangeAddVariantGenqlSelection{
    /** The quantity of the product variant that was added. */
    quantity?: boolean | number
    /** The product variant that was added. */
    variant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple OrderStagedChanges.
 * 
 */
export interface OrderStagedChangeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: OrderStagedChangeEdgeGenqlSelection
    /** A list of the nodes contained in OrderStagedChangeEdge. */
    nodes?: OrderStagedChangeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An removal of items from an existing line item on the order.
 * 
 */
export interface OrderStagedChangeDecrementItemGenqlSelection{
    /** The number of items removed. */
    delta?: boolean | number
    /** The original line item. */
    lineItem?: LineItemGenqlSelection
    /** The intention to restock the removed items. */
    restock?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one OrderStagedChange and a cursor during pagination.
 * 
 */
export interface OrderStagedChangeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of OrderStagedChangeEdge. */
    node?: OrderStagedChangeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An addition of items to an existing line item on the order.
 * 
 */
export interface OrderStagedChangeIncrementItemGenqlSelection{
    /** The number of items added. */
    delta?: boolean | number
    /** The original line item. */
    lineItem?: LineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A payment transaction in the context of an order.
 * 
 */
export interface OrderTransactionGenqlSelection{
    /** The masked account number associated with the payment method. */
    accountNumber?: boolean | number
    /**
     * @deprecated Use `amountSet` instead.
     * The amount of money.
     */
    amount?: boolean | number
    /** The amount and currency of the transaction in shop and presentment currencies. */
    amountSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `amountSet` instead.
     * The amount and currency of the transaction.
     */
    amountV2?: MoneyV2GenqlSelection
    /** Authorization code associated with the transaction. */
    authorizationCode?: boolean | number
    /**
     * The time when the authorization expires. This field is available only to stores on a Shopify Plus plan and is populated only for Shopify Payments authorizations.
     * 
     */
    authorizationExpiresAt?: boolean | number
    /** Date and time when the transaction was created. */
    createdAt?: boolean | number
    /** A standardized error code, independent of the payment provider. */
    errorCode?: boolean | number
    /**
     * The transaction fees charged on the order transaction. Only present for Shopify Payments transactions.
     * 
     */
    fees?: TransactionFeeGenqlSelection
    /** The human-readable payment gateway name used to process the transaction. */
    formattedGateway?: boolean | number
    /** The payment gateway used to process the transaction. */
    gateway?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The kind of transaction. */
    kind?: boolean | number
    /** Whether the transaction can be manually captured. */
    manuallyCapturable?: boolean | number
    /**
     * @deprecated Use `maximumRefundableV2` instead.
     * Specifies the available amount to refund on the gateway.
     * This value is only available for transactions of type `SuggestedRefund`.
     * 
     */
    maximumRefundable?: boolean | number
    /**
     * Specifies the available amount with currency to refund on the gateway.
     * This value is only available for transactions of type `SuggestedRefund`.
     * 
     */
    maximumRefundableV2?: MoneyV2GenqlSelection
    /** The associated order. */
    order?: OrderGenqlSelection
    /** The associated parent transaction, for example the authorization of a capture. */
    parentTransaction?: OrderTransactionGenqlSelection
    /** The payment details for the transaction. */
    paymentDetails?: PaymentDetailsGenqlSelection
    /** The payment icon to display for the transaction. */
    paymentIcon?: ImageGenqlSelection
    /** The payment ID associated with the transaction. */
    paymentId?: boolean | number
    /**
     * @deprecated Use `paymentIcon` instead.
     * The payment method used for the transaction. This value is `null` if the payment method is unknown.
     */
    paymentMethod?: boolean | number
    /** Date and time when the transaction was processed. */
    processedAt?: boolean | number
    /**
     * @deprecated Use `receiptJson` instead.
     * The transaction receipt that the payment gateway attaches to the transaction.
     * The value of this field depends on which payment gateway processed the transaction.
     * 
     */
    receipt?: boolean | number
    /**
     * The transaction receipt that the payment gateway attaches to the transaction.
     * The value of this field depends on which payment gateway processed the transaction.
     * 
     */
    receiptJson?: boolean | number
    /** The settlement currency. */
    settlementCurrency?: boolean | number
    /** The rate used when converting the transaction amount to settlement currency. */
    settlementCurrencyRate?: boolean | number
    /**
     * Contains all Shopify Payments information related to an order transaction. This field is available only to stores on a Shopify Plus plan.
     * 
     */
    shopifyPaymentsSet?: ShopifyPaymentsTransactionSetGenqlSelection
    /** The status of this transaction. */
    status?: boolean | number
    /** Whether the transaction is a test transaction. */
    test?: boolean | number
    /**
     * @deprecated Use `totalUnsettledSet` instead.
     * Specifies the available amount to capture on the gateway.
     * Only available when an amount is capturable or manually mark as paid.
     * 
     */
    totalUnsettled?: boolean | number
    /**
     * Specifies the available amount with currency to capture on the gateway in shop and presentment currencies.
     * Only available when an amount is capturable or manually mark as paid.
     * 
     */
    totalUnsettledSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalUnsettledSet` instead.
     * Specifies the available amount with currency to capture on the gateway.
     * Only available when an amount is capturable or manually mark as paid.
     * 
     */
    totalUnsettledV2?: MoneyV2GenqlSelection
    /** Staff member who was logged into the Shopify POS device when the transaction was processed. */
    user?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple OrderTransactions.
 * 
 */
export interface OrderTransactionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: OrderTransactionEdgeGenqlSelection
    /** A list of the nodes contained in OrderTransactionEdge. */
    nodes?: OrderTransactionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one OrderTransaction and a cursor during pagination.
 * 
 */
export interface OrderTransactionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of OrderTransactionEdge. */
    node?: OrderTransactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the information needed to create an order transaction. */
export interface OrderTransactionInput {
/** The amount of money for this transaction. */
amount: Scalars['Money'],
/** The payment gateway to use for this transaction. */
gateway: Scalars['String'],
/** The kind of transaction. */
kind: OrderTransactionKind,
/** The ID of the order associated with the transaction. */
orderId: Scalars['ID'],
/** The ID of the optional parent transaction, for example the authorization of a capture. */
parentId?: (Scalars['ID'] | null)}


/** Return type for `orderUpdate` mutation. */
export interface OrderUpdatePayloadGenqlSelection{
    /** The updated order. */
    order?: OrderGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Returns information about pagination in a connection, in accordance with the
 * [Relay specification](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo).
 * For more information, please read our [GraphQL Pagination Usage Guide](https://shopify.dev/api/usage/pagination-graphql).
 * 
 */
export interface PageInfoGenqlSelection{
    /** The cursor corresponding to the last node in edges. */
    endCursor?: boolean | number
    /** Whether there are more pages to fetch following the current page. */
    hasNextPage?: boolean | number
    /** Whether there are any pages prior to the current page. */
    hasPreviousPage?: boolean | number
    /** The cursor corresponding to the first node in edges. */
    startCursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A ShopifyQL parsing error. */
export interface ParseErrorGenqlSelection{
    /** An error code for the error. */
    code?: boolean | number
    /** The description of the parsing error. */
    message?: boolean | number
    /** The start and end range for the error. */
    range?: ParseErrorRangeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A range of ShopifyQL parsing errors. */
export interface ParseErrorRangeGenqlSelection{
    /** The ending position of the error. */
    end?: ErrorPositionGenqlSelection
    /** The starting position of the error. */
    start?: ErrorPositionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A payment customization. */
export interface PaymentCustomizationGenqlSelection{
    /** The enabled status of the payment customization. */
    enabled?: boolean | number
    /** The error history on the most recent version of the payment customization. */
    errorHistory?: FunctionsErrorHistoryGenqlSelection
    /** The ID of the Shopify Function implementing the payment customization. */
    functionId?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The Shopify Function implementing the payment customization. */
    shopifyFunction?: ShopifyFunctionGenqlSelection
    /** The title of the payment customization. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `paymentCustomizationActivation` mutation. */
export interface PaymentCustomizationActivationPayloadGenqlSelection{
    /** The IDs of the updated payment customizations. */
    ids?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple PaymentCustomizations.
 * 
 */
export interface PaymentCustomizationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PaymentCustomizationEdgeGenqlSelection
    /** A list of the nodes contained in PaymentCustomizationEdge. */
    nodes?: PaymentCustomizationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `paymentCustomizationCreate` mutation. */
export interface PaymentCustomizationCreatePayloadGenqlSelection{
    /** Returns the created payment customization. */
    paymentCustomization?: PaymentCustomizationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `paymentCustomizationDelete` mutation. */
export interface PaymentCustomizationDeletePayloadGenqlSelection{
    /** Returns the deleted payment customization ID. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PaymentCustomization and a cursor during pagination.
 * 
 */
export interface PaymentCustomizationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PaymentCustomizationEdge. */
    node?: PaymentCustomizationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a payment customization mutation. */
export interface PaymentCustomizationErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create and update a payment customization. */
export interface PaymentCustomizationInput {
/** The ID of the function providing the payment customization. */
functionId?: (Scalars['String'] | null),
/** The title of the payment customization. */
title?: (Scalars['String'] | null),
/** The enabled status of the payment customization. */
enabled?: (Scalars['Boolean'] | null),
/** Additional metafields to associate to the payment customization. */
metafields?: (MetafieldInput[] | null)}


/** Return type for `paymentCustomizationUpdate` mutation. */
export interface PaymentCustomizationUpdatePayloadGenqlSelection{
    /** Returns the updated payment customization. */
    paymentCustomization?: PaymentCustomizationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentCustomizationErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payment details related to a transaction. */
export interface PaymentDetailsGenqlSelection{
    on_CardPaymentDetails?:CardPaymentDetailsGenqlSelection,
    __typename?: boolean | number
}


/** All possible instrument outputs for Payment Mandates. */
export interface PaymentInstrumentGenqlSelection{
    on_VaultCreditCard?:VaultCreditCardGenqlSelection,
    on_VaultPaypalBillingAgreement?:VaultPaypalBillingAgreementGenqlSelection,
    __typename?: boolean | number
}


/**
 * A payment instrument and the permission
 * the owner of the instrument gives to the merchant to debit it.
 * 
 */
export interface PaymentMandateGenqlSelection{
    /** The unique ID of a payment mandate. */
    id?: boolean | number
    /** The outputs details of the payment instrument. */
    paymentInstrument?: PaymentInstrumentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `paymentReminderSend` mutation. */
export interface PaymentReminderSendPayloadGenqlSelection{
    /** Whether the payment reminder email was successfully sent. */
    success?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentReminderSendUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `PaymentReminderSend`. */
export interface PaymentReminderSendUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the payment schedule for a single payment defined in the payment terms. */
export interface PaymentScheduleGenqlSelection{
    /** Amount owed for this payment schedule. */
    amount?: MoneyV2GenqlSelection
    /** Date and time when the payment schedule is paid or fulfilled. */
    completedAt?: boolean | number
    /** Date and time when the payment schedule is due. */
    dueAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Date and time when the invoice is sent. */
    issuedAt?: boolean | number
    /** The payment terms the payment schedule belongs to. */
    paymentTerms?: PaymentTermsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple PaymentSchedules.
 * 
 */
export interface PaymentScheduleConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PaymentScheduleEdgeGenqlSelection
    /** A list of the nodes contained in PaymentScheduleEdge. */
    nodes?: PaymentScheduleGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PaymentSchedule and a cursor during pagination.
 * 
 */
export interface PaymentScheduleEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PaymentScheduleEdge. */
    node?: PaymentScheduleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a payment schedule for payment terms. */
export interface PaymentScheduleInput {
/** Specifies the date and time that the payment schedule was issued. This field must be provided for net type payment terms. */
issuedAt?: (Scalars['DateTime'] | null),
/** Specifies the date and time when the payment schedule is due. This field must be provided for fixed type payment terms. */
dueAt?: (Scalars['DateTime'] | null)}


/** Settings related to payments. */
export interface PaymentSettingsGenqlSelection{
    /** List of the digital wallets which the shop supports. */
    supportedDigitalWallets?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the payment terms for an order or draft order. */
export interface PaymentTermsGenqlSelection{
    /** The draft order associated with the payment terms. */
    draftOrder?: DraftOrderGenqlSelection
    /**
     * Duration of payment terms in days based on the payment terms template used to create the payment terms.
     * 
     */
    dueInDays?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The order associated with the payment terms. */
    order?: OrderGenqlSelection
    /** Whether the payment terms have overdue payment schedules. */
    overdue?: boolean | number
    /** List of schedules for the payment terms. */
    paymentSchedules?: (PaymentScheduleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The name of the payment terms template used to create the payment terms. */
    paymentTermsName?: boolean | number
    /** The payment terms template type used to create the payment terms. */
    paymentTermsType?: boolean | number
    /** The payment terms name, translated into the shop admin's preferred language. */
    translatedName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a payment terms. */
export interface PaymentTermsCreateInput {
/** Specifies the payment terms template ID used to generate payment terms. */
paymentTermsTemplateId: Scalars['ID'],
/** Specifies the payment schedules for the payment terms. */
paymentSchedules?: (PaymentScheduleInput[] | null)}


/** Return type for `paymentTermsCreate` mutation. */
export interface PaymentTermsCreatePayloadGenqlSelection{
    /** The created payment terms. */
    paymentTerms?: PaymentTermsGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentTermsCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `PaymentTermsCreate`. */
export interface PaymentTermsCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to delete the payment terms. */
export interface PaymentTermsDeleteInput {
/** The ID of the payment terms being deleted. */
paymentTermsId: Scalars['ID']}


/** Return type for `paymentTermsDelete` mutation. */
export interface PaymentTermsDeletePayloadGenqlSelection{
    /** The deleted payment terms ID. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentTermsDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `PaymentTermsDelete`. */
export interface PaymentTermsDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a payment terms. */
export interface PaymentTermsInput {
/** Specifies the payment terms template ID used to generate payment terms. */
paymentTermsTemplateId?: (Scalars['ID'] | null),
/** Specifies the payment schedules for the payment terms. */
paymentSchedules?: (PaymentScheduleInput[] | null)}


/** Represents the payment terms template object. */
export interface PaymentTermsTemplateGenqlSelection{
    /** The description of the payment terms template. */
    description?: boolean | number
    /** The number of days between the issued date and due date if this is the net type of payment terms. */
    dueInDays?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the payment terms template. */
    name?: boolean | number
    /** The type of the payment terms template. */
    paymentTermsType?: boolean | number
    /** The translated payment terms template name. */
    translatedName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to update the payment terms. */
export interface PaymentTermsUpdateInput {
/** The ID of the payment terms being updated. */
paymentTermsId: Scalars['ID'],
/** The attributes used to update the payment terms. */
paymentTermsAttributes: PaymentTermsInput}


/** Return type for `paymentTermsUpdate` mutation. */
export interface PaymentTermsUpdatePayloadGenqlSelection{
    /** The updated payment terms. */
    paymentTerms?: PaymentTermsGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PaymentTermsUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `PaymentTermsUpdate`. */
export interface PaymentTermsUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A PolarisViz data point structure for ShopifyQL query. */
export interface PolarisVizDataPointGenqlSelection{
    /** The data key. Typically a category, dimension, or other qualitative data. */
    key?: boolean | number
    /** The data value is numeric and quantitative. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The data series used for PolarisViz visualization. */
export interface PolarisVizDataSeriesGenqlSelection{
    /** An array of data points. */
    data?: PolarisVizDataPointGenqlSelection
    /** Whether the series represents comparison data. */
    isComparison?: boolean | number
    /** The name of the series. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A PolarisViz response to a ShopifyQL query. */
export interface PolarisVizResponseGenqlSelection{
    /** The PolarisViz visualization of data. */
    data?: PolarisVizDataSeriesGenqlSelection
    /** A list of parse errors, if parsing fails. */
    parseErrors?: ParseErrorGenqlSelection
    /**
     * The result in a tabular format with schema and row data.
     *                 It's always present even if query has a `VISUALIZE` keyword.
     */
    tableData?: TableDataGenqlSelection
    /** The type of visualization. For example, a line chart. */
    vizType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields used to include the line items of a specified fulfillment order that should be marked as prepared for pickup by a customer.
 * 
 */
export interface PreparedFulfillmentOrderLineItemsInput {
/** The ID of the fulfillment order. */
fulfillmentOrderId: Scalars['ID']}


/** The input fields for updating the price of a parent product variant. */
export interface PriceInput {
/**
 * The specific type of calculation done to determine the price of the parent variant.
 * The price is calculated during Bundle creation. Updating a component variant will not recalculate the price.
 * 
 */
calculation?: (PriceCalculationType | null),
/** The price of the parent product variant. This will be be used if calcualtion is set to 'FIXED'. */
price?: (Scalars['Money'] | null)}


/**
 * Represents a price list, including information about related prices and eligibility rules.
 * You can use price lists to specify either fixed prices or adjusted relative prices that
 * override initial product variant prices. Price lists are applied to customers
 * using context rules, which determine price list eligibility.
 * 
 *   For more information on price lists, refer to
 *   [Support different pricing models](https://shopify.dev/apps/internationalization/product-price-lists).
 * 
 */
export interface PriceListGenqlSelection{
    /** The catalog that the price list is associated with. */
    catalog?: CatalogGenqlSelection
    /** The currency for fixed prices associated with this price list. */
    currency?: boolean | number
    /** The number of fixed prices on the price list. */
    fixedPricesCount?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The unique name of the price list, used as a human-readable identifier. */
    name?: boolean | number
    /** Relative adjustments to other prices. */
    parent?: PriceListParentGenqlSelection
    /** A list of prices associated with the price list. */
    prices?: (PriceListPriceConnectionGenqlSelection & { __args?: {
    /**
     * The origin of this price, either fixed (defined on the price list)
     *                or relative (calculated using an adjustment via a price list parent configuration).
     */
    originType?: (PriceListPriceOriginType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of quantity rules associated with the price list, ordered by product variants. */
    quantityRules?: (QuantityRuleConnectionGenqlSelection & { __args?: {
    /**
     * Whether the quantity rule is fixed (defined on the price list) or relative
     * (the default quantity rule for the shop).
     * 
     */
    originType?: (QuantityRuleOriginType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The type and value of a price list adjustment.
 * 
 * For more information on price lists, refer to
 * [Support different pricing models](https://shopify.dev/apps/internationalization/product-price-lists).
 * 
 */
export interface PriceListAdjustmentGenqlSelection{
    /** The type of price adjustment, such as percentage increase or decrease. */
    type?: boolean | number
    /**
     * The value of price adjustment, where positive numbers reduce the prices and negative numbers
     * increase them.
     * 
     */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to set a price list adjustment. */
export interface PriceListAdjustmentInput {
/** The value of the price adjustment as specified by the `type`. */
value: Scalars['Float'],
/** The type of price adjustment, such as percentage increase or decrease. */
type: PriceListAdjustmentType}


/** Represents the settings of price list adjustments. */
export interface PriceListAdjustmentSettingsGenqlSelection{
    /** The type of price list adjustment setting for compare at price. */
    compareAtMode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to set a price list's adjustment settings. */
export interface PriceListAdjustmentSettingsInput {
/** Determines how adjustments are applied to compare at prices. */
compareAtMode: PriceListCompareAtMode}


/**
 * An auto-generated type for paginating through multiple PriceLists.
 * 
 */
export interface PriceListConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PriceListEdgeGenqlSelection
    /** A list of the nodes contained in PriceListEdge. */
    nodes?: PriceListGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create a price list. */
export interface PriceListCreateInput {
/** The unique name of the price list, used as a human-readable identifier. */
name: Scalars['String'],
/** Three letter currency code for fixed prices associated with this price list. */
currency: CurrencyCode,
/** Relative adjustments to other prices. */
parent: PriceListParentCreateInput,
/** The ID of the catalog to associate with this price list.If the catalog was already associated with another price list then it will be unlinked. */
catalogId?: (Scalars['ID'] | null)}


/** Return type for `priceListCreate` mutation. */
export interface PriceListCreatePayloadGenqlSelection{
    /** The newly created price list. */
    priceList?: PriceListGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceListDelete` mutation. */
export interface PriceListDeletePayloadGenqlSelection{
    /** The ID of the deleted price list. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PriceList and a cursor during pagination.
 * 
 */
export interface PriceListEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PriceListEdge. */
    node?: PriceListGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceListFixedPricesAdd` mutation. */
export interface PriceListFixedPricesAddPayloadGenqlSelection{
    /** The list of fixed prices that were added to or updated in the price list. */
    prices?: PriceListPriceGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListPriceUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed price list fixed prices by product bulk update operations. */
export interface PriceListFixedPricesByProductBulkUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceListFixedPricesByProductUpdate` mutation. */
export interface PriceListFixedPricesByProductUpdatePayloadGenqlSelection{
    /** The price list for which the fixed prices were modified. */
    priceList?: PriceListGenqlSelection
    /** The product for which the fixed prices were added. */
    pricesToAddProducts?: ProductGenqlSelection
    /** The product for which the fixed prices were deleted. */
    pricesToDeleteProducts?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListFixedPricesByProductBulkUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceListFixedPricesDelete` mutation. */
export interface PriceListFixedPricesDeletePayloadGenqlSelection{
    /** A list of product variant IDs whose fixed prices were removed from the price list. */
    deletedFixedPriceVariantIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListPriceUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceListFixedPricesUpdate` mutation. */
export interface PriceListFixedPricesUpdatePayloadGenqlSelection{
    /** A list of deleted variant IDs for prices. */
    deletedFixedPriceVariantIds?: boolean | number
    /** The price list for which the fixed prices were modified. */
    priceList?: PriceListGenqlSelection
    /** The prices that were added to the price list. */
    pricesAdded?: PriceListPriceGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListPriceUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents relative adjustments from one price list to other prices.
 *   You can use a `PriceListParent` to specify an adjusted relative price using a percentage-based
 *   adjustment. Adjusted prices work in conjunction with exchange rules and rounding.
 * 
 *   [Adjustment types](https://shopify.dev/api/admin-graphql/latest/enums/pricelistadjustmenttype)
 *   support both percentage increases and decreases.
 * 
 */
export interface PriceListParentGenqlSelection{
    /** A price list adjustment. */
    adjustment?: PriceListAdjustmentGenqlSelection
    /** A price list's settings for adjustment. */
    settings?: PriceListAdjustmentSettingsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create a price list adjustment. */
export interface PriceListParentCreateInput {
/** The relative adjustments to other prices. */
adjustment: PriceListAdjustmentInput,
/** The price list adjustment settings. */
settings?: (PriceListAdjustmentSettingsInput | null)}


/** The input fields used to update a price list's adjustment. */
export interface PriceListParentUpdateInput {
/** The relative adjustments to other prices.. */
adjustment: PriceListAdjustmentInput,
/** The price list adjustment settings. */
settings?: (PriceListAdjustmentSettingsInput | null)}


/**
 * Represents information about pricing for a product variant
 *         as defined on a price list, such as the price, compare at price, and origin type. You can use a PriceListPrice to specify a fixed price for a specific product variant.
 */
export interface PriceListPriceGenqlSelection{
    /** The compare-at price of the product variant on this price list. */
    compareAtPrice?: MoneyV2GenqlSelection
    /**
     * The origin of a price, either fixed (defined on the price list) or relative (calculated using a price list adjustment configuration).
     * 
     */
    originType?: boolean | number
    /** The price of the product variant on this price list. */
    price?: MoneyV2GenqlSelection
    /** The product variant associated with this price. */
    variant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple PriceListPrices.
 * 
 */
export interface PriceListPriceConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PriceListPriceEdgeGenqlSelection
    /** A list of the nodes contained in PriceListPriceEdge. */
    nodes?: PriceListPriceGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PriceListPrice and a cursor during pagination.
 * 
 */
export interface PriceListPriceEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PriceListPriceEdge. */
    node?: PriceListPriceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for providing the fields and values to use when creating or updating a fixed price list price.
 * 
 */
export interface PriceListPriceInput {
/** The product variant ID associated with the price list price. */
variantId: Scalars['ID'],
/** The price of the product variant on this price list. */
price: MoneyInput,
/** The compare-at price of the product variant on this price list. */
compareAtPrice?: (MoneyInput | null)}


/** An error for a failed price list price operation. */
export interface PriceListPriceUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields representing the price for all variants of a product. */
export interface PriceListProductPriceInput {
/** Specifies the ID of the product to update its variants for. */
productId: Scalars['ID'],
/** The price of the product to use for all variants with its currency. */
price: MoneyInput}


/** The input fields used to update a price list. */
export interface PriceListUpdateInput {
/** The unique name of the price list, used as a human-readable identifier. */
name?: (Scalars['String'] | null),
/** The three-letter currency code for fixed prices associated with this price list. */
currency?: (CurrencyCode | null),
/** Relative adjustments to other prices. */
parent?: (PriceListParentUpdateInput | null),
/** The ID of the catalog to associate with this price list. */
catalogId?: (Scalars['ID'] | null)}


/** Return type for `priceListUpdate` mutation. */
export interface PriceListUpdatePayloadGenqlSelection{
    /** The updated price list. */
    priceList?: PriceListGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PriceListUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed contextual pricing operations. */
export interface PriceListUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Price rules are a set of conditions, including entitlements and prerequisites, that must be met in order for a discount code to apply.
 * 
 * We recommend using the types and queries detailed at [Getting started with discounts](https://shopify.dev/docs/apps/selling-strategies/discounts/getting-started) instead. These will replace the GraphQL `PriceRule` object and REST Admin `PriceRule` and `DiscountCode` resources.
 * 
 */
export interface PriceRuleGenqlSelection{
    /** The maximum number of times that the price rule can be allocated onto an order. */
    allocationLimit?: boolean | number
    /** The method by which the price rule's value is allocated to its entitled items. */
    allocationMethod?: boolean | number
    /** The application that created the price rule. */
    app?: AppGenqlSelection
    /** Determines which discount classes the discount can combine with. */
    combinesWith?: DiscountCombinesWithGenqlSelection
    /** The date and time when the price rule was created. */
    createdAt?: boolean | number
    /** The customers that can use this price rule. */
    customerSelection?: PriceRuleCustomerSelectionGenqlSelection
    /** The class of the discount for combining purposes. */
    discountClass?: boolean | number
    /** List of the price rule's discount codes. */
    discountCodes?: (PriceRuleDiscountCodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountCodeSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `times_used`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** How many discount codes associated with the price rule. */
    discountCodesCount?: boolean | number
    /** The date and time when the price rule ends. For open-ended price rules, use `null`. */
    endsAt?: boolean | number
    /**
     * @deprecated Use `prerequisiteToEntitlementQuantityRatio` instead.
     * Quantity of prerequisite items required for the price rule to be applicable,  compared to quantity of entitled items.
     */
    entitlementToPrerequisiteQuantityRatio?: PriceRuleEntitlementToPrerequisiteQuantityRatioGenqlSelection
    /** The paginated list of events associated with the price rule. */
    events?: (EventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (EventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `comments`
     *  - `created_at`
     *  - `subject_type`
     *  - `verb`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A list of the price rule's features. */
    features?: boolean | number
    /** Indicates whether there are any timeline comments on the price rule. */
    hasTimelineComment?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The items to which the price rule applies. */
    itemEntitlements?: PriceRuleItemEntitlementsGenqlSelection
    /** The items required for the price rule to be applicable. */
    itemPrerequisites?: PriceRuleLineItemPrerequisitesGenqlSelection
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** Whether the price rule can be applied only once per customer. */
    oncePerCustomer?: boolean | number
    /** The number of the entitled items must fall within this range for the price rule to be applicable. */
    prerequisiteQuantityRange?: PriceRuleQuantityRangeGenqlSelection
    /** The shipping cost must fall within this range for the price rule to be applicable. */
    prerequisiteShippingPriceRange?: PriceRuleMoneyRangeGenqlSelection
    /** The sum of the entitled items subtotal prices must fall within this range for the price rule to be applicable. */
    prerequisiteSubtotalRange?: PriceRuleMoneyRangeGenqlSelection
    /** Quantity of prerequisite items required for the price rule to be applicable,  compared to quantity of entitled items. */
    prerequisiteToEntitlementQuantityRatio?: PriceRulePrerequisiteToEntitlementQuantityRatioGenqlSelection
    /** URLs that can be used to share the discount. */
    shareableUrls?: PriceRuleShareableUrlGenqlSelection
    /** The shipping lines to which the price rule applies. */
    shippingEntitlements?: PriceRuleShippingLineEntitlementsGenqlSelection
    /** The date and time when the price rule starts. */
    startsAt?: boolean | number
    /** The status of the price rule. */
    status?: boolean | number
    /** A detailed summary of the price rule. */
    summary?: boolean | number
    /** The type of lines (line_item or shipping_line) to which the price rule applies. */
    target?: boolean | number
    /** The title of the price rule. */
    title?: boolean | number
    /** The total sales from orders where the price rule was used. */
    totalSales?: MoneyV2GenqlSelection
    /**
     * @deprecated Use `features` instead.
     * A list of the price rule's features.
     */
    traits?: boolean | number
    /** The number of times that the price rule has been used. This value is updated asynchronously and can be different than the actual usage count. */
    usageCount?: boolean | number
    /** The maximum number of times that the price rule can be used in total. */
    usageLimit?: boolean | number
    /** A time period during which a price rule is applicable. */
    validityPeriod?: PriceRuleValidityPeriodGenqlSelection
    /**
     * @deprecated Use `valueV2` instead.
     * The value of the price rule.
     */
    value?: PriceRuleValueGenqlSelection
    /** The value of the price rule. */
    valueV2?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceRuleActivate` mutation. */
export interface PriceRuleActivatePayloadGenqlSelection{
    /** The activated price rule. */
    priceRule?: PriceRuleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple PriceRules.
 * 
 */
export interface PriceRuleConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PriceRuleEdgeGenqlSelection
    /** A list of the nodes contained in PriceRuleEdge. */
    nodes?: PriceRuleGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceRuleCreate` mutation. */
export interface PriceRuleCreatePayloadGenqlSelection{
    /** The newly created price rule. */
    priceRule?: PriceRuleGenqlSelection
    /** The newly created discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A selection of customers for whom the price rule applies. */
export interface PriceRuleCustomerSelectionGenqlSelection{
    /** List of customers to whom the price rule applies. */
    customers?: (CustomerConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CustomerSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `accepts_marketing`
     *  - `country`
     *  - `customer_date`
     *  - `email`
     *  - `last_abandoned_order_date`
     *  - `order_date`
     *  - `orders_count`
     *  - `phone`
     *  - `state`
     *  - `tag`
     *  - `tag_not`
     *  - `total_spent`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Whether the price rule applies to all customers. */
    forAllCustomers?: boolean | number
    /** A list of customer segments that contain the customers who can use the price rule. */
    segments?: SegmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to update a price rule customer selection. */
export interface PriceRuleCustomerSelectionInput {
/** Whether the price rule applies to all customers. */
forAllCustomers?: (Scalars['Boolean'] | null),
/** List of customer segments that contain the customers to whom the price rule applies. No single customer IDs may be present. */
segmentIds?: (Scalars['ID'][] | null),
/** List of customers to add to the current list of customers to whom the price rule applies. `savedSearchIds` must be empty. */
customerIdsToAdd?: (Scalars['ID'][] | null),
/** A list of customers to remove from the current list of customers to whom the price rule applies. */
customerIdsToRemove?: (Scalars['ID'][] | null)}


/** Return type for `priceRuleDeactivate` mutation. */
export interface PriceRuleDeactivatePayloadGenqlSelection{
    /** The deactivated price rule. */
    priceRule?: PriceRuleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceRuleDelete` mutation. */
export interface PriceRuleDeletePayloadGenqlSelection{
    /** The ID price of the deleted price rule. */
    deletedPriceRuleId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /** The shop of the deleted price rule. */
    shop?: ShopGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A discount code of a price rule. */
export interface PriceRuleDiscountCodeGenqlSelection{
    /** The application that created the discount code. */
    app?: AppGenqlSelection
    /** The code to apply the discount. */
    code?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The number of times that the price rule has been used. This value is updated asynchronously and can be different than the actual usage count. */
    usageCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple PriceRuleDiscountCodes.
 * 
 */
export interface PriceRuleDiscountCodeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PriceRuleDiscountCodeEdgeGenqlSelection
    /** A list of the nodes contained in PriceRuleDiscountCodeEdge. */
    nodes?: PriceRuleDiscountCodeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceRuleDiscountCodeCreate` mutation. */
export interface PriceRuleDiscountCodeCreatePayloadGenqlSelection{
    /** The updated price rule. */
    priceRule?: PriceRuleGenqlSelection
    /** The newly created discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PriceRuleDiscountCode and a cursor during pagination.
 * 
 */
export interface PriceRuleDiscountCodeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PriceRuleDiscountCodeEdge. */
    node?: PriceRuleDiscountCodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to manipulate a discount code. */
export interface PriceRuleDiscountCodeInput {
/** The code to use the discount. */
code?: (Scalars['String'] | null)}


/** Return type for `priceRuleDiscountCodeUpdate` mutation. */
export interface PriceRuleDiscountCodeUpdatePayloadGenqlSelection{
    /** The updated price rule. */
    priceRule?: PriceRuleGenqlSelection
    /** The updated discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PriceRule and a cursor during pagination.
 * 
 */
export interface PriceRuleEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PriceRuleEdge. */
    node?: PriceRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
export interface PriceRuleEntitlementToPrerequisiteQuantityRatioGenqlSelection{
    /** The quantity of entitled items in the ratio. */
    entitlementQuantity?: boolean | number
    /** The quantity of prerequisite items in the ratio. */
    prerequisiteQuantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies the quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
export interface PriceRuleEntitlementToPrerequisiteQuantityRatioInput {
/** The quantity of entitled items in the ratio. */
entitlementQuantity?: (Scalars['Int'] | null),
/** The quantity of prerequisite items in the ratio. */
prerequisiteQuantity?: (Scalars['Int'] | null)}


/** The value of a fixed amount price rule. */
export interface PriceRuleFixedAmountValueGenqlSelection{
    /** The monetary value of the price rule. */
    amount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to manipulate a price rule. */
export interface PriceRuleInput {
/** Determines which discount classes the discount can combine with. */
combinesWith?: (DiscountCombinesWithInput | null),
/** PriceRuleValidityPeriod for the price rule. */
validityPeriod?: (PriceRuleValidityPeriodInput | null),
/** Whether the price rule can be applied only once per customer. */
oncePerCustomer?: (Scalars['Boolean'] | null),
/** The customers that can use this price rule. */
customerSelection?: (PriceRuleCustomerSelectionInput | null),
/** The maximum number of times that the price rule can be used in total. */
usageLimit?: (Scalars['Int'] | null),
/** Title of the price rule. */
title?: (Scalars['String'] | null),
/** The maximum number of times that the price rule can be allocated onto an order. */
allocationLimit?: (Scalars['Int'] | null),
/** The method by which the price rule's value is allocated to its entitled items. */
allocationMethod?: (PriceRuleAllocationMethod | null),
/** The value of the price rule. */
value?: (PriceRuleValueInput | null),
/** The type of lines (line_item or shipping_line) to which the price rule applies. */
target?: (PriceRuleTarget | null),
/** The sum of the entitled items subtotal prices must fall within this range for the price rule to be applicable. */
prerequisiteSubtotalRange?: (PriceRuleMoneyRangeInput | null),
/** The number of the entitled items must fall within this range for the price rule to be applicable. */
prerequisiteQuantityRange?: (PriceRuleQuantityRangeInput | null),
/** The shipping cost must fall within this range for the price rule to be applicable. */
prerequisiteShippingPriceRange?: (PriceRuleMoneyRangeInput | null),
/** The items to which the price rule applies. */
itemEntitlements?: (PriceRuleItemEntitlementsInput | null),
/** The items required for the price rule to be applicable. */
itemPrerequisites?: (PriceRuleItemPrerequisitesInput | null),
/** The shipping lines to which the price rule applies. */
shippingEntitlements?: (PriceRuleShippingEntitlementsInput | null),
/** Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
prerequisiteToEntitlementQuantityRatio?: (PriceRulePrerequisiteToEntitlementQuantityRatioInput | null)}


/** The items to which this price rule applies. This may be multiple products, product variants, collections or combinations of the aforementioned. */
export interface PriceRuleItemEntitlementsGenqlSelection{
    /** The collections to which the price rule applies. */
    collections?: (CollectionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The product variants to which the price rule applies. */
    productVariants?: (ProductVariantConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The products to which the price rule applies. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Whether the price rule applies to all line items. */
    targetAllLineItems?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to update a price rule line item entitlement. */
export interface PriceRuleItemEntitlementsInput {
/** Whether the price rule applies to all items. */
targetAllLineItems?: (Scalars['Boolean'] | null),
/** The products to which the price rule applies. */
productIds?: (Scalars['ID'][] | null),
/** The product variants to which the price rule applies. */
productVariantIds?: (Scalars['ID'][] | null),
/** The collections to which the price rule applies. */
collectionIds?: (Scalars['ID'][] | null)}


/** The input fields to update a price rule's item prerequisites. */
export interface PriceRuleItemPrerequisitesInput {
/** The products needed for the price rule to be applied. */
productIds?: (Scalars['ID'][] | null),
/** The product variants needed for the price rule to be applied. */
productVariantIds?: (Scalars['ID'][] | null),
/** The collections needed for the price rule to be applied. */
collectionIds?: (Scalars['ID'][] | null)}


/** Single or multiple line item products, product variants or collections required for the price rule to be applicable, can also be provided in combination. */
export interface PriceRuleLineItemPrerequisitesGenqlSelection{
    /** The collections required for the price rule to be applicable. */
    collections?: (CollectionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The product variants required for the price rule to be applicable. */
    productVariants?: (ProductVariantConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The products required for the price rule to be applicable. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A money range within which the price rule is applicable. */
export interface PriceRuleMoneyRangeGenqlSelection{
    /** The lower bound of the money range. */
    greaterThan?: boolean | number
    /** The lower bound or equal of the money range. */
    greaterThanOrEqualTo?: boolean | number
    /** The upper bound of the money range. */
    lessThan?: boolean | number
    /** The upper bound or equal of the money range. */
    lessThanOrEqualTo?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to update the money range within which the price rule is applicable.
 * 
 */
export interface PriceRuleMoneyRangeInput {
/** The upper bound of the money range. */
lessThan?: (Scalars['Money'] | null),
/** The upper or equal bound of the money range. */
lessThanOrEqualTo?: (Scalars['Money'] | null),
/** The lower bound of the money range. */
greaterThan?: (Scalars['Money'] | null),
/** The lower or equal bound of the money range. */
greaterThanOrEqualTo?: (Scalars['Money'] | null)}


/** The value of a percent price rule. */
export interface PriceRulePercentValueGenqlSelection{
    /** The percent value of the price rule. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
export interface PriceRulePrerequisiteToEntitlementQuantityRatioGenqlSelection{
    /** The quantity of entitled items in the ratio. */
    entitlementQuantity?: boolean | number
    /** The quantity of prerequisite items in the ratio. */
    prerequisiteQuantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specifies the quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items. */
export interface PriceRulePrerequisiteToEntitlementQuantityRatioInput {
/** The quantity of entitled items in the ratio. */
entitlementQuantity?: (Scalars['Int'] | null),
/** The quantity of prerequisite items in the ratio. */
prerequisiteQuantity?: (Scalars['Int'] | null)}


/** A quantity range within which the price rule is applicable. */
export interface PriceRuleQuantityRangeGenqlSelection{
    /** The lower bound of the quantity range. */
    greaterThan?: boolean | number
    /** The lower bound or equal of the quantity range. */
    greaterThanOrEqualTo?: boolean | number
    /** The upper bound of the quantity range. */
    lessThan?: boolean | number
    /** The upper bound or equal of the quantity range. */
    lessThanOrEqualTo?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields to update the quantity range within which the price rule is applicable.
 * 
 */
export interface PriceRuleQuantityRangeInput {
/** The upper bound of the quantity range. */
lessThan?: (Scalars['Int'] | null),
/** The upper or equal bound of the quantity range. */
lessThanOrEqualTo?: (Scalars['Int'] | null),
/** The lower bound of the quantity range. */
greaterThan?: (Scalars['Int'] | null),
/** The lower or equal bound of the quantity range. */
greaterThanOrEqualTo?: (Scalars['Int'] | null)}


/** Shareable URL for the discount code associated with the price rule. */
export interface PriceRuleShareableUrlGenqlSelection{
    /** The image URL of the item (product or collection) to which the discount applies. */
    targetItemImage?: ImageGenqlSelection
    /** The type of page that's associated with the URL. */
    targetType?: boolean | number
    /** The title of the page that's associated with the URL. */
    title?: boolean | number
    /** The URL for the discount code. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to update a price rule shipping entitlement. */
export interface PriceRuleShippingEntitlementsInput {
/** Whether the price rule applies to all shipping lines. */
targetAllShippingLines?: (Scalars['Boolean'] | null),
/** The codes for the countries to which the price rule applies to. */
countryCodes?: (CountryCode[] | null),
/** Whether the price rule is applicable to countries that have not been defined in the shop's shipping zones. */
includeRestOfWorld?: (Scalars['Boolean'] | null)}


/** The shipping lines to which the price rule applies to. */
export interface PriceRuleShippingLineEntitlementsGenqlSelection{
    /** The codes for the countries to which the price rule applies to. */
    countryCodes?: boolean | number
    /** Whether the price rule is applicable to countries that have not been defined in the shop's shipping zones. */
    includeRestOfWorld?: boolean | number
    /** Whether the price rule applies to all shipping lines. */
    targetAllShippingLines?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `priceRuleUpdate` mutation. */
export interface PriceRuleUpdatePayloadGenqlSelection{
    /** The updated price rule. */
    priceRule?: PriceRuleGenqlSelection
    /** The updated discount code. */
    priceRuleDiscountCode?: PriceRuleDiscountCodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    priceRuleUserErrors?: PriceRuleUserErrorGenqlSelection
    /**
     * @deprecated Use `priceRuleUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during execution of a price rule mutation. */
export interface PriceRuleUserErrorGenqlSelection{
    /** Error code to uniquely identify the error. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A time period during which a price rule is applicable. */
export interface PriceRuleValidityPeriodGenqlSelection{
    /** The time after which the price rule becomes invalid. */
    end?: boolean | number
    /** The time after which the price rule is valid. */
    start?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to update the validity period of a price rule. */
export interface PriceRuleValidityPeriodInput {
/** The time after which the price rule is valid. */
start: Scalars['DateTime'],
/** The time after which the price rule becomes invalid. */
end?: (Scalars['DateTime'] | null)}


/** The type of the price rule value. The price rule value might be a percentage value, or a fixed amount. */
export interface PriceRuleValueGenqlSelection{
    on_PriceRuleFixedAmountValue?:PriceRuleFixedAmountValueGenqlSelection,
    on_PriceRulePercentValue?:PriceRulePercentValueGenqlSelection,
    __typename?: boolean | number
}


/** The input fields to update a price rule. */
export interface PriceRuleValueInput {
/** The percentage value of the price rule. */
percentageValue?: (Scalars['Float'] | null),
/** The fixed amount value of the price rule. */
fixedAmountValue?: (Scalars['Money'] | null)}


/**
 * One type of value given to a customer when a discount is applied to an order.
 * The application of a discount with this value gives the customer the specified percentage off a specified item.
 * 
 */
export interface PricingPercentageValueGenqlSelection{
    /**
     * The percentage value of the object. This is a number between -100 (free) and 0 (no discount).
     * 
     */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The type of value given to a customer when a discount is applied to an order. For example, the application of the discount might give the customer a percentage off a specified item. Alternatively, the application of the discount might give the customer a monetary value in a given currency off an order. */
export interface PricingValueGenqlSelection{
    on_MoneyV2?:MoneyV2GenqlSelection,
    on_PricingPercentageValue?:PricingPercentageValueGenqlSelection,
    __typename?: boolean | number
}


/**
 * Private metafields represent custom metadata that is attached to a resource.
 * Private metafields are accessible only by the application that created them and only from the GraphQL Admin API.
 * 
 * An application can create a maximum of 10 private metafields per shop resource.
 * 
 */
export interface PrivateMetafieldGenqlSelection{
    /** The date and time when the private metafield was created. */
    createdAt?: boolean | number
    /** The ID of the private metafield. */
    id?: boolean | number
    /** The key name of the private metafield. */
    key?: boolean | number
    /** The namespace of the private metafield. */
    namespace?: boolean | number
    /** The date and time when the private metafield was updated. */
    updatedAt?: boolean | number
    /** The value of a private metafield. */
    value?: boolean | number
    /** Represents the private metafield value type. */
    valueType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple PrivateMetafields.
 * 
 */
export interface PrivateMetafieldConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PrivateMetafieldEdgeGenqlSelection
    /** A list of the nodes contained in PrivateMetafieldEdge. */
    nodes?: PrivateMetafieldGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the private metafield to delete.
 * 
 */
export interface PrivateMetafieldDeleteInput {
/** The ID of the resource that owns the metafield. If the field is blank, then the `Shop` resource owns the metafield. */
owner?: (Scalars['ID'] | null),
/** The namespace of the private metafield. */
namespace: Scalars['String'],
/** The key of the private metafield. */
key: Scalars['String']}


/** Return type for `privateMetafieldDelete` mutation. */
export interface PrivateMetafieldDeletePayloadGenqlSelection{
    /** The ID of private metafield that was deleted. */
    deletedPrivateMetafieldId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one PrivateMetafield and a cursor during pagination.
 * 
 */
export interface PrivateMetafieldEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PrivateMetafieldEdge. */
    node?: PrivateMetafieldGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a private metafield.
 * 
 */
export interface PrivateMetafieldInput {
/** The resource that owns the metafield. If the field is blank, then the `Shop` resource owns the metafield. */
owner?: (Scalars['ID'] | null),
/** The namespace of the private metafield. */
namespace: Scalars['String'],
/** The key of the private metafield. */
key: Scalars['String'],
/** The `value` and `valueType` of the private metafield, wrapped in a `ValueInput` object. */
valueInput: PrivateMetafieldValueInput}


/** Return type for `privateMetafieldUpsert` mutation. */
export interface PrivateMetafieldUpsertPayloadGenqlSelection{
    /** The private metafield that was created or updated. */
    privateMetafield?: PrivateMetafieldGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the value and value type of the private metafield.
 * 
 */
export interface PrivateMetafieldValueInput {
/** The value of a private metafield. */
value: Scalars['String'],
/** Represents the private metafield value type. */
valueType: PrivateMetafieldValueType}


/** The Product resource lets you manage products in a merchant’s store. You can use [ProductVariants](https://shopify.dev/api/admin-graphql/latest/objects/productvariant) to create or update different versions of the same product. You can also add or update product [Media](https://shopify.dev/api/admin-graphql/latest/interfaces/media). Products can be organized by grouping them into a [Collection](https://shopify.dev/api/admin-graphql/latest/objects/collection). */
export interface ProductGenqlSelection{
    /** The number of publications a resource is published to without feedback errors. */
    availablePublicationCount?: boolean | number
    /**
     * @deprecated Use `descriptionHtml` instead.
     * The description of the product, complete with HTML formatting.
     */
    bodyHtml?: boolean | number
    /** A list of the collections that include the product. */
    collections?: (CollectionConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CollectionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `collection_type`
     *  - `product_publication_status`
     *  - `publishable_status`
     *  - `published_status`
     *  - `title`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The pricing that applies for a customer in a given context. */
    contextualPricing?: (ProductContextualPricingGenqlSelection & { __args: {
    /** The context used to generate contextual pricing for the variant. */
    context: ContextualPricingContext} })
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was created.
     * 
     */
    createdAt?: boolean | number
    /**
     * @deprecated Deprecated in API version 2022-10. Use `productType` instead.
     * The custom product type specified by the merchant.
     */
    customProductType?: boolean | number
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** A stripped description of the product, single line with HTML tags removed. */
    description?: { __args: {
    /** Truncates string after the given length. */
    truncateAt?: (Scalars['Int'] | null)} } | boolean | number
    /** The description of the product, complete with HTML formatting. */
    descriptionHtml?: boolean | number
    /**
     * @deprecated Use `description` instead.
     * Stripped description of the product, single line with HTML tags removed.
     * Truncated to 60 characters.
     * 
     */
    descriptionPlainSummary?: boolean | number
    /** The featured image for the product. */
    featuredImage?: ImageGenqlSelection
    /** The featured media for the product. */
    featuredMedia?: MediaGenqlSelection
    /** Information about the product that's provided through resource feedback. */
    feedback?: ResourceFeedbackGenqlSelection
    /** The theme template used when viewing the gift card in a store. */
    giftCardTemplateSuffix?: boolean | number
    /** A unique human-friendly string of the product's title. */
    handle?: boolean | number
    /** Whether the product has only a single variant with the default option and value. */
    hasOnlyDefaultVariant?: boolean | number
    /** Whether the product has out of stock variants. */
    hasOutOfStockVariants?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The images associated with the product. */
    images?: (ImageConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductImageSortKeys | null)} })
    /** Whether the product is in a given collection. */
    inCollection?: { __args: {
    /** The ID of the collection to check. */
    id: Scalars['ID']} }
    /** Whether the product is a gift card. */
    isGiftCard?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The media associated with the product. This can include images, 3D models, or videos. */
    media?: (MediaConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductMediaSortKeys | null)} })
    /** Total count of media belonging to a product. */
    mediaCount?: boolean | number
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The online store preview URL. */
    onlineStorePreviewUrl?: boolean | number
    /**
     * The online store URL for the product.
     * A value of `null` indicates that the product is not published to the Online Store sales channel.
     * 
     */
    onlineStoreUrl?: boolean | number
    /** A list of product options. The limit is specified by Shop.resourceLimits.maxProductOptions. */
    options?: (ProductOptionGenqlSelection & { __args?: {
    /** Truncate the array result to this size. */
    first?: (Scalars['Int'] | null)} })
    /**
     * @deprecated Deprecated in API version 2020-10. Use `priceRangeV2` instead.
     * The price range of the product.
     */
    priceRange?: ProductPriceRangeGenqlSelection
    /** The price range of the product with prices formatted as decimals. */
    priceRangeV2?: ProductPriceRangeV2GenqlSelection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The product category specified by the merchant. */
    productCategory?: ProductCategoryGenqlSelection
    /**
     * @deprecated Use `resourcePublications` instead.
     * A list of the channels where the product is published.
     */
    productPublications?: (ProductPublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The product type specified by the merchant. */
    productType?: boolean | number
    /** The number of publications a resource is published on. */
    publicationCount?: { __args: {
    /** Include only the resource's publications that are published. If false, then return all the resource's publications including future publications. */
    onlyPublished?: (Scalars['Boolean'] | null)} } | boolean | number
    /**
     * @deprecated Use `resourcePublications` instead.
     * A list of the channels where the product is published.
     */
    publications?: (ProductPublicationConnectionGenqlSelection & { __args?: {
    /** Return only the publications that are published. If false, then return all publications. */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was published to the Online Store.
     * 
     */
    publishedAt?: boolean | number
    /** Whether or not the product is published for a customer in the given context. */
    publishedInContext?: { __args: {
    /** The context used to determine publication status. */
    context: ContextualPublicationContext} }
    /**
     * @deprecated Use `publishedOnPublication` instead.
     * Check to see whether the resource is published to a given channel.
     */
    publishedOnChannel?: { __args: {
    /** The ID of the channel to check. */
    channelId: Scalars['ID']} }
    /**
     * @deprecated Use `publishedOnCurrentPublication` instead.
     * Check to see whether the resource is published to the calling app's channel.
     */
    publishedOnCurrentChannel?: boolean | number
    /** Check to see whether the resource is published to the calling app's publication. */
    publishedOnCurrentPublication?: boolean | number
    /** Check to see whether the resource is published to a given publication. */
    publishedOnPublication?: { __args: {
    /** The ID of the publication to check. */
    publicationId: Scalars['ID']} }
    /** Whether the product can only be purchased with a selling plan (subscription). Products that are sold on subscription (`requiresSellingPlan: true`) can be updated only for online stores. If you update a product to be subscription only, then the product is unpublished from all channels except the online store. */
    requiresSellingPlan?: boolean | number
    /** The resource that is either published or staged to be published to the calling app's publication. Requires the `read_product_listings` scope. */
    resourcePublicationOnCurrentPublication?: ResourcePublicationV2GenqlSelection
    /** The list of resources that are published to a publication. */
    resourcePublications?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /**
     * Whether to return only the resources that are currently published. If false, then also returns the resources that are scheduled to be published.
     * 
     */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of resources that are either published or staged to be published to a publication. */
    resourcePublicationsV2?: (ResourcePublicationV2ConnectionGenqlSelection & { __args?: {
    /**
     * Whether to return only the resources that are currently published. If false, then also returns the resources that are scheduled or staged to be published.
     * 
     */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Filter publications by catalog type. */
    catalogType?: (CatalogType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Count of selling plan groups associated with the product. */
    sellingPlanGroupCount?: boolean | number
    /** A list of all selling plan groups defined in the current shop associated with the product either directly or through any of its variants. */
    sellingPlanGroups?: (SellingPlanGroupConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** SEO information of the product. */
    seo?: SEOGenqlSelection
    /**
     * @deprecated Deprecated in API version 2022-10. Use `productCategory` instead.
     * The standardized product type in the Shopify product taxonomy.
     */
    standardizedProductType?: StandardizedProductTypeGenqlSelection
    /** The product status. This controls visibility across all channels. */
    status?: boolean | number
    /**
     * @deprecated Use `id` instead.
     * The Storefront GraphQL API ID of the `Product`.
     * 
     * As of the `2022-04` version release, the Storefront GraphQL API will no longer return Base64 encoded IDs to match the behavior of the Admin GraphQL API. Therefore, you can safely use the `id` field's value instead.
     * 
     */
    storefrontId?: boolean | number
    /**
     * A comma separated list of tags associated with the product. Updating `tags` overwrites
     * any existing tags that were previously added to the product. To add new tags without overwriting
     * existing tags, use the [tagsAdd](https://shopify.dev/api/admin-graphql/latest/mutations/tagsadd)
     * mutation.
     * 
     */
    tags?: boolean | number
    /** The theme template used when viewing the product in a store. */
    templateSuffix?: boolean | number
    /** The title of the product. */
    title?: boolean | number
    /** The quantity of inventory in stock. */
    totalInventory?: boolean | number
    /** The number of variants that are associated with the product. */
    totalVariants?: boolean | number
    /** Whether inventory tracking has been enabled for the product. */
    tracksInventory?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /**
     * @deprecated Use `unpublishedPublications` instead.
     * The list of channels that the resource is not published to.
     */
    unpublishedChannels?: (ChannelConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of publications that the resource is not published to. */
    unpublishedPublications?: (PublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The date and time when the product was last modified.
     * A product's `updatedAt` value can change for different reasons. For example, if an order
     * is placed for a product that has inventory tracking set up, then the inventory adjustment
     * is counted as an update.
     * 
     */
    updatedAt?: boolean | number
    /** A list of variants associated with the product. */
    variants?: (ProductVariantConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductVariantSortKeys | null)} })
    /** The name of the product's vendor. */
    vendor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying product images to append. */
export interface ProductAppendImagesInput {
/** The ID of the product. */
id: Scalars['ID'],
/** A list of images to be appended to the product. */
images: ImageInput[]}


/** Return type for `productAppendImages` mutation. */
export interface ProductAppendImagesPayloadGenqlSelection{
    /** List of new images appended to the product. */
    newImages?: ImageGenqlSelection
    /** The product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The details of a specific product category within the [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt). */
export interface ProductCategoryGenqlSelection{
    /** The product taxonomy node associated with the product category. */
    productTaxonomyNode?: ProductTaxonomyNodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to use when adding a product category to a product. The [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt) contains the full list of available values. */
export interface ProductCategoryInput {
/** The ID of the node in the Shopify taxonomy that represents the product category. */
productTaxonomyNodeId: Scalars['ID']}


/** Return type for `productChangeStatus` mutation. */
export interface ProductChangeStatusPayloadGenqlSelection{
    /** The product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductChangeStatusUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `ProductChangeStatus`. */
export interface ProductChangeStatusUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Products.
 * 
 */
export interface ProductConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ProductEdgeGenqlSelection
    /** A list of the nodes contained in ProductEdge. */
    nodes?: ProductGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The price of a product in a specific country.
 * Prices vary between countries.
 * 
 */
export interface ProductContextualPricingGenqlSelection{
    /** The number of fixed quantity rules for the product's variants on the price list. */
    fixedQuantityRulesCount?: boolean | number
    /** The pricing of the variant with the highest price in the given context. */
    maxVariantPricing?: ProductVariantContextualPricingGenqlSelection
    /** The pricing of the variant with the lowest price in the given context. */
    minVariantPricing?: ProductVariantContextualPricingGenqlSelection
    /** The price range of the product with prices formatted as decimals. */
    priceRange?: ProductPriceRangeV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productCreateMedia` mutation. */
export interface ProductCreateMediaPayloadGenqlSelection{
    /** The newly created media. */
    media?: MediaGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors?: MediaUserErrorGenqlSelection
    /** The product associated with the media. */
    product?: ProductGenqlSelection
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productCreate` mutation. */
export interface ProductCreatePayloadGenqlSelection{
    /** The product object. */
    product?: ProductGenqlSelection
    /** The shop associated with the product. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productDeleteAsync` mutation. */
export interface ProductDeleteAsyncPayloadGenqlSelection{
    /** The ID of the product that was requested to be deleted. */
    deleteProductId?: boolean | number
    /** The background job that will delete the product and its associated variants and media. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productDeleteImages` mutation. */
export interface ProductDeleteImagesPayloadGenqlSelection{
    /** The array of image IDs to delete. */
    deletedImageIds?: boolean | number
    /** The product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying the product to delete. */
export interface ProductDeleteInput {
/** The ID of the product. */
id: Scalars['ID']}


/** Return type for `productDeleteMedia` mutation. */
export interface ProductDeleteMediaPayloadGenqlSelection{
    /** List of media IDs which were deleted. */
    deletedMediaIds?: boolean | number
    /** List of product image IDs which were deleted. */
    deletedProductImageIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors?: MediaUserErrorGenqlSelection
    /** The product associated with the deleted media. */
    product?: ProductGenqlSelection
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productDelete` mutation. */
export interface ProductDeletePayloadGenqlSelection{
    /** The ID of the deleted product. */
    deletedProductId?: boolean | number
    /** The shop associated with the product. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurred while setting the activation status of an inventory item. */
export interface ProductDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the product async duplicate mutation. */
export interface ProductDuplicateAsyncInput {
/** The ID of the product to be duplicated. */
productId: Scalars['ID'],
/** The new title of the product. */
newTitle: Scalars['String'],
/** The new status of the product. If no value is provided the status will be inherited from the original product. */
newStatus?: (ProductStatus | null),
/** Specifies whether or not to duplicate images. */
includeImages?: (Scalars['Boolean'] | null)}


/** Return type for `productDuplicateAsync` mutation. */
export interface ProductDuplicateAsyncPayloadGenqlSelection{
    /** The duplicated product ID. */
    duplicatedProductId?: boolean | number
    /** The asynchronous job for duplicating the products. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductDuplicateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productDuplicateAsyncV2` mutation. */
export interface ProductDuplicateAsyncV2PayloadGenqlSelection{
    /** The duplicated product ID. */
    duplicatedProductId?: boolean | number
    /** The asynchronous job for duplicating the product. */
    productDuplicateJobId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductDuplicateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a product duplication job. */
export interface ProductDuplicateJobGenqlSelection{
    /** This indicates if the job is still queued or has been run. */
    done?: boolean | number
    /** A globally-unique ID that's returned when running an asynchronous mutation. */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productDuplicate` mutation. */
export interface ProductDuplicatePayloadGenqlSelection{
    /** The asynchronous job that duplicates the product images. */
    imageJob?: JobGenqlSelection
    /** The duplicated product. */
    newProduct?: ProductGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurred while duplicating the product. */
export interface ProductDuplicateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Product and a cursor during pagination.
 * 
 */
export interface ProductEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ProductEdge. */
    node?: ProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A product feed. */
export interface ProductFeedGenqlSelection{
    /** The country of the product feed. */
    country?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The language of the product feed. */
    language?: boolean | number
    /** The status of the product feed. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ProductFeeds.
 * 
 */
export interface ProductFeedConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ProductFeedEdgeGenqlSelection
    /** A list of the nodes contained in ProductFeedEdge. */
    nodes?: ProductFeedGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productFeedCreate` mutation. */
export interface ProductFeedCreatePayloadGenqlSelection{
    /** The newly created product feed. */
    productFeed?: ProductFeedGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductFeedCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `ProductFeedCreate`. */
export interface ProductFeedCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productFeedDelete` mutation. */
export interface ProductFeedDeletePayloadGenqlSelection{
    /** The ID of the product feed that was deleted. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductFeedDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `ProductFeedDelete`. */
export interface ProductFeedDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ProductFeed and a cursor during pagination.
 * 
 */
export interface ProductFeedEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ProductFeedEdge. */
    node?: ProductFeedGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a product feed. */
export interface ProductFeedInput {
/** The language of the product feed. */
language: LanguageCode,
/** The country of the product feed. */
country: CountryCode}


/** Return type for `productFullSync` mutation. */
export interface ProductFullSyncPayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductFullSyncUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `ProductFullSync`. */
export interface ProductFullSyncUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productImageUpdate` mutation. */
export interface ProductImageUpdatePayloadGenqlSelection{
    /** The image that has been updated. */
    image?: ImageGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a product. */
export interface ProductInput {
/** The description of the product, complete with HTML formatting. */
descriptionHtml?: (Scalars['String'] | null),
/**
 * A unique, human-friendly string for the product.
 * Automatically generated from the product's title unless otherwise specified.
 * 
 */
handle?: (Scalars['String'] | null),
/**
 * Whether a redirect is required after a new handle has been provided.
 * If true, then the old handle is redirected to the new one automatically.
 * 
 */
redirectNewHandle?: (Scalars['Boolean'] | null),
/** The SEO information associated with the product. */
seo?: (SEOInput | null),
/** The product type specified by the merchant. */
productType?: (Scalars['String'] | null),
/** The standardized product type in the Shopify product taxonomy. */
standardizedProductType?: (StandardizedProductTypeInput | null),
/** The product category in the Shopify product taxonomy. */
productCategory?: (ProductCategoryInput | null),
/** The custom product type specified by the merchant. */
customProductType?: (Scalars['String'] | null),
/** A comma separated list of tags that have been added to the product. */
tags?: (Scalars['String'][] | null),
/** The theme template used when viewing the product in a store. */
templateSuffix?: (Scalars['String'] | null),
/** Whether the product is a gift card. */
giftCard?: (Scalars['Boolean'] | null),
/** The theme template used when viewing the gift card in a store. */
giftCardTemplateSuffix?: (Scalars['String'] | null),
/** The title of the product. */
title?: (Scalars['String'] | null),
/** The name of the product's vendor. */
vendor?: (Scalars['String'] | null),
/** The IDs of the collections that this product will be added to. */
collectionsToJoin?: (Scalars['ID'][] | null),
/** The IDs of collections that will no longer include the existing product. */
collectionsToLeave?: (Scalars['ID'][] | null),
/** Specifies the product to update in productUpdate or creates a new product if absent in productCreate. */
id?: (Scalars['ID'] | null),
/** The metafields to associate with this product. */
metafields?: (MetafieldInput[] | null),
/** List of custom product options (maximum of 3 per product). */
options?: (Scalars['String'][] | null),
/**
 * A list of variants associated with the product.
 * 
 */
variants?: (ProductVariantInput[] | null),
/** The status of the product. */
status?: (ProductStatus | null),
/** Whether the product can only be purchased with a selling plan (subscription). Products that are sold exclusively on subscription can only be created on online stores. If set to `true` on an already existing product, then the product will be marked unavailable on channels that don't support subscriptions. */
requiresSellingPlan?: (Scalars['Boolean'] | null)}


/** Return type for `productJoinSellingPlanGroups` mutation. */
export interface ProductJoinSellingPlanGroupsPayloadGenqlSelection{
    /** The product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productLeaveSellingPlanGroups` mutation. */
export interface ProductLeaveSellingPlanGroupsPayloadGenqlSelection{
    /** The product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The product property names. For example, "Size", "Color", and "Material".
 * Variants are selected based on permutations of these options.
 * The limit for each product property name is 255 characters.
 * 
 */
export interface ProductOptionGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The product option’s name. */
    name?: boolean | number
    /** The product option's position. */
    position?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /** The corresponding value to the product option name. */
    values?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The price range of the product. */
export interface ProductPriceRangeGenqlSelection{
    /** The highest variant's price. */
    maxVariantPrice?: MoneyV2GenqlSelection
    /** The lowest variant's price. */
    minVariantPrice?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The price range of the product. */
export interface ProductPriceRangeV2GenqlSelection{
    /** The highest variant's price. */
    maxVariantPrice?: MoneyV2GenqlSelection
    /** The lowest variant's price. */
    minVariantPrice?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the channels where a product is published. */
export interface ProductPublicationGenqlSelection{
    /** The channel where the product was or is published. */
    channel?: ChannelGenqlSelection
    /** Whether the publication is published or not. */
    isPublished?: boolean | number
    /** The product that was or is going to be published on the channel. */
    product?: ProductGenqlSelection
    /** The date that the product was or is going to be published on the channel. */
    publishDate?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ProductPublications.
 * 
 */
export interface ProductPublicationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ProductPublicationEdgeGenqlSelection
    /** A list of the nodes contained in ProductPublicationEdge. */
    nodes?: ProductPublicationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ProductPublication and a cursor during pagination.
 * 
 */
export interface ProductPublicationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ProductPublicationEdge. */
    node?: ProductPublicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying a publication to which a product will be published. */
export interface ProductPublicationInput {
/** ID of the publication. */
publicationId?: (Scalars['ID'] | null),
/** The date and time that the product was (or will be) published. */
publishDate?: (Scalars['DateTime'] | null)}


/** The input fields for specifying a product to publish and the channels to publish it to. */
export interface ProductPublishInput {
/** The product to create or update publications for. */
id: Scalars['ID'],
/** The publication that the product is published to. */
productPublications: ProductPublicationInput[]}


/** Return type for `productPublish` mutation. */
export interface ProductPublishPayloadGenqlSelection{
    /** The product that has been published. */
    product?: ProductGenqlSelection
    /**
     * @deprecated Use Product.publications instead.
     * The channels where the product is published.
     */
    productPublications?: ProductPublicationGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productReorderImages` mutation. */
export interface ProductReorderImagesPayloadGenqlSelection{
    /** The asynchronous job which reorders the images. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productReorderMedia` mutation. */
export interface ProductReorderMediaPayloadGenqlSelection{
    /** The asynchronous job which reorders the media. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors?: MediaUserErrorGenqlSelection
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Reports the status of product for a Sales Channel or Storefront API.
 * This might include why a product is not available in a Sales Channel
 * and how a merchant might fix this.
 * 
 */
export interface ProductResourceFeedbackGenqlSelection{
    /**
     * The time when the feedback was generated. Used to help determine whether
     * incoming feedback is outdated compared to existing feedback.
     * 
     */
    feedbackGeneratedAt?: boolean | number
    /** The feedback messages presented to the merchant. */
    messages?: boolean | number
    /** The ID of the product associated with the feedback. */
    productId?: boolean | number
    /** The timestamp of the product associated with the feedback. */
    productUpdatedAt?: boolean | number
    /** Conveys the state of the feedback and whether it requires merchant action or not. */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields used to create a product feedback. */
export interface ProductResourceFeedbackInput {
/** The ID of the product that the feedback was created on. */
productId: Scalars['ID'],
/** Whether the merchant needs to take action on the product. */
state: ResourceFeedbackState,
/**
 * The date and time when the payload is constructed.
 * Used to help determine whether incoming feedback is outdated compared to feedback already received, and if it should be ignored upon arrival.
 * 
 */
feedbackGeneratedAt: Scalars['DateTime'],
/** The timestamp of the product associated with the feedback. */
productUpdatedAt: Scalars['DateTime'],
/**
 * A concise set of copy strings to be displayed to merchants. Used to guide merchants in resolving problems that your app encounters when trying to make use of their products.
 * You can specify up to four messages. Each message is limited to 100 characters.
 * 
 */
messages?: (Scalars['String'][] | null)}


/** A sale associated with a product. */
export interface ProductSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line item for the associated sale. */
    lineItem?: LineItemGenqlSelection
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt) node. */
export interface ProductTaxonomyNodeGenqlSelection{
    /** The full name of the product taxonomy node. For example,  Animals & Pet Supplies > Pet Supplies > Dog Supplies > Dog Beds. */
    fullName?: boolean | number
    /** The ID of the product taxonomy node. */
    id?: boolean | number
    /** Whether the node is a leaf node. */
    isLeaf?: boolean | number
    /** Whether the node is a root node. */
    isRoot?: boolean | number
    /** The name of the product taxonomy node. For example, Dog Beds. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for specifying a product to unpublish from a channel and the sales channels to unpublish it from.
 * 
 */
export interface ProductUnpublishInput {
/** The ID of the product to create or update publications for. */
id: Scalars['ID'],
/** The channels to unpublish the product from. */
productPublications: ProductPublicationInput[]}


/** Return type for `productUnpublish` mutation. */
export interface ProductUnpublishPayloadGenqlSelection{
    /** The product that has been unpublished. */
    product?: ProductGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productUpdateMedia` mutation. */
export interface ProductUpdateMediaPayloadGenqlSelection{
    /** The updated media object. */
    media?: MediaGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    mediaUserErrors?: MediaUserErrorGenqlSelection
    /** The product on which media was updated. */
    product?: ProductGenqlSelection
    /**
     * @deprecated Use `mediaUserErrors` instead.
     * The list of errors that occurred from executing the mutation.
     */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productUpdate` mutation. */
export interface ProductUpdatePayloadGenqlSelection{
    /** The updated product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a product variant. */
export interface ProductVariantGenqlSelection{
    /** Whether the product variant is available for sale. */
    availableForSale?: boolean | number
    /** The value of the barcode associated with the product. */
    barcode?: boolean | number
    /** The compare-at price of the variant in the default shop currency. */
    compareAtPrice?: boolean | number
    /** The pricing that applies for a customer in a given context. */
    contextualPricing?: (ProductVariantContextualPricingGenqlSelection & { __args: {
    /** The context used to generate contextual pricing for the variant. */
    context: ContextualPricingContext} })
    /** The date and time when the variant was created. */
    createdAt?: boolean | number
    /**
     * A default cursor that returns the single next record, sorted ascending by ID.
     * 
     */
    defaultCursor?: boolean | number
    /** The delivery profile for the variant. */
    deliveryProfile?: DeliveryProfileGenqlSelection
    /** Display name of the variant, based on product's title + variant's title. */
    displayName?: boolean | number
    /**
     * @deprecated  The [relationship between a product variant and a fulfillment service was changed in the `2022-07` API version](/changelog/fulfillment-service-sku-sharing). A [ProductVariant](/api/admin-graphql/latest/objects/ProductVariant) can be stocked by multiple fulfillment services. As a result, we recommend that you use the [inventoryItem field](/api/admin-graphql/latest/objects/ProductVariant#field-productvariant-inventoryitem) if you need to determine where a product variant is stocked.  If you need to determine whether a product is a gift card, then you should continue to use this field until an alternative is available.  Learn more about [managing inventory quantities and states](/apps/fulfillment/inventory-management-apps/quantities-states). 
     * The fulfillment service that stocks a product variant.
     * 
     * This is a third-party fulfillment service if the following conditions are met:
     * - The product variant is stocked by a single fulfillment service.
     * - The [FulfillmentService](/api/admin-graphql/latest/objects/FulfillmentService) is a third-party fulfillment service. Third-party fulfillment services don't have a handle with the value `manual`.
     * - The fulfillment service has not [opted into SKU sharing](/api/admin-graphql/latest/objects/FulfillmentService#field-fulfillmentservice-permitsskusharing).
     * 
     * If the conditions aren't met, then the fulfillment service has the `manual` handle.
     * 
     */
    fulfillmentService?: FulfillmentServiceGenqlSelection
    /** Whether changes to the fulfillment service for the product variant are allowed. */
    fulfillmentServiceEditable?: EditablePropertyGenqlSelection
    /**
     * @deprecated Use `InventoryItem.harmonizedSystemCode` instead.
     * The Harmonized System Code (or HS Tariff Code) for the variant.
     */
    harmonizedSystemCode?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The featured image for the variant. */
    image?: ImageGenqlSelection
    /** The inventory item, which is used to query for inventory information. */
    inventoryItem?: InventoryItemGenqlSelection
    /**
     * @deprecated Use tracked attribute on `inventoryItem` instead.
     * The fulfillment service that tracks the number of items in stock for the product variant.
     */
    inventoryManagement?: boolean | number
    /** Whether customers are allowed to place an order for the product variant when it's out of stock. */
    inventoryPolicy?: boolean | number
    /** The total sellable quantity of the variant. */
    inventoryQuantity?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The media associated with the product variant. */
    media?: (MediaConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definitions by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter by the definition's pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * The order of the product variant in the list of product variants. The first position in the list is 1.
     * 
     */
    position?: boolean | number
    /**
     * @deprecated Use `contextualPricing` instead.
     * List of prices and compare-at prices in the presentment currencies for this shop.
     */
    presentmentPrices?: (ProductVariantPricePairConnectionGenqlSelection & { __args?: {
    /** The presentment currencies prices should return in. */
    presentmentCurrencies?: (CurrencyCode[] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The price of the product variant in the default shop currency. */
    price?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The product that this variant belongs to. */
    product?: ProductGenqlSelection
    /** A list of the product variant components. */
    productVariantComponents?: (ProductVariantComponentConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * Whether a product variant requires components. The default value is `false`.
     * If `true`, then the product variant can only be purchased as a parent bundle with components and it will be omitted
     * from channels that don't support bundles.
     * 
     */
    requiresComponents?: boolean | number
    /**
     * @deprecated Use `InventoryItem.requiresShipping` instead.
     * Whether a customer needs to provide a shipping address when placing an order for the product variant.
     * 
     */
    requiresShipping?: boolean | number
    /** List of product options applied to the variant. */
    selectedOptions?: SelectedOptionGenqlSelection
    /**
     * The total sellable quantity of the variant for online channels.
     * This doesn't represent the total available inventory or capture
     * [limitations based on customer location](https://help.shopify.com/manual/markets/inventory_and_fulfillment).
     * 
     */
    sellableOnlineQuantity?: boolean | number
    /** Count of selling plan groups associated with the product variant. */
    sellingPlanGroupCount?: boolean | number
    /** A list of all selling plan groups defined in the current shop associated with the product variant. */
    sellingPlanGroups?: (SellingPlanGroupConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * A case-sensitive identifier for the product variant in the shop.
     * Required in order to connect to a fulfillment service.
     * 
     */
    sku?: boolean | number
    /**
     * @deprecated Use `id` instead.
     * The Storefront GraphQL API ID of the `ProductVariant`.
     * 
     * As of the `2022-04` version release, the Storefront GraphQL API will no longer return Base64 encoded IDs to match the behavior of the Admin GraphQL API. Therefore, you can safely use the `id` field's value instead.
     * 
     */
    storefrontId?: boolean | number
    /** The tax code for the product variant. */
    taxCode?: boolean | number
    /** Whether a tax is charged when the product variant is sold. */
    taxable?: boolean | number
    /** The title of the product variant. */
    title?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /**
     * The date and time (ISO 8601 format) when the product variant was last modified.
     * 
     */
    updatedAt?: boolean | number
    /** The weight of the product variant in the unit system specified with weight_unit. */
    weight?: boolean | number
    /**
     * The unit of measurement that applies to the product variant's weight. If you don't specify a value for weight_unit, then the shop's default unit of measurement is applied. Valid values: `g`, `kg`, `oz`, `lb`.
     * 
     */
    weightUnit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to append media to a single variant. */
export interface ProductVariantAppendMediaInput {
/** Specifies the variant to which media will be appended. */
variantId: Scalars['ID'],
/** Specifies the media to append to the variant. */
mediaIds: Scalars['ID'][]}


/** Return type for `productVariantAppendMedia` mutation. */
export interface ProductVariantAppendMediaPayloadGenqlSelection{
    /** The product associated with the variants and media. */
    product?: ProductGenqlSelection
    /** The product variants that were updated. */
    productVariants?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MediaUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A product variant component associated with a product variant. */
export interface ProductVariantComponentGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The product variant associated with the component. */
    productVariant?: ProductVariantGenqlSelection
    /** The required quantity of the component. */
    quantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ProductVariantComponents.
 * 
 */
export interface ProductVariantComponentConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ProductVariantComponentEdgeGenqlSelection
    /** A list of the nodes contained in ProductVariantComponentEdge. */
    nodes?: ProductVariantComponentGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ProductVariantComponent and a cursor during pagination.
 * 
 */
export interface ProductVariantComponentEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ProductVariantComponentEdge. */
    node?: ProductVariantComponentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ProductVariants.
 * 
 */
export interface ProductVariantConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ProductVariantEdgeGenqlSelection
    /** A list of the nodes contained in ProductVariantEdge. */
    nodes?: ProductVariantGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The price of a product variant in a specific country.
 * Prices vary between countries.
 * 
 */
export interface ProductVariantContextualPricingGenqlSelection{
    /** The final compare-at price after all adjustments are applied. */
    compareAtPrice?: MoneyV2GenqlSelection
    /** The final price after all adjustments are applied. */
    price?: MoneyV2GenqlSelection
    /** The quantity rule applied for a given context. */
    quantityRule?: QuantityRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantCreate` mutation. */
export interface ProductVariantCreatePayloadGenqlSelection{
    /** The product associated with the variant. */
    product?: ProductGenqlSelection
    /** The successfully created variant. */
    productVariant?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantDelete` mutation. */
export interface ProductVariantDeletePayloadGenqlSelection{
    /** The ID of the deleted product variant. */
    deletedProductVariantId?: boolean | number
    /** The product associated with the deleted product variant. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to detach media from a single variant. */
export interface ProductVariantDetachMediaInput {
/** Specifies the variant from which media will be detached. */
variantId: Scalars['ID'],
/** Specifies the media to detach from the variant. */
mediaIds: Scalars['ID'][]}


/** Return type for `productVariantDetachMedia` mutation. */
export interface ProductVariantDetachMediaPayloadGenqlSelection{
    /** The product associated with the variants and media. */
    product?: ProductGenqlSelection
    /** The product variants that were updated. */
    productVariants?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MediaUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ProductVariant and a cursor during pagination.
 * 
 */
export interface ProductVariantEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ProductVariantEdge. */
    node?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the bundle components for core. */
export interface ProductVariantGroupRelationshipInput {
/** The ID of the product variant that is a component of the bundle. */
id: Scalars['ID'],
/** The number of units of the product variant required to construct one unit of the bundle. */
quantity: Scalars['Int']}


/** The input fields for specifying a product variant to create or update. */
export interface ProductVariantInput {
/**
 * Whether a product variant requires components. The default value is `false`.
 * If `true`, then the product variant can only be purchased as a parent bundle with components and it will be omitted
 * from channels that don't support bundles.
 * 
 */
requiresComponents?: (Scalars['Boolean'] | null),
/** The value of the barcode associated with the product. */
barcode?: (Scalars['String'] | null),
/** The compare-at price of the variant. */
compareAtPrice?: (Scalars['Money'] | null),
/** The Harmonized System code (or HS Tariff code) for the variant. */
harmonizedSystemCode?: (Scalars['String'] | null),
/** Specifies the product variant to update or create a new variant if absent. */
id?: (Scalars['ID'] | null),
/** The ID of the media to associate with the variant. This field can only be used in mutations that create media images and must match one of the IDs being created on the product. This field only accepts one value. */
mediaId?: (Scalars['ID'] | null),
/** The URL of the media to associate with the variant. This field can only be used in mutations that create media images and must match one of the URLs being created on the product. This field only accepts one value. */
mediaSrc?: (Scalars['String'][] | null),
/** Whether customers are allowed to place an order for the product variant when it's out of stock. */
inventoryPolicy?: (ProductVariantInventoryPolicy | null),
/** The inventory quantities at each location where the variant is stocked. Used as input only to the `productVariantCreate` mutation. */
inventoryQuantities?: (InventoryLevelInput[] | null),
/** The inventory item associated with the variant. Used for unit cost. */
inventoryItem?: (InventoryItemInput | null),
/** Additional customizable information about the product variant. */
metafields?: (MetafieldInput[] | null),
/** The custom properties that a shop owner uses to define product variants. */
options?: (Scalars['String'][] | null),
/**
 * The order of the product variant in the list of product variants. The first position in the list is 1.
 * 
 */
position?: (Scalars['Int'] | null),
/** The price of the variant. */
price?: (Scalars['Money'] | null),
/** The product to create the variant for. Used as input only to the `productVariantCreate` mutation. */
productId?: (Scalars['ID'] | null),
/** Whether the variant requires shipping. */
requiresShipping?: (Scalars['Boolean'] | null),
/** The SKU for the variant. Case-sensitive string. */
sku?: (Scalars['String'] | null),
/** Whether the variant is taxable. */
taxable?: (Scalars['Boolean'] | null),
/** The tax code associated with the variant. */
taxCode?: (Scalars['String'] | null),
/** The weight of the variant. */
weight?: (Scalars['Float'] | null),
/** The unit of weight that's used to measure the variant. */
weightUnit?: (WeightUnit | null)}


/** Return type for `productVariantJoinSellingPlanGroups` mutation. */
export interface ProductVariantJoinSellingPlanGroupsPayloadGenqlSelection{
    /** The product variant object. */
    productVariant?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantLeaveSellingPlanGroups` mutation. */
export interface ProductVariantLeaveSellingPlanGroupsPayloadGenqlSelection{
    /** The product variant object. */
    productVariant?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields representing a product variant position. */
export interface ProductVariantPositionInput {
/** Specifies the ID of the product variant to update. */
id: Scalars['ID'],
/** The order of the product variant in the list of product variants. The first position in the list is 1. */
position: Scalars['Int']}


/**
 * The compare-at price and price of a variant sharing a currency.
 * 
 */
export interface ProductVariantPricePairGenqlSelection{
    /** The compare-at price of the variant with associated currency. */
    compareAtPrice?: MoneyV2GenqlSelection
    /** The price of the variant with associated currency. */
    price?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ProductVariantPricePairs.
 * 
 */
export interface ProductVariantPricePairConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ProductVariantPricePairEdgeGenqlSelection
    /** A list of the nodes contained in ProductVariantPricePairEdge. */
    nodes?: ProductVariantPricePairGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ProductVariantPricePair and a cursor during pagination.
 * 
 */
export interface ProductVariantPricePairEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ProductVariantPricePairEdge. */
    node?: ProductVariantPricePairGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantRelationshipBulkUpdate` mutation. */
export interface ProductVariantRelationshipBulkUpdatePayloadGenqlSelection{
    /** The product variants with successfully updated product variant relationships. */
    parentProductVariants?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductVariantRelationshipBulkUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `ProductVariantRelationshipBulkUpdate`. */
export interface ProductVariantRelationshipBulkUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for updating a composite product variant. */
export interface ProductVariantRelationshipUpdateInput {
/** The product variant ID representing that which contains the relationships with other variants. */
parentProductVariantId?: (Scalars['ID'] | null),
/** A product ID which contains product variants that have relationships with other variants. */
parentProductId?: (Scalars['ID'] | null),
/** The product variants and associated quantitites to add to the product variant. */
productVariantRelationshipsToCreate?: (ProductVariantGroupRelationshipInput[] | null),
/** The product variants and associated quantitites to update in specified product variant. */
productVariantRelationshipsToUpdate?: (ProductVariantGroupRelationshipInput[] | null),
/** The bundle component product variants to be removed from the product variant. */
productVariantRelationshipsToRemove?: (Scalars['ID'][] | null),
/** Whether to remove all components from the product variant. The default value is `false`. */
removeAllProductVariantRelationships?: (Scalars['Boolean'] | null),
/** Method in which to update the price of the parent product variant. */
priceInput?: (PriceInput | null)}


/** Return type for `productVariantUpdate` mutation. */
export interface ProductVariantUpdatePayloadGenqlSelection{
    /** The product associated with the variant. */
    product?: ProductGenqlSelection
    /** The updated variant. */
    productVariant?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantsBulkCreate` mutation. */
export interface ProductVariantsBulkCreatePayloadGenqlSelection{
    /** The updated product object. */
    product?: ProductGenqlSelection
    /** The newly created variants. */
    productVariants?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductVariantsBulkCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed product variant bulk create mutations. */
export interface ProductVariantsBulkCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantsBulkDelete` mutation. */
export interface ProductVariantsBulkDeletePayloadGenqlSelection{
    /** The updated product object. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductVariantsBulkDeleteUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed bulk variant delete mutations. */
export interface ProductVariantsBulkDeleteUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying a product variant to create as part of a variant bulk mutation. */
export interface ProductVariantsBulkInput {
/** The value of the barcode associated with the product variant. */
barcode?: (Scalars['String'] | null),
/** The compare-at price of the variant. */
compareAtPrice?: (Scalars['Money'] | null),
/** The Harmonized System code (or HS Tariff code) for the variant. */
harmonizedSystemCode?: (Scalars['String'] | null),
/** Specifies the product variant to update or delete. */
id?: (Scalars['ID'] | null),
/** The URL of the media to associate with the variant. */
mediaSrc?: (Scalars['String'][] | null),
/** Whether customers are allowed to place an order for the variant when it's out of stock. */
inventoryPolicy?: (ProductVariantInventoryPolicy | null),
/**
 * The inventory quantities at each location where the variant is stocked. The number of elements
 * in the array of inventory quantities cannot exceed 10 and the amount specified for the plan. Used as input only to the `productVariantCreate` mutation.
 * 
 */
inventoryQuantities?: (InventoryLevelInput[] | null),
/** The inventory item associated with the variant, used for unit cost. */
inventoryItem?: (InventoryItemInput | null),
/** The ID of the media that's associated with the variant. */
mediaId?: (Scalars['ID'] | null),
/** The additional customizable information about the product variant. */
metafields?: (MetafieldInput[] | null),
/** The custom properties that a shop owner uses to define product variants. */
options?: (Scalars['String'][] | null),
/** The price of the variant. */
price?: (Scalars['Money'] | null),
/** Whether the variant requires shipping. */
requiresShipping?: (Scalars['Boolean'] | null),
/** The SKU for the variant. */
sku?: (Scalars['String'] | null),
/** Whether the variant is taxable. */
taxable?: (Scalars['Boolean'] | null),
/** The tax code associated with the variant. */
taxCode?: (Scalars['String'] | null),
/** The weight of the variant. */
weight?: (Scalars['Float'] | null),
/** The unit of weight that's used to measure the variant. */
weightUnit?: (WeightUnit | null)}


/** Return type for `productVariantsBulkReorder` mutation. */
export interface ProductVariantsBulkReorderPayloadGenqlSelection{
    /** The updated product. */
    product?: ProductGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductVariantsBulkReorderUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed bulk product variants reorder operation. */
export interface ProductVariantsBulkReorderUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `productVariantsBulkUpdate` mutation. */
export interface ProductVariantsBulkUpdatePayloadGenqlSelection{
    /** The updated product object. */
    product?: ProductGenqlSelection
    /** The updated variants. */
    productVariants?: ProductVariantGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ProductVariantsBulkUpdateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Error codes for failed variant bulk update mutations. */
export interface ProductVariantsBulkUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `pubSubServerPixelUpdate` mutation. */
export interface PubSubServerPixelUpdatePayloadGenqlSelection{
    /** The server pixel as configured by the mutation. */
    serverPixel?: ServerPixelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsServerPixelUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `pubSubWebhookSubscriptionCreate` mutation. */
export interface PubSubWebhookSubscriptionCreatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PubSubWebhookSubscriptionCreateUserErrorGenqlSelection
    /** The webhook subscription that was created. */
    webhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `PubSubWebhookSubscriptionCreate`. */
export interface PubSubWebhookSubscriptionCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a PubSub webhook subscription.
 * 
 */
export interface PubSubWebhookSubscriptionInput {
/** The Pub/Sub project ID. */
pubSubProject: Scalars['String'],
/** The Pub/Sub topic ID. */
pubSubTopic: Scalars['String'],
/** The format in which the webhook subscription should send the data. */
format?: (WebhookSubscriptionFormat | null),
/** The list of fields to be included in the webhook subscription. */
includeFields?: (Scalars['String'][] | null),
/** The list of namespaces for any metafields that should be included in the webhook subscription. */
metafieldNamespaces?: (Scalars['String'][] | null)}


/** Return type for `pubSubWebhookSubscriptionUpdate` mutation. */
export interface PubSubWebhookSubscriptionUpdatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PubSubWebhookSubscriptionUpdateUserErrorGenqlSelection
    /** The webhook subscription that was updated. */
    webhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `PubSubWebhookSubscriptionUpdate`. */
export interface PubSubWebhookSubscriptionUpdateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A publication is a group of products and collections that is published to an app.
 * 
 */
export interface PublicationGenqlSelection{
    /**
     * @deprecated Use [AppCatalog.apps](https://shopify.dev/api/admin-graphql/unstable/objects/AppCatalog#connection-appcatalog-apps) instead.
     * The app associated with the publication.
     */
    app?: AppGenqlSelection
    /** Whether new products are automatically published to this publication. */
    autoPublish?: boolean | number
    /** The catalog associated with the publication. */
    catalog?: CatalogGenqlSelection
    /** The collection publications for the list of collections published to the publication. */
    collectionPublicationsV3?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of collections published to the publication. */
    collections?: (CollectionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Whether the collection is available to the publication. */
    hasCollection?: { __args: {
    /** Collection ID to check. */
    id: Scalars['ID']} }
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * @deprecated Use [Catalog.title](https://shopify.dev/api/admin-graphql/unstable/interfaces/Catalog#field-catalog-title) instead.
     * Name of the publication.
     */
    name?: boolean | number
    /** A background operation associated with this publication. */
    operation?: PublicationOperationGenqlSelection
    /** The product publications for the list of products published to the publication. */
    productPublicationsV3?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of products published to the publication. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Whether the publication supports future publishing. */
    supportsFuturePublishing?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Publications.
 * 
 */
export interface PublicationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: PublicationEdgeGenqlSelection
    /** A list of the nodes contained in PublicationEdge. */
    nodes?: PublicationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for creating a publication. */
export interface PublicationCreateInput {
/** The ID of the catalog. */
catalogId?: (Scalars['ID'] | null),
/** Whether to create an empty publication or prepopulate it with all products. */
defaultState?: (PublicationCreateInputPublicationDefaultState | null),
/** Whether to automatically add newly created products to this publication. */
autoPublish?: (Scalars['Boolean'] | null)}


/** Return type for `publicationCreate` mutation. */
export interface PublicationCreatePayloadGenqlSelection{
    /** The publication that's been created. */
    publication?: PublicationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PublicationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `publicationDelete` mutation. */
export interface PublicationDeletePayloadGenqlSelection{
    /** The ID of the publication that was deleted. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PublicationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Publication and a cursor during pagination.
 * 
 */
export interface PublicationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of PublicationEdge. */
    node?: PublicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to publish a resource. */
export interface PublicationInput {
/** ID of the publication. */
publicationId?: (Scalars['ID'] | null),
/**
 * The date and time that the resource was published. Setting this to a date in the future will schedule the resource to be published. Only online store channels support future publishing. This field has no effect if you include it in the `publishableUnpublish` mutation.
 * 
 */
publishDate?: (Scalars['DateTime'] | null)}


/** The possible types of publication operations. */
export interface PublicationOperationGenqlSelection{
    on_AddAllProductsOperation?:AddAllProductsOperationGenqlSelection,
    on_CatalogCsvOperation?:CatalogCsvOperationGenqlSelection,
    on_PublicationResourceOperation?:PublicationResourceOperationGenqlSelection,
    on_Node?: NodeGenqlSelection,
    on_ResourceOperation?: ResourceOperationGenqlSelection,
    __typename?: boolean | number
}


/** A bulk update operation on a publication. */
export interface PublicationResourceOperationGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: boolean | number
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCountGenqlSelection
    /** The status of this operation. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for updating a publication. */
export interface PublicationUpdateInput {
/** A list of publishable IDs to add. The maximum number of publishables to update simultaneously is 50. */
publishablesToAdd?: (Scalars['ID'][] | null),
/** A list of publishable IDs to remove. The maximum number of publishables to update simultaneously is 50. */
publishablesToRemove?: (Scalars['ID'][] | null),
/** Whether new products should be automatically published to the publication. */
autoPublish?: (Scalars['Boolean'] | null)}


/** Return type for `publicationUpdate` mutation. */
export interface PublicationUpdatePayloadGenqlSelection{
    /** The publication that's been updated. */
    publication?: PublicationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: PublicationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Defines errors encountered while managing a publication.
 * 
 */
export interface PublicationUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a resource that can be published to a channel.
 * A publishable resource can be either a Product or Collection.
 * 
 */
export interface PublishableGenqlSelection{
    /** The number of publications a resource is published to without feedback errors. */
    availablePublicationCount?: boolean | number
    /** The number of publications a resource is published on. */
    publicationCount?: { __args: {
    /** Include only the resource's publications that are published. If false, then return all the resource's publications including future publications. */
    onlyPublished?: (Scalars['Boolean'] | null)} } | boolean | number
    /**
     * @deprecated Use `publishedOnPublication` instead.
     * Check to see whether the resource is published to a given channel.
     */
    publishedOnChannel?: { __args: {
    /** The ID of the channel to check. */
    channelId: Scalars['ID']} }
    /**
     * @deprecated Use `publishedOnCurrentPublication` instead.
     * Check to see whether the resource is published to the calling app's channel.
     */
    publishedOnCurrentChannel?: boolean | number
    /** Check to see whether the resource is published to the calling app's publication. */
    publishedOnCurrentPublication?: boolean | number
    /** Check to see whether the resource is published to a given publication. */
    publishedOnPublication?: { __args: {
    /** The ID of the publication to check. */
    publicationId: Scalars['ID']} }
    /** The list of resources that are published to a publication. */
    resourcePublications?: (ResourcePublicationConnectionGenqlSelection & { __args?: {
    /**
     * Whether to return only the resources that are currently published. If false, then also returns the resources that are scheduled to be published.
     * 
     */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of resources that are either published or staged to be published to a publication. */
    resourcePublicationsV2?: (ResourcePublicationV2ConnectionGenqlSelection & { __args?: {
    /**
     * Whether to return only the resources that are currently published. If false, then also returns the resources that are scheduled or staged to be published.
     * 
     */
    onlyPublished?: (Scalars['Boolean'] | null), 
    /** Filter publications by catalog type. */
    catalogType?: (CatalogType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `unpublishedPublications` instead.
     * The list of channels that the resource is not published to.
     */
    unpublishedChannels?: (ChannelConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of publications that the resource is not published to. */
    unpublishedPublications?: (PublicationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    on_Collection?: CollectionGenqlSelection
    on_Product?: ProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `publishablePublish` mutation. */
export interface PublishablePublishPayloadGenqlSelection{
    /** Resource that has been published. */
    publishable?: PublishableGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `publishablePublishToCurrentChannel` mutation. */
export interface PublishablePublishToCurrentChannelPayloadGenqlSelection{
    /** Resource that has been published. */
    publishable?: PublishableGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `publishableUnpublish` mutation. */
export interface PublishableUnpublishPayloadGenqlSelection{
    /** Resource that has been unpublished. */
    publishable?: PublishableGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `publishableUnpublishToCurrentChannel` mutation. */
export interface PublishableUnpublishToCurrentChannelPayloadGenqlSelection{
    /** Resource that has been unpublished. */
    publishable?: PublishableGenqlSelection
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents information about the purchasing company for the order or draft order.
 * 
 */
export interface PurchasingCompanyGenqlSelection{
    /** The company associated to the order or draft order. */
    company?: CompanyGenqlSelection
    /** The company contact associated to the order or draft order. */
    contact?: CompanyContactGenqlSelection
    /** The company location associated to the order or draft order. */
    location?: CompanyLocationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a purchasing company, which is a combination of company, company contact, and company location.
 * 
 */
export interface PurchasingCompanyInput {
/** ID of the company. */
companyId: Scalars['ID'],
/** ID of the company contact. */
companyContactId: Scalars['ID'],
/** ID of the company location. */
companyLocationId: Scalars['ID']}


/**
 * Represents information about the purchasing entity for the order or draft order.
 * 
 */
export interface PurchasingEntityGenqlSelection{
    on_Customer?:CustomerGenqlSelection,
    on_PurchasingCompany?:PurchasingCompanyGenqlSelection,
    on_CommentEventSubject?: CommentEventSubjectGenqlSelection,
    on_HasEvents?: HasEventsGenqlSelection,
    on_HasMetafieldDefinitions?: HasMetafieldDefinitionsGenqlSelection,
    on_HasMetafields?: HasMetafieldsGenqlSelection,
    on_LegacyInteroperability?: LegacyInteroperabilityGenqlSelection,
    on_Node?: NodeGenqlSelection,
    __typename?: boolean | number
}


/** The input fields for a purchasing entity. Can either be a customer or a purchasing company. */
export interface PurchasingEntityInput {
/** Represents a customer. Null if there is a purchasing company. */
customerId?: (Scalars['ID'] | null),
/** Represents a purchasing company. Null if there is a customer. */
purchasingCompany?: (PurchasingCompanyInput | null)}


/**
 * The quantity rule for the product variant in a given context.
 * 
 */
export interface QuantityRuleGenqlSelection{
    /**
     * The value that specifies the quantity increment between minimum and maximum of the rule.
     * Only quantities divisible by this value will be considered valid.
     * 
     * The increment must be lower than or equal to the minimum and the maximum, and both minimum and maximum
     * must be divisible by this value.
     * 
     */
    increment?: boolean | number
    /** Whether the quantity rule fields match one increment, one minimum and no maximum. */
    isDefault?: boolean | number
    /**
     * An optional value that defines the highest allowed quantity purchased by the customer.
     * If defined, maximum must be lower than or equal to the minimum and must be a multiple of the increment.
     * 
     */
    maximum?: boolean | number
    /**
     * The value that defines the lowest allowed quantity purchased by the customer.
     * The minimum must be a multiple of the quantity rule's increment.
     * 
     */
    minimum?: boolean | number
    /** Whether the values of the quantity rule were explicitly set. */
    originType?: boolean | number
    /** The product variant for which the quantity rule is applied. */
    productVariant?: ProductVariantGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple QuantityRules.
 * 
 */
export interface QuantityRuleConnectionGenqlSelection{
    /** A list of edges. */
    edges?: QuantityRuleEdgeGenqlSelection
    /** A list of the nodes contained in QuantityRuleEdge. */
    nodes?: QuantityRuleGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /** The total count of QuantityRules. Note: The maximum count limit is 10000. */
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one QuantityRule and a cursor during pagination.
 * 
 */
export interface QuantityRuleEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of QuantityRuleEdge. */
    node?: QuantityRuleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the per-order quantity rule to be applied on the product variant.
 * 
 */
export interface QuantityRuleInput {
/** The quantity increment. */
increment: Scalars['Int'],
/** The maximum quantity. */
maximum?: (Scalars['Int'] | null),
/** The minimum quantity. */
minimum: Scalars['Int'],
/** Product variant on which to apply the quantity rule. */
variantId: Scalars['ID']}


/**
 * An error for a failed quantity rule operation.
 * 
 */
export interface QuantityRuleUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `quantityRulesAdd` mutation. */
export interface QuantityRulesAddPayloadGenqlSelection{
    /** The list of quantity rules that were added to or updated in the price list. */
    quantityRules?: QuantityRuleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: QuantityRuleUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `quantityRulesDelete` mutation. */
export interface QuantityRulesDeletePayloadGenqlSelection{
    /**
     * A list of product variant IDs whose quantity rules were removed from the price list.
     * 
     */
    deletedQuantityRulesVariantIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: QuantityRuleUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The schema's entry-point for queries. This acts as the public, top-level API from which all queries must start. */
export interface QueryRootGenqlSelection{
    /** Returns an abandonment by ID. */
    abandonment?: (AbandonmentGenqlSelection & { __args: {
    /** The ID of the Abandonment to return. */
    id: Scalars['ID']} })
    /** Returns an Abandonment by the Abandoned Checkout ID. */
    abandonmentByAbandonedCheckoutId?: (AbandonmentGenqlSelection & { __args: {
    /** The ID of the Abandoned Checkout ID to query by. */
    abandonedCheckoutId: Scalars['ID']} })
    /** Lookup an App by ID or return the currently authenticated App. */
    app?: (AppGenqlSelection & { __args?: {
    /** The ID to lookup the App by. */
    id?: (Scalars['ID'] | null)} })
    /**
     * Fetches app by handle.
     * Returns null if the app doesn't exist.
     * 
     */
    appByHandle?: (AppGenqlSelection & { __args: {
    /** Handle of the App. */
    handle: Scalars['String']} })
    /**
     * Fetches an app by its client ID.
     * Returns null if the app doesn't exist.
     * 
     */
    appByKey?: (AppGenqlSelection & { __args: {
    /** Client ID of the app. */
    apiKey: Scalars['String']} })
    /**
     * An app discount type.
     * 
     */
    appDiscountType?: (AppDiscountTypeGenqlSelection & { __args: {
    /** The ID for the function providing the app discount type. */
    functionId: Scalars['String']} })
    /**
     * A list of app discount types installed by apps.
     * 
     */
    appDiscountTypes?: AppDiscountTypeGenqlSelection
    /** Lookup an AppInstallation by ID or return the AppInstallation for the currently authenticated App. */
    appInstallation?: (AppInstallationGenqlSelection & { __args?: {
    /** ID used to lookup AppInstallation. */
    id?: (Scalars['ID'] | null)} })
    /** List of app installations. */
    appInstallations?: (AppInstallationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AppInstallationSortKeys | null), 
    /** The category of app installations to fetch. */
    category?: (AppInstallationCategory | null), 
    /** The privacy level of app installations to fetch. */
    privacy?: (AppInstallationPrivacy | null)} })
    /**
     * @deprecated Use `automaticDiscountNode` instead.
     * Returns an automatic discount resource by ID.
     */
    automaticDiscount?: (DiscountAutomaticGenqlSelection & { __args: {
    /** The ID of the DiscountAutomatic to return. */
    id: Scalars['ID']} })
    /** Returns an automatic discount resource by ID. */
    automaticDiscountNode?: (DiscountAutomaticNodeGenqlSelection & { __args: {
    /** The ID of the DiscountAutomaticNode to return. */
    id: Scalars['ID']} })
    /** List of automatic discounts. */
    automaticDiscountNodes?: (DiscountAutomaticNodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AutomaticDiscountSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `status`
     *  - `type`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** List of the shop's automatic discount saved searches. */
    automaticDiscountSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `automaticDiscountNodes` instead.
     * List of automatic discounts.
     */
    automaticDiscounts?: (DiscountAutomaticConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (AutomaticDiscountSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `status`
     *  - `type`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Returns a list of activated carrier services and associated shop locations that support them. */
    availableCarrierServices?: DeliveryCarrierServiceAndLocationsGenqlSelection
    /** A list of available locales. */
    availableLocales?: LocaleGenqlSelection
    /** Returns a `DeliveryCarrierService` object by ID. */
    carrierService?: (DeliveryCarrierServiceGenqlSelection & { __args: {
    /** The ID of the DeliveryCarrierService to return. */
    id: Scalars['ID']} })
    /** List of Cart transform objects owned by the current API client. */
    cartTransforms?: (CartTransformConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a Catalog resource by ID. */
    catalog?: (CatalogGenqlSelection & { __args: {
    /** The ID of the Catalog to return. */
    id: Scalars['ID']} })
    /** Returns the most recent catalog operations for the shop. */
    catalogOperations?: ResourceOperationGenqlSelection
    /** The catalogs belonging to the shop. */
    catalogs?: (CatalogConnectionGenqlSelection & { __args: {
    /** The type of the catalogs to be returned. */
    type?: (CatalogType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CatalogSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `app_id`
     *  - `company_id`
     *  - `company_location_id`
     *  - `managed_country_id`
     *  - `market_id`
     *  - `status`
     *  - `title`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * @deprecated Use `publication` instead.
     * Lookup a channel by ID.
     */
    channel?: (ChannelGenqlSelection & { __args: {
    /** The ID of the Channel to return. */
    id: Scalars['ID']} })
    /**
     * @deprecated Use `publications` instead.
     * List of the active sales channels.
     */
    channels?: (ChannelConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A checkout profile on a shop. */
    checkoutProfile?: (CheckoutProfileGenqlSelection & { __args: {
    /** The ID of the checkout profile. */
    id: Scalars['ID']} })
    /** List of checkout profiles on a shop. */
    checkoutProfiles?: (CheckoutProfileConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CheckoutProfileSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `is_published`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a code discount resource by ID. */
    codeDiscountNode?: (DiscountCodeNodeGenqlSelection & { __args: {
    /** The ID of the DiscountCodeNode to return. */
    id: Scalars['ID']} })
    /** Returns a code discount identified by its discount code. */
    codeDiscountNodeByCode?: (DiscountCodeNodeGenqlSelection & { __args: {
    /** The case-insensitive code of the `DiscountCodeNode` to return. */
    code: Scalars['String']} })
    /**
     * List of code discounts. Special fields for query params:
     *  * status: active, expired, scheduled
     *  * discount_type: bogo, fixed_amount, free_shipping, percentage.
     */
    codeDiscountNodes?: (DiscountCodeNodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CodeDiscountSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `combines_with`
     *  - `created_at`
     *  - `discount_type`
     *  - `ends_at`
     *  - `starts_at`
     *  - `status`
     *  - `times_used`
     *  - `title`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** List of the shop's code discount saved searches. */
    codeDiscountSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a Collection resource by ID. */
    collection?: (CollectionGenqlSelection & { __args: {
    /** The ID of the Collection to return. */
    id: Scalars['ID']} })
    /**
     * Return a collection by its handle.
     * 
     */
    collectionByHandle?: (CollectionGenqlSelection & { __args: {
    /** The handle of the collection. */
    handle: Scalars['String']} })
    /** Lists all rules that can be used to create smart collections. */
    collectionRulesConditions?: CollectionRuleConditionsGenqlSelection
    /** Returns a list of the shop's collection saved searches. */
    collectionSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a list of collections. */
    collections?: (CollectionConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CollectionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `collection_type`
     *  - `product_publication_status`
     *  - `publishable_status`
     *  - `published_status`
     *  - `title`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Returns the list of companies in the shop. */
    companies?: (CompanyConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanySortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `external_id`
     *  - `name`
     *  - `since_date`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a `Company` object by ID. */
    company?: (CompanyGenqlSelection & { __args: {
    /** The ID of the Company to return. */
    id: Scalars['ID']} })
    /** Returns a `CompanyContact` object by ID. */
    companyContact?: (CompanyContactGenqlSelection & { __args: {
    /** The ID of the CompanyContact to return. */
    id: Scalars['ID']} })
    /** Returns a `CompanyContactRole` object by ID. */
    companyContactRole?: (CompanyContactRoleGenqlSelection & { __args: {
    /** The ID of the CompanyContactRole to return. */
    id: Scalars['ID']} })
    /** The number of companies for a shop. */
    companyCount?: boolean | number
    /** Returns a `CompanyLocation` object by ID. */
    companyLocation?: (CompanyLocationGenqlSelection & { __args: {
    /** The ID of the CompanyLocation to return. */
    id: Scalars['ID']} })
    /** Returns the list of company locations in the shop. */
    companyLocations?: (CompanyLocationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CompanyLocationSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `company_id`
     *  - `created_at`
     *  - `external_id`
     *  - `ids`
     *  - `name`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Return the AppInstallation for the currently authenticated App. */
    currentAppInstallation?: AppInstallationGenqlSelection
    /** Returns the current app's most recent BulkOperation. Apps can run one bulk query and one bulk mutation operation at a time, by shop. */
    currentBulkOperation?: (BulkOperationGenqlSelection & { __args?: {
    /** The current bulk operation's type. */
    type?: (BulkOperationType | null)} })
    /** Returns a Customer resource by ID. */
    customer?: (CustomerGenqlSelection & { __args: {
    /** The ID of the Customer to return. */
    id: Scalars['ID']} })
    /** Returns the status of a customer merge request job. */
    customerMergeJobStatus?: (CustomerMergeRequestGenqlSelection & { __args: {
    /** The ID of the job performing the customer merge request. */
    jobId: Scalars['ID']} })
    /** Returns a preview of a customer merge request. */
    customerMergePreview?: (CustomerMergePreviewGenqlSelection & { __args: {
    /** The ID of the first customer that will be merged. */
    customerOneId: Scalars['ID'], 
    /** The ID of the second customer that will be merged. */
    customerTwoId: Scalars['ID'], 
    /** The fields to override the default customer merge rules. */
    overrideFields?: (CustomerMergeOverrideFields | null)} })
    /** Returns a CustomerPaymentMethod resource by its ID. */
    customerPaymentMethod?: (CustomerPaymentMethodGenqlSelection & { __args: {
    /** The ID of the CustomerPaymentMethod to return. */
    id: Scalars['ID'], 
    /** Whether to show the customer's revoked payment method. */
    showRevoked?: (Scalars['Boolean'] | null)} })
    /** The list of members, such as customers, that's associated with an individual segment. */
    customerSegmentMembers?: (CustomerSegmentMemberConnectionGenqlSelection & { __args: {
    /** The ID of the segment. */
    segmentId?: (Scalars['ID'] | null), 
    /** The query that's used to filter the members. The query is composed of a combination of conditions on facts about customers such as `email_subscription_status = 'SUBSCRIBED'` with [this syntax](https://shopify.dev/api/shopifyql/segment-query-language-reference). */
    query?: (Scalars['String'] | null), 
    /** The ID of the segment members query. */
    queryId?: (Scalars['ID'] | null), 
    /** The timezone that's used to interpret relative date arguments. The timezone defaults to UTC if the timezone isn't provided. */
    timezone?: (Scalars['String'] | null), 
    /** Reverse the order of the list. The sorting behaviour defaults to ascending order. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the list by a given key. */
    sortKey?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null)} })
    /** Returns a segment members query resource by ID. */
    customerSegmentMembersQuery?: (CustomerSegmentMembersQueryGenqlSelection & { __args: {
    /** The ID of the CustomerSegmentMembersQuery to return. */
    id: Scalars['ID']} })
    /** Whether a member, which is a customer, belongs to a segment. */
    customerSegmentMembership?: (SegmentMembershipResponseGenqlSelection & { __args: {
    /** The segments to evaluate for the given customer. */
    segmentIds: Scalars['ID'][], 
    /** The ID of the customer that has the membership. */
    customerId: Scalars['ID']} })
    /** List of customers. */
    customers?: (CustomerConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CustomerSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `accepts_marketing`
     *  - `country`
     *  - `customer_date`
     *  - `email`
     *  - `last_abandoned_order_date`
     *  - `order_date`
     *  - `orders_count`
     *  - `phone`
     *  - `state`
     *  - `tag`
     *  - `tag_not`
     *  - `total_spent`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The paginated list of deletion events. */
    deletionEvents?: (DeletionEventConnectionGenqlSelection & { __args: {
    /** List of subject types to filter by. */
    subjectTypes?: (DeletionEventSubjectType[] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DeletionEventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `occurred_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The delivery customization. */
    deliveryCustomization?: (DeliveryCustomizationGenqlSelection & { __args: {
    /** The ID of the delivery customization. */
    id: Scalars['ID']} })
    /** The delivery customizations. */
    deliveryCustomizations?: (DeliveryCustomizationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `enabled`
     *  - `function_id`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a Delivery Profile resource by ID. */
    deliveryProfile?: (DeliveryProfileGenqlSelection & { __args: {
    /** The ID of the DeliveryProfile to return. */
    id: Scalars['ID']} })
    /** Returns a list of saved delivery profiles. */
    deliveryProfiles?: (DeliveryProfileConnectionGenqlSelection & { __args?: {
    /** If `true`, returns only delivery profiles that were created by the merchant. */
    merchantOwnedOnly?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns the shop-wide shipping settings. */
    deliverySettings?: DeliverySettingGenqlSelection
    /** The total number of discount codes for the shop. */
    discountCodeCount?: { __args: {
    /**
     * Supported filter parameters:
     *  * times_used.
     */
    query?: (Scalars['String'] | null)} }
    /** Returns a discount resource by ID. */
    discountNode?: (DiscountNodeGenqlSelection & { __args: {
    /** The ID of the DiscountNode to return. */
    id: Scalars['ID']} })
    /** List of discounts. */
    discountNodes?: (DiscountNodeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `combines_with`
     *    - Acceptable Values:
     *      - `PRODUCT_DISCOUNTS`
     *      - `ORDER_DISCOUNTS`
     *      - `SHIPPING_DISCOUNTS`
     *  - `discount_class`
     *    - Acceptable Values:
     *      - `PRODUCT`
     *      - `ORDER`
     *      - `SHIPPING`
     *  - `discount_type`
     *  - `method`
     *  - `starts_at`
     *  - `status`
     *  - `times_used`
     *  - `title`
     *  - `type`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Returns a bulk code creation resource by ID. */
    discountRedeemCodeBulkCreation?: (DiscountRedeemCodeBulkCreationGenqlSelection & { __args: {
    /** The ID of the DiscountRedeemCodeBulkCreation to return. */
    id: Scalars['ID']} })
    /** List of the shop's redeemed discount code saved searches. */
    discountRedeemCodeSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DiscountCodeSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `times_used`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns dispute details based on ID. */
    dispute?: (ShopifyPaymentsDisputeGenqlSelection & { __args: {
    /** The ID of the ShopifyPaymentsDispute to return. */
    id: Scalars['ID']} })
    /** Returns dispute evidence details based on ID. */
    disputeEvidence?: (ShopifyPaymentsDisputeEvidenceGenqlSelection & { __args: {
    /** The ID of the ShopifyPaymentsDisputeEvidence to return. */
    id: Scalars['ID']} })
    /** Lookup a Domain by ID. */
    domain?: (DomainGenqlSelection & { __args: {
    /** The ID of the Domain to return. */
    id: Scalars['ID']} })
    /** Returns a DraftOrder resource by ID. */
    draftOrder?: (DraftOrderGenqlSelection & { __args: {
    /** The ID of the DraftOrder to return. */
    id: Scalars['ID']} })
    /** List of the shop's draft order saved searches. */
    draftOrderSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a DraftOrderTag resource by ID. */
    draftOrderTag?: (DraftOrderTagGenqlSelection & { __args: {
    /** The ID of the DraftOrderTag to return. */
    id: Scalars['ID']} })
    /** List of saved draft orders. */
    draftOrders?: (DraftOrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DraftOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `customer_id`
     *  - `source`
     *  - `status`
     *  - `tag`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** A list of the shop's file saved searches. */
    fileSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a paginated list of files that have been uploaded to Shopify. */
    files?: (FileConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (FileSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `filename`
     *  - `media_type`
     *  - `original_upload_size`
     *  - `status`
     *  - `updated_at`
     *  - `used_in`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Returns a Fulfillment resource by ID. */
    fulfillment?: (FulfillmentGenqlSelection & { __args: {
    /** The ID of the Fulfillment to return. */
    id: Scalars['ID']} })
    /** Returns a Fulfillment order resource by ID. */
    fulfillmentOrder?: (FulfillmentOrderGenqlSelection & { __args: {
    /** The ID of the FulfillmentOrder to return. */
    id: Scalars['ID']} })
    /**
     * The paginated list of all fulfillment orders.
     * The returned fulfillment orders are filtered according to the
     * [fulfillment order access scopes](https://shopify.dev/api/admin-graphql/latest/objects/fulfillmentorder#api-access-scopes)
     * granted to the app.
     * 
     * Use this query to retrieve fulfillment orders assigned to merchant-managed locations,
     * third-party fulfillment service locations, or all kinds of locations together.
     * 
     * For fetching only the fulfillment orders assigned to the app's locations, use the
     * [Shop.assignedFulfillmentOrders](https://shopify.dev/api/admin-graphql/latest/objects/Shop#connection-shop-assignedfulfillmentorders)
     * connection.
     * 
     */
    fulfillmentOrders?: (FulfillmentOrderConnectionGenqlSelection & { __args: {
    /** Whether to include closed fulfillment orders. */
    includeClosed?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (FulfillmentOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `assigned_location_id`
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a FulfillmentService resource by ID. */
    fulfillmentService?: (FulfillmentServiceGenqlSelection & { __args: {
    /** The ID of the FulfillmentService to return. */
    id: Scalars['ID']} })
    /** Returns a gift card resource by ID. */
    giftCard?: (GiftCardGenqlSelection & { __args: {
    /** The ID of the GiftCard to return. */
    id: Scalars['ID']} })
    /** Returns a list of gift cards. */
    giftCards?: (GiftCardConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (GiftCardSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `balance_status`
     *  - `created_at`
     *  - `expires_on`
     *  - `initial_value`
     *  - `source`
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The total number of gift cards issued for the shop. */
    giftCardsCount?: { __args: {
    /** Whether to count enabled or disabled or all gift cards. */
    enabled?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Returns an `InventoryItem` object by ID. */
    inventoryItem?: (InventoryItemGenqlSelection & { __args: {
    /** The ID of the InventoryItem to return. */
    id: Scalars['ID']} })
    /** Returns a list of inventory items. */
    inventoryItems?: (InventoryItemConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `id`
     *  - `sku`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns an `InventoryLevel` object by ID. */
    inventoryLevel?: (InventoryLevelGenqlSelection & { __args: {
    /** The ID of the InventoryLevel to return. */
    id: Scalars['ID']} })
    /** General inventory properties for the shop. */
    inventoryProperties?: InventoryPropertiesGenqlSelection
    /**
     * Returns a Job resource by ID. Used to check the status of internal jobs and any applicable changes.
     * 
     */
    job?: (JobGenqlSelection & { __args: {
    /** ID of the job to query. */
    id: Scalars['ID']} })
    /** Returns an inventory Location resource by ID. */
    location?: (LocationGenqlSelection & { __args?: {
    /** The ID of the location to return. If no ID is provided, the primary location of the Shop is returned. */
    id?: (Scalars['ID'] | null)} })
    /** Returns a list of active inventory locations. */
    locations?: (LocationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (LocationSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `active`
     *  - `address1`
     *  - `address2`
     *  - `city`
     *  - `country`
     *  - `legacy`
     *  - `name`
     *  - `province`
     *  - `zip`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /** If true, also include the legacy locations of fulfillment services. */
    includeLegacy?: (Scalars['Boolean'] | null), 
    /** If true, also include the locations that are deactivated. */
    includeInactive?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `locationsAvailableForDeliveryProfilesConnection` instead.
     * Returns a list of all origin locations available for a delivery profile.
     */
    locationsAvailableForDeliveryProfiles?: LocationGenqlSelection
    /** Returns a list of all origin locations available for a delivery profile. */
    locationsAvailableForDeliveryProfilesConnection?: (LocationConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a list of fulfillment orders that are on hold. */
    manualHoldsFulfillmentOrders?: (FulfillmentOrderConnectionGenqlSelection & { __args: {
    /**
     * The query conditions used to filter fulfillment orders. Only fulfillment orders corresponding to orders matching the query will be counted.
     * Supported filter parameters:
     *  - `order_financial_status`
     *  - `order_risk_level`
     *  - `shipping_address_coordinates_validated`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     */
    query?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a market resource by ID. */
    market?: (MarketGenqlSelection & { __args: {
    /** The ID of the Market to return. */
    id: Scalars['ID']} })
    /** Returns the applicable market for a customer based on where they are in the world. */
    marketByGeography?: (MarketGenqlSelection & { __args: {
    /** The code for the country where the customer is. */
    countryCode: CountryCode} })
    /** A resource that can have localized values for different markets. */
    marketLocalizableResource?: (MarketLocalizableResourceGenqlSelection & { __args: {
    /** Find a market localizable resource by ID. */
    resourceId: Scalars['ID']} })
    /** Resources that can have localized values for different markets. */
    marketLocalizableResources?: (MarketLocalizableResourceConnectionGenqlSelection & { __args: {
    /** Return only resources of a type. */
    resourceType: MarketLocalizableResourceType, 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Resources that can have localized values for different markets. */
    marketLocalizableResourcesByIds?: (MarketLocalizableResourceConnectionGenqlSelection & { __args: {
    /** Return only resources for given IDs. */
    resourceIds: Scalars['ID'][], 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of marketing activities associated with the marketing app. */
    marketingActivities?: (MarketingActivityConnectionGenqlSelection & { __args: {
    /** The list of marketing activity IDs to filter by. */
    marketingActivityIds?: (Scalars['ID'][] | null), 
    /** The list of remote IDs associated with marketing activities to filter by. */
    remoteIds?: (Scalars['String'][] | null), 
    /** The UTM parameters associated with marketing activities to filter by. */
    utm?: (UTMInput | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MarketingActivitySortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `app_id`
     *  - `app_name`
     *  - `created_at`
     *  - `marketing_campaign_id`
     *  - `scheduled_to_end_at`
     *  - `scheduled_to_start_at`
     *  - `tactic`
     *  - `title`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** Returns a MarketingActivity resource by ID. */
    marketingActivity?: (MarketingActivityGenqlSelection & { __args: {
    /** The ID of the MarketingActivity to return. */
    id: Scalars['ID']} })
    /** Returns a MarketingEvent resource by ID. */
    marketingEvent?: (MarketingEventGenqlSelection & { __args: {
    /** The ID of the MarketingEvent to return. */
    id: Scalars['ID']} })
    /** A list of marketing events associated with the marketing app. */
    marketingEvents?: (MarketingEventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MarketingEventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `app_id`
     *  - `description`
     *  - `started_at`
     *  - `type`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The markets configured for the shop. */
    markets?: (MarketConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a metafield by ID. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The ID of the Metafield to return. */
    id: Scalars['ID']} })
    /** Returns a metafield definition by ID. */
    metafieldDefinition?: (MetafieldDefinitionGenqlSelection & { __args: {
    /** The ID of the MetafieldDefinition to return. */
    id: Scalars['ID']} })
    /**
     * Each metafield definition has a type, which defines the type of information that it can store.
     * This type is enforced across every instance of the resource that owns the metafield definition.
     * 
     * Refer to the [list of supported metafield types](https://shopify.dev/apps/metafields/types).
     * 
     */
    metafieldDefinitionTypes?: MetafieldDefinitionTypeGenqlSelection
    /** List of metafield definitions. */
    metafieldDefinitions?: (MetafieldDefinitionConnectionGenqlSelection & { __args: {
    /** Filter metafield definition by key. */
    key?: (Scalars['String'] | null), 
    /** Filter metafield definition by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Filter the metafield definition by the specific owner type. */
    ownerType: MetafieldOwnerType, 
    /** Filter the metafield definition by the pinned status. */
    pinnedStatus?: (MetafieldDefinitionPinnedStatus | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MetafieldDefinitionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `key`
     *  - `namespace`
     *  - `owner_type`
     *  - `type`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of the `MetafieldStorefrontVisibility` records. */
    metafieldStorefrontVisibilities?: (MetafieldStorefrontVisibilityConnectionGenqlSelection & { __args?: {
    /** Filter the visible metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * Returns a `MetafieldStorefrontVisibility` record by ID. A `MetafieldStorefrontVisibility` record lists the
     * metafields to make visible in the Storefront API.
     * 
     */
    metafieldStorefrontVisibility?: (MetafieldStorefrontVisibilityGenqlSelection & { __args: {
    /** The ID of the MetafieldStorefrontVisibility to return. */
    id: Scalars['ID']} })
    /** Retrieves a metaobject by ID. */
    metaobject?: (MetaobjectGenqlSelection & { __args: {
    /** The ID of the metaobject to return. */
    id: Scalars['ID']} })
    /** Retrieves a metaobject by handle. */
    metaobjectByHandle?: (MetaobjectGenqlSelection & { __args: {
    /** The identifier of the metaobject to return. */
    handle: MetaobjectHandleInput} })
    /** Retrieves a metaobject definition by ID. */
    metaobjectDefinition?: (MetaobjectDefinitionGenqlSelection & { __args: {
    /** The ID of the metaobject to return. */
    id: Scalars['ID']} })
    /** Finds a metaobject definition by type. */
    metaobjectDefinitionByType?: (MetaobjectDefinitionGenqlSelection & { __args: {
    /** The type of the metaobject definition to return. */
    type: Scalars['String']} })
    /** All metaobject definitions. */
    metaobjectDefinitions?: (MetaobjectDefinitionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** All metaobjects for the shop. */
    metaobjects?: (MetaobjectConnectionGenqlSelection & { __args: {
    /** The type of the metaobjects to query. */
    type: Scalars['String'], 
    /**
     * The key of a field to sort with. Supports "id", "type", "updated_at", and "display_name".
     * 
     */
    sortKey?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `display_name`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * Returns a specific node (any object that implements the
     * [Node](https://shopify.dev/api/admin-graphql/latest/interfaces/Node)
     * interface) by ID, in accordance with the
     * [Relay specification](https://relay.dev/docs/guides/graphql-server-specification/#object-identification).
     * This field is commonly used for refetching an object.
     * 
     */
    node?: (NodeGenqlSelection & { __args: {
    /** The ID of the Node to return. */
    id: Scalars['ID']} })
    /**
     * Returns the list of nodes (any objects that implement the
     * [Node](https://shopify.dev/api/admin-graphql/latest/interfaces/Node)
     * interface) with the given IDs, in accordance with the
     * [Relay specification](https://relay.dev/docs/guides/graphql-server-specification/#object-identification).
     * 
     */
    nodes?: (NodeGenqlSelection & { __args: {
    /** The IDs of the Nodes to return. */
    ids: Scalars['ID'][]} })
    /** Returns an Order resource by ID. */
    order?: (OrderGenqlSelection & { __args: {
    /** The ID of the Order to return. */
    id: Scalars['ID']} })
    /** Returns a payment status by payment reference ID. Used to check the status of a deferred payment. */
    orderPaymentStatus?: (OrderPaymentStatusGenqlSelection & { __args: {
    /** Unique identifier returned by orderCreatePayment. */
    paymentReferenceId: Scalars['String'], 
    /** ID of the order for which the payment was initiated. */
    orderId: Scalars['ID']} })
    /** List of the shop's order saved searches. */
    orderSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a list of orders placed. */
    orders?: (OrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `cart_token`
     *  - `channel`
     *  - `channel_id`
     *  - `chargeback_status`
     *  - `checkout_token`
     *  - `confirmation_number`
     *  - `created_at`
     *  - `credit_card_last4`
     *  - `customer_id`
     *  - `delivery_method`
     *  - `discount_code`
     *  - `earliest_fulfill_by`
     *  - `email`
     *  - `financial_status`
     *  - `fraud_protection_level`
     *  - `fulfillment_location_id`
     *  - `fulfillment_status`
     *  - `gateway`
     *  - `location_id`
     *  - `name`
     *  - `payment_id`
     *  - `payment_provider_id`
     *  - `po_number`
     *  - `processed_at`
     *  - `reference_location_id`
     *  - `return_status`
     *  - `risk_level`
     *  - `sales_channel`
     *  - `sku`
     *  - `source_identifier`
     *  - `source_name`
     *  - `status`
     *  - `tag`
     *  - `tag_not`
     *  - `test`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The payment customization. */
    paymentCustomization?: (PaymentCustomizationGenqlSelection & { __args: {
    /** The ID of the payment customization. */
    id: Scalars['ID']} })
    /** The payment customizations. */
    paymentCustomizations?: (PaymentCustomizationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `enabled`
     *  - `function_id`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The list of payment terms templates eligible for all shops and users. */
    paymentTermsTemplates?: (PaymentTermsTemplateGenqlSelection & { __args?: {
    /** The payment terms type to filter the payment terms templates list. */
    paymentTermsType?: (PaymentTermsType | null)} })
    /** Returns a price list resource by ID. */
    priceList?: (PriceListGenqlSelection & { __args: {
    /** The ID of the `PriceList` to return. */
    id: Scalars['ID']} })
    /** All price lists for a shop. */
    priceLists?: (PriceListConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (PriceListSortKeys | null)} })
    /**
     * @deprecated Use `codeDiscountNode` instead.
     * Returns a code price rule resource by ID.
     */
    priceRule?: (PriceRuleGenqlSelection & { __args: {
    /** The ID of the PriceRule to return. */
    id: Scalars['ID']} })
    /** List of the shop's price rule saved searches. */
    priceRuleSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `codeDiscountNodes` instead.
     * Returns a list of price rule resources that have at least one associated discount code.
     */
    priceRules?: (PriceRuleConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (PriceRuleSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `combines_with`
     *  - `created_at`
     *  - `discount_type`
     *  - `ends_at`
     *  - `starts_at`
     *  - `status`
     *  - `times_used`
     *  - `title`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The primary market of the shop. */
    primaryMarket?: MarketGenqlSelection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by ID.
     * Private metafields are accessible only by the application that created them.
     * 
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The ID of the PrivateMetafield to return. */
    id: Scalars['ID']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a list of private metafields associated to a resource.
     * 
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Retrieve the private metafields of a certain resource, specified by the resource ID. */
    owner: Scalars['ID'], 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a Product resource by ID. */
    product?: (ProductGenqlSelection & { __args: {
    /** The ID of the Product to return. */
    id: Scalars['ID']} })
    /**
     * Return a product by its handle.
     * 
     */
    productByHandle?: (ProductGenqlSelection & { __args: {
    /** A unique string that identifies the product. Handles are automatically generated based on the product's title, and are always lowercase. Whitespace and special characters are replaced with a hyphen: `-`. If there are multiple consecutive whitespace or special characters, then they're replaced with a single hyphen. Whitespace or special characters at the beginning are removed. If a duplicate product title is used, then the handle is auto-incremented by one. For example, if you had two products called `Potion`, then their handles would be `potion` and `potion-1`. After a product has been created, changing the product title doesn't update the handle. */
    handle: Scalars['String']} })
    /** Returns the product duplicate job. */
    productDuplicateJob?: (ProductDuplicateJobGenqlSelection & { __args: {
    /** An ID of a product duplicate job to fetch. */
    id: Scalars['ID']} })
    /** Returns a ProductFeed resource by ID. */
    productFeed?: (ProductFeedGenqlSelection & { __args: {
    /** The ID of the ProductFeed to return. */
    id: Scalars['ID']} })
    /** The product feeds for the shop. */
    productFeeds?: (ProductFeedConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * Returns the product resource feedback for the currently authenticated app.
     * 
     */
    productResourceFeedback?: (ProductResourceFeedbackGenqlSelection & { __args: {
    /** The product associated with the resource feedback. */
    id: Scalars['ID']} })
    /** Returns a list of the shop's product saved searches. */
    productSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a ProductVariant resource by ID. */
    productVariant?: (ProductVariantGenqlSelection & { __args: {
    /** The ID of the ProductVariant to return. */
    id: Scalars['ID']} })
    /** List of the product variants. */
    productVariants?: (ProductVariantConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductVariantSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `barcode`
     *  - `collection`
     *  - `delivery_profile_id`
     *  - `exclude_composite`
     *  - `exclude_variants_with_components`
     *  - `gift_card`
     *  - `inventory_quantity`
     *  - `location_id`
     *  - `managed`
     *  - `managed_by`
     *  - `option1`
     *  - `option2`
     *  - `option3`
     *  - `product_id`
     *  - `product_ids`
     *  - `product_publication_status`
     *  - `product_status`
     *  - `product_type`
     *  - `publishable_status`
     *  - `published_status`
     *  - `requires_components`
     *  - `sku`
     *  - `tag`
     *  - `tag_not`
     *  - `taxable`
     *  - `title`
     *  - `updated_at`
     *  - `vendor`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** List of products. */
    products?: (ProductConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `barcode`
     *  - `bundles`
     *  - `created_at`
     *  - `delivery_profile_id`
     *  - `error_feedback`
     *  - `gift_card`
     *  - `has_only_composites`
     *  - `has_only_default_variant`
     *  - `has_variant_with_components`
     *  - `id`
     *  - `inventory_total`
     *  - `is_price_reduced`
     *  - `out_of_stock_somewhere`
     *  - `price`
     *  - `product_configuration_owner`
     *  - `product_publication_status`
     *  - `product_type`
     *  - `publishable_status`
     *  - `published_status`
     *  - `sku`
     *  - `status`
     *  - `tag`
     *  - `tag_not`
     *  - `title`
     *  - `updated_at`
     *  - `vendor`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The list of publicly-accessible Admin API versions, including supported versions, the release candidate, and unstable versions. */
    publicApiVersions?: ApiVersionGenqlSelection
    /**
     * Lookup a publication by ID.
     * 
     */
    publication?: (PublicationGenqlSelection & { __args: {
    /** The ID of the Publication to return. */
    id: Scalars['ID']} })
    /** List of publications. */
    publications?: (PublicationConnectionGenqlSelection & { __args?: {
    /** Filter publications by catalog type. */
    catalogType?: (CatalogType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a Refund resource by ID. */
    refund?: (RefundGenqlSelection & { __args: {
    /** The ID of the Refund to return. */
    id: Scalars['ID']} })
    /** Returns a Return resource by ID. */
    return?: (ReturnGenqlSelection & { __args: {
    /** The ID of the Return to return. */
    id: Scalars['ID']} })
    /** Lookup a returnable fulfillment by ID. */
    returnableFulfillment?: (ReturnableFulfillmentGenqlSelection & { __args: {
    /** The ID of the ReturnableFulfillment to return. */
    id: Scalars['ID']} })
    /** List of returnable fulfillments. */
    returnableFulfillments?: (ReturnableFulfillmentConnectionGenqlSelection & { __args: {
    /** Order ID that will scope all returnable fulfillments. */
    orderId: Scalars['ID'], 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Lookup a reverse delivery by ID. */
    reverseDelivery?: (ReverseDeliveryGenqlSelection & { __args: {
    /** The ID of the ReverseDelivery to return. */
    id: Scalars['ID']} })
    /** Lookup a reverse fulfillment order by ID. */
    reverseFulfillmentOrder?: (ReverseFulfillmentOrderGenqlSelection & { __args: {
    /** The ID of the reverse fulfillment order to return. */
    id: Scalars['ID']} })
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * Lookup a script tag resource by ID.
     * 
     */
    scriptTag?: (ScriptTagGenqlSelection & { __args: {
    /** The ID of the ScriptTag to return. */
    id: Scalars['ID']} })
    /**
     * <div class="note"><h4>Theme app extensions</h4>
     *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
     * 
     * 
     * A list of script tags.
     * 
     */
    scriptTags?: (ScriptTagConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** The source URL of the script tag to filter by. */
    src?: (Scalars['URL'] | null)} })
    /** The Customer Segment. */
    segment?: (SegmentGenqlSelection & { __args: {
    /** Find a segment by ID. */
    id: Scalars['ID']} })
    /** The number of segments for a shop. */
    segmentCount?: boolean | number
    /** A list of filter suggestions associated with a segment. A segment is a group of members (commonly customers) that meet specific criteria. */
    segmentFilterSuggestions?: (SegmentFilterConnectionGenqlSelection & { __args: {
    /** Returns the elements of a list by keyword or term. */
    search: Scalars['String'], 
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int'], 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null)} })
    /** A list of filters. */
    segmentFilters?: (SegmentFilterConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null)} })
    /** A list of a shop's segment migrations. */
    segmentMigrations?: (SegmentMigrationConnectionGenqlSelection & { __args?: {
    /** Search a segment migration by its saved search ID. */
    savedSearchId?: (Scalars['ID'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null)} })
    /** The list of suggested values corresponding to a particular filter for a segment. A segment is a group of members, such as customers, that meet specific criteria. */
    segmentValueSuggestions?: (SegmentValueConnectionGenqlSelection & { __args: {
    /** Returns the elements of a list by keyword or term. */
    search: Scalars['String'], 
    /** Returns the elements of a list by filter handle. */
    filterQueryName?: (Scalars['String'] | null), 
    /** Returns the elements of a list by filter parameter name. */
    functionParameterQueryName?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null)} })
    /** A list of a shop's segments. */
    segments?: (SegmentConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (SegmentSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `name`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a Selling Plan Group resource by ID. */
    sellingPlanGroup?: (SellingPlanGroupGenqlSelection & { __args: {
    /** The ID of the SellingPlanGroup to return. */
    id: Scalars['ID']} })
    /** List Selling Plan Groups. */
    sellingPlanGroups?: (SellingPlanGroupConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (SellingPlanGroupSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `app_id`
     *    - Acceptable Values:
     *      - `CURRENT`
     *      - `ALL`
     *      - `App ID number`
     *    - Default Value: `CURRENT`
     *  - `category`
     *    - Acceptable Values:
     *      - `SUBSCRIPTION`
     *      - `PRE_ORDER`
     *      - `TRY_BEFORE_YOU_BUY`
     *      - `OTHER`
     *  - `created_at`
     *  - `delivery_frequency`
     *  - `name`
     *  - `percentage_off`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The server pixel configured by the app. */
    serverPixel?: ServerPixelGenqlSelection
    /**
     * Returns the Shop resource corresponding to the access token used in the request. The Shop resource contains
     * business and store management settings for the shop.
     * 
     */
    shop?: ShopGenqlSelection
    /** The shop's billing preferences. */
    shopBillingPreferences?: ShopBillingPreferencesGenqlSelection
    /** A list of locales available on a shop. */
    shopLocales?: (ShopLocaleGenqlSelection & { __args?: {
    /** Return only published locales. */
    published?: (Scalars['Boolean'] | null)} })
    /** The Shopify Function. */
    shopifyFunction?: (ShopifyFunctionGenqlSelection & { __args: {
    /** The ID of the Shopify Function. */
    id: Scalars['String']} })
    /** Returns the Shopify Functions for apps installed on the shop. */
    shopifyFunctions?: (ShopifyFunctionConnectionGenqlSelection & { __args?: {
    /** Filter the functions by the API type. */
    apiType?: (Scalars['String'] | null), 
    /** Filter the functions by whether or not the function uses the creation UI in the Admin. */
    useCreationUi?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Shopify Payments account information, including balances and payouts. */
    shopifyPaymentsAccount?: ShopifyPaymentsAccountGenqlSelection
    /** Returns the results of a ShopifyQL query. Refer to the [ShopifyQL documentation](https://shopify.dev/api/shopifyql) for more information. */
    shopifyqlQuery?: (ShopifyqlResponseGenqlSelection & { __args: {
    /** A ShopifyQL query. */
    query: Scalars['String']} })
    /** The StaffMember resource, by ID. */
    staffMember?: (StaffMemberGenqlSelection & { __args?: {
    /** The ID of the staff member to return. If no ID is provided, then the staff member making the query (if any) is returned. */
    id?: (Scalars['ID'] | null)} })
    /**
     * Standard metafield definitions are intended for specific, common use cases. Their namespace and keys reflect these use cases and are reserved.
     * 
     * Refer to all available [`Standard Metafield Definition Templates`](https://shopify.dev/api/admin-graphql/latest/objects/StandardMetafieldDefinitionTemplate).
     * 
     */
    standardMetafieldDefinitionTemplates?: (StandardMetafieldDefinitionTemplateConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a SubscriptionBillingAttempt by ID. */
    subscriptionBillingAttempt?: (SubscriptionBillingAttemptGenqlSelection & { __args: {
    /** The ID of the SubscriptionBillingAttempt to return. */
    id: Scalars['ID']} })
    /** Returns subscription billing attempts on a store. */
    subscriptionBillingAttempts?: (SubscriptionBillingAttemptConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (SubscriptionBillingAttemptsSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `error_code`
     *  - `error_message`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a subscription billing cycle found either by cycle index or date. */
    subscriptionBillingCycle?: (SubscriptionBillingCycleGenqlSelection & { __args: {
    /** Input object used to select and use billing cycles. */
    billingCycleInput: SubscriptionBillingCycleInput} })
    /** Returns subscription billing cycles for a contract ID. */
    subscriptionBillingCycles?: (SubscriptionBillingCycleConnectionGenqlSelection & { __args: {
    /** The ID of the subscription contract to retrieve billing cycles for. */
    contractId: Scalars['ID'], 
    /** Select subscription billing cycles within a date range. */
    billingCyclesDateRangeSelector?: (SubscriptionBillingCyclesDateRangeSelector | null), 
    /** Select subscription billing cycles within an index range. */
    billingCyclesIndexRangeSelector?: (SubscriptionBillingCyclesIndexRangeSelector | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (SubscriptionBillingCyclesSortKeys | null)} })
    /** Returns a Subscription Contract resource by ID. */
    subscriptionContract?: (SubscriptionContractGenqlSelection & { __args: {
    /** The ID of the Subscription Contract to return. */
    id: Scalars['ID']} })
    /** List Subscription Contracts. */
    subscriptionContracts?: (SubscriptionContractConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** Returns a Subscription Draft resource by ID. */
    subscriptionDraft?: (SubscriptionDraftGenqlSelection & { __args: {
    /** The ID of the Subscription Draft to return. */
    id: Scalars['ID']} })
    /** Returns a list of TenderTransactions associated with the shop. */
    tenderTransactions?: (TenderTransactionConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `point_of_sale_device_id`
     *  - `processed_at`
     *  - `test`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A resource that can have localized values for different languages. */
    translatableResource?: (TranslatableResourceGenqlSelection & { __args: {
    /** Find a translatable resource by ID. */
    resourceId: Scalars['ID']} })
    /** Resources that can have localized values for different languages. */
    translatableResources?: (TranslatableResourceConnectionGenqlSelection & { __args: {
    /** Return only resources of a type. */
    resourceType: TranslatableResourceType, 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Resources that can have localized values for different languages. */
    translatableResourcesByIds?: (TranslatableResourceConnectionGenqlSelection & { __args: {
    /** Return only resources for given IDs. */
    resourceIds: Scalars['ID'][], 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Returns a redirect resource by ID. */
    urlRedirect?: (UrlRedirectGenqlSelection & { __args: {
    /** The ID of the UrlRedirect to return. */
    id: Scalars['ID']} })
    /** Returns a redirect import resource by ID. */
    urlRedirectImport?: (UrlRedirectImportGenqlSelection & { __args: {
    /** The ID of the UrlRedirectImport to return. */
    id: Scalars['ID']} })
    /** A list of the shop's URL redirect saved searches. */
    urlRedirectSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of redirects for a shop. */
    urlRedirects?: (UrlRedirectConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (UrlRedirectSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `path`
     *  - `target`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The web pixel configured by the app. */
    webPixel?: (WebPixelGenqlSelection & { __args?: {
    /** Returns a web pixel by ID. */
    id?: (Scalars['ID'] | null)} })
    /** Returns a webhook subscription by ID. */
    webhookSubscription?: (WebhookSubscriptionGenqlSelection & { __args: {
    /** The ID of the WebhookSubscription to return. */
    id: Scalars['ID']} })
    /** Returns a list of webhook subscriptions. */
    webhookSubscriptions?: (WebhookSubscriptionConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (WebhookSubscriptionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /** Callback URL to filter by. */
    callbackUrl?: (Scalars['URL'] | null), 
    /** Response format to filter by. */
    format?: (WebhookSubscriptionFormat | null), 
    /** List of webhook subscription topics to filter by. */
    topics?: (WebhookSubscriptionTopic[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The record of the line items and transactions that were refunded to a customer, along with restocking instructions for refunded line items. */
export interface RefundGenqlSelection{
    /** The date and time when the refund was created. */
    createdAt?: boolean | number
    /** A list of the refunded duties as part of this refund. */
    duties?: RefundDutyGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The optional note associated with the refund. */
    note?: boolean | number
    /** The order associated with the refund. */
    order?: OrderGenqlSelection
    /** The `RefundLineItem` resources attached to the refund. */
    refundLineItems?: (RefundLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The return associated with the refund. */
    return?: ReturnGenqlSelection
    /** The staff member who created the refund. */
    staffMember?: StaffMemberGenqlSelection
    /**
     * @deprecated Use `totalRefundedSet` instead.
     * The total amount across all transactions for the refund.
     */
    totalRefunded?: MoneyV2GenqlSelection
    /** The total amount across all transactions for the refund, in shop and presentment currencies. */
    totalRefundedSet?: MoneyBagGenqlSelection
    /** The transactions associated with the refund. */
    transactions?: (OrderTransactionConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The date and time when the refund was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An agreement between the merchant and customer to refund all or a portion of the order. */
export interface RefundAgreementGenqlSelection{
    /** The application that created the agreement. */
    app?: AppGenqlSelection
    /** The date and time at which the agreement occured. */
    happenedAt?: boolean | number
    /** The unique ID for the agreement. */
    id?: boolean | number
    /** The reason the agremeent was created. */
    reason?: boolean | number
    /** The refund associated with the agreement. */
    refund?: RefundGenqlSelection
    /** The sales associated with the agreement. */
    sales?: (SaleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The staff member associated with the agreement. */
    user?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Refunds.
 * 
 */
export interface RefundConnectionGenqlSelection{
    /** A list of edges. */
    edges?: RefundEdgeGenqlSelection
    /** A list of the nodes contained in RefundEdge. */
    nodes?: RefundGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `refundCreate` mutation. */
export interface RefundCreatePayloadGenqlSelection{
    /** The order associated with the created refund. */
    order?: OrderGenqlSelection
    /** The created refund. */
    refund?: RefundGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a refunded duty. */
export interface RefundDutyGenqlSelection{
    /** The amount of a refunded duty in shop and presentment currencies. */
    amountSet?: MoneyBagGenqlSelection
    /** The duty associated with this refunded duty. */
    originalDuty?: DutyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to reimburse duties on a refund. */
export interface RefundDutyInput {
/** The ID of the duty in the refund. */
dutyId: Scalars['ID'],
/** The type of refund for this duty. */
refundType?: (RefundDutyRefundType | null)}


/**
 * An auto-generated type which holds one Refund and a cursor during pagination.
 * 
 */
export interface RefundEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of RefundEdge. */
    node?: RefundGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create a refund. */
export interface RefundInput {
/** The currency that is used to refund the order. This must be the presentment currency, which is the currency used by the customer. This is a required field for orders where the currency and presentment currency differ. */
currency?: (CurrencyCode | null),
/** The ID of the order that is being refunded. */
orderId: Scalars['ID'],
/** An optional note that is attached to the refund. */
note?: (Scalars['String'] | null),
/** Whether to send a refund notification to the customer. */
notify?: (Scalars['Boolean'] | null),
/** The input fields that are required to reimburse shipping costs. */
shipping?: (ShippingRefundInput | null),
/** A list of line items to refund. */
refundLineItems?: (RefundLineItemInput[] | null),
/** A list of duties to refund. */
refundDuties?: (RefundDutyInput[] | null),
/** A list of transactions involved in the refund. */
transactions?: (OrderTransactionInput[] | null)}


/** A line item that's included in a refund. */
export interface RefundLineItemGenqlSelection{
    /** The `LineItem` resource associated to the refunded line item. */
    lineItem?: LineItemGenqlSelection
    /** The inventory restock location. */
    location?: LocationGenqlSelection
    /**
     * @deprecated Use `priceSet` instead.
     * The price of a refunded line item.
     */
    price?: boolean | number
    /** The price of a refunded line item in shop and presentment currencies. */
    priceSet?: MoneyBagGenqlSelection
    /** The quantity of a refunded line item. */
    quantity?: boolean | number
    /** The type of restock for the refunded line item. */
    restockType?: boolean | number
    /** Whether the refunded line item was restocked. Not applicable in the context of a SuggestedRefund. */
    restocked?: boolean | number
    /**
     * @deprecated Use `subtotalSet` instead.
     * The subtotal price of a refunded line item.
     */
    subtotal?: boolean | number
    /** The subtotal price of a refunded line item in shop and presentment currencies. */
    subtotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalTaxSet` instead.
     * The total tax charged on a refunded line item.
     */
    totalTax?: boolean | number
    /** The total tax charged on a refunded line item in shop and presentment currencies. */
    totalTaxSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple RefundLineItems.
 * 
 */
export interface RefundLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: RefundLineItemEdgeGenqlSelection
    /** A list of the nodes contained in RefundLineItemEdge. */
    nodes?: RefundLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one RefundLineItem and a cursor during pagination.
 * 
 */
export interface RefundLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of RefundLineItemEdge. */
    node?: RefundLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to reimburse line items on a refund. */
export interface RefundLineItemInput {
/** The ID of the line item in the refund. */
lineItemId: Scalars['ID'],
/** The quantity of the associated line item to be refunded. */
quantity: Scalars['Int'],
/** The type of restock for this line item. */
restockType?: (RefundLineItemRestockType | null),
/** The intended location for restocking. If the `restockType` is set to `NO_RESTOCK`, then this value is empty.` */
locationId?: (Scalars['ID'] | null)}


/** The input fields for the shipping cost to refund. */
export interface RefundShippingInput {
/**
 * The input fields required to refund shipping cost, in the presentment currency of the order.
 * This overrides the `fullRefund` argument.
 * 
 */
shippingRefundAmount?: (MoneyInput | null),
/** Whether to refund the full shipping amount. */
fullRefund?: (Scalars['Boolean'] | null)}


/**
 * The input fields for a remote Authorize.net customer payment profile.
 * 
 */
export interface RemoteAuthorizeNetCustomerPaymentProfileInput {
/**
 * The customerProfileId value from the Authorize.net API.
 * 
 */
customerProfileId: Scalars['String'],
/**
 * The customerPaymentProfileId value from the Authorize.net API.
 * 
 */
customerPaymentProfileId?: (Scalars['String'] | null)}


/**
 * The input fields for a remote Braintree customer payment profile.
 * 
 */
export interface RemoteBraintreePaymentMethodInput {
/**
 * The `customer_id` value from the Braintree API.
 * 
 */
customerId: Scalars['String'],
/**
 * The `payment_method_token` value from the Braintree API.
 * 
 */
paymentMethodToken?: (Scalars['String'] | null)}


/**
 * The input fields for a remote stripe payment method.
 * 
 */
export interface RemoteStripePaymentMethodInput {
/**
 * The customer_id value from the Stripe API.
 * 
 */
customerId: Scalars['String'],
/**
 * The payment_method_id value from the Stripe API.
 * 
 */
paymentMethodId?: (Scalars['String'] | null)}


/**
 * An alert message that appears in the Shopify admin about a problem with a store resource, with 1 or more actions to take. For example, you could use an alert to indicate that you're not charging taxes on some product variants.
 * They can optionally have a specific icon and be dismissed by merchants.
 * 
 */
export interface ResourceAlertGenqlSelection{
    /**
     * Buttons in the alert that link to related information.
     * For example, _Edit variants_.
     * 
     */
    actions?: ResourceAlertActionGenqlSelection
    /**
     * The secondary text in the alert that includes further information or instructions about how to solve a problem.
     * 
     */
    content?: boolean | number
    /**
     * Unique identifier that appears when an alert is manually closed by the merchant.
     * Most alerts cannot be manually closed.
     * 
     */
    dismissibleHandle?: boolean | number
    /** An icon that is optionally displayed with the alert. */
    icon?: boolean | number
    /** Indication of how important the alert is. */
    severity?: boolean | number
    /** The primary text in the alert that includes information or describes the problem. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An action associated to a resource alert, such as editing variants. */
export interface ResourceAlertActionGenqlSelection{
    /** Whether the action appears as a button or as a link. */
    primary?: boolean | number
    /** Resource for the action to show. */
    show?: boolean | number
    /** The text for the button in the alert. For example, _Edit variants_. */
    title?: boolean | number
    /** The target URL that the button links to. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents feedback from apps about a resource, and the steps required to set up the apps on the shop.
 * 
 */
export interface ResourceFeedbackGenqlSelection{
    /**
     * @deprecated Use `details` instead.
     * Feedback from an app about the steps a merchant needs to take to set up the app on their store.
     */
    appFeedback?: AppFeedbackGenqlSelection
    /** List of AppFeedback detailing issues regarding a resource. */
    details?: AppFeedbackGenqlSelection
    /** Summary of resource feedback pertaining to the resource. */
    summary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a resource feedback object. */
export interface ResourceFeedbackCreateInput {
/**
 * The date and time when the feedback was generated. Used to help determine whether
 * incoming feedback is outdated compared to existing feedback.
 * 
 */
feedbackGeneratedAt: Scalars['DateTime'],
/**
 * If the feedback state is `requires_action`, then you can send a string message that communicates the action to be taken by the merchant.
 * The string must be a single message up to 100 characters long and must end with a period.
 * You need to adhere to the message formatting rules or your requests will fail:
 * - `[Explanation of the problem]. [Suggested action].`
 * 
 * **Examples:**
 * - `[Your app name]` is not connected. Connect your account to use this sales channel. `[Learn more]`
 * - `[Your app name]` is not configured. Agree to the terms and conditions to use this app. `[Learn more]`
 * Both `Your app name` and `Learn more` (a button which directs merchants to your app) are automatically populated in the Shopify admin.
 * 
 */
messages?: (Scalars['String'][] | null),
/** The state of the feedback and whether it requires merchant action. */
state: ResourceFeedbackState}


/** A resource limit represents the limits that the resource has. */
export interface ResourceLimitGenqlSelection{
    /** Whether the resource is available. */
    available?: boolean | number
    /** Quantity available. If null the quantity available is unlimited. */
    quantityAvailable?: boolean | number
    /** Quantity limit of the resource. If null the quantity is unlimited. */
    quantityLimit?: boolean | number
    /** Quantity used of the resource. If null the quantity used cannot be retrieved. */
    quantityUsed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a merchandising background operation interface. */
export interface ResourceOperationGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The count of processed rows, summing imported, failed, and skipped rows. */
    processedRowCount?: boolean | number
    /** Represents a rows objects within this background operation. */
    rowCount?: RowCountGenqlSelection
    /** The status of this operation. */
    status?: boolean | number
    on_AddAllProductsOperation?: AddAllProductsOperationGenqlSelection
    on_CatalogCsvOperation?: CatalogCsvOperationGenqlSelection
    on_PublicationResourceOperation?: PublicationResourceOperationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A resource publication represents information about the publication of a resource.
 * An instance of `ResourcePublication`, unlike `ResourcePublicationV2`, can be neither published or scheduled to be published.
 * 
 * See [ResourcePublicationV2](/api/admin-graphql/latest/objects/ResourcePublicationV2) for more context.
 * 
 */
export interface ResourcePublicationGenqlSelection{
    /**
     * @deprecated Use `publication` instead.
     * The channel the resource publication is published to.
     */
    channel?: ChannelGenqlSelection
    /**
     * Whether the resource publication is published. Also returns true if the resource publication is scheduled to be published.
     * If false, then the resource publication is neither published nor scheduled to be published.
     * 
     */
    isPublished?: boolean | number
    /** The publication the resource publication is published to. */
    publication?: PublicationGenqlSelection
    /**
     * The date that the resource publication was or is going to be published to the publication.
     * If the product isn't published, then this field returns an epoch timestamp.
     * 
     */
    publishDate?: boolean | number
    /** The resource published to the publication. */
    publishable?: PublishableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ResourcePublications.
 * 
 */
export interface ResourcePublicationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ResourcePublicationEdgeGenqlSelection
    /** A list of the nodes contained in ResourcePublicationEdge. */
    nodes?: ResourcePublicationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ResourcePublication and a cursor during pagination.
 * 
 */
export interface ResourcePublicationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ResourcePublicationEdge. */
    node?: ResourcePublicationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A resource publication represents information about the publication of a resource.
 * Unlike `ResourcePublication`, an instance of `ResourcePublicationV2` can't be unpublished. It must either be published or scheduled to be published.
 * 
 * See [ResourcePublication](/api/admin-graphql/latest/objects/ResourcePublication) for more context.
 * 
 */
export interface ResourcePublicationV2GenqlSelection{
    /**
     * Whether the resource publication is published. If true, then the resource publication is published to the publication.
     * If false, then the resource publication is staged to be published to the publication.
     * 
     */
    isPublished?: boolean | number
    /** The publication the resource publication is published to. */
    publication?: PublicationGenqlSelection
    /** The date that the resource publication was or is going to be published to the publication. */
    publishDate?: boolean | number
    /** The resource published to the publication. */
    publishable?: PublishableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ResourcePublicationV2s.
 * 
 */
export interface ResourcePublicationV2ConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ResourcePublicationV2EdgeGenqlSelection
    /** A list of the nodes contained in ResourcePublicationV2Edge. */
    nodes?: ResourcePublicationV2GenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ResourcePublicationV2 and a cursor during pagination.
 * 
 */
export interface ResourcePublicationV2EdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ResourcePublicationV2Edge. */
    node?: ResourcePublicationV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a return. */
export interface ReturnGenqlSelection{
    /** Additional information about the declined return. */
    decline?: ReturnDeclineGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the return. */
    name?: boolean | number
    /** The order that the return belongs to. */
    order?: OrderGenqlSelection
    /** The list of refunds associated with the return. */
    refunds?: (RefundConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The return line items attached to the return. */
    returnLineItems?: (ReturnLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of reverse fulfillment orders for the return. */
    reverseFulfillmentOrders?: (ReverseFulfillmentOrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The status of the return. */
    status?: boolean | number
    /** A suggested refund for the return. */
    suggestedRefund?: (SuggestedReturnRefundGenqlSelection & { __args: {
    /** The line items from the return to include in the refund. */
    returnRefundLineItems: ReturnRefundLineItemInput[], 
    /** The shipping amount from the associated order to include in the refund. */
    refundShipping?: (RefundShippingInput | null), 
    /** The duties from to associated order to include in the refund. */
    refundDuties?: (RefundDutyInput[] | null)} })
    /** The sum of all line item quantities for the return. */
    totalQuantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for approving a customer's return request. */
export interface ReturnApproveRequestInput {
/** The ID of the return that's being approved. */
id: Scalars['ID']}


/** Return type for `returnApproveRequest` mutation. */
export interface ReturnApproveRequestPayloadGenqlSelection{
    /** The approved return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `returnCancel` mutation. */
export interface ReturnCancelPayloadGenqlSelection{
    /** The canceled return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `returnClose` mutation. */
export interface ReturnClosePayloadGenqlSelection{
    /** The closed return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Returns.
 * 
 */
export interface ReturnConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReturnEdgeGenqlSelection
    /** A list of the nodes contained in ReturnEdge. */
    nodes?: ReturnGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `returnCreate` mutation. */
export interface ReturnCreatePayloadGenqlSelection{
    /** The created return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Additional information about why a merchant declined the customer's return request. */
export interface ReturnDeclineGenqlSelection{
    /**
     * The notification message sent to the customer about their declined return request.
     * Maximum length: 500 characters.
     * 
     */
    note?: boolean | number
    /** The reason the customer's return request was declined. */
    reason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for declining a customer's return request. */
export interface ReturnDeclineRequestInput {
/** The ID of the return that's being declined. */
id: Scalars['ID'],
/** The reason why the merchant declined the customer's return request. */
declineReason: ReturnDeclineReason}


/** Return type for `returnDeclineRequest` mutation. */
export interface ReturnDeclineRequestPayloadGenqlSelection{
    /** The declined return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Return and a cursor during pagination.
 * 
 */
export interface ReturnEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReturnEdge. */
    node?: ReturnGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a return. */
export interface ReturnInput {
/** The ID of the order to be returned. */
orderId: Scalars['ID'],
/** The return line items list to be handled. */
returnLineItems: ReturnLineItemInput[],
/** When `true` the customer will receive a notification if there is an `Order.email` present. */
notifyCustomer?: (Scalars['Boolean'] | null),
/** The UTC date and time when the return was first solicited by the customer. */
requestedAt?: (Scalars['DateTime'] | null)}


/** A return line item. */
export interface ReturnLineItemGenqlSelection{
    /** A note from the customer that describes the item to be returned. Maximum length: 300 characters. */
    customerNote?: boolean | number
    /** The fulfillment line item from which items are returned. */
    fulfillmentLineItem?: FulfillmentLineItemGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The quantity being returned. */
    quantity?: boolean | number
    /** The quantity that can be refunded. */
    refundableQuantity?: boolean | number
    /** The quantity that was refunded. */
    refundedQuantity?: boolean | number
    /** The reason for returning the item. */
    returnReason?: boolean | number
    /** Additional information about the reason for the return. Maximum length: 255 characters. */
    returnReasonNote?: boolean | number
    /** The total weight of the item. */
    totalWeight?: WeightGenqlSelection
    /** The total line price after all discounts on the line item, including both line item level discounts and code-based line item discounts, are applied. */
    withCodeDiscountedTotalPriceSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReturnLineItems.
 * 
 */
export interface ReturnLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReturnLineItemEdgeGenqlSelection
    /** A list of the nodes contained in ReturnLineItemEdge. */
    nodes?: ReturnLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReturnLineItem and a cursor during pagination.
 * 
 */
export interface ReturnLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReturnLineItemEdge. */
    node?: ReturnLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a return line item. */
export interface ReturnLineItemInput {
/**
 * The ID of the fulfillment line item to be returned.
 * Specifically, this field expects a `FulfillmentLineItem.id`.
 * 
 */
fulfillmentLineItemId: Scalars['ID'],
/** The quantity of the item to be returned. */
quantity: Scalars['Int'],
/** The reason for the item to be returned. */
returnReason: ReturnReason,
/**
 * A note about the reason that the item is being returned.
 * A note can be provided only if the return reason is `OTHER`.
 * Maximum length: 255 characters.
 * 
 */
returnReasonNote?: (Scalars['String'] | null)}


/** The input fields to refund a return. */
export interface ReturnRefundInput {
/** The ID of the return. */
returnId: Scalars['ID'],
/** A list of return line items to refund. */
returnRefundLineItems: ReturnRefundLineItemInput[],
/** The shipping amount to refund. */
refundShipping?: (RefundShippingInput | null),
/** A list of duties to refund. */
refundDuties?: (RefundDutyInput[] | null),
/** A list of transactions involved in refunding the return. */
orderTransactions?: (ReturnRefundOrderTransactionInput[] | null),
/** Whether to send a refund notification to the customer. */
notifyCustomer?: (Scalars['Boolean'] | null)}


/** The input fields for a return refund line item. */
export interface ReturnRefundLineItemInput {
/** The ID of the return line item to be refunded. */
returnLineItemId: Scalars['ID'],
/** The quantity of the return line item to be refunded. */
quantity: Scalars['Int']}


/** The input fields to create order transactions when refunding a return. */
export interface ReturnRefundOrderTransactionInput {
/** The amount of money for the transaction in the presentment currency of the order. */
transactionAmount: MoneyInput,
/** The ID of the parent order transaction. The transaction must be of kind `CAPTURE` or a `SALE`. */
parentId: Scalars['ID']}


/** Return type for `returnRefund` mutation. */
export interface ReturnRefundPayloadGenqlSelection{
    /** The created refund. */
    refund?: RefundGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `returnReopen` mutation. */
export interface ReturnReopenPayloadGenqlSelection{
    /** The reopened return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for requesting a return. */
export interface ReturnRequestInput {
/** The ID of the order that's being returned. */
orderId: Scalars['ID'],
/** The line items that are being handled in the return. */
returnLineItems: ReturnRequestLineItemInput[]}


/** The input fields for a return line item. */
export interface ReturnRequestLineItemInput {
/**
 * The ID of the fulfillment line item to be returned.
 * Specifically, this field expects a `FulfillmentLineItem.id`.
 * 
 */
fulfillmentLineItemId: Scalars['ID'],
/** The quantity of the item that's being returned. */
quantity: Scalars['Int'],
/** The reason why the line item is being returned. */
returnReason: ReturnReason,
/**
 * A note from the customer that describes the item to be returned.
 * For example, the note can communicate issues with the item to the merchant.
 * Maximum length: 300 characters.
 * 
 */
customerNote?: (Scalars['String'] | null)}


/** Return type for `returnRequest` mutation. */
export interface ReturnRequestPayloadGenqlSelection{
    /** The requested return. */
    return?: ReturnGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a return mutation. */
export interface ReturnUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A returnable fulfillment, which is an order that has been delivered
 * and is eligible to be returned to the merchant.
 * 
 */
export interface ReturnableFulfillmentGenqlSelection{
    /** The fulfillment that the returnable fulfillment refers to. */
    fulfillment?: FulfillmentGenqlSelection
    /** The unique ID of the Returnable Fulfillment. */
    id?: boolean | number
    /** The list of returnable fulfillment line items. */
    returnableFulfillmentLineItems?: (ReturnableFulfillmentLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReturnableFulfillments.
 * 
 */
export interface ReturnableFulfillmentConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReturnableFulfillmentEdgeGenqlSelection
    /** A list of the nodes contained in ReturnableFulfillmentEdge. */
    nodes?: ReturnableFulfillmentGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReturnableFulfillment and a cursor during pagination.
 * 
 */
export interface ReturnableFulfillmentEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReturnableFulfillmentEdge. */
    node?: ReturnableFulfillmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A returnable fulfillment line item. */
export interface ReturnableFulfillmentLineItemGenqlSelection{
    /** The fulfillment line item that can be returned. */
    fulfillmentLineItem?: FulfillmentLineItemGenqlSelection
    /** The quantity available to be returned. */
    quantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReturnableFulfillmentLineItems.
 * 
 */
export interface ReturnableFulfillmentLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReturnableFulfillmentLineItemEdgeGenqlSelection
    /** A list of the nodes contained in ReturnableFulfillmentLineItemEdge. */
    nodes?: ReturnableFulfillmentLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReturnableFulfillmentLineItem and a cursor during pagination.
 * 
 */
export interface ReturnableFulfillmentLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReturnableFulfillmentLineItemEdge. */
    node?: ReturnableFulfillmentLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A reverse delivery is a post-fulfillment object that represents a buyer sending a package to a merchant.
 * For example, a buyer requests a return, and a merchant sends the buyer a shipping label.
 * The reverse delivery contains the context of the items sent back, how they're being sent back
 * (for example, a shipping label), and the current state of the delivery (tracking information).
 * 
 */
export interface ReverseDeliveryGenqlSelection{
    /** The deliverable associated with the reverse delivery. */
    deliverable?: ReverseDeliveryDeliverableGenqlSelection
    /** The ID of the reverse delivery. */
    id?: boolean | number
    /** The reverse delivery line items attached to the reverse delivery. */
    reverseDeliveryLineItems?: (ReverseDeliveryLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The `ReverseFulfillmentOrder` associated with the reverse delivery. */
    reverseFulfillmentOrder?: ReverseFulfillmentOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReverseDeliveries.
 * 
 */
export interface ReverseDeliveryConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReverseDeliveryEdgeGenqlSelection
    /** A list of the nodes contained in ReverseDeliveryEdge. */
    nodes?: ReverseDeliveryGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `reverseDeliveryCreateWithShipping` mutation. */
export interface ReverseDeliveryCreateWithShippingPayloadGenqlSelection{
    /** The created reverse delivery. */
    reverseDelivery?: ReverseDeliveryGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The delivery method and artifacts associated with a reverse delivery. */
export interface ReverseDeliveryDeliverableGenqlSelection{
    on_ReverseDeliveryShippingDeliverable?:ReverseDeliveryShippingDeliverableGenqlSelection,
    __typename?: boolean | number
}


/** The input fields to dispose a reverse delivery line item. */
export interface ReverseDeliveryDisposeInput {
/** The ID of the reverse delivery line item. */
reverseDeliveryLineItemId: Scalars['ID'],
/** The quantity of the reverse delivery line item to dispose. */
quantity: Scalars['Int'],
/** The final arrangement for the reverse delivery line item. */
dispositionType: ReverseFulfillmentOrderDispositionType,
/**
 * The ID of the location where the reverse delivery line item is to be disposed. This is required
 *           when the disposition type is RESTOCKED.
 */
locationId?: (Scalars['ID'] | null)}


/** Return type for `reverseDeliveryDispose` mutation. */
export interface ReverseDeliveryDisposePayloadGenqlSelection{
    /** The disposed reverse delivery line items. */
    reverseDeliveryLineItems?: ReverseDeliveryLineItemGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReverseDelivery and a cursor during pagination.
 * 
 */
export interface ReverseDeliveryEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReverseDeliveryEdge. */
    node?: ReverseDeliveryGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a reverse label. */
export interface ReverseDeliveryLabelInput {
/** The URL of the label file. If a label file was uploaded to be attached to the delivery, then provide the temporary staged URL. */
fileUrl: Scalars['URL']}


/** The return label file information for a reverse delivery. */
export interface ReverseDeliveryLabelV2GenqlSelection{
    /** The date and time when the reverse delivery label was created. */
    createdAt?: boolean | number
    /** A public link that can be used to download the label image. */
    publicFileUrl?: boolean | number
    /** The date and time when the reverse delivery label was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The details about a reverse delivery line item. */
export interface ReverseDeliveryLineItemGenqlSelection{
    /** The dispositions of the item. */
    dispositions?: ReverseFulfillmentOrderDispositionGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The expected number of units. */
    quantity?: boolean | number
    /** The corresponding reverse fulfillment order line item. */
    reverseFulfillmentOrderLineItem?: ReverseFulfillmentOrderLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReverseDeliveryLineItems.
 * 
 */
export interface ReverseDeliveryLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReverseDeliveryLineItemEdgeGenqlSelection
    /** A list of the nodes contained in ReverseDeliveryLineItemEdge. */
    nodes?: ReverseDeliveryLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReverseDeliveryLineItem and a cursor during pagination.
 * 
 */
export interface ReverseDeliveryLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReverseDeliveryLineItemEdge. */
    node?: ReverseDeliveryLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a reverse delivery line item. */
export interface ReverseDeliveryLineItemInput {
/** The ID of the related reverse fulfillment order line item. */
reverseFulfillmentOrderLineItemId: Scalars['ID'],
/** The quantity of the item to be included in the delivery. */
quantity: Scalars['Int']}


/** A reverse shipping deliverable that may include a label and tracking information. */
export interface ReverseDeliveryShippingDeliverableGenqlSelection{
    /** The return label attached to the reverse delivery. */
    label?: ReverseDeliveryLabelV2GenqlSelection
    /** The information to track the reverse delivery. */
    tracking?: ReverseDeliveryTrackingV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `reverseDeliveryShippingUpdate` mutation. */
export interface ReverseDeliveryShippingUpdatePayloadGenqlSelection{
    /** The updated reverse delivery. */
    reverseDelivery?: ReverseDeliveryGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for tracking information about a return delivery. */
export interface ReverseDeliveryTrackingInput {
/** The tracking number for the label. */
number?: (Scalars['String'] | null),
/** The tracking URL for the carrier. If the carrier isn't supported by Shopify, then provide the tracking URL of the delivery. */
url?: (Scalars['URL'] | null)}


/** Represents the information used to track a reverse delivery. */
export interface ReverseDeliveryTrackingV2GenqlSelection{
    /** The provider of the tracking information, in a human-readable format for display purposes. */
    carrierName?: boolean | number
    /** The identifier used by the courier to identify the shipment. */
    number?: boolean | number
    /** The URL to track a shipment. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A group of one or more items in a return that will be processed at a fulfillment service.
 * There can be more than one reverse fulfillment order for a return at a given location.
 * 
 */
export interface ReverseFulfillmentOrderGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The list of reverse fulfillment order line items for the reverse fulfillment order. */
    lineItems?: (ReverseFulfillmentOrderLineItemConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The order associated with the reverse fulfillment order. */
    order?: OrderGenqlSelection
    /** The list of reverse deliveries for the reverse fulfillment order. */
    reverseDeliveries?: (ReverseDeliveryConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The status of the reverse fulfillment order. */
    status?: boolean | number
    /**
     * The current confirmation for the reverse fulfillment order from a third-party logistics service. 
     * If no third-party service is involved, then this value is `nil`.
     * 
     */
    thirdPartyConfirmation?: ReverseFulfillmentOrderThirdPartyConfirmationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReverseFulfillmentOrders.
 * 
 */
export interface ReverseFulfillmentOrderConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReverseFulfillmentOrderEdgeGenqlSelection
    /** A list of the nodes contained in ReverseFulfillmentOrderEdge. */
    nodes?: ReverseFulfillmentOrderGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to dispose a reverse fulfillment order line item. */
export interface ReverseFulfillmentOrderDisposeInput {
/** The ID of the reverse fulfillment order line item. */
reverseFulfillmentOrderLineItemId: Scalars['ID'],
/** The quantity of the reverse fulfillment order line item to dispose. */
quantity: Scalars['Int'],
/**
 * The ID of the location where the reverse fulfillment order line item is to be disposed.
 *         This is required when the disposition type is RESTOCKED.
 */
locationId?: (Scalars['ID'] | null),
/** The final arrangement for the reverse fulfillment order line item. */
dispositionType: ReverseFulfillmentOrderDispositionType}


/** Return type for `reverseFulfillmentOrderDispose` mutation. */
export interface ReverseFulfillmentOrderDisposePayloadGenqlSelection{
    /** The disposed reverse fulfillment order line items. */
    reverseFulfillmentOrderLineItems?: ReverseFulfillmentOrderLineItemGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ReturnUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The details of the arrangement of an item. */
export interface ReverseFulfillmentOrderDispositionGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The location where the disposition occurred. */
    location?: LocationGenqlSelection
    /** The number of disposed units. */
    quantity?: boolean | number
    /** The final arrangement of an item. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReverseFulfillmentOrder and a cursor during pagination.
 * 
 */
export interface ReverseFulfillmentOrderEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReverseFulfillmentOrderEdge. */
    node?: ReverseFulfillmentOrderGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The details about a reverse fulfillment order line item.
 * 
 */
export interface ReverseFulfillmentOrderLineItemGenqlSelection{
    /** The dispositions of the item. */
    dispositions?: ReverseFulfillmentOrderDispositionGenqlSelection
    /** The corresponding fulfillment line item for a reverse fulfillment order line item. */
    fulfillmentLineItem?: FulfillmentLineItemGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The total number of units to be processed. */
    totalQuantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ReverseFulfillmentOrderLineItems.
 * 
 */
export interface ReverseFulfillmentOrderLineItemConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ReverseFulfillmentOrderLineItemEdgeGenqlSelection
    /** A list of the nodes contained in ReverseFulfillmentOrderLineItemEdge. */
    nodes?: ReverseFulfillmentOrderLineItemGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ReverseFulfillmentOrderLineItem and a cursor during pagination.
 * 
 */
export interface ReverseFulfillmentOrderLineItemEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ReverseFulfillmentOrderLineItemEdge. */
    node?: ReverseFulfillmentOrderLineItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The third-party confirmation of a reverse fulfillment order. */
export interface ReverseFulfillmentOrderThirdPartyConfirmationGenqlSelection{
    /** The status of the reverse fulfillment order third-party confirmation. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A row count represents rows on background operation. */
export interface RowCountGenqlSelection{
    /** Estimated number of rows contained within this background operation. */
    count?: boolean | number
    /** Whether the operation exceeds max number of reportable rows. */
    exceedsMax?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** SEO information. */
export interface SEOGenqlSelection{
    /** SEO Description. */
    description?: boolean | number
    /** SEO Title. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for SEO information. */
export interface SEOInput {
/** SEO title of the product. */
title?: (Scalars['String'] | null),
/** SEO description of the product. */
description?: (Scalars['String'] | null)}


/** An individual sale record associated with a sales agreement. Every money value in an order's sales data is represented in the currency's smallest unit. When amounts are divided across multiple line items, such as taxes or order discounts, the amounts might not divide evenly across all of the line items on the order. To address this, the remaining currency units that couldn't be divided evenly are allocated one at a time, starting with the first line item, until they are all accounted for. In aggregate, the values sum up correctly. In isolation, one line item might have a different tax or discount amount than another line item of the same price, before taxes and discounts. This is because the amount could not be divided evenly across the items. The allocation of currency units across line items is immutable. After they are allocated, currency units are never reallocated or redistributed among the line items. */
export interface SaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    on_AdditionalFeeSale?: AdditionalFeeSaleGenqlSelection
    on_AdjustmentSale?: AdjustmentSaleGenqlSelection
    on_DutySale?: DutySaleGenqlSelection
    on_GiftCardSale?: GiftCardSaleGenqlSelection
    on_ProductSale?: ProductSaleGenqlSelection
    on_ShippingLineSale?: ShippingLineSaleGenqlSelection
    on_TipSale?: TipSaleGenqlSelection
    on_UnknownSale?: UnknownSaleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The additional fee details for a line item. */
export interface SaleAdditionalFeeGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The name of the additional fee. */
    name?: boolean | number
    /** The price of the additional fee. */
    price?: MoneyBagGenqlSelection
    /** A list of taxes charged on the additional fee. */
    taxLines?: TaxLineGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Sales.
 * 
 */
export interface SaleConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SaleEdgeGenqlSelection
    /** A list of the nodes contained in SaleEdge. */
    nodes?: SaleGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Sale and a cursor during pagination.
 * 
 */
export interface SaleEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SaleEdge. */
    node?: SaleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The tax allocated to a sale from a single tax line. */
export interface SaleTaxGenqlSelection{
    /** The portion of the total tax amount on the related sale that comes from the associated tax line. */
    amount?: MoneyBagGenqlSelection
    /** The unique ID for the sale tax. */
    id?: boolean | number
    /** The tax line associated with the sale. */
    taxLine?: TaxLineGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A contract between a merchant and a customer to do business. Shopify creates a sales agreement whenever an order is placed, edited, or refunded. A sales agreement has one or more sales records, which provide itemized details about the initial agreement or subsequent changes made to the order. For example, when a customer places an order, Shopify creates the order, generates a sales agreement, and records a sale for each line item purchased in the order. A sale record is specific to a type of order line. Order lines can represent different things such as a purchased product, a tip added by a customer, shipping costs collected at checkout, and more. */
export interface SalesAgreementGenqlSelection{
    /** The application that created the agreement. */
    app?: AppGenqlSelection
    /** The date and time at which the agreement occured. */
    happenedAt?: boolean | number
    /** The unique ID for the agreement. */
    id?: boolean | number
    /** The reason the agremeent was created. */
    reason?: boolean | number
    /** The sales associated with the agreement. */
    sales?: (SaleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The staff member associated with the agreement. */
    user?: StaffMemberGenqlSelection
    on_OrderAgreement?: OrderAgreementGenqlSelection
    on_OrderEditAgreement?: OrderEditAgreementGenqlSelection
    on_RefundAgreement?: RefundAgreementGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SalesAgreements.
 * 
 */
export interface SalesAgreementConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SalesAgreementEdgeGenqlSelection
    /** A list of the nodes contained in SalesAgreementEdge. */
    nodes?: SalesAgreementGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SalesAgreement and a cursor during pagination.
 * 
 */
export interface SalesAgreementEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SalesAgreementEdge. */
    node?: SalesAgreementGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A saved search is a representation of a search query saved in the admin. */
export interface SavedSearchGenqlSelection{
    /** The filters of a saved search. */
    filters?: SearchFilterGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The name of a saved search. */
    name?: boolean | number
    /** The query string of a saved search. This includes search terms and filters. */
    query?: boolean | number
    /** The type of resource this saved search is searching in. */
    resourceType?: boolean | number
    /** The search terms of a saved search. */
    searchTerms?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SavedSearches.
 * 
 */
export interface SavedSearchConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SavedSearchEdgeGenqlSelection
    /** A list of the nodes contained in SavedSearchEdge. */
    nodes?: SavedSearchGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create a saved search. */
export interface SavedSearchCreateInput {
/** The type of resource this saved search is searching in. */
resourceType: SearchResultType,
/** A descriptive name of the saved search. */
name: Scalars['String'],
/** The query string of a saved search. This includes search terms and filters. */
query: Scalars['String']}


/** Return type for `savedSearchCreate` mutation. */
export interface SavedSearchCreatePayloadGenqlSelection{
    /** The saved search that was created. */
    savedSearch?: SavedSearchGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to delete a saved search. */
export interface SavedSearchDeleteInput {
/** ID of the saved search to delete. */
id: Scalars['ID']}


/** Return type for `savedSearchDelete` mutation. */
export interface SavedSearchDeletePayloadGenqlSelection{
    /** The ID of the saved search that was deleted. */
    deletedSavedSearchId?: boolean | number
    /** The shop of the saved search that was deleted. */
    shop?: ShopGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SavedSearch and a cursor during pagination.
 * 
 */
export interface SavedSearchEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SavedSearchEdge. */
    node?: SavedSearchGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to update a saved search. */
export interface SavedSearchUpdateInput {
/** ID of the saved search to update. */
id: Scalars['ID'],
/** A descriptive name of the saved search. */
name?: (Scalars['String'] | null),
/** The query string of a saved search. This included search terms and filters. */
query?: (Scalars['String'] | null)}


/** Return type for `savedSearchUpdate` mutation. */
export interface SavedSearchUpdatePayloadGenqlSelection{
    /** The saved search that was updated. */
    savedSearch?: SavedSearchGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Script discount applications capture the intentions of a discount that
 * was created by a Shopify Script for an order's line item or shipping line.
 * 
 * Discount applications don't represent the actual final amount discounted on a line (line item or shipping line). The actual amount discounted on a line is represented by the [DiscountAllocation](https://shopify.dev/api/admin-graphql/latest/objects/discountallocation) object.
 * 
 */
export interface ScriptDiscountApplicationGenqlSelection{
    /** The method by which the discount's value is applied to its entitled items. */
    allocationMethod?: boolean | number
    /**
     * @deprecated Use `title` instead.
     * The description of the application as defined by the Script.
     */
    description?: boolean | number
    /**
     * An ordered index that can be used to identify the discount application and indicate the precedence
     * of the discount application for calculations.
     * 
     */
    index?: boolean | number
    /** How the discount amount is distributed on the discounted lines. */
    targetSelection?: boolean | number
    /** Whether the discount is applied on line items or shipping lines. */
    targetType?: boolean | number
    /** The title of the application as defined by the Script. */
    title?: boolean | number
    /** The value of the discount application. */
    value?: PricingValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * <div class="note"><h4>Theme app extensions</h4>
 *   <p>Your app might not pass App Store review if it uses script tags instead of theme app extensions. All new apps, and apps that integrate with Online Store 2.0 themes, should use theme app extensions, such as app blocks or app embed blocks. Script tags are an alternative you can use with only vintage themes. <a href="/apps/online-store#what-integration-method-should-i-use" target="_blank">Learn more</a>.</p></div>
 * 
 * 
 * A script tag represents remote JavaScript code that is loaded into the pages of a shop's storefront or the order status page of checkout.
 * 
 */
export interface ScriptTagGenqlSelection{
    /**
     * Whether the Shopify CDN can cache and serve the script tag.
     * If `true`, then the script will be cached and served by the CDN.
     * The cache expires 15 minutes after the script tag is successfully returned.
     * If `false`, then the script will be served as is.
     * 
     */
    cache?: boolean | number
    /** The date and time when the script tag was created. */
    createdAt?: boolean | number
    /** The page or pages on the online store that the script should be included. */
    displayScope?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The URL to the remote script. */
    src?: boolean | number
    /** The date and time when the script tag was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ScriptTags.
 * 
 */
export interface ScriptTagConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ScriptTagEdgeGenqlSelection
    /** A list of the nodes contained in ScriptTagEdge. */
    nodes?: ScriptTagGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `scriptTagCreate` mutation. */
export interface ScriptTagCreatePayloadGenqlSelection{
    /** The script tag that was created. */
    scriptTag?: ScriptTagGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `scriptTagDelete` mutation. */
export interface ScriptTagDeletePayloadGenqlSelection{
    /** The ID of the deleted script tag. */
    deletedScriptTagId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ScriptTag and a cursor during pagination.
 * 
 */
export interface ScriptTagEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ScriptTagEdge. */
    node?: ScriptTagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a script tag. This input object is used when creating or updating
 * a script tag to specify its URL, where it should be included, and how it will be cached.
 * 
 */
export interface ScriptTagInput {
/** The URL of the remote script. For example: `https://example.com/path/to/script.js`. */
src?: (Scalars['URL'] | null),
/** The page or pages on the online store where the script should be included. */
displayScope?: (ScriptTagDisplayScope | null),
/**
 * Whether the Shopify CDN can cache and serve the script tag.
 * If `true`, then the script will be cached and served by the CDN.
 * The cache expires 15 minutes after the script tag is successfully returned.
 * If `false`, then the script is served as is.
 * The default value is `false`.
 * 
 */
cache?: (Scalars['Boolean'] | null)}


/** Return type for `scriptTagUpdate` mutation. */
export interface ScriptTagUpdatePayloadGenqlSelection{
    /** The script tag that was updated. */
    scriptTag?: ScriptTagGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter in a search query represented by a key value pair. */
export interface SearchFilterGenqlSelection{
    /** The key of the search filter. */
    key?: boolean | number
    /** The value of the search filter. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A list of search filters along with their specific options in value and label pair for filtering. */
export interface SearchFilterOptionsGenqlSelection{
    /** A list of options that can be use to filter product availability. */
    productAvailability?: FilterOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an individual result returned from a search. */
export interface SearchResultGenqlSelection{
    /** Returns the search result description text. */
    description?: boolean | number
    /** Returns the Image resource presented to accompany a search result. */
    image?: ImageGenqlSelection
    /** Returns the ID of the resource returned in the search result. */
    reference?: NodeGenqlSelection
    /** Returns the resource title. */
    title?: boolean | number
    /** Returns the absolute URL to the resource in the search result. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The connection type for SearchResult. */
export interface SearchResultConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SearchResultEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    /**
     * @deprecated The provided information is not accurate.
     * Information to aid in pagination.
     */
    resultsAfterCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SearchResult and a cursor during pagination.
 * 
 */
export interface SearchResultEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SearchResultEdge. */
    node?: SearchResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A dynamic collection of customers based on specific criteria.
 * 
 */
export interface SegmentGenqlSelection{
    /** The date and time when the segment was added to the store. */
    creationDate?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The date and time when the segment was last updated. */
    lastEditDate?: boolean | number
    /** The name of the segment. */
    name?: boolean | number
    /** A precise definition of the segment. The definition is composed of a combination of conditions on facts about customers. */
    query?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter that takes a value that's associated with an object. For example, the `tags` field is associated with the [`Customer`](/api/admin-graphql/latest/objects/Customer) object. */
export interface SegmentAssociationFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The statistics of a given attribute. */
export interface SegmentAttributeStatisticsGenqlSelection{
    /** The average of a given attribute. */
    average?: boolean | number
    /** The sum of a given attribute. */
    sum?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter with a Boolean value that's been added to a segment query. */
export interface SegmentBooleanFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple Segments.
 * 
 */
export interface SegmentConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SegmentEdgeGenqlSelection
    /** A list of the nodes contained in SegmentEdge. */
    nodes?: SegmentGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `segmentCreate` mutation. */
export interface SegmentCreatePayloadGenqlSelection{
    /** The newly created segment. */
    segment?: SegmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter with a date value that's been added to a segment query. */
export interface SegmentDateFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `segmentDelete` mutation. */
export interface SegmentDeletePayloadGenqlSelection{
    /** ID of the deleted segment. */
    deletedSegmentId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one Segment and a cursor during pagination.
 * 
 */
export interface SegmentEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SegmentEdge. */
    node?: SegmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter with a set of possible values that's been added to a segment query. */
export interface SegmentEnumFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter that's used to segment customers based on the date that an event occured. For example, the `product_bought` event filter allows you to segment customers based on what products they've bought. */
export interface SegmentEventFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The parameters for an event segment filter. */
    parameters?: SegmentEventFilterParameterGenqlSelection
    /** The query name of the filter. */
    queryName?: boolean | number
    /** The return value type for an event segment filter. */
    returnValueType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The parameters for an event segment filter. */
export interface SegmentEventFilterParameterGenqlSelection{
    /** Whether the parameter accepts a list of values. */
    acceptsMultipleValues?: boolean | number
    /** The localized description of the parameter. */
    localizedDescription?: boolean | number
    /** The localized name of the parameter. */
    localizedName?: boolean | number
    /** Whether the parameter is optional. */
    optional?: boolean | number
    /** The type of the parameter. */
    parameterType?: boolean | number
    /** The query name of the parameter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The filters used in segment queries associated with a shop. */
export interface SegmentFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    on_SegmentAssociationFilter?: SegmentAssociationFilterGenqlSelection
    on_SegmentBooleanFilter?: SegmentBooleanFilterGenqlSelection
    on_SegmentDateFilter?: SegmentDateFilterGenqlSelection
    on_SegmentEnumFilter?: SegmentEnumFilterGenqlSelection
    on_SegmentEventFilter?: SegmentEventFilterGenqlSelection
    on_SegmentFloatFilter?: SegmentFloatFilterGenqlSelection
    on_SegmentIntegerFilter?: SegmentIntegerFilterGenqlSelection
    on_SegmentStringFilter?: SegmentStringFilterGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SegmentFilters.
 * 
 */
export interface SegmentFilterConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SegmentFilterEdgeGenqlSelection
    /** A list of the nodes contained in SegmentFilterEdge. */
    nodes?: SegmentFilterGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SegmentFilter and a cursor during pagination.
 * 
 */
export interface SegmentFilterEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SegmentFilterEdge. */
    node?: SegmentFilterGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter with a double-precision, floating-point value that's been added to a segment query. */
export interface SegmentFloatFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter with an integer that's been added to a segment query. */
export interface SegmentIntegerFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The response type for the `segmentMembership` object.
 * 
 */
export interface SegmentMembershipGenqlSelection{
    /** A Boolean that indicates whether or not the customer in the query is a member of the segment, which is identified using the `segmentId`. */
    isMember?: boolean | number
    /** A `segmentId` that is used for testing membership. */
    segmentId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A list of maps that contain `segmentId` IDs and `isMember` Booleans. The maps represent segment memberships.
 * 
 */
export interface SegmentMembershipResponseGenqlSelection{
    /** The membership status for the given list of segments. */
    memberships?: SegmentMembershipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A segment and its corresponding saved search. 
 * For example, you can use `SegmentMigration` to retrieve the segment ID that corresponds to a saved search ID.
 * 
 */
export interface SegmentMigrationGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The ID of the saved search. */
    savedSearchId?: boolean | number
    /** The ID of the segment. */
    segmentId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SegmentMigrations.
 * 
 */
export interface SegmentMigrationConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SegmentMigrationEdgeGenqlSelection
    /** A list of the nodes contained in SegmentMigrationEdge. */
    nodes?: SegmentMigrationGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SegmentMigration and a cursor during pagination.
 * 
 */
export interface SegmentMigrationEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SegmentMigrationEdge. */
    node?: SegmentMigrationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The statistics of a given segment. */
export interface SegmentStatisticsGenqlSelection{
    /** The statistics of a given attribute. */
    attributeStatistics?: (SegmentAttributeStatisticsGenqlSelection & { __args: {
    /** The attribute that statistics are retrieved for. */
    attributeName: Scalars['String']} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A filter with a string that's been added to a segment query. */
export interface SegmentStringFilterGenqlSelection{
    /** The localized name of the filter. */
    localizedName?: boolean | number
    /** Whether a file can have multiple values for a single customer. */
    multiValue?: boolean | number
    /** The query name of the filter. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `segmentUpdate` mutation. */
export interface SegmentUpdatePayloadGenqlSelection{
    /** The updated segment. */
    segment?: SegmentGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A list of suggested values associated with an individual segment. A
 * segment is a group of members, such as customers, that meet specific
 * criteria.
 * 
 */
export interface SegmentValueGenqlSelection{
    /** The localized version of the value's name. This name is displayed to the merchant. */
    localizedValue?: boolean | number
    /** The name of the query associated with the suggestion. */
    queryName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SegmentValues.
 * 
 */
export interface SegmentValueConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SegmentValueEdgeGenqlSelection
    /** A list of the nodes contained in SegmentValueEdge. */
    nodes?: SegmentValueGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SegmentValue and a cursor during pagination.
 * 
 */
export interface SegmentValueEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SegmentValueEdge. */
    node?: SegmentValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Properties used by customers to select a product variant.
 * Products can have multiple options, like different sizes or colors.
 * 
 */
export interface SelectedOptionGenqlSelection{
    /** The product option’s name. */
    name?: boolean | number
    /** The product option’s value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents how a product can be sold and purchased. Selling plans and associated records (selling plan groups
 * and policies) are deleted 48 hours after a merchant uninstalls their subscriptions app. We recommend backing
 * up these records if you need to restore them later.
 * 
 * For more information on selling plans, refer to
 * [*Creating and managing selling plans*](https://shopify.dev/docs/apps/selling-strategies/subscriptions/selling-plans).
 * 
 */
export interface SellingPlanGenqlSelection{
    /** A selling plan policy which describes the recurring billing details. */
    billingPolicy?: SellingPlanBillingPolicyGenqlSelection
    /** The category used to classify the selling plan for reporting purposes. */
    category?: boolean | number
    /** The date and time when the selling plan was created. */
    createdAt?: boolean | number
    /** A selling plan policy which describes the delivery details. */
    deliveryPolicy?: SellingPlanDeliveryPolicyGenqlSelection
    /** Buyer facing string which describes the selling plan commitment. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** When to reserve inventory for a selling plan. */
    inventoryPolicy?: SellingPlanInventoryPolicyGenqlSelection
    /**
     * A customer-facing description of the selling plan.
     * 
     * If your store supports multiple currencies, then don't include country-specific pricing content, such as "Buy monthly, get 10$ CAD off". This field won't be converted to reflect different currencies.
     * 
     */
    name?: boolean | number
    /** The values of all options available on the selling plan. Selling plans are grouped together in Liquid when they are created by the same app, and have the same `selling_plan_group.name` and `selling_plan_group.options` values. */
    options?: boolean | number
    /** Relative position of the selling plan for display. A lower position will be displayed before a higher position. */
    position?: boolean | number
    /** Selling plan pricing details. */
    pricingPolicies?: SellingPlanPricingPolicyGenqlSelection
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a selling plan policy anchor. */
export interface SellingPlanAnchorGenqlSelection{
    /**
     * The cutoff day for the anchor.
     * 
     * If `type` is WEEKDAY, then the value must be between 1-7. Shopify interprets
     * the days of the week according to ISO 8601, where 1 is Monday.
     * 
     * If `type` is MONTHDAY, then the value must be between 1-31.
     * 
     * If `type` is YEARDAY, then the value must be `null`.
     * 
     */
    cutoffDay?: boolean | number
    /**
     * The day of the anchor.
     * 
     * If `type` is WEEKDAY, then the value must be between 1-7. Shopify interprets
     * the days of the week according to ISO 8601, where 1 is Monday.
     * 
     * If `type` is not WEEKDAY, then the value must be between 1-31.
     * 
     */
    day?: boolean | number
    /**
     * The month of the anchor. If type is different than YEARDAY, then the value must
     * be `null` or between 1-12.
     * 
     */
    month?: boolean | number
    /**
     * Represents the anchor type, it can be one one of WEEKDAY, MONTHDAY, YEARDAY.
     * 
     */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a selling plan anchor. */
export interface SellingPlanAnchorInput {
/**
 * Represents the anchor type, must be one of WEEKDAY, MONTHDAY, YEARDAY.
 * 
 */
type?: (SellingPlanAnchorType | null),
/**
 * The day of the anchor.
 * 
 * If `type` is WEEKDAY, then the value must be between 1-7. Shopify interprets
 * the days of the week according to ISO 8601, where 1 is Monday.
 * 
 * If `type` is not WEEKDAY, then the value must be between 1-31.
 * 
 */
day?: (Scalars['Int'] | null),
/**
 * The month of the anchor. If type is different than YEARDAY, then the value must
 * be `null` or between 1-12.
 * 
 */
month?: (Scalars['Int'] | null),
/**
 * The cutoff day of the anchor.
 * 
 * If `type` is WEEKDAY, then the value must be between 1-7. Shopify interprets
 * the days of the week according to ISO 8601, where 1 is Monday.
 * 
 * If `type` is MONTHDAY, then the value must be between 1-31.
 * 
 * If `type` is YEARDAY, then the value must be `null`.
 * 
 * This field should only be set if the cutoff field for the delivery policy is `null`.
 * 
 */
cutoffDay?: (Scalars['Int'] | null)}


/**
 * Represents the billing frequency associated to the selling plan (for example, bill every week, or bill every
 * three months). The selling plan billing policy and associated records (selling plan groups, selling plans, pricing
 * policies, and delivery policy) are deleted 48 hours after a merchant uninstalls their subscriptions app.
 * We recommend backing up these records if you need to restore them later.
 * 
 */
export interface SellingPlanBillingPolicyGenqlSelection{
    on_SellingPlanFixedBillingPolicy?:SellingPlanFixedBillingPolicyGenqlSelection,
    on_SellingPlanRecurringBillingPolicy?:SellingPlanRecurringBillingPolicyGenqlSelection,
    __typename?: boolean | number
}


/** The input fields that are required to create or update a billing policy type. */
export interface SellingPlanBillingPolicyInput {
/** The fixed billing policy details. */
fixed?: (SellingPlanFixedBillingPolicyInput | null),
/** The recurring billing policy details. */
recurring?: (SellingPlanRecurringBillingPolicyInput | null)}


/** The amount charged at checkout when the full amount isn't charged at checkout. */
export interface SellingPlanCheckoutChargeGenqlSelection{
    /** The charge type for the checkout charge. */
    type?: boolean | number
    /** The charge value for the checkout charge. */
    value?: SellingPlanCheckoutChargeValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields that are required to create or update a checkout charge. */
export interface SellingPlanCheckoutChargeInput {
/** The checkout charge type defined by the policy. */
type?: (SellingPlanCheckoutChargeType | null),
/** The checkout charge value defined by the policy. */
value?: (SellingPlanCheckoutChargeValueInput | null)}


/** The percentage value of the price used for checkout charge. */
export interface SellingPlanCheckoutChargePercentageValueGenqlSelection{
    /** The percentage value of the price used for checkout charge. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The portion of the price to be charged at checkout. */
export interface SellingPlanCheckoutChargeValueGenqlSelection{
    on_MoneyV2?:MoneyV2GenqlSelection,
    on_SellingPlanCheckoutChargePercentageValue?:SellingPlanCheckoutChargePercentageValueGenqlSelection,
    __typename?: boolean | number
}


/** The input fields required to create or update an checkout charge value. */
export interface SellingPlanCheckoutChargeValueInput {
/** The percentage value. */
percentage?: (Scalars['Float'] | null),
/** The fixed value for an checkout charge. */
fixedValue?: (Scalars['Decimal'] | null)}


/**
 * An auto-generated type for paginating through multiple SellingPlans.
 * 
 */
export interface SellingPlanConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SellingPlanEdgeGenqlSelection
    /** A list of the nodes contained in SellingPlanEdge. */
    nodes?: SellingPlanGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the delivery frequency associated to the selling plan (for example, deliver every month, or deliver
 * every other week). The selling plan delivery policy and associated records (selling plan groups, selling plans,
 * pricing policies, and billing policy) are deleted 48 hours after a merchant uninstalls their subscriptions app.
 * We recommend backing up these records if you need to restore them later.
 * 
 */
export interface SellingPlanDeliveryPolicyGenqlSelection{
    on_SellingPlanFixedDeliveryPolicy?:SellingPlanFixedDeliveryPolicyGenqlSelection,
    on_SellingPlanRecurringDeliveryPolicy?:SellingPlanRecurringDeliveryPolicyGenqlSelection,
    __typename?: boolean | number
}


/** The input fields that are required to create or update a delivery policy. */
export interface SellingPlanDeliveryPolicyInput {
/** The fixed delivery policy details. */
fixed?: (SellingPlanFixedDeliveryPolicyInput | null),
/** The recurring delivery policy details. */
recurring?: (SellingPlanRecurringDeliveryPolicyInput | null)}


/**
 * An auto-generated type which holds one SellingPlan and a cursor during pagination.
 * 
 */
export interface SellingPlanEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SellingPlanEdge. */
    node?: SellingPlanGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fixed selling plan billing policy. */
export interface SellingPlanFixedBillingPolicyGenqlSelection{
    /** The checkout charge when the full amount isn't charged at checkout. */
    checkoutCharge?: SellingPlanCheckoutChargeGenqlSelection
    /** The exact time when to capture the full payment. */
    remainingBalanceChargeExactTime?: boolean | number
    /**
     * The period after remaining_balance_charge_trigger, before capturing the full payment. Expressed as an ISO8601 duration.
     * 
     */
    remainingBalanceChargeTimeAfterCheckout?: boolean | number
    /** When to capture payment for amount due. */
    remainingBalanceChargeTrigger?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a fixed billing policy. */
export interface SellingPlanFixedBillingPolicyInput {
/** When to capture the payment for the amount due. */
remainingBalanceChargeTrigger?: (SellingPlanRemainingBalanceChargeTrigger | null),
/** The date and time to capture the full payment. */
remainingBalanceChargeExactTime?: (Scalars['DateTime'] | null),
/** The period after capturing the payment for the amount due (`remainingBalanceChargeTrigger`), and before capturing the full payment. Expressed as an ISO8601 duration. */
remainingBalanceChargeTimeAfterCheckout?: (Scalars['String'] | null),
/** The checkout charge policy for the selling plan. */
checkoutCharge?: (SellingPlanCheckoutChargeInput | null)}


/** Represents a fixed selling plan delivery policy. */
export interface SellingPlanFixedDeliveryPolicyGenqlSelection{
    /** The specific anchor dates upon which the delivery interval calculations should be made. */
    anchors?: SellingPlanAnchorGenqlSelection
    /** A buffer period for orders to be included in next fulfillment anchor. */
    cutoff?: boolean | number
    /** The date and time when the fulfillment should trigger. */
    fulfillmentExactTime?: boolean | number
    /** What triggers the fulfillment. The value must be one of ANCHOR, ASAP, EXACT_TIME, or UNKNOWN. */
    fulfillmentTrigger?: boolean | number
    /**
     * Whether the delivery policy is merchant or buyer-centric.
     * Buyer-centric delivery policies state the time when the buyer will receive the goods.
     * Merchant-centric delivery policies state the time when the fulfillment should be started.
     * Currently, only merchant-centric delivery policies are supported.
     * 
     */
    intent?: boolean | number
    /** The fulfillment or delivery behavior of the first fulfillment when the order is placed before the anchor. The default value for this field is `ASAP`. */
    preAnchorBehavior?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a fixed delivery policy. */
export interface SellingPlanFixedDeliveryPolicyInput {
/** The specific anchor dates upon which the delivery interval calculations should be made. */
anchors?: (SellingPlanAnchorInput[] | null),
/** What triggers the fulfillment. */
fulfillmentTrigger?: (SellingPlanFulfillmentTrigger | null),
/** The date and time when the fulfillment should trigger. */
fulfillmentExactTime?: (Scalars['DateTime'] | null),
/** A buffer period for orders to be included in a cycle. */
cutoff?: (Scalars['Int'] | null),
/** Whether the delivery policy is merchant or buyer-centric. */
intent?: (SellingPlanFixedDeliveryPolicyIntent | null),
/** The pre-anchor behavior. */
preAnchorBehavior?: (SellingPlanFixedDeliveryPolicyPreAnchorBehavior | null)}


/** Represents a fixed selling plan pricing policy. */
export interface SellingPlanFixedPricingPolicyGenqlSelection{
    /** The price adjustment type. */
    adjustmentType?: boolean | number
    /** The price adjustment value. */
    adjustmentValue?: SellingPlanPricingPolicyAdjustmentValueGenqlSelection
    /** The date and time when the fixed selling plan pricing policy was created. */
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a fixed selling plan pricing policy. */
export interface SellingPlanFixedPricingPolicyInput {
/** ID of the pricing policy. */
id?: (Scalars['ID'] | null),
/** Price adjustment type defined by the policy. */
adjustmentType?: (SellingPlanPricingPolicyAdjustmentType | null),
/** Price adjustment value defined by the policy. */
adjustmentValue?: (SellingPlanPricingPolicyValueInput | null)}


/**
 * Represents a selling method (for example, "Subscribe and save" or "Pre-paid"). Selling plan groups
 * and associated records (selling plans and policies) are deleted 48 hours after a merchant
 * uninstalls their subscriptions app. We recommend backing up these records if you need to restore them later.
 * 
 */
export interface SellingPlanGroupGenqlSelection{
    /** The ID for app, exposed in Liquid and product JSON. */
    appId?: boolean | number
    /** Whether the given product is directly associated to the selling plan group. */
    appliesToProduct?: { __args: {
    /** The ID of the product. */
    productId: Scalars['ID']} }
    /** Whether the given product variant is directly associated to the selling plan group. */
    appliesToProductVariant?: { __args: {
    /** The ID of the product. */
    productVariantId: Scalars['ID']} }
    /**
     * Whether any of the product variants of the given product are associated to the selling plan group.
     * 
     */
    appliesToProductVariants?: { __args: {
    /** The ID of the product. */
    productId: Scalars['ID']} }
    /** The date and time when the selling plan group was created. */
    createdAt?: boolean | number
    /** The merchant-facing description of the selling plan group. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The merchant-facing label of the selling plan group. */
    merchantCode?: boolean | number
    /** The buyer-facing label of the selling plan group. */
    name?: boolean | number
    /** The values of all options available on the selling plan group. Selling plans are grouped together in Liquid when they are created by the same app, and have the same `selling_plan_group.name` and `selling_plan_group.options` values. */
    options?: boolean | number
    /** The relative position of the selling plan group for display. */
    position?: boolean | number
    /** A count of products associated to the selling plan group. */
    productCount?: boolean | number
    /** A count of product variants associated to the selling plan group. */
    productVariantCount?: { __args: {
    /** The ID of the product to scope the count to. */
    productId?: (Scalars['ID'] | null)} } | boolean | number
    /** Product variants associated to the selling plan group. */
    productVariants?: (ProductVariantConnectionGenqlSelection & { __args?: {
    /** Filters the product variants by a product ID. */
    productId?: (Scalars['ID'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Products associated to the selling plan group. */
    products?: (ProductConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Selling plans associated to the selling plan group. */
    sellingPlans?: (SellingPlanConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A summary of the policies associated to the selling plan group. */
    summary?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `sellingPlanGroupAddProductVariants` mutation. */
export interface SellingPlanGroupAddProductVariantsPayloadGenqlSelection{
    /** The updated selling plan group. */
    sellingPlanGroup?: SellingPlanGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `sellingPlanGroupAddProducts` mutation. */
export interface SellingPlanGroupAddProductsPayloadGenqlSelection{
    /** The updated selling plan group. */
    sellingPlanGroup?: SellingPlanGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SellingPlanGroups.
 * 
 */
export interface SellingPlanGroupConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SellingPlanGroupEdgeGenqlSelection
    /** A list of the nodes contained in SellingPlanGroupEdge. */
    nodes?: SellingPlanGroupGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `sellingPlanGroupCreate` mutation. */
export interface SellingPlanGroupCreatePayloadGenqlSelection{
    /** The created selling plan group object. */
    sellingPlanGroup?: SellingPlanGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `sellingPlanGroupDelete` mutation. */
export interface SellingPlanGroupDeletePayloadGenqlSelection{
    /** The ID of the deleted selling plan group object. */
    deletedSellingPlanGroupId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SellingPlanGroup and a cursor during pagination.
 * 
 */
export interface SellingPlanGroupEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SellingPlanGroupEdge. */
    node?: SellingPlanGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a selling plan group. */
export interface SellingPlanGroupInput {
/** Buyer facing label of the selling plan group. */
name?: (Scalars['String'] | null),
/** ID for app, exposed in Liquid and product JSON. */
appId?: (Scalars['String'] | null),
/** Merchant facing label of the selling plan group. */
merchantCode?: (Scalars['String'] | null),
/** Merchant facing description of the selling plan group. */
description?: (Scalars['String'] | null),
/** List of selling plans to create. */
sellingPlansToCreate?: (SellingPlanInput[] | null),
/** List of selling plans to update. */
sellingPlansToUpdate?: (SellingPlanInput[] | null),
/** List of selling plans ids to delete. */
sellingPlansToDelete?: (Scalars['ID'][] | null),
/** The values of all options available on the selling plan group. Selling plans are grouped together in Liquid when they are created by the same app, and have the same `selling_plan_group.name` and `selling_plan_group.options` values. */
options?: (Scalars['String'][] | null),
/** Relative value for display purposes of the selling plan group. A lower position will be displayed before a higher one. */
position?: (Scalars['Int'] | null)}


/** Return type for `sellingPlanGroupRemoveProductVariants` mutation. */
export interface SellingPlanGroupRemoveProductVariantsPayloadGenqlSelection{
    /** The removed product variant ids. */
    removedProductVariantIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `sellingPlanGroupRemoveProducts` mutation. */
export interface SellingPlanGroupRemoveProductsPayloadGenqlSelection{
    /** The removed product ids. */
    removedProductIds?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for resource association with a Selling Plan Group. */
export interface SellingPlanGroupResourceInput {
/** The IDs of the Variants to add to the Selling Plan Group. */
productVariantIds?: (Scalars['ID'][] | null),
/** The IDs of the Products to add to the Selling Plan Group. */
productIds?: (Scalars['ID'][] | null)}


/** Return type for `sellingPlanGroupUpdate` mutation. */
export interface SellingPlanGroupUpdatePayloadGenqlSelection{
    /** The IDs of the deleted Subscription Plans. */
    deletedSellingPlanIds?: boolean | number
    /** The updated Selling Plan Group. */
    sellingPlanGroup?: SellingPlanGroupGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SellingPlanGroupUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a selling plan group custom error.
 * 
 */
export interface SellingPlanGroupUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a selling plan. */
export interface SellingPlanInput {
/** ID of the selling plan. */
id?: (Scalars['ID'] | null),
/** Buyer facing string which describes the selling plan content. */
name?: (Scalars['String'] | null),
/** Buyer facing string which describes the selling plan commitment. */
description?: (Scalars['String'] | null),
/** Selling plan policy which describes the billing details. */
billingPolicy?: (SellingPlanBillingPolicyInput | null),
/** A selling plan policy which describes the delivery details. */
deliveryPolicy?: (SellingPlanDeliveryPolicyInput | null),
/** A selling plan policy which describes the inventory details. */
inventoryPolicy?: (SellingPlanInventoryPolicyInput | null),
/**
 * The pricing policies which describe the pricing details. Each selling plan
 * can only contain a maximum of 2 pricing policies.
 * 
 */
pricingPolicies?: (SellingPlanPricingPolicyInput[] | null),
/** The values of all options available on the selling plan. Selling plans are grouped together in Liquid when they are created by the same app, and have the same `selling_plan_group.name` and `selling_plan_group.options` values. */
options?: (Scalars['String'][] | null),
/** Relative value for display purposes of this plan. A lower position will be displayed before a higher one. */
position?: (Scalars['Int'] | null),
/** The category used to classify this selling plan for reporting purposes. */
category?: (SellingPlanCategory | null)}


/** The selling plan inventory policy. */
export interface SellingPlanInventoryPolicyGenqlSelection{
    /** When to reserve inventory for the order. */
    reserve?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update an inventory policy. */
export interface SellingPlanInventoryPolicyInput {
/** When to reserve inventory for the order. The value must be ON_FULFILLMENT or ON_SALE. */
reserve?: (SellingPlanReserve | null)}


/**
 * Represents the type of pricing associated to the selling plan (for example, a $10 or 20% discount that is set
 * for a limited period or that is fixed for the duration of the subscription). Selling plan pricing policies and
 * associated records (selling plan groups, selling plans, billing policy, and delivery policy) are deleted 48
 * hours after a merchant uninstalls their subscriptions app. We recommend backing up these records if you need
 * to restore them later.
 * 
 */
export interface SellingPlanPricingPolicyGenqlSelection{
    on_SellingPlanFixedPricingPolicy?:SellingPlanFixedPricingPolicyGenqlSelection,
    on_SellingPlanRecurringPricingPolicy?:SellingPlanRecurringPricingPolicyGenqlSelection,
    on_SellingPlanPricingPolicyBase?: SellingPlanPricingPolicyBaseGenqlSelection,
    __typename?: boolean | number
}


/** Represents a selling plan pricing policy adjustment value type. */
export interface SellingPlanPricingPolicyAdjustmentValueGenqlSelection{
    on_MoneyV2?:MoneyV2GenqlSelection,
    on_SellingPlanPricingPolicyPercentageValue?:SellingPlanPricingPolicyPercentageValueGenqlSelection,
    __typename?: boolean | number
}


/** Represents selling plan pricing policy common fields. */
export interface SellingPlanPricingPolicyBaseGenqlSelection{
    /** The price adjustment type. */
    adjustmentType?: boolean | number
    /** The price adjustment value. */
    adjustmentValue?: SellingPlanPricingPolicyAdjustmentValueGenqlSelection
    on_SellingPlanFixedPricingPolicy?: SellingPlanFixedPricingPolicyGenqlSelection
    on_SellingPlanRecurringPricingPolicy?: SellingPlanRecurringPricingPolicyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a selling plan pricing policy. */
export interface SellingPlanPricingPolicyInput {
/** Recurring pricing policy details. */
recurring?: (SellingPlanRecurringPricingPolicyInput | null),
/** Fixed pricing policy details. */
fixed?: (SellingPlanFixedPricingPolicyInput | null)}


/** The percentage value of a selling plan pricing policy percentage type. */
export interface SellingPlanPricingPolicyPercentageValueGenqlSelection{
    /** The percentage value. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a pricing policy adjustment value. */
export interface SellingPlanPricingPolicyValueInput {
/** The percentage value. */
percentage?: (Scalars['Float'] | null),
/** The fixed value for an fixed amount off or a new policy price. */
fixedValue?: (Scalars['Decimal'] | null)}


/** Represents a recurring selling plan billing policy. */
export interface SellingPlanRecurringBillingPolicyGenqlSelection{
    /** Specific anchor dates upon which the billing interval calculations should be made. */
    anchors?: SellingPlanAnchorGenqlSelection
    /** The date and time when the selling plan billing policy was created. */
    createdAt?: boolean | number
    /** The billing frequency, it can be either: day, week, month or year. */
    interval?: boolean | number
    /** The number of intervals between billings. */
    intervalCount?: boolean | number
    /** Maximum number of billing iterations. */
    maxCycles?: boolean | number
    /** Minimum number of billing iterations. */
    minCycles?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a recurring billing policy. */
export interface SellingPlanRecurringBillingPolicyInput {
/** The billing frequency, it can be either: day, week, month or year. */
interval?: (SellingPlanInterval | null),
/** The number of intervals between billings. */
intervalCount?: (Scalars['Int'] | null),
/** Specific anchor dates upon which the billing interval calculations should be made. */
anchors?: (SellingPlanAnchorInput[] | null),
/** Minimum number of billing iterations. */
minCycles?: (Scalars['Int'] | null),
/** Maximum number of billing iterations. */
maxCycles?: (Scalars['Int'] | null)}


/** Represents a recurring selling plan delivery policy. */
export interface SellingPlanRecurringDeliveryPolicyGenqlSelection{
    /** The specific anchor dates upon which the delivery interval calculations should be made. */
    anchors?: SellingPlanAnchorGenqlSelection
    /** The date and time when the selling plan delivery policy was created. */
    createdAt?: boolean | number
    /** Number of days which represent a buffer period for orders to be included in a cycle. */
    cutoff?: boolean | number
    /**
     * Whether the delivery policy is merchant or buyer-centric.
     * Buyer-centric delivery policies state the time when the buyer will receive the goods.
     * Merchant-centric delivery policies state the time when the fulfillment should be started.
     * Currently, only merchant-centric delivery policies are supported.
     * 
     */
    intent?: boolean | number
    /** The delivery frequency, it can be either: day, week, month or year. */
    interval?: boolean | number
    /** The number of intervals between deliveries. */
    intervalCount?: boolean | number
    /** The fulfillment or delivery behavior of the first fulfillment when the order is placed before the anchor. The default value for this field is `ASAP`. */
    preAnchorBehavior?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a recurring delivery policy. */
export interface SellingPlanRecurringDeliveryPolicyInput {
/** The delivery frequency, it can be either: day, week, month or year. */
interval?: (SellingPlanInterval | null),
/** The number of intervals between deliveries. */
intervalCount?: (Scalars['Int'] | null),
/** The specific anchor dates upon which the delivery interval calculations should be made. */
anchors?: (SellingPlanAnchorInput[] | null),
/** A buffer period for orders to be included in a cycle. */
cutoff?: (Scalars['Int'] | null),
/** Intention of this delivery policy, it can be either: delivery or fulfillment. */
intent?: (SellingPlanRecurringDeliveryPolicyIntent | null),
/** The pre-anchor behavior. It can be either: asap or next. */
preAnchorBehavior?: (SellingPlanRecurringDeliveryPolicyPreAnchorBehavior | null)}


/** Represents a recurring selling plan pricing policy. */
export interface SellingPlanRecurringPricingPolicyGenqlSelection{
    /** The price adjustment type. */
    adjustmentType?: boolean | number
    /** The price adjustment value. */
    adjustmentValue?: SellingPlanPricingPolicyAdjustmentValueGenqlSelection
    /** Cycle after which this pricing policy applies. */
    afterCycle?: boolean | number
    /** The date and time when the recurring selling plan pricing policy was created. */
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create or update a recurring selling plan pricing policy. */
export interface SellingPlanRecurringPricingPolicyInput {
/** ID of the pricing policy. */
id?: (Scalars['ID'] | null),
/** Price adjustment type defined by the policy. */
adjustmentType?: (SellingPlanPricingPolicyAdjustmentType | null),
/** Price adjustment value defined by the policy. */
adjustmentValue?: (SellingPlanPricingPolicyValueInput | null),
/** Cycle after which the pricing policy applies. */
afterCycle: Scalars['Int']}


/** A server pixel stores configuration for streaming customer interactions to an EventBridge or PubSub endpoint. */
export interface ServerPixelGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The current state of this server pixel. */
    status?: boolean | number
    /** Address of the EventBridge or PubSub endpoint. */
    webhookEndpointAddress?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `serverPixelCreate` mutation. */
export interface ServerPixelCreatePayloadGenqlSelection{
    /** The new server pixel. */
    serverPixel?: ServerPixelGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsServerPixelUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `serverPixelDelete` mutation. */
export interface ServerPixelDeletePayloadGenqlSelection{
    /** The ID of the server pixel that was deleted, if one was deleted. */
    deletedServerPixelId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsServerPixelUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the shipping details that the customer chose for their order. */
export interface ShippingLineGenqlSelection{
    /**
     * A reference to the carrier service that provided the rate.
     * Present when the rate was computed by a third-party carrier service.
     * 
     */
    carrierIdentifier?: boolean | number
    /** A reference to the shipping method. */
    code?: boolean | number
    /** Whether the shipping line is custom or not. */
    custom?: boolean | number
    /** The general classification of the delivery method. */
    deliveryCategory?: boolean | number
    /**
     * The discounts that have been allocated to the shipping line.
     * 
     */
    discountAllocations?: DiscountAllocationGenqlSelection
    /**
     * @deprecated Use `discountedPriceSet` instead.
     * The pre-tax shipping price with discounts applied.
     */
    discountedPrice?: MoneyV2GenqlSelection
    /** The pre-tax shipping price with discounts applied. */
    discountedPriceSet?: MoneyBagGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * @deprecated Use `originalPriceSet` instead.
     * The pre-tax shipping price without any discounts applied.
     */
    originalPrice?: MoneyV2GenqlSelection
    /** The pre-tax shipping price without any discounts applied. */
    originalPriceSet?: MoneyBagGenqlSelection
    /** The phone number at the shipping address. */
    phone?: boolean | number
    /**
     * @deprecated Use `originalPriceSet` instead.
     * Returns the price of the shipping line.
     */
    price?: boolean | number
    /**
     * The fulfillment service requested for the shipping method.
     * Present if the shipping method requires processing by a third party fulfillment service.
     * 
     */
    requestedFulfillmentService?: FulfillmentServiceGenqlSelection
    /** A unique identifier for the shipping rate. The format can change without notice and is not meant to be shown to users. */
    shippingRateHandle?: boolean | number
    /** Returns the rate source for the shipping line. */
    source?: boolean | number
    /** The TaxLine objects connected to this shipping line. */
    taxLines?: TaxLineGenqlSelection
    /** Returns the title of the shipping line. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ShippingLines.
 * 
 */
export interface ShippingLineConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ShippingLineEdgeGenqlSelection
    /** A list of the nodes contained in ShippingLineEdge. */
    nodes?: ShippingLineGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ShippingLine and a cursor during pagination.
 * 
 */
export interface ShippingLineEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ShippingLineEdge. */
    node?: ShippingLineGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for specifying the shipping details for the order. */
export interface ShippingLineInput {
/** Price of the shipping rate. */
price?: (Scalars['Money'] | null),
/** A unique identifier for the shipping rate. */
shippingRateHandle?: (Scalars['String'] | null),
/** Title of the shipping rate. */
title?: (Scalars['String'] | null)}


/** A sale associated with a shipping charge. */
export interface ShippingLineSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** The shipping line item for the associated sale. `shippingLine` is not available if the `SaleActionType` is a return. */
    shippingLine?: ShippingLineGenqlSelection
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The shipping method for the delivery. Customers will see applicable shipping methods in the shipping section of checkout.
 * 
 */
export interface ShippingMethodGenqlSelection{
    /** A unique code associated with the rate. For example: `expedited_mail` */
    code?: boolean | number
    /**
     * A description of the rate, which customers will see at checkout.
     * For example: `Local delivery`, `Free Express Worldwide`, `Includes tracking and insurance`.
     * 
     */
    label?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `shippingPackageDelete` mutation. */
export interface ShippingPackageDeletePayloadGenqlSelection{
    /** The ID of the deleted shipping package. */
    deletedId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `shippingPackageMakeDefault` mutation. */
export interface ShippingPackageMakeDefaultPayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `shippingPackageUpdate` mutation. */
export interface ShippingPackageUpdatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A shipping rate is an additional cost added to the cost of the products that were ordered. */
export interface ShippingRateGenqlSelection{
    /** Human-readable unique identifier for this shipping rate. */
    handle?: boolean | number
    /** The cost associated with the shipping rate. */
    price?: MoneyV2GenqlSelection
    /** The name of the shipping rate. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the shipping costs refunded on the Refund. */
export interface ShippingRefundGenqlSelection{
    /**
     * @deprecated Use `amountSet` instead.
     * The monetary value of the shipping fees to be refunded.
     */
    amount?: boolean | number
    /** The monetary value of the shipping fees to be refunded in shop and presentment currencies. */
    amountSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `maximumRefundableSet` instead.
     * The maximum amount of shipping fees currently refundable.
     */
    maximumRefundable?: boolean | number
    /** The maximum amount of shipping fees currently refundable in shop and presentment currencies. */
    maximumRefundableSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `taxSet` instead.
     * The monetary value of the tax allocated to shipping fees to be refunded.
     */
    tax?: boolean | number
    /** The monetary value of the tax allocated to shipping fees to be refunded in shop and presentment currencies. */
    taxSet?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields that are required to reimburse shipping costs. */
export interface ShippingRefundInput {
/** The monetary value of the shipping fees to be reimbursed. */
amount?: (Scalars['Money'] | null),
/** Whether a full refund is provided. */
fullRefund?: (Scalars['Boolean'] | null)}


/**
 * Represents a collection of general settings and information about the shop.
 * 
 */
export interface ShopGenqlSelection{
    /** A list of the shop's active alert messages that appear in the Shopify admin. */
    alerts?: ShopAlertGenqlSelection
    /** A list of the shop's product categories. Limit: 1000 product categories. */
    allProductCategories?: ProductCategoryGenqlSelection
    /**
     * @deprecated Not supported anymore.
     * The token required to query the shop's reports or dashboards.
     */
    analyticsToken?: boolean | number
    /**
     * The paginated list of fulfillment orders assigned to the shop locations owned by the app.
     * 
     * Assigned fulfillment orders are fulfillment orders that are set to be fulfilled from locations
     * managed by
     * [fulfillment services](https://shopify.dev/api/admin-graphql/latest/objects/FulfillmentService)
     * that are registered by the app.
     * One app (api_client) can host multiple fulfillment services on a shop.
     * Each fulfillment service manages a dedicated location on a shop.
     * Assigned fulfillment orders can have associated
     * [fulfillment requests](https://shopify.dev/api/admin-graphql/latest/enums/FulfillmentOrderRequestStatus),
     * or might currently not be requested to be fulfilled.
     * 
     * The app must have `read_assigned_fulfillment_orders`
     * [access scope](https://shopify.dev/docs/api/usage/access-scopes)
     * to be able to retrieve fulfillment orders assigned to its locations.
     * 
     * All assigned fulfillment orders (except those with the `CLOSED` status) will be returned by default.
     * Perform filtering with the `assignmentStatus` argument
     * to receive only fulfillment orders that have been requested to be fulfilled.
     * 
     */
    assignedFulfillmentOrders?: (FulfillmentOrderConnectionGenqlSelection & { __args?: {
    /**
     * The assigment status of the fulfillment orders that should be returned.
     * If `assignmentStatus` argument is not provided, then
     * the query will return all assigned fulfillment orders,
     * except those that have the `CLOSED` status.
     * 
     */
    assignmentStatus?: (FulfillmentOrderAssignmentStatus | null), 
    /** Returns fulfillment orders only for certain locations, specified by a list of location IDs. */
    locationIds?: (Scalars['ID'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (FulfillmentOrderSortKeys | null)} })
    /** The list of sales channels not currently installed on the shop. */
    availableChannelApps?: (AppConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The shop's billing address information. */
    billingAddress?: ShopAddressGenqlSelection
    /**
     * @deprecated Use `publicationCount` instead.
     * Exposes the number of channels.
     */
    channelCount?: boolean | number
    /** List of all channel definitions associated with a shop. */
    channelDefinitionsForInstalledChannels?: AvailableChannelDefinitionsByChannelGenqlSelection
    /**
     * @deprecated Use `QueryRoot.channels` instead.
     * List of the shop's active sales channels.
     */
    channels?: (ChannelConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Specifies whether the shop supports checkouts via Checkout API. */
    checkoutApiSupported?: boolean | number
    /**
     * @deprecated Use `QueryRoot.collectionByHandle` instead.
     * Return a collection by its handle.
     */
    collectionByHandle?: (CollectionGenqlSelection & { __args: {
    /** The handle of the collection. */
    handle: Scalars['String']} })
    /**
     * @deprecated Use `QueryRoot.collectionSavedSearches` instead.
     * List of the shop's collection saved searches.
     */
    collectionSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `QueryRoot.collections` instead.
     * List of the shop's collections.
     */
    collections?: (CollectionConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CollectionSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `collection_type`
     *  - `product_publication_status`
     *  - `publishable_status`
     *  - `published_status`
     *  - `title`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /**
     * The public-facing contact email address for the shop.
     * Customers will use this email to communicate with the shop owner.
     * 
     */
    contactEmail?: boolean | number
    /** Countries that have been defined in shipping zones for the shop. */
    countriesInShippingZones?: CountriesInShippingZonesGenqlSelection
    /** The three letter code for the currency that the shop sells in. */
    currencyCode?: boolean | number
    /** How currencies are displayed on your store. */
    currencyFormats?: CurrencyFormatsGenqlSelection
    /** The presentment currency settings for the shop excluding the shop's own currency. */
    currencySettings?: (CurrencySettingConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** Whether customer accounts are required, optional, or disabled for the shop. */
    customerAccounts?: boolean | number
    /**
     * @deprecated Use `QueryRoot.customerSavedSearches` instead.
     * List of the shop's customer saved searches.
     */
    customerSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CustomerSavedSearchSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `name`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** A list of tags that have been added to customer accounts. */
    customerTags?: (StringConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int']} })
    /**
     * @deprecated Use `QueryRoot.customers` instead.
     * Customer accounts associated to the shop.
     */
    customers?: (CustomerConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (CustomerSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `accepts_marketing`
     *  - `country`
     *  - `customer_date`
     *  - `email`
     *  - `last_abandoned_order_date`
     *  - `order_date`
     *  - `orders_count`
     *  - `phone`
     *  - `state`
     *  - `tag`
     *  - `tag_not`
     *  - `total_spent`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The shop's meta description used in search engine results. */
    description?: boolean | number
    /**
     * @deprecated Use `domainsPaginated` instead.
     * The domains configured for the shop.
     */
    domains?: DomainGenqlSelection
    /**
     * @deprecated Use `QueryRoot.draftOrderSavedSearches` instead.
     * List of the shop's draft order saved searches.
     */
    draftOrderSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of tags that have been added to draft orders. */
    draftOrderTags?: (StringConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int']} })
    /**
     * @deprecated Use `QueryRoot.draftOrders` instead.
     * List of saved draft orders on the shop.
     */
    draftOrders?: (DraftOrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (DraftOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `customer_id`
     *  - `source`
     *  - `status`
     *  - `tag`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * The shop owner's email address.
     * Shopify will use this email address to communicate with the shop owner.
     * 
     */
    email?: boolean | number
    /** The presentment currencies enabled for the shop. */
    enabledPresentmentCurrencies?: boolean | number
    /** The set of features enabled for the shop. */
    features?: ShopFeaturesGenqlSelection
    /**
     * @deprecated Use `QueryRoot.fulfillmentOrders` instead.
     * The paginated list of merchant-managed and third-party fulfillment orders.
     */
    fulfillmentOrders?: (FulfillmentOrderConnectionGenqlSelection & { __args: {
    /** Whether to include closed fulfillment orders. */
    includeClosed?: (Scalars['Boolean'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (FulfillmentOrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `assigned_location_id`
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** List of the shop's installed fulfillment services. */
    fulfillmentServices?: FulfillmentServiceGenqlSelection
    /** The shop's time zone as defined by the IANA. */
    ianaTimezone?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * @deprecated Use `QueryRoot.inventoryItems` instead.
     * List of the shop's inventory items.
     */
    inventoryItems?: (InventoryItemConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `created_at`
     *  - `id`
     *  - `sku`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /**
     * The number of pendings orders on the shop.
     * Limited to a maximum of 10000.
     * 
     */
    limitedPendingOrderCount?: LimitedPendingOrderCountGenqlSelection
    /**
     * @deprecated Use `QueryRoot.locations` instead.
     * List of active locations of the shop.
     */
    locations?: (LocationConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (LocationSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `active`
     *  - `address1`
     *  - `address2`
     *  - `city`
     *  - `country`
     *  - `legacy`
     *  - `name`
     *  - `province`
     *  - `zip`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /** If true, also include the legacy locations of fulfillment services. */
    includeLegacy?: (Scalars['Boolean'] | null), 
    /** If true, also include the locations that are deactivated. */
    includeInactive?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `QueryRoot.marketingEvents` instead.
     * List of a shop's marketing events.
     */
    marketingEvents?: (MarketingEventConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (MarketingEventSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `app_id`
     *  - `description`
     *  - `started_at`
     *  - `type`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The approval signals for a shop to support onboarding to channel apps. */
    merchantApprovalSignals?: MerchantApprovalSignalsGenqlSelection
    /** Returns a metafield by namespace and key that belongs to the resource. */
    metafield?: (MetafieldGenqlSelection & { __args: {
    /** The namespace for the metafield. */
    namespace?: (Scalars['String'] | null), 
    /** The key for the metafield. */
    key: Scalars['String']} })
    /** List of metafields that belong to the resource. */
    metafields?: (MetafieldConnectionGenqlSelection & { __args?: {
    /** The metafield namespace to filter by. */
    namespace?: (Scalars['String'] | null), 
    /** List of keys of metafields in the format `namespace.key`, will be returned in the same format. */
    keys?: (Scalars['String'][] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The shop's .myshopify.com domain name. */
    myshopifyDomain?: boolean | number
    /** The shop's name. */
    name?: boolean | number
    /** The shop's settings related to navigation. */
    navigationSettings?: NavigationItemGenqlSelection
    /** The prefix that appears before order numbers. */
    orderNumberFormatPrefix?: boolean | number
    /** The suffix that appears after order numbers. */
    orderNumberFormatSuffix?: boolean | number
    /**
     * @deprecated Use `QueryRoot.orderSavedSearches` instead.
     * List of the shop's order saved searches.
     */
    orderSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of tags that have been added to orders. */
    orderTags?: (StringConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int'], 
    /** Sort type. */
    sort?: (ShopTagSort | null)} })
    /**
     * @deprecated Use `QueryRoot.orders` instead.
     * A list of the shop's orders.
     */
    orders?: (OrderConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (OrderSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `cart_token`
     *  - `channel`
     *  - `channel_id`
     *  - `chargeback_status`
     *  - `checkout_token`
     *  - `confirmation_number`
     *  - `created_at`
     *  - `credit_card_last4`
     *  - `customer_id`
     *  - `delivery_method`
     *  - `discount_code`
     *  - `earliest_fulfill_by`
     *  - `email`
     *  - `financial_status`
     *  - `fraud_protection_level`
     *  - `fulfillment_location_id`
     *  - `fulfillment_status`
     *  - `gateway`
     *  - `location_id`
     *  - `name`
     *  - `payment_id`
     *  - `payment_provider_id`
     *  - `po_number`
     *  - `processed_at`
     *  - `reference_location_id`
     *  - `return_status`
     *  - `risk_level`
     *  - `sales_channel`
     *  - `sku`
     *  - `source_identifier`
     *  - `source_name`
     *  - `status`
     *  - `tag`
     *  - `tag_not`
     *  - `test`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The shop's settings related to payments. */
    paymentSettings?: PaymentSettingsGenqlSelection
    /**
     * @deprecated Use `limitedPendingOrderCount` instead.
     * Number of pending orders on the shop.
     */
    pendingOrderCount?: boolean | number
    /** The shop's billing plan. */
    plan?: ShopPlanGenqlSelection
    /**
     * @deprecated Use `QueryRoot.priceRuleSavedSearches` instead.
     * List of the shop's price rule saved searches.
     */
    priceRuleSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `QueryRoot.priceRules` instead.
     * List of the shop’s price rules.
     */
    priceRules?: (PriceRuleConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (PriceRuleSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `combines_with`
     *  - `created_at`
     *  - `discount_type`
     *  - `ends_at`
     *  - `starts_at`
     *  - `status`
     *  - `times_used`
     *  - `title`
     *  - `updated_at`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The primary domain of the shop's online store. */
    primaryDomain?: DomainGenqlSelection
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * Returns a private metafield by namespace and key that belongs to the resource.
     */
    privateMetafield?: (PrivateMetafieldGenqlSelection & { __args: {
    /** The namespace for the private metafield. */
    namespace: Scalars['String'], 
    /** The key for the private metafield. */
    key: Scalars['String']} })
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * List of private metafields that belong to the resource.
     */
    privateMetafields?: (PrivateMetafieldConnectionGenqlSelection & { __args?: {
    /** Filter the private metafields by namespace. */
    namespace?: (Scalars['String'] | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `QueryRoot.productByHandle` instead.
     * Return a product by its handle.
     */
    productByHandle?: (ProductGenqlSelection & { __args: {
    /** A unique string that identifies the product. Handles are automatically generated based on the product's title, and are always lowercase. Whitespace and special characters are replaced with a hyphen: `-`. If there are multiple consecutive whitespace or special characters, then they're replaced with a single hyphen. Whitespace or special characters at the beginning are removed. If a duplicate product title is used, then the handle is auto-incremented by one. For example, if you had two products called `Potion`, then their handles would be `potion` and `potion-1`. After a product has been created, changing the product title doesn't update the handle. */
    handle: Scalars['String']} })
    /** The list of all images of all products for the shop. */
    productImages?: (ImageConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductImageSortKeys | null)} })
    /**
     * @deprecated Use `QueryRoot.productSavedSearches` instead.
     * List of the shop's product saved searches.
     */
    productSavedSearches?: (SavedSearchConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A list of tags that have been added to products. */
    productTags?: (StringConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int']} })
    /** The list of types added to products. */
    productTypes?: (StringConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int']} })
    /**
     * @deprecated Use `QueryRoot.productVariants` instead.
     * List of the shop's product variants.
     */
    productVariants?: (ProductVariantConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductVariantSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `barcode`
     *  - `collection`
     *  - `delivery_profile_id`
     *  - `exclude_composite`
     *  - `exclude_variants_with_components`
     *  - `gift_card`
     *  - `inventory_quantity`
     *  - `location_id`
     *  - `managed`
     *  - `managed_by`
     *  - `option1`
     *  - `option2`
     *  - `option3`
     *  - `product_id`
     *  - `product_ids`
     *  - `product_publication_status`
     *  - `product_status`
     *  - `product_type`
     *  - `publishable_status`
     *  - `published_status`
     *  - `requires_components`
     *  - `sku`
     *  - `tag`
     *  - `tag_not`
     *  - `taxable`
     *  - `title`
     *  - `updated_at`
     *  - `vendor`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The list of vendors added to products. */
    productVendors?: (StringConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int']} })
    /**
     * @deprecated Use `QueryRoot.products`.
     * List of the shop's products.
     */
    products?: (ProductConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (ProductSortKeys | null), 
    /**
     * Supported filter parameters:
     *  - `barcode`
     *  - `bundles`
     *  - `created_at`
     *  - `delivery_profile_id`
     *  - `error_feedback`
     *  - `gift_card`
     *  - `has_only_composites`
     *  - `has_only_default_variant`
     *  - `has_variant_with_components`
     *  - `id`
     *  - `inventory_total`
     *  - `is_price_reduced`
     *  - `out_of_stock_somewhere`
     *  - `price`
     *  - `product_configuration_owner`
     *  - `product_publication_status`
     *  - `product_type`
     *  - `publishable_status`
     *  - `published_status`
     *  - `sku`
     *  - `status`
     *  - `tag`
     *  - `tag_not`
     *  - `title`
     *  - `updated_at`
     *  - `vendor`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null), 
    /**
     * The ID of an existing saved search.
     * The search’s query string is used as the query argument.
     * Refer to [SavedSearch](https://shopify.dev/api/admin-graphql/latest/objects/savedsearch).
     * 
     */
    savedSearchId?: (Scalars['ID'] | null)} })
    /** The number of publications for the shop. */
    publicationCount?: boolean | number
    /** The shop's limits for specific resources. For example, the maximum number ofvariants allowed per product, or the maximum number of locations allowed. */
    resourceLimits?: ShopResourceLimitsGenqlSelection
    /** The URL of the rich text editor that can be used for mobile devices. */
    richTextEditorUrl?: boolean | number
    /** Fetches a list of admin search results by a specified query. */
    search?: (SearchResultConnectionGenqlSelection & { __args: {
    /** The search query to filter by. */
    query: Scalars['String'], 
    /** The search result types to filter by. */
    types?: (SearchResultType[] | null), 
    /** Returns up to the first `n` elements from the list. */
    first: Scalars['Int'], 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null)} })
    /** The list of search filter options for the shop. These can be used to filter productvisibility for the shop. */
    searchFilters?: SearchFilterOptionsGenqlSelection
    /** Whether the shop has outstanding setup steps. */
    setupRequired?: boolean | number
    /** The list of countries that the shop ships to. */
    shipsToCountries?: boolean | number
    /** The list of all legal policies associated with a shop. */
    shopPolicies?: ShopPolicyGenqlSelection
    /**
     * @deprecated Use `QueryRoot.shopifyPaymentsAccount` instead.
     * Shopify Payments account information, including balances and payouts.
     */
    shopifyPaymentsAccount?: ShopifyPaymentsAccountGenqlSelection
    /** The paginated list of the shop's staff members. */
    staffMembers?: (StaffMemberConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The storefront access token of a private application. These are scoped per-application. */
    storefrontAccessTokens?: (StorefrontAccessTokenConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `url` instead.
     * The URL of the shop's storefront.
     */
    storefrontUrl?: boolean | number
    /** Whether the shop charges taxes for shipping. */
    taxShipping?: boolean | number
    /** Whether applicable taxes are included in the shop's product prices. */
    taxesIncluded?: boolean | number
    /** The shop's time zone abbreviation. */
    timezoneAbbreviation?: boolean | number
    /** The shop's time zone offset. */
    timezoneOffset?: boolean | number
    /** The shop's time zone offset expressed as a number of minutes. */
    timezoneOffsetMinutes?: boolean | number
    /** Whether transactional SMS sent by Shopify have been disabled for a shop. */
    transactionalSmsDisabled?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /** The shop's unit system for weights and measures. */
    unitSystem?: boolean | number
    /** Fetches a list of images uploaded to the shop by their IDs. */
    uploadedImagesByIds?: (ImageGenqlSelection & { __args: {
    /** The IDs of the uploaded images. */
    imageIds: Scalars['ID'][]} })
    /** The URL of the shop's online store. */
    url?: boolean | number
    /** The shop's primary unit of weight for products and shipping. */
    weightUnit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The shop's billing address. */
export interface ShopAddressGenqlSelection{
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: boolean | number
    /**
     * The second line of the address. Typically the number of the apartment, suite, or unit.
     * 
     */
    address2?: boolean | number
    /**
     * The name of the city, district, village, or town.
     * 
     */
    city?: boolean | number
    /** The name of the company or organization. */
    company?: boolean | number
    /** Whether the address coordinates are valid. */
    coordinatesValidated?: boolean | number
    /**
     * The name of the country.
     * 
     */
    country?: boolean | number
    /**
     * @deprecated Use `countryCodeV2` instead.
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCode?: boolean | number
    /**
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCodeV2?: boolean | number
    /**
     * @deprecated Always null in this context.
     * The first name.
     */
    firstName?: boolean | number
    /** A formatted version of the address, customized by the provided arguments. */
    formatted?: { __args: {
    /** Whether to include the company in the formatted address. */
    withCompany?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A comma-separated list of the values for city, province, and country. */
    formattedArea?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * @deprecated Always null in this context.
     * The last name.
     */
    lastName?: boolean | number
    /** The latitude coordinate of the address. */
    latitude?: boolean | number
    /** The longitude coordinate of the address. */
    longitude?: boolean | number
    /**
     * @deprecated Always null in this context.
     * The full name, based on firstName and lastName.
     * 
     */
    name?: boolean | number
    /**
     * A phone number associated with the address.
     * 
     * Formatted using E.164 standard. For example, _+16135551111_.
     * 
     */
    phone?: boolean | number
    /** The region of the address, such as the province, state, or district. */
    province?: boolean | number
    /**
     * The two-letter code for the region.
     * 
     * For example, ON.
     * 
     */
    provinceCode?: boolean | number
    /** The zip or postal code of the address. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An alert message that appears in the Shopify admin about a problem with a store setting, with an action to take. For example, you could show an alert to ask the merchant to enter their billing information to activate Shopify Plus.
 * 
 */
export interface ShopAlertGenqlSelection{
    /**
     * The text for the button in the alert that links to related information. For example, _Add credit card_.
     * 
     */
    action?: ShopAlertActionGenqlSelection
    /** A description of the alert and further information, such as whether the merchant will be charged. */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An action associated to a shop alert, such as adding a credit card. */
export interface ShopAlertActionGenqlSelection{
    /** The text for the button in the alert. For example, _Add credit card_. */
    title?: boolean | number
    /** The target URL that the button links to. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Billing preferences for the shop. */
export interface ShopBillingPreferencesGenqlSelection{
    /** The currency the shop uses to pay for apps and services. */
    currency?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the feature set available to the shop.
 * Most fields specify whether a feature is enabled for a shop, and some fields return information
 * related to specific features.
 * 
 */
export interface ShopFeaturesGenqlSelection{
    /** Whether a shop has access to Avalara AvaTax. */
    avalaraAvatax?: boolean | number
    /** The branding of the shop, which influences its look and feel in the Shopify admin. */
    branding?: boolean | number
    /** Represents the Bundles feature configuration for the shop. */
    bundles?: BundlesFeatureGenqlSelection
    /** Whether a shop's online store can have CAPTCHA protection. */
    captcha?: boolean | number
    /** Whether a shop's online store can have CAPTCHA protection for domains not managed by Shopify. */
    captchaExternalDomains?: boolean | number
    /**
     * @deprecated Delivery profiles are now 100% enabled across Shopify.
     * Whether the delivery profiles functionality is enabled for this shop.
     */
    deliveryProfiles?: boolean | number
    /** Whether a shop has access to the Google Analytics dynamic remarketing feature. */
    dynamicRemarketing?: boolean | number
    /** Whether a shop can be migrated to use Shopify subscriptions. */
    eligibleForSubscriptionMigration?: boolean | number
    /** Whether a shop is configured properly to sell subscriptions. */
    eligibleForSubscriptions?: boolean | number
    /** Whether a shop can create gift cards. */
    giftCards?: boolean | number
    /**
     * Whether a shop displays Harmonized System codes on products. This is used for customs when shipping
     * internationally.
     * 
     */
    harmonizedSystemCode?: boolean | number
    /** Whether a shop can enable international domains. */
    internationalDomains?: boolean | number
    /** Whether a shop can enable international price overrides. */
    internationalPriceOverrides?: boolean | number
    /** Whether a shop can enable international price rules. */
    internationalPriceRules?: boolean | number
    /** Whether a shop has enabled a legacy subscription gateway to handle older subscriptions. */
    legacySubscriptionGatewayEnabled?: boolean | number
    /**
     * Whether to show the Live View metrics in the Shopify admin. Live view is hidden from merchants that are on a trial
     * or don't have a storefront.
     * 
     */
    liveView?: boolean | number
    /**
     * @deprecated All shops support multi-location inventory. Use `QueryRoot.locations` to determine whether shop has more than one location. 
     * Whether a shop has multi-location functionality.
     */
    multiLocation?: boolean | number
    /** Whether a shop has access to the onboarding visual. */
    onboardingVisual?: boolean | number
    /** Whether a shop is configured to sell subscriptions with PayPal Express. */
    paypalExpressSubscriptionGatewayStatus?: boolean | number
    /** Whether a shop has access to all reporting features. */
    reports?: boolean | number
    /** Whether a shop has ever had subscription products. */
    sellsSubscriptions?: boolean | number
    /**
     * @deprecated Use Shop.plan.shopifyPlus instead.
     * Whether the shop has a Shopify Plus subscription.
     */
    shopifyPlus?: boolean | number
    /**
     * Whether to show metrics in the Shopify admin. Metrics are hidden for new merchants until they become meaningful.
     * 
     */
    showMetrics?: boolean | number
    /** Whether a shop has an online store. */
    storefront?: boolean | number
    /** Whether a shop is using Shopify Balance. */
    usingShopifyBalance?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A locale that's been enabled on a shop. */
export interface ShopLocaleGenqlSelection{
    /** The locale ISO code. */
    locale?: boolean | number
    /** The market web presences that use the locale. */
    marketWebPresences?: MarketWebPresenceGenqlSelection
    /** The human-readable locale name. */
    name?: boolean | number
    /** Whether the locale is the default locale for the shop. */
    primary?: boolean | number
    /** Whether the locale is visible to buyers. */
    published?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `shopLocaleDisable` mutation. */
export interface ShopLocaleDisablePayloadGenqlSelection{
    /** ISO code of the locale that was deleted. */
    locale?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `shopLocaleEnable` mutation. */
export interface ShopLocaleEnablePayloadGenqlSelection{
    /** ISO code of the locale that was enabled. */
    shopLocale?: ShopLocaleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a shop locale.
 * 
 */
export interface ShopLocaleInput {
/** Whether the locale is published. Only published locales are visible to the buyer. */
published?: (Scalars['Boolean'] | null),
/** The market web presences on which the locale should be enabled. Pass in an empty array to remove the locale across all market web presences. */
marketWebPresenceIds?: (Scalars['ID'][] | null)}


/** Return type for `shopLocaleUpdate` mutation. */
export interface ShopLocaleUpdatePayloadGenqlSelection{
    /** The locale that was updated. */
    shopLocale?: ShopLocaleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The billing plan of the shop.
 * 
 */
export interface ShopPlanGenqlSelection{
    /** The name of the shop's billing plan. */
    displayName?: boolean | number
    /** Whether the shop is a partner development shop for testing purposes. */
    partnerDevelopment?: boolean | number
    /** Whether the shop has a Shopify Plus subscription. */
    shopifyPlus?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Policy that a merchant has configured for their store, such as their refund or privacy policy. */
export interface ShopPolicyGenqlSelection{
    /** The text of the policy. The maximum size is 512kb. */
    body?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The translations associated with the resource. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations locale. */
    locale: Scalars['String'], 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    /** The shop policy type. */
    type?: boolean | number
    /** The public URL of the policy. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to update a policy. */
export interface ShopPolicyInput {
/** The shop policy type. */
type: ShopPolicyType,
/** Policy text, maximum size of 512kb. */
body: Scalars['String']}


/** Return type for `shopPolicyUpdate` mutation. */
export interface ShopPolicyUpdatePayloadGenqlSelection{
    /** The shop policy that has been updated. */
    shopPolicy?: ShopPolicyGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ShopPolicyUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of a shop policy mutation. */
export interface ShopPolicyUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `shopResourceFeedbackCreate` mutation. */
export interface ShopResourceFeedbackCreatePayloadGenqlSelection{
    /** The shop feedback that's created. */
    feedback?: AppFeedbackGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ShopResourceFeedbackCreateUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `ShopResourceFeedbackCreate`. */
export interface ShopResourceFeedbackCreateUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Resource limits of a shop. */
export interface ShopResourceLimitsGenqlSelection{
    /** Maximum number of locations allowed. */
    locationLimit?: boolean | number
    /** Maximum number of product options allowed. */
    maxProductOptions?: boolean | number
    /** The maximum number of variants allowed per product. */
    maxProductVariants?: boolean | number
    /** Whether the shop has reached the limit of the number of URL redirects it can make for resources. */
    redirectLimitReached?: boolean | number
    /** The maximum number of variants allowed per shop. If the shop has unlimited SKUs, then the quantity used cannot be retrieved. */
    skuResourceLimits?: ResourceLimitGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Shopify Function. */
export interface ShopifyFunctionGenqlSelection{
    /** The API type of the Shopify Function. */
    apiType?: boolean | number
    /** The API version of the Shopify Function. */
    apiVersion?: boolean | number
    /** The app that owns the Shopify Function. */
    app?: AppGenqlSelection
    /** The App Bridge information for the Shopify Function. */
    appBridge?: FunctionsAppBridgeGenqlSelection
    /** The client ID of the app that owns the Shopify Function. */
    appKey?: boolean | number
    /** The description of the Shopify Function. */
    description?: boolean | number
    /** The ID of the Shopify Function. */
    id?: boolean | number
    /** The input query of the Shopify Function. */
    inputQuery?: boolean | number
    /** The title of the Shopify Function. */
    title?: boolean | number
    /** If the Shopify Function uses the creation UI in the Admin. */
    useCreationUi?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ShopifyFunctions.
 * 
 */
export interface ShopifyFunctionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ShopifyFunctionEdgeGenqlSelection
    /** A list of the nodes contained in ShopifyFunctionEdge. */
    nodes?: ShopifyFunctionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ShopifyFunction and a cursor during pagination.
 * 
 */
export interface ShopifyFunctionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ShopifyFunctionEdge. */
    node?: ShopifyFunctionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Balance and payout information for a
 * [Shopify Payments](https://help.shopify.com/manual/payments/shopify-payments/getting-paid-with-shopify-payments)
 * account. Balance includes all balances for the currencies supported by the shop.
 * You can also query for a list of payouts, where each payout includes the corresponding currencyCode field.
 * 
 */
export interface ShopifyPaymentsAccountGenqlSelection{
    /** Whether the Shopify Payments setup is completed. */
    activated?: boolean | number
    /** Current balances in all currencies for the account. */
    balance?: MoneyV2GenqlSelection
    /** All bank accounts configured for the Shopify Payments account. */
    bankAccounts?: (ShopifyPaymentsBankAccountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /**
     * @deprecated Use `chargeStatementDescriptors` instead.
     * The statement descriptor used for charges.
     * 
     * The statement descriptor appears on a customer's credit card or bank statement when they make a purchase.
     * 
     */
    chargeStatementDescriptor?: boolean | number
    /**
     * The statement descriptors used for charges.
     * 
     * These descriptors appear on a customer's credit card or bank statement when they make a purchase.
     * 
     */
    chargeStatementDescriptors?: ShopifyPaymentsChargeStatementDescriptorGenqlSelection
    /** The Shopify Payments account country. */
    country?: boolean | number
    /** The default payout currency for the Shopify Payments account. */
    defaultCurrency?: boolean | number
    /** All disputes related to the Shopify Payments account. */
    disputes?: (ShopifyPaymentsDisputeConnectionGenqlSelection & { __args: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /**
     * Supported filter parameters:
     *  - `id`
     *  - `initiated_at`
     *  - `status`
     * 
     * See the detailed [search syntax](https://shopify.dev/api/usage/search-syntax)
     * for more information about using filters.
     * 
     */
    query?: (Scalars['String'] | null)} })
    /** The fraud settings of the Shopify Payments account. */
    fraudSettings?: ShopifyPaymentsFraudSettingsGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The notifications settings for the account. */
    notificationSettings?: ShopifyPaymentsNotificationSettingsGenqlSelection
    /** Whether the Shopify Payments account can be onboarded. */
    onboardable?: boolean | number
    /** The payout schedule for the account. */
    payoutSchedule?: ShopifyPaymentsPayoutScheduleGenqlSelection
    /**
     * The descriptor used for payouts.
     * 
     * The descriptor appears on a merchant's bank statement when they receive a payout.
     * 
     */
    payoutStatementDescriptor?: boolean | number
    /** All current and previous payouts made between the account and the bank account. */
    payouts?: (ShopifyPaymentsPayoutConnectionGenqlSelection & { __args?: {
    /** Filter the direction of the payout. */
    transactionType?: (ShopifyPaymentsPayoutTransactionType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The permitted documents for identity verification. */
    permittedVerificationDocuments?: ShopifyPaymentsVerificationDocumentGenqlSelection
    /** The verifications necessary for this account. */
    verifications?: ShopifyPaymentsVerificationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A bank account that can receive payouts.
 * 
 */
export interface ShopifyPaymentsBankAccountGenqlSelection{
    /** The account number of the bank account. */
    accountNumber?: boolean | number
    /** The last digits of the account number (the rest is redacted). */
    accountNumberLastDigits?: boolean | number
    /**
     * The name of the bank.
     * 
     */
    bankName?: boolean | number
    /**
     * The country of the bank.
     * 
     */
    country?: boolean | number
    /** The date that the bank account was created. */
    createdAt?: boolean | number
    /**
     * The currency of the bank account.
     * 
     */
    currency?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** All current and previous payouts made between the account and the bank account. */
    payouts?: (ShopifyPaymentsPayoutConnectionGenqlSelection & { __args?: {
    /** Filter the direction of the payout. */
    transactionType?: (ShopifyPaymentsPayoutTransactionType | null), 
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The routing number of the bank account. */
    routingNumber?: boolean | number
    /**
     * The status of the bank account.
     * 
     */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ShopifyPaymentsBankAccounts.
 * 
 */
export interface ShopifyPaymentsBankAccountConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ShopifyPaymentsBankAccountEdgeGenqlSelection
    /** A list of the nodes contained in ShopifyPaymentsBankAccountEdge. */
    nodes?: ShopifyPaymentsBankAccountGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ShopifyPaymentsBankAccount and a cursor during pagination.
 * 
 */
export interface ShopifyPaymentsBankAccountEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ShopifyPaymentsBankAccountEdge. */
    node?: ShopifyPaymentsBankAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The charge descriptors for a payments account. */
export interface ShopifyPaymentsChargeStatementDescriptorGenqlSelection{
    /** The default charge statement descriptor. */
    default?: boolean | number
    /** The prefix of the statement descriptor. */
    prefix?: boolean | number
    on_ShopifyPaymentsDefaultChargeStatementDescriptor?: ShopifyPaymentsDefaultChargeStatementDescriptorGenqlSelection
    on_ShopifyPaymentsJpChargeStatementDescriptor?: ShopifyPaymentsJpChargeStatementDescriptorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The charge descriptors for a payments account. */
export interface ShopifyPaymentsDefaultChargeStatementDescriptorGenqlSelection{
    /** The default charge statement descriptor. */
    default?: boolean | number
    /** The prefix of the statement descriptor. */
    prefix?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A dispute occurs when a buyer questions the legitimacy of a charge with their financial institution. */
export interface ShopifyPaymentsDisputeGenqlSelection{
    /** The total amount disputed by the cardholder. */
    amount?: MoneyV2GenqlSelection
    /** The deadline for evidence submission. */
    evidenceDueBy?: boolean | number
    /** The date when evidence was sent. Returns null if evidence has not yet been sent. */
    evidenceSentOn?: boolean | number
    /** The date when this dispute was resolved. Returns null if the dispute is not yet resolved. */
    finalizedOn?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The date when this dispute was initiated. */
    initiatedAt?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The order that contains the charge that is under dispute. */
    order?: OrderGenqlSelection
    /** The reason of the dispute. */
    reasonDetails?: ShopifyPaymentsDisputeReasonDetailsGenqlSelection
    /** The current state of the dispute. */
    status?: boolean | number
    /** Indicates if this dispute is still in the inquiry phase or has turned into a chargeback. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ShopifyPaymentsDisputes.
 * 
 */
export interface ShopifyPaymentsDisputeConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ShopifyPaymentsDisputeEdgeGenqlSelection
    /** A list of the nodes contained in ShopifyPaymentsDisputeEdge. */
    nodes?: ShopifyPaymentsDisputeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ShopifyPaymentsDispute and a cursor during pagination.
 * 
 */
export interface ShopifyPaymentsDisputeEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ShopifyPaymentsDisputeEdge. */
    node?: ShopifyPaymentsDisputeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The evidence associated with the dispute. */
export interface ShopifyPaymentsDisputeEvidenceGenqlSelection{
    /** The activity logs associated with the dispute evidence. */
    accessActivityLog?: boolean | number
    /** The billing address that is provided by the customer. */
    billingAddress?: MailingAddressGenqlSelection
    /** The cancellation policy disclosure associated with the dispute evidence. */
    cancellationPolicyDisclosure?: boolean | number
    /** The cancellation policy file associated with the dispute evidence. */
    cancellationPolicyFile?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** The cancellation rebuttal associated with the dispute evidence. */
    cancellationRebuttal?: boolean | number
    /** The customer communication file associated with the dispute evidence. */
    customerCommunicationFile?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** The customer's email address. */
    customerEmailAddress?: boolean | number
    /** The customer's first name. */
    customerFirstName?: boolean | number
    /** The customer's last name. */
    customerLastName?: boolean | number
    /** The customer purchase ip for this dispute evidence. */
    customerPurchaseIp?: boolean | number
    /** The dispute associated with the evidence. */
    dispute?: ShopifyPaymentsDisputeGenqlSelection
    /** The file uploads associated with the dispute evidence. */
    disputeFileUploads?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** The fulfillments associated with the dispute evidence. */
    fulfillments?: ShopifyPaymentsDisputeFulfillmentGenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** The product description for this dispute evidence. */
    productDescription?: boolean | number
    /** The refund policy disclosure associated with the dispute evidence. */
    refundPolicyDisclosure?: boolean | number
    /** The refund policy file associated with the dispute evidence. */
    refundPolicyFile?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** The refund refusal explanation associated with dispute evidence. */
    refundRefusalExplanation?: boolean | number
    /** The service documentation file associated with the dispute evidence. */
    serviceDocumentationFile?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** The mailing address for shipping that is provided by the customer. */
    shippingAddress?: MailingAddressGenqlSelection
    /** The shipping documentation file associated with the dispute evidence. */
    shippingDocumentationFile?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** Whether the dispute evidence is submitted. */
    submitted?: boolean | number
    /** The uncategorized file associated with the dispute evidence. */
    uncategorizedFile?: ShopifyPaymentsDisputeFileUploadGenqlSelection
    /** The uncategorized text for the dispute evidence. */
    uncategorizedText?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to update a dispute evidence object. */
export interface ShopifyPaymentsDisputeEvidenceUpdateInput {
/** Customer email address. */
customerEmailAddress?: (Scalars['String'] | null),
/** Customer last name. */
customerLastName?: (Scalars['String'] | null),
/** Customer first name. */
customerFirstName?: (Scalars['String'] | null),
/** The shipping address associated with the dispute evidence. */
shippingAddress?: (MailingAddressInput | null),
/** Uncategorized text. */
uncategorizedText?: (Scalars['String'] | null),
/** Activity logs. */
accessActivityLog?: (Scalars['String'] | null),
/** Cancellation policy disclosure. */
cancellationPolicyDisclosure?: (Scalars['String'] | null),
/** Cancellation rebuttal. */
cancellationRebuttal?: (Scalars['String'] | null),
/** Refund policy disclosure. */
refundPolicyDisclosure?: (Scalars['String'] | null),
/** Refund refusal explanation. */
refundRefusalExplanation?: (Scalars['String'] | null),
/** Cancellation policy file. */
cancellationPolicyFile?: (ShopifyPaymentsDisputeFileUploadUpdateInput | null),
/** Customer communication file. */
customerCommunicationFile?: (ShopifyPaymentsDisputeFileUploadUpdateInput | null),
/** Refund policy file. */
refundPolicyFile?: (ShopifyPaymentsDisputeFileUploadUpdateInput | null),
/** Shipping documentation file. */
shippingDocumentationFile?: (ShopifyPaymentsDisputeFileUploadUpdateInput | null),
/** Uncategorized file. */
uncategorizedFile?: (ShopifyPaymentsDisputeFileUploadUpdateInput | null),
/** Service documentation file. */
serviceDocumentationFile?: (ShopifyPaymentsDisputeFileUploadUpdateInput | null),
/** Whether to submit the evidence. */
submitEvidence?: (Scalars['Boolean'] | null)}


/** The file upload associated with the dispute evidence. */
export interface ShopifyPaymentsDisputeFileUploadGenqlSelection{
    /** The type of the file for the dispute evidence. */
    disputeEvidenceType?: boolean | number
    /** The file size. */
    fileSize?: boolean | number
    /** The file type. */
    fileType?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The original file name. */
    originalFileName?: boolean | number
    /** The URL for accessing the file. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to update a dispute file upload object. */
export interface ShopifyPaymentsDisputeFileUploadUpdateInput {
/** The ID of the file upload to be updated. */
id: Scalars['ID'],
/** Whether to delete this file upload. */
destroy?: (Scalars['Boolean'] | null)}


/** The fulfillment associated with dispute evidence. */
export interface ShopifyPaymentsDisputeFulfillmentGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The shipping carrier for this fulfillment. */
    shippingCarrier?: boolean | number
    /** The shipping date for this fulfillment. */
    shippingDate?: boolean | number
    /** The shipping tracking number for this fulfillment. */
    shippingTrackingNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Details regarding a dispute reason. */
export interface ShopifyPaymentsDisputeReasonDetailsGenqlSelection{
    /** The raw code provided by the payment network. */
    networkReasonCode?: boolean | number
    /** The reason for the dispute provided by the cardholder's banks. */
    reason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Presents all Shopify Payments information related to an extended authorization. */
export interface ShopifyPaymentsExtendedAuthorizationGenqlSelection{
    /**
     * The time after which the extended authorization expires. After the expiry, the merchant is unable to capture the payment.
     * 
     */
    extendedAuthorizationExpiresAt?: boolean | number
    /**
     * The time after which capture will incur an additional fee.
     * 
     */
    standardAuthorizationExpiresAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The fraud settings of a payments account. */
export interface ShopifyPaymentsFraudSettingsGenqlSelection{
    /** Decline a charge if there is an AVS failure. */
    declineChargeOnAvsFailure?: boolean | number
    /** Decline a charge if there is an CVC failure. */
    declineChargeOnCvcFailure?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The charge descriptors for a Japanese payments account. */
export interface ShopifyPaymentsJpChargeStatementDescriptorGenqlSelection{
    /** The default charge statement descriptor. */
    default?: boolean | number
    /** The charge statement descriptor in kana. */
    kana?: boolean | number
    /** The charge statement descriptor in kanji. */
    kanji?: boolean | number
    /** The prefix of the statement descriptor. */
    prefix?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The notification settings for the account. */
export interface ShopifyPaymentsNotificationSettingsGenqlSelection{
    /** Receive email notifications when new payouts are sent or payouts fail. */
    payouts?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Payouts represent the movement of money between a merchant's Shopify
 * Payments balance and their bank account.
 * 
 */
export interface ShopifyPaymentsPayoutGenqlSelection{
    /** The bank account for the payout. */
    bankAccount?: ShopifyPaymentsBankAccountGenqlSelection
    /**
     * @deprecated Use `net` instead.
     * The total amount and currency of the payout.
     */
    gross?: MoneyV2GenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /**
     * The exact time when the payout was issued. The payout only contains
     * balance transactions that were available at this time.
     * 
     */
    issuedAt?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The total amount and currency of the payout. */
    net?: MoneyV2GenqlSelection
    /** The transfer status of the payout. */
    status?: boolean | number
    /** The summary of the payout. */
    summary?: ShopifyPaymentsPayoutSummaryGenqlSelection
    /** The direction of the payout. */
    transactionType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple ShopifyPaymentsPayouts.
 * 
 */
export interface ShopifyPaymentsPayoutConnectionGenqlSelection{
    /** A list of edges. */
    edges?: ShopifyPaymentsPayoutEdgeGenqlSelection
    /** A list of the nodes contained in ShopifyPaymentsPayoutEdge. */
    nodes?: ShopifyPaymentsPayoutGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one ShopifyPaymentsPayout and a cursor during pagination.
 * 
 */
export interface ShopifyPaymentsPayoutEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of ShopifyPaymentsPayoutEdge. */
    node?: ShopifyPaymentsPayoutGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The payment schedule for a payments account. */
export interface ShopifyPaymentsPayoutScheduleGenqlSelection{
    /** The interval at which payouts are sent to the connected bank account. */
    interval?: boolean | number
    /**
     * The day of the month funds will be paid out.
     * 
     * The value can be any day of the month from the 1st to the 31st.
     * If the payment interval is set to monthly, this value will be used.
     * Payouts scheduled between 29-31st of the month are sent on the last day of shorter months.
     * 
     */
    monthlyAnchor?: boolean | number
    /**
     * The day of the week funds will be paid out.
     * 
     * The value can be any weekday from Monday to Friday.
     * If the payment interval is set to weekly, this value will be used.
     * 
     */
    weeklyAnchor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Breakdown of the total fees and gross of each of the different types of transactions associated
 * with the payout.
 * 
 */
export interface ShopifyPaymentsPayoutSummaryGenqlSelection{
    /** Total fees for all adjustments including disputes. */
    adjustmentsFee?: MoneyV2GenqlSelection
    /** Total gross amount for all adjustments including disputes. */
    adjustmentsGross?: MoneyV2GenqlSelection
    /** Total fees for all charges. */
    chargesFee?: MoneyV2GenqlSelection
    /** Total gross amount for all charges. */
    chargesGross?: MoneyV2GenqlSelection
    /** Total fees for all refunds. */
    refundsFee?: MoneyV2GenqlSelection
    /** Total gross amount for all refunds. */
    refundsFeeGross?: MoneyV2GenqlSelection
    /** Total fees for all reserved funds. */
    reservedFundsFee?: MoneyV2GenqlSelection
    /** Total gross amount for all reserved funds. */
    reservedFundsGross?: MoneyV2GenqlSelection
    /** Total fees for all retried payouts. */
    retriedPayoutsFee?: MoneyV2GenqlSelection
    /** Total gross amount for all retried payouts. */
    retriedPayoutsGross?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Presents all Shopify Payments specific information related to an order refund. */
export interface ShopifyPaymentsRefundSetGenqlSelection{
    /**
     * The acquirer reference number (ARN) code generated for Visa/Mastercard transactions.
     * 
     */
    acquirerReferenceNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Presents all Shopify Payments specific information related to an order transaction. */
export interface ShopifyPaymentsTransactionSetGenqlSelection{
    /**
     * Contains all fields related to an extended authorization.
     * 
     */
    extendedAuthorizationSet?: ShopifyPaymentsExtendedAuthorizationGenqlSelection
    /**
     * Contains all fields related to a refund.
     * 
     */
    refundSet?: ShopifyPaymentsRefundSetGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Each subject (individual) of an account has a verification object giving
 *  information about the verification state.
 * 
 */
export interface ShopifyPaymentsVerificationGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The status of the verification. */
    status?: boolean | number
    /** The subject/individual who has to be verified. */
    subject?: ShopifyPaymentsVerificationSubjectGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A document which can be used to verify an individual. */
export interface ShopifyPaymentsVerificationDocumentGenqlSelection{
    /** True if the back side of the document is required. */
    backRequired?: boolean | number
    /** True if the front side of the document is required. */
    frontRequired?: boolean | number
    /** The type of the document which can be used for verification. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The verification subject represents an individual that has to be verified. */
export interface ShopifyPaymentsVerificationSubjectGenqlSelection{
    /** The family name of the individual to verify. */
    familyName?: boolean | number
    /** The given name of the individual to verify. */
    givenName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A response to a ShopifyQL query. */
export interface ShopifyqlResponseGenqlSelection{
    /** A list of parse errors, if parsing fails. */
    parseErrors?: ParseErrorGenqlSelection
    /**
     * The result in a tabular format with schema and row data.
     *           To be used as a raw 2-dimensional response of the query.
     *           It's always present even if query has a `VISUALIZE` keyword.
     */
    tableData?: TableDataGenqlSelection
    on_PolarisVizResponse?: PolarisVizResponseGenqlSelection
    on_TableResponse?: TableResponseGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents the data about a staff member's Shopify account. Merchants can use staff member data to get more information about the staff members in their store.
 * 
 */
export interface StaffMemberGenqlSelection{
    /** Whether the staff member is active. */
    active?: boolean | number
    /** The image used as the staff member's avatar in the Shopify admin. */
    avatar?: (ImageGenqlSelection & { __args?: {
    /** The default image returned if the staff member has no avatar. */
    fallback?: (StaffMemberDefaultImage | null)} })
    /** The staff member's email address. */
    email?: boolean | number
    /** Whether the staff member's account exists. */
    exists?: boolean | number
    /** The staff member's first name. */
    firstName?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The staff member's initials, if available. */
    initials?: boolean | number
    /** Whether the staff member is the shop owner. */
    isShopOwner?: boolean | number
    /** The staff member's last name. */
    lastName?: boolean | number
    /** The staff member's preferred locale. Locale values use the format `language` or `language-COUNTRY`, where `language` is a two-letter language code, and `COUNTRY` is a two-letter country code. For example: `en` or `en-US` */
    locale?: boolean | number
    /** The staff member's full name. */
    name?: boolean | number
    /** The staff member's phone number. */
    phone?: boolean | number
    /** The data used to customize the Shopify admin experience for the staff member. */
    privateData?: StaffMemberPrivateDataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple StaffMembers.
 * 
 */
export interface StaffMemberConnectionGenqlSelection{
    /** A list of edges. */
    edges?: StaffMemberEdgeGenqlSelection
    /** A list of the nodes contained in StaffMemberEdge. */
    nodes?: StaffMemberGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one StaffMember and a cursor during pagination.
 * 
 */
export interface StaffMemberEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of StaffMemberEdge. */
    node?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the data used to customize the Shopify admin experience for a logged-in staff member. */
export interface StaffMemberPrivateDataGenqlSelection{
    /** The URL to the staff member's account settings page. */
    accountSettingsUrl?: boolean | number
    /** The date and time when the staff member was created. */
    createdAt?: boolean | number
    /**
     * @deprecated Use StaffMember.permissions.userPermissions instead
     * Access permissions for the staff member.
     */
    permissions?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An image to be uploaded.
 * 
 * Deprecated in favor of
 * [StagedUploadInput](https://shopify.dev/api/admin-graphql/latest/objects/StagedUploadInput),
 * which is used by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface StageImageInput {
/** The image resource. */
resource: StagedUploadTargetGenerateUploadResource,
/** The image filename. */
filename: Scalars['String'],
/** The image MIME type. */
mimeType: Scalars['String'],
/** HTTP method to be used by the staged upload. */
httpMethod?: (StagedUploadHttpMethodType | null)}


/**
 * Information about a staged upload target, which should be used to send a request to upload
 * the file.
 * 
 * For more information on the upload process, refer to
 * [Upload media to Shopify](https://shopify.dev/apps/online-store/media/products#step-1-upload-media-to-shopify).
 * 
 */
export interface StagedMediaUploadTargetGenqlSelection{
    /** Parameters needed to authenticate a request to upload the file. */
    parameters?: StagedUploadParameterGenqlSelection
    /**
     * The URL to be passed as `originalSource` in
     * [CreateMediaInput](https://shopify.dev/api/admin-graphql/latest/input-objects/CreateMediaInput)
     * and [FileCreateInput](https://shopify.dev/api/admin-graphql/2022-04/input-objects/FileCreateInput)
     * for the [productCreateMedia](https://shopify.dev/api/admin-graphql/2022-04/mutations/productCreateMedia)
     * and [fileCreate](https://shopify.dev/api/admin-graphql/2022-04/mutations/fileCreate)
     * mutations.
     * 
     */
    resourceUrl?: boolean | number
    /**
     * The URL to use when sending an request to upload the file. Should be used in conjunction with
     * the parameters field.
     * 
     */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for generating staged upload targets. */
export interface StagedUploadInput {
/** The file's intended Shopify resource type. */
resource: StagedUploadTargetGenerateUploadResource,
/** The file's name and extension. */
filename: Scalars['String'],
/** The file's MIME type. */
mimeType: Scalars['String'],
/**
 * The HTTP method to be used when sending a request to upload the file using the returned staged
 * upload target.
 * 
 */
httpMethod?: (StagedUploadHttpMethodType | null),
/**
 * The size of the file to upload, in bytes. This is required when the request's resource property is set to
 * [VIDEO](https://shopify.dev/api/admin-graphql/latest/enums/StagedUploadTargetGenerateUploadResource#value-video)
 * or [MODEL_3D](https://shopify.dev/api/admin-graphql/latest/enums/StagedUploadTargetGenerateUploadResource#value-model3d).
 * 
 */
fileSize?: (Scalars['UnsignedInt64'] | null)}


/**
 * The parameters required to authenticate a file upload request using a
 * [StagedMediaUploadTarget's url field](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget#field-stagedmediauploadtarget-url).
 * 
 * For more information on the upload process, refer to
 * [Upload media to Shopify](https://shopify.dev/apps/online-store/media/products#step-1-upload-media-to-shopify).
 * 
 */
export interface StagedUploadParameterGenqlSelection{
    /** The parameter's name. */
    name?: boolean | number
    /** The parameter's value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Information about the staged target.
 * 
 * Deprecated in favor of
 * [StagedMediaUploadTarget](https://shopify.dev/api/admin-graphql/latest/objects/StagedMediaUploadTarget),
 * which is returned by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface StagedUploadTargetGenqlSelection{
    /** The parameters of an image to be uploaded. */
    parameters?: ImageUploadParameterGenqlSelection
    /** The image URL. */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The required fields and parameters to generate the URL upload an"
 * asset to Shopify.
 * 
 * Deprecated in favor of
 * [StagedUploadInput](https://shopify.dev/api/admin-graphql/latest/objects/StagedUploadInput),
 * which is used by the
 * [stagedUploadsCreate mutation](https://shopify.dev/api/admin-graphql/latest/mutations/stagedUploadsCreate).
 * 
 */
export interface StagedUploadTargetGenerateInput {
/** The resource type being uploaded. */
resource: StagedUploadTargetGenerateUploadResource,
/** The filename of the asset being uploaded. */
filename: Scalars['String'],
/** The MIME type of the asset being uploaded. */
mimeType: Scalars['String'],
/** The HTTP method to be used by the staged upload. */
httpMethod?: (StagedUploadHttpMethodType | null),
/** The size of the file to upload, in bytes. */
fileSize?: (Scalars['UnsignedInt64'] | null)}


/** Return type for `stagedUploadTargetGenerate` mutation. */
export interface StagedUploadTargetGeneratePayloadGenqlSelection{
    /** The signed parameters that can be used to upload the asset. */
    parameters?: MutationsStagedUploadTargetGenerateUploadParameterGenqlSelection
    /** The signed URL where the asset can be uploaded. */
    url?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `stagedUploadTargetsGenerate` mutation. */
export interface StagedUploadTargetsGeneratePayloadGenqlSelection{
    /** The staged upload targets that were generated. */
    urls?: StagedUploadTargetGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `stagedUploadsCreate` mutation. */
export interface StagedUploadsCreatePayloadGenqlSelection{
    /** The staged upload targets that were generated. */
    stagedTargets?: StagedMediaUploadTargetGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `standardMetafieldDefinitionEnable` mutation. */
export interface StandardMetafieldDefinitionEnablePayloadGenqlSelection{
    /** The metafield definition that was created. */
    createdDefinition?: MetafieldDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: StandardMetafieldDefinitionEnableUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `StandardMetafieldDefinitionEnable`. */
export interface StandardMetafieldDefinitionEnableUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Standard metafield definition templates provide preset configurations to create metafield definitions.
 * Each template has a specific namespace and key that we've reserved to have specific meanings for common use cases.
 * 
 * Refer to the [list of standard metafield definitions](https://shopify.dev/apps/metafields/definitions/standard-definitions).
 * 
 */
export interface StandardMetafieldDefinitionTemplateGenqlSelection{
    /** The description of the standard metafield definition. */
    description?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The key owned by the definition after the definition has been activated. */
    key?: boolean | number
    /** The human-readable name for the standard metafield definition. */
    name?: boolean | number
    /** The namespace owned by the definition after the definition has been activated. */
    namespace?: boolean | number
    /** The list of resource types that the standard metafield definition can be applied to. */
    ownerTypes?: boolean | number
    /** The associated [metafield definition type](https://shopify.dev/apps/metafields/definitions/types) that the metafield stores. */
    type?: MetafieldDefinitionTypeGenqlSelection
    /** The configured validations for the standard metafield definition. */
    validations?: MetafieldDefinitionValidationGenqlSelection
    /**
     * Whether metafields for the definition are by default visible using the Storefront API.
     * 
     */
    visibleToStorefrontApi?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple StandardMetafieldDefinitionTemplates.
 * 
 */
export interface StandardMetafieldDefinitionTemplateConnectionGenqlSelection{
    /** A list of edges. */
    edges?: StandardMetafieldDefinitionTemplateEdgeGenqlSelection
    /** A list of the nodes contained in StandardMetafieldDefinitionTemplateEdge. */
    nodes?: StandardMetafieldDefinitionTemplateGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one StandardMetafieldDefinitionTemplate and a cursor during pagination.
 * 
 */
export interface StandardMetafieldDefinitionTemplateEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of StandardMetafieldDefinitionTemplateEdge. */
    node?: StandardMetafieldDefinitionTemplateGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `standardMetaobjectDefinitionEnable` mutation. */
export interface StandardMetaobjectDefinitionEnablePayloadGenqlSelection{
    /** The metaobject definition that was enabled using the standard template. */
    metaobjectDefinition?: MetaobjectDefinitionGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: MetaobjectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the details of a specific type of product within the [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt). */
export interface StandardizedProductTypeGenqlSelection{
    /** The product taxonomy node associated with the standardized product type. */
    productTaxonomyNode?: ProductTaxonomyNodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Provides the fields and values to use when adding a standard product type to a product. The [Shopify product taxonomy](https://help.shopify.com/txt/product_taxonomy/en.txt) contains the full list of available values. */
export interface StandardizedProductTypeInput {
/** The ID of the node in the Shopify taxonomy that represents the product type. */
productTaxonomyNodeId: Scalars['ID']}


/**
 * A token that's used to delegate unauthenticated access scopes to clients that need to access
 * the unauthenticated Storefront API. An app can have a maximum of 100 active storefront access
 * tokens for each shop.
 * 
 */
export interface StorefrontAccessTokenGenqlSelection{
    /** List of permissions associated with the token. */
    accessScopes?: AccessScopeGenqlSelection
    /** The issued public access token. */
    accessToken?: boolean | number
    /** The date and time when the public access token was created. */
    createdAt?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** An arbitrary title for each token determined by the developer, used for reference         purposes. */
    title?: boolean | number
    /** The date and time when the storefront access token was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple StorefrontAccessTokens.
 * 
 */
export interface StorefrontAccessTokenConnectionGenqlSelection{
    /** A list of edges. */
    edges?: StorefrontAccessTokenEdgeGenqlSelection
    /** A list of the nodes contained in StorefrontAccessTokenEdge. */
    nodes?: StorefrontAccessTokenGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `storefrontAccessTokenCreate` mutation. */
export interface StorefrontAccessTokenCreatePayloadGenqlSelection{
    /** The user's shop. */
    shop?: ShopGenqlSelection
    /** The storefront access token. */
    storefrontAccessToken?: StorefrontAccessTokenGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to delete a storefront access token. */
export interface StorefrontAccessTokenDeleteInput {
/** The ID of the storefront access token to delete. */
id: Scalars['ID']}


/** Return type for `storefrontAccessTokenDelete` mutation. */
export interface StorefrontAccessTokenDeletePayloadGenqlSelection{
    /** The ID of the deleted storefront access token. */
    deletedStorefrontAccessTokenId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one StorefrontAccessToken and a cursor during pagination.
 * 
 */
export interface StorefrontAccessTokenEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of StorefrontAccessTokenEdge. */
    node?: StorefrontAccessTokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a storefront access token. */
export interface StorefrontAccessTokenInput {
/** A title for the storefront access token. */
title: Scalars['String']}


/**
 * An auto-generated type for paginating through a list of Strings.
 * 
 */
export interface StringConnectionGenqlSelection{
    /** A list of edges. */
    edges?: StringEdgeGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one String and a cursor during pagination.
 * 
 */
export interface StringEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of StringEdge. */
    node?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an applied code discount. */
export interface SubscriptionAppliedCodeDiscountGenqlSelection{
    /** The unique ID. */
    id?: boolean | number
    /** The redeem code of the discount that applies on the subscription. */
    redeemCode?: boolean | number
    /** The reason that the discount on the subscription draft is rejected. */
    rejectionReason?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for mapping a subscription line to a discount. */
export interface SubscriptionAtomicLineInput {
/** The new subscription line. */
line: SubscriptionLineInput,
/** The discount to be added to the subscription line. */
discounts?: (SubscriptionAtomicManualDiscountInput[] | null)}


/** The input fields for mapping a subscription line to a discount. */
export interface SubscriptionAtomicManualDiscountInput {
/** The title associated with the subscription discount. */
title?: (Scalars['String'] | null),
/** Percentage or fixed amount value of the discount. */
value?: (SubscriptionManualDiscountValueInput | null),
/** The maximum number of times the subscription discount will be applied on orders. */
recurringCycleLimit?: (Scalars['Int'] | null)}


/**
 * A record of an execution of the subscription billing process. Billing attempts use
 * idempotency keys to avoid duplicate order creation. A successful billing attempt
 * will create an order.
 * 
 */
export interface SubscriptionBillingAttemptGenqlSelection{
    /** The date and time when the billing attempt was completed. */
    completedAt?: boolean | number
    /** The date and time when the billing attempt was created. */
    createdAt?: boolean | number
    /** A code corresponding to a payment error during processing. */
    errorCode?: boolean | number
    /** A message describing a payment error during processing. */
    errorMessage?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** A unique key generated by the client to avoid duplicate payments. */
    idempotencyKey?: boolean | number
    /**
     * The URL where the customer needs to be redirected so they can complete the 3D Secure payment flow.
     * 
     */
    nextActionUrl?: boolean | number
    /** The result of this billing attempt if completed successfully. */
    order?: OrderGenqlSelection
    /**
     * The date and time used to calculate fulfillment intervals for a billing attempt that
     * successfully completed after the current anchor date. To prevent fulfillment from being
     * pushed to the next anchor date, this field can override the billing attempt date.
     * 
     */
    originTime?: boolean | number
    /** Whether the billing attempt is still processing. */
    ready?: boolean | number
    /** The subscription contract. */
    subscriptionContract?: SubscriptionContractGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SubscriptionBillingAttempts.
 * 
 */
export interface SubscriptionBillingAttemptConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SubscriptionBillingAttemptEdgeGenqlSelection
    /** A list of the nodes contained in SubscriptionBillingAttemptEdge. */
    nodes?: SubscriptionBillingAttemptGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionBillingAttemptCreate` mutation. */
export interface SubscriptionBillingAttemptCreatePayloadGenqlSelection{
    /** The subscription billing attempt. */
    subscriptionBillingAttempt?: SubscriptionBillingAttemptGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: BillingAttemptUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SubscriptionBillingAttempt and a cursor during pagination.
 * 
 */
export interface SubscriptionBillingAttemptEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SubscriptionBillingAttemptEdge. */
    node?: SubscriptionBillingAttemptGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to complete a subscription billing attempt. */
export interface SubscriptionBillingAttemptInput {
/** A unique key generated by the client to avoid duplicate payments. For more information, refer to [Idempotent requests](https://shopify.dev/api/usage/idempotent-requests). */
idempotencyKey: Scalars['String'],
/**
 * The date and time used to calculate fulfillment intervals for a billing attempt that
 * successfully completed after the current anchor date. To prevent fulfillment from being
 * pushed to the next anchor date, this field can override the billing attempt date.
 * 
 */
originTime?: (Scalars['DateTime'] | null),
/**
 * Select the specific billing cycle to be billed.
 * Default to bill the current billing cycle if not specified.
 * 
 */
billingCycleSelector?: (SubscriptionBillingCycleSelector | null)}


/** A subscription billing cycle. */
export interface SubscriptionBillingCycleGenqlSelection{
    /** The date on which the billing attempt is expected to be made. */
    billingAttemptExpectedDate?: boolean | number
    /** The list of billing attempts associated with the billing cycle. */
    billingAttempts?: (SubscriptionBillingAttemptConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The end date of the billing cycle. */
    cycleEndAt?: boolean | number
    /** The index of the billing cycle. */
    cycleIndex?: boolean | number
    /** The start date of the billing cycle. */
    cycleStartAt?: boolean | number
    /** Whether this billing cycle was edited. */
    edited?: boolean | number
    /** The active edited contract for the billing cycle. */
    editedContract?: SubscriptionBillingCycleEditedContractGenqlSelection
    /** Whether this billing cycle was skipped. */
    skipped?: boolean | number
    /** The subscription contract that the billing cycle belongs to. */
    sourceContract?: SubscriptionContractGenqlSelection
    /** The status of the billing cycle. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SubscriptionBillingCycles.
 * 
 */
export interface SubscriptionBillingCycleConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SubscriptionBillingCycleEdgeGenqlSelection
    /** A list of the nodes contained in SubscriptionBillingCycleEdge. */
    nodes?: SubscriptionBillingCycleGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionBillingCycleContractDraftCommit` mutation. */
export interface SubscriptionBillingCycleContractDraftCommitPayloadGenqlSelection{
    /** The committed Subscription Billing Cycle Edited Contract object. */
    contract?: SubscriptionBillingCycleEditedContractGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionBillingCycleContractDraftConcatenate` mutation. */
export interface SubscriptionBillingCycleContractDraftConcatenatePayloadGenqlSelection{
    /** The Subscription Draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionBillingCycleContractEdit` mutation. */
export interface SubscriptionBillingCycleContractEditPayloadGenqlSelection{
    /** The draft subscription contract object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SubscriptionBillingCycle and a cursor during pagination.
 * 
 */
export interface SubscriptionBillingCycleEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SubscriptionBillingCycleEdge. */
    node?: SubscriptionBillingCycleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionBillingCycleEditDelete` mutation. */
export interface SubscriptionBillingCycleEditDeletePayloadGenqlSelection{
    /** The list of updated billing cycles. */
    billingCycles?: SubscriptionBillingCycleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionBillingCycleUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a subscription contract with billing cycles. */
export interface SubscriptionBillingCycleEditedContractGenqlSelection{
    /** The subscription app that the subscription contract is registered to. */
    app?: AppGenqlSelection
    /** The URL of the subscription contract page on the subscription app. */
    appAdminUrl?: boolean | number
    /** The billing cycles that the edited contract belongs to. */
    billingCycles?: (SubscriptionBillingCycleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (SubscriptionBillingCyclesSortKeys | null)} })
    /** The date and time when the subscription contract was created. */
    createdAt?: boolean | number
    /** The currency that's used for the subscription contract. */
    currencyCode?: boolean | number
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes?: AttributeGenqlSelection
    /** The customer to whom the subscription contract belongs. */
    customer?: CustomerGenqlSelection
    /** The customer payment method that's used for the subscription contract. */
    customerPaymentMethod?: (CustomerPaymentMethodGenqlSelection & { __args?: {
    /** Whether to show the customer's revoked payment method. */
    showRevoked?: (Scalars['Boolean'] | null)} })
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethodGenqlSelection
    /** The delivery price for each billing of the subscription contract. */
    deliveryPrice?: MoneyV2GenqlSelection
    /** The list of subscription discounts associated with the subscription contract. */
    discounts?: (SubscriptionManualDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The number of lines associated with the subscription contract. */
    lineCount?: boolean | number
    /** The list of subscription lines associated with the subscription contract. */
    lines?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The note field that will be applied to the generated orders. */
    note?: boolean | number
    /** A list of the subscription contract's orders. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The date and time when the subscription contract was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionBillingCycleEditsDelete` mutation. */
export interface SubscriptionBillingCycleEditsDeletePayloadGenqlSelection{
    /** The list of updated billing cycles. */
    billingCycles?: SubscriptionBillingCycleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionBillingCycleUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for specifying the subscription contract and selecting the associated billing cycle.
 * 
 */
export interface SubscriptionBillingCycleInput {
/** The ID of the subscription contract associated with the billing cycle. */
contractId: Scalars['ID'],
/** Selects the billing cycle by date or index. */
selector: SubscriptionBillingCycleSelector}


/** The input fields for parameters to modify the schedule of a specific billing cycle. */
export interface SubscriptionBillingCycleScheduleEditInput {
/** Sets the skip status for the billing cycle. */
skip?: (Scalars['Boolean'] | null),
/** Sets the expected billing date for the billing cycle. */
billingDate?: (Scalars['DateTime'] | null),
/** The reason for editing. */
reason: SubscriptionBillingCycleScheduleEditInputScheduleEditReason}


/** Return type for `subscriptionBillingCycleScheduleEdit` mutation. */
export interface SubscriptionBillingCycleScheduleEditPayloadGenqlSelection{
    /** The updated billing cycle. */
    billingCycle?: SubscriptionBillingCycleGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionBillingCycleUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to select SubscriptionBillingCycle by either date or index. */
export interface SubscriptionBillingCycleSelector {
/** Returns a billing cycle by index. */
index?: (Scalars['Int'] | null),
/** Returns a billing cycle by date. */
date?: (Scalars['DateTime'] | null)}


/** The possible errors for a subscription billing cycle. */
export interface SubscriptionBillingCycleUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to select a subset of subscription billing cycles within a date range. */
export interface SubscriptionBillingCyclesDateRangeSelector {
/** The start date and time for the range. */
startDate: Scalars['DateTime'],
/** The end date and time for the range. */
endDate: Scalars['DateTime']}


/** The input fields to select a subset of subscription billing cycles within an index range. */
export interface SubscriptionBillingCyclesIndexRangeSelector {
/** The start index for the range. */
startIndex: Scalars['Int'],
/** The end index for the range. */
endIndex: Scalars['Int']}


/** Represents a Subscription Billing Policy. */
export interface SubscriptionBillingPolicyGenqlSelection{
    /** Specific anchor dates upon which the billing interval calculations should be made. */
    anchors?: SellingPlanAnchorGenqlSelection
    /** The kind of interval that is associated with this schedule (e.g. Monthly, Weekly, etc). */
    interval?: boolean | number
    /** The number of billing intervals between invoices. */
    intervalCount?: boolean | number
    /** Maximum amount of cycles after which the subscription ends. */
    maxCycles?: boolean | number
    /** Minimum amount of cycles required in the subscription. */
    minCycles?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a Subscription Billing Policy. */
export interface SubscriptionBillingPolicyInput {
/** The kind of interval that is associated with this schedule (e.g. Monthly, Weekly, etc). */
interval: SellingPlanInterval,
/** The number of billing intervals between invoices. */
intervalCount: Scalars['Int'],
/** Minimum amount of cycles required in the subscription. */
minCycles?: (Scalars['Int'] | null),
/** Maximum amount of cycles required in the subscription. */
maxCycles?: (Scalars['Int'] | null),
/** Specific anchor dates upon which the billing interval calculations should be made. */
anchors?: (SellingPlanAnchorInput[] | null)}


/** Represents a Subscription Contract. */
export interface SubscriptionContractGenqlSelection{
    /** The subscription app that the subscription contract is registered to. */
    app?: AppGenqlSelection
    /** The URL of the subscription contract page on the subscription app. */
    appAdminUrl?: boolean | number
    /** The list of billing attempts associated with the subscription contract. */
    billingAttempts?: (SubscriptionBillingAttemptConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The billing policy associated with the subscription contract. */
    billingPolicy?: SubscriptionBillingPolicyGenqlSelection
    /** The date and time when the subscription contract was created. */
    createdAt?: boolean | number
    /** The currency that's used for the subscription contract. */
    currencyCode?: boolean | number
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes?: AttributeGenqlSelection
    /** The customer to whom the subscription contract belongs. */
    customer?: CustomerGenqlSelection
    /** The customer payment method that's used for the subscription contract. */
    customerPaymentMethod?: (CustomerPaymentMethodGenqlSelection & { __args?: {
    /** Whether to show the customer's revoked payment method. */
    showRevoked?: (Scalars['Boolean'] | null)} })
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethodGenqlSelection
    /** The delivery policy associated with the subscription contract. */
    deliveryPolicy?: SubscriptionDeliveryPolicyGenqlSelection
    /** The delivery price for each billing of the subscription contract. */
    deliveryPrice?: MoneyV2GenqlSelection
    /** The list of subscription discounts associated with the subscription contract. */
    discounts?: (SubscriptionManualDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** The current status of the last payment. */
    lastPaymentStatus?: boolean | number
    /** The number of lines associated with the subscription contract. */
    lineCount?: boolean | number
    /** The list of subscription lines associated with the subscription contract. */
    lines?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The next billing date for the subscription contract. */
    nextBillingDate?: boolean | number
    /** The note field that will be applied to the generated orders. */
    note?: boolean | number
    /** A list of the subscription contract's orders. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The order from which this contract originated. */
    originOrder?: OrderGenqlSelection
    /** The revision id of the contract. */
    revisionId?: boolean | number
    /** The current status of the subscription contract. */
    status?: boolean | number
    /** The date and time when the subscription contract was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a Subscription Contract. */
export interface SubscriptionContractAtomicCreateInput {
/** The ID of the customer to associate with the subscription contract. */
customerId: Scalars['ID'],
/** The next billing date for the subscription contract. */
nextBillingDate: Scalars['DateTime'],
/** The currency used for the subscription contract. */
currencyCode: CurrencyCode,
/** The attributes used as input for the Subscription Draft. */
contract: SubscriptionDraftInput,
/** A list of new Subscription Lines. */
lines: SubscriptionAtomicLineInput[],
/** A list of discount redeem codes to apply to the subscription contract. */
discountCodes?: (Scalars['String'][] | null)}


/** Return type for `subscriptionContractAtomicCreate` mutation. */
export interface SubscriptionContractAtomicCreatePayloadGenqlSelection{
    /** The new Subscription Contract object. */
    contract?: SubscriptionContractGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents subscription contract common fields. */
export interface SubscriptionContractBaseGenqlSelection{
    /** The subscription app that the subscription contract is registered to. */
    app?: AppGenqlSelection
    /** The URL of the subscription contract page on the subscription app. */
    appAdminUrl?: boolean | number
    /** The currency that's used for the subscription contract. */
    currencyCode?: boolean | number
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes?: AttributeGenqlSelection
    /** The customer to whom the subscription contract belongs. */
    customer?: CustomerGenqlSelection
    /** The customer payment method that's used for the subscription contract. */
    customerPaymentMethod?: (CustomerPaymentMethodGenqlSelection & { __args?: {
    /** Whether to show the customer's revoked payment method. */
    showRevoked?: (Scalars['Boolean'] | null)} })
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethodGenqlSelection
    /** The delivery price for each billing of the subscription contract. */
    deliveryPrice?: MoneyV2GenqlSelection
    /** The list of subscription discounts associated with the subscription contract. */
    discounts?: (SubscriptionManualDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The number of lines associated with the subscription contract. */
    lineCount?: boolean | number
    /** The list of subscription lines associated with the subscription contract. */
    lines?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The note field that will be applied to the generated orders. */
    note?: boolean | number
    /** A list of the subscription contract's orders. */
    orders?: (OrderConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The date and time when the subscription contract was updated. */
    updatedAt?: boolean | number
    on_SubscriptionBillingCycleEditedContract?: SubscriptionBillingCycleEditedContractGenqlSelection
    on_SubscriptionContract?: SubscriptionContractGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SubscriptionContracts.
 * 
 */
export interface SubscriptionContractConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SubscriptionContractEdgeGenqlSelection
    /** A list of the nodes contained in SubscriptionContractEdge. */
    nodes?: SubscriptionContractGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a Subscription Contract. */
export interface SubscriptionContractCreateInput {
/** The ID of the customer to associate with the subscription contract. */
customerId: Scalars['ID'],
/** The next billing date for the subscription contract. */
nextBillingDate: Scalars['DateTime'],
/** The currency used for the subscription contract. */
currencyCode: CurrencyCode,
/** The attributes used as input for the Subscription Draft. */
contract: SubscriptionDraftInput}


/** Return type for `subscriptionContractCreate` mutation. */
export interface SubscriptionContractCreatePayloadGenqlSelection{
    /** The Subscription Contract object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SubscriptionContract and a cursor during pagination.
 * 
 */
export interface SubscriptionContractEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SubscriptionContractEdge. */
    node?: SubscriptionContractGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a Subscription Contract. */
export interface SubscriptionContractProductChangeInput {
/** The ID of the product variant the subscription line refers to. */
productVariantId?: (Scalars['ID'] | null),
/** The price of the product. */
currentPrice?: (Scalars['Decimal'] | null)}


/** Return type for `subscriptionContractProductChange` mutation. */
export interface SubscriptionContractProductChangePayloadGenqlSelection{
    /** The new Subscription Contract object. */
    contract?: SubscriptionContractGenqlSelection
    /** The updated Subscription Line. */
    lineUpdated?: SubscriptionLineGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionContractSetNextBillingDate` mutation. */
export interface SubscriptionContractSetNextBillingDatePayloadGenqlSelection{
    /** The updated Subscription Contract object. */
    contract?: SubscriptionContractGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionContractUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionContractUpdate` mutation. */
export interface SubscriptionContractUpdatePayloadGenqlSelection{
    /** The Subscription Contract object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Subscription Contract error. */
export interface SubscriptionContractUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Subscription Line Pricing Cycle Adjustment. */
export interface SubscriptionCyclePriceAdjustmentGenqlSelection{
    /** Price adjustment type. */
    adjustmentType?: boolean | number
    /** Price adjustment value. */
    adjustmentValue?: SellingPlanPricingPolicyAdjustmentValueGenqlSelection
    /** The number of cycles required before this pricing policy applies. */
    afterCycle?: boolean | number
    /** The computed price after the adjustments applied. */
    computedPrice?: MoneyV2GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Describes the delivery method to use to get the physical goods to the customer. */
export interface SubscriptionDeliveryMethodGenqlSelection{
    on_SubscriptionDeliveryMethodLocalDelivery?:SubscriptionDeliveryMethodLocalDeliveryGenqlSelection,
    on_SubscriptionDeliveryMethodPickup?:SubscriptionDeliveryMethodPickupGenqlSelection,
    on_SubscriptionDeliveryMethodShipping?:SubscriptionDeliveryMethodShippingGenqlSelection,
    __typename?: boolean | number
}


/**
 * Specifies delivery method fields for a subscription draft.
 * This is an input union: one, and only one, field can be provided.
 * The field provided will determine which delivery method is to be used.
 * 
 */
export interface SubscriptionDeliveryMethodInput {
/** The input fields for the shipping delivery method. */
shipping?: (SubscriptionDeliveryMethodShippingInput | null),
/** The input fields for the local delivery method. */
localDelivery?: (SubscriptionDeliveryMethodLocalDeliveryInput | null),
/** The input fields for the pickup delivery method. */
pickup?: (SubscriptionDeliveryMethodPickupInput | null)}


/** A local delivery method, which includes a mailing address and a local delivery option. */
export interface SubscriptionDeliveryMethodLocalDeliveryGenqlSelection{
    /** The address to deliver to. */
    address?: SubscriptionMailingAddressGenqlSelection
    /** The details of the local delivery method to use. */
    localDeliveryOption?: SubscriptionDeliveryMethodLocalDeliveryOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a local delivery method.
 * 
 * This input accepts partial input. When a field is not provided,
 * its prior value is left unchanged.
 * 
 */
export interface SubscriptionDeliveryMethodLocalDeliveryInput {
/** The address to deliver to. */
address?: (MailingAddressInput | null),
/** The details of the local delivery method to use. */
localDeliveryOption?: (SubscriptionDeliveryMethodLocalDeliveryOptionInput | null)}


/** The selected delivery option on a subscription contract. */
export interface SubscriptionDeliveryMethodLocalDeliveryOptionGenqlSelection{
    /** A custom reference to the delivery method for use with automations. */
    code?: boolean | number
    /** The details displayed to the customer to describe the local delivery option. */
    description?: boolean | number
    /** The delivery instructions that the customer can provide to the merchant. */
    instructions?: boolean | number
    /**
     * The phone number that the customer provided to the merchant.
     * Formatted using E.164 standard. For example, `+16135551111`.
     * 
     */
    phone?: boolean | number
    /** The presentment title of the local delivery option. */
    presentmentTitle?: boolean | number
    /** The title of the local delivery option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for local delivery option. */
export interface SubscriptionDeliveryMethodLocalDeliveryOptionInput {
/** The title of the local delivery option. */
title?: (Scalars['String'] | null),
/** The presentment title of the local delivery option. */
presentmentTitle?: (Scalars['String'] | null),
/** The details displayed to the customer to describe the local delivery option. */
description?: (Scalars['String'] | null),
/** A custom reference to the delivery method for use with automations. */
code?: (Scalars['String'] | null),
/**
 * The phone number that the customer must provide to the merchant.
 * Formatted using E.164 standard. For example, `+16135551111`.
 * 
 */
phone: Scalars['String'],
/** The delivery instructions that the customer can provide to the merchant. */
instructions?: (Scalars['String'] | null)}


/** A delivery method with a pickup option. */
export interface SubscriptionDeliveryMethodPickupGenqlSelection{
    /** The details of the pickup delivery method to use. */
    pickupOption?: SubscriptionDeliveryMethodPickupOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for a pickup delivery method.
 * 
 * This input accepts partial input. When a field is not provided,
 * its prior value is left unchanged.
 * 
 */
export interface SubscriptionDeliveryMethodPickupInput {
/** The details of the pickup method to use. */
pickupOption?: (SubscriptionDeliveryMethodPickupOptionInput | null)}


/** Represents the selected pickup option on a subscription contract. */
export interface SubscriptionDeliveryMethodPickupOptionGenqlSelection{
    /** A custom reference to the delivery method for use with automations. */
    code?: boolean | number
    /** The details displayed to the customer to describe the pickup option. */
    description?: boolean | number
    /** The location where the customer will pickup the merchandise. */
    location?: LocationGenqlSelection
    /** The presentment title of the pickup option. */
    presentmentTitle?: boolean | number
    /** The title of the pickup option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for pickup option. */
export interface SubscriptionDeliveryMethodPickupOptionInput {
/** The title of the pickup option. */
title?: (Scalars['String'] | null),
/** The presentment title of the pickup option. */
presentmentTitle?: (Scalars['String'] | null),
/** The details displayed to the customer to describe the pickup option. */
description?: (Scalars['String'] | null),
/** A custom reference to the delivery method for use with automations. */
code?: (Scalars['String'] | null),
/** The ID of the pickup location. */
locationId: Scalars['ID']}


/** Represents a shipping delivery method: a mailing address and a shipping option. */
export interface SubscriptionDeliveryMethodShippingGenqlSelection{
    /** The address to ship to. */
    address?: SubscriptionMailingAddressGenqlSelection
    /** The details of the shipping method to use. */
    shippingOption?: SubscriptionDeliveryMethodShippingOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Specifies shipping delivery method fields.
 * 
 * This input accepts partial input. When a field is not provided,
 * its prior value is left unchanged.
 * 
 */
export interface SubscriptionDeliveryMethodShippingInput {
/** The address to ship to. */
address?: (MailingAddressInput | null),
/** The details of the shipping method to use. */
shippingOption?: (SubscriptionDeliveryMethodShippingOptionInput | null)}


/** Represents the selected shipping option on a subscription contract. */
export interface SubscriptionDeliveryMethodShippingOptionGenqlSelection{
    /**
     * @deprecated This field has never been implemented.
     * The carrier service that is providing this shipping option.
     * This field isn't currently supported and returns null.
     * 
     */
    carrierService?: DeliveryCarrierServiceGenqlSelection
    /** The code of the shipping option. */
    code?: boolean | number
    /** The description of the shipping option. */
    description?: boolean | number
    /** The presentment title of the shipping option. */
    presentmentTitle?: boolean | number
    /** The title of the shipping option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for shipping option. */
export interface SubscriptionDeliveryMethodShippingOptionInput {
/** The title of the shipping option. */
title?: (Scalars['String'] | null),
/** The presentment title of the shipping option. */
presentmentTitle?: (Scalars['String'] | null),
/** The description of the shipping option. */
description?: (Scalars['String'] | null),
/** The code of the shipping option. */
code?: (Scalars['String'] | null),
/** The carrier service ID of the shipping option. */
carrierServiceId?: (Scalars['ID'] | null)}


/** The delivery option for a subscription contract. */
export interface SubscriptionDeliveryOptionGenqlSelection{
    on_SubscriptionLocalDeliveryOption?:SubscriptionLocalDeliveryOptionGenqlSelection,
    on_SubscriptionPickupOption?:SubscriptionPickupOptionGenqlSelection,
    on_SubscriptionShippingOption?:SubscriptionShippingOptionGenqlSelection,
    __typename?: boolean | number
}


/** The result of the query to fetch delivery options for the subscription contract. */
export interface SubscriptionDeliveryOptionResultGenqlSelection{
    on_SubscriptionDeliveryOptionResultFailure?:SubscriptionDeliveryOptionResultFailureGenqlSelection,
    on_SubscriptionDeliveryOptionResultSuccess?:SubscriptionDeliveryOptionResultSuccessGenqlSelection,
    __typename?: boolean | number
}


/** A failure to find the available delivery options for a subscription contract. */
export interface SubscriptionDeliveryOptionResultFailureGenqlSelection{
    /** The reason for the failure. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The delivery option for a subscription contract. */
export interface SubscriptionDeliveryOptionResultSuccessGenqlSelection{
    /** The available delivery options. */
    deliveryOptions?: SubscriptionDeliveryOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Subscription Delivery Policy. */
export interface SubscriptionDeliveryPolicyGenqlSelection{
    /** The specific anchor dates upon which the delivery interval calculations should be made. */
    anchors?: SellingPlanAnchorGenqlSelection
    /** The kind of interval that is associated with this schedule (e.g. Monthly, Weekly, etc). */
    interval?: boolean | number
    /** The number of delivery intervals between deliveries. */
    intervalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a Subscription Delivery Policy. */
export interface SubscriptionDeliveryPolicyInput {
/** The kind of interval that is associated with this schedule (e.g. Monthly, Weekly, etc). */
interval: SellingPlanInterval,
/** The number of billing intervals between invoices. */
intervalCount: Scalars['Int'],
/** The specific anchor dates upon which the delivery interval calculations should be made. */
anchors?: (SellingPlanAnchorInput[] | null)}


/** Subscription draft discount types. */
export interface SubscriptionDiscountGenqlSelection{
    on_SubscriptionAppliedCodeDiscount?:SubscriptionAppliedCodeDiscountGenqlSelection,
    on_SubscriptionManualDiscount?:SubscriptionManualDiscountGenqlSelection,
    __typename?: boolean | number
}


/** Represents what a particular discount reduces from a line price. */
export interface SubscriptionDiscountAllocationGenqlSelection{
    /** Allocation amount. */
    amount?: MoneyV2GenqlSelection
    /** Discount that created the allocation. */
    discount?: SubscriptionDiscountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SubscriptionDiscounts.
 * 
 */
export interface SubscriptionDiscountConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SubscriptionDiscountEdgeGenqlSelection
    /** A list of the nodes contained in SubscriptionDiscountEdge. */
    nodes?: SubscriptionDiscountGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SubscriptionDiscount and a cursor during pagination.
 * 
 */
export interface SubscriptionDiscountEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SubscriptionDiscountEdge. */
    node?: SubscriptionDiscountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents the subscription lines the discount applies on. */
export interface SubscriptionDiscountEntitledLinesGenqlSelection{
    /** Specify whether the subscription discount will apply on all subscription lines. */
    all?: boolean | number
    /** The list of subscription lines associated with the subscription discount. */
    lines?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The value of the discount and how it will be applied. */
export interface SubscriptionDiscountFixedAmountValueGenqlSelection{
    /** The fixed amount value of the discount. */
    amount?: MoneyV2GenqlSelection
    /** Whether the amount is applied per item. */
    appliesOnEachItem?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The percentage value of the discount. */
export interface SubscriptionDiscountPercentageValueGenqlSelection{
    /** The percentage value of the discount. */
    percentage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The value of the discount and how it will be applied. */
export interface SubscriptionDiscountValueGenqlSelection{
    on_SubscriptionDiscountFixedAmountValue?:SubscriptionDiscountFixedAmountValueGenqlSelection,
    on_SubscriptionDiscountPercentageValue?:SubscriptionDiscountPercentageValueGenqlSelection,
    __typename?: boolean | number
}


/** Represents a Subscription Draft. */
export interface SubscriptionDraftGenqlSelection{
    /** The billing cycle that the subscription contract will be associated with. */
    billingCycle?: SubscriptionBillingCycleGenqlSelection
    /** The billing policy for the subscription contract. */
    billingPolicy?: SubscriptionBillingPolicyGenqlSelection
    /** The billing cycles of the contracts that will be concatenated to the subscription contract. */
    concatenatedBillingCycles?: (SubscriptionBillingCycleConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null), 
    /** Sort the underlying list by the given key. */
    sortKey?: (SubscriptionBillingCyclesSortKeys | null)} })
    /** The currency used for the subscription contract. */
    currencyCode?: boolean | number
    /** A list of the custom attributes to be added to the generated orders. */
    customAttributes?: AttributeGenqlSelection
    /** The customer to whom the subscription contract belongs. */
    customer?: CustomerGenqlSelection
    /** The customer payment method used for the subscription contract. */
    customerPaymentMethod?: (CustomerPaymentMethodGenqlSelection & { __args?: {
    /** Whether to show the customer's revoked payment method. */
    showRevoked?: (Scalars['Boolean'] | null)} })
    /** The delivery method for each billing of the subscription contract. */
    deliveryMethod?: SubscriptionDeliveryMethodGenqlSelection
    /**
     * The available delivery options for a given delivery address. Returns `null` for pending requests.
     * 
     */
    deliveryOptions?: (SubscriptionDeliveryOptionResultGenqlSelection & { __args?: {
    /** The address to deliver the subscription contract to. */
    deliveryAddress?: (MailingAddressInput | null)} })
    /** The delivery policy for the subscription contract. */
    deliveryPolicy?: SubscriptionDeliveryPolicyGenqlSelection
    /** The delivery price for each billing the subscription contract. */
    deliveryPrice?: MoneyV2GenqlSelection
    /** The list of subscription discounts which will be associated with the subscription contract. */
    discounts?: (SubscriptionDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of subscription discounts to be added to the subscription contract. */
    discountsAdded?: (SubscriptionDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of subscription discounts to be removed from the subscription contract. */
    discountsRemoved?: (SubscriptionDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of subscription discounts to be updated on the subscription contract. */
    discountsUpdated?: (SubscriptionDiscountConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** A globally-unique ID. */
    id?: boolean | number
    /** The list of subscription lines which will be associated with the subscription contract. */
    lines?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of subscription lines to be added to the subscription contract. */
    linesAdded?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The list of subscription lines to be removed from the subscription contract. */
    linesRemoved?: (SubscriptionLineConnectionGenqlSelection & { __args?: {
    /** Returns up to the first `n` elements from the list. */
    first?: (Scalars['Int'] | null), 
    /** Returns the elements that come after the specified cursor. */
    after?: (Scalars['String'] | null), 
    /** Returns up to the last `n` elements from the list. */
    last?: (Scalars['Int'] | null), 
    /** Returns the elements that come before the specified cursor. */
    before?: (Scalars['String'] | null), 
    /** Reverse the order of the underlying list. */
    reverse?: (Scalars['Boolean'] | null)} })
    /** The next billing date for the subscription contract. */
    nextBillingDate?: boolean | number
    /** The note field that will be applied to the generated orders. */
    note?: boolean | number
    /** The original subscription contract. */
    originalContract?: SubscriptionContractGenqlSelection
    /**
     * @deprecated Use `deliveryOptions` instead.
     * Available Shipping Options for a given delivery address. Returns NULL for pending requests.
     * 
     */
    shippingOptions?: (SubscriptionShippingOptionResultGenqlSelection & { __args?: {
    /** The address to delivery the subscription contract to. */
    deliveryAddress?: (MailingAddressInput | null)} })
    /** The current status of the subscription contract. */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftCommit` mutation. */
export interface SubscriptionDraftCommitPayloadGenqlSelection{
    /** The updated Subscription Contract object. */
    contract?: SubscriptionContractGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftDiscountAdd` mutation. */
export interface SubscriptionDraftDiscountAddPayloadGenqlSelection{
    /** The added Subscription Discount. */
    discountAdded?: SubscriptionManualDiscountGenqlSelection
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftDiscountCodeApply` mutation. */
export interface SubscriptionDraftDiscountCodeApplyPayloadGenqlSelection{
    /** The added subscription discount. */
    appliedDiscount?: SubscriptionAppliedCodeDiscountGenqlSelection
    /** The subscription contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftDiscountRemove` mutation. */
export interface SubscriptionDraftDiscountRemovePayloadGenqlSelection{
    /** The removed subscription draft discount. */
    discountRemoved?: SubscriptionDiscountGenqlSelection
    /** The subscription contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftDiscountUpdate` mutation. */
export interface SubscriptionDraftDiscountUpdatePayloadGenqlSelection{
    /** The updated Subscription Discount. */
    discountUpdated?: SubscriptionManualDiscountGenqlSelection
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftFreeShippingDiscountAdd` mutation. */
export interface SubscriptionDraftFreeShippingDiscountAddPayloadGenqlSelection{
    /** The added subscription free shipping discount. */
    discountAdded?: SubscriptionManualDiscountGenqlSelection
    /** The subscription contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftFreeShippingDiscountUpdate` mutation. */
export interface SubscriptionDraftFreeShippingDiscountUpdatePayloadGenqlSelection{
    /** The updated Subscription Discount. */
    discountUpdated?: SubscriptionManualDiscountGenqlSelection
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to create a Subscription Draft. */
export interface SubscriptionDraftInput {
/** The current status of the subscription contract. */
status?: (SubscriptionContractSubscriptionStatus | null),
/** The ID of the payment method to be used for the subscription contract. */
paymentMethodId?: (Scalars['ID'] | null),
/** The next billing date for the subscription contract. */
nextBillingDate?: (Scalars['DateTime'] | null),
/** The billing policy for the subscription contract. */
billingPolicy?: (SubscriptionBillingPolicyInput | null),
/** The delivery policy for the subscription contract. */
deliveryPolicy?: (SubscriptionDeliveryPolicyInput | null),
/** The shipping price for each renewal the subscription contract. */
deliveryPrice?: (Scalars['Decimal'] | null),
/** The delivery method for the subscription contract. */
deliveryMethod?: (SubscriptionDeliveryMethodInput | null),
/** The note field that will be applied to the generated orders. */
note?: (Scalars['String'] | null),
/** A list of the custom attributes added to the subscription contract. */
customAttributes?: (AttributeInput[] | null)}


/** Return type for `subscriptionDraftLineAdd` mutation. */
export interface SubscriptionDraftLineAddPayloadGenqlSelection{
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The added Subscription Line. */
    lineAdded?: SubscriptionLineGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftLineRemove` mutation. */
export interface SubscriptionDraftLineRemovePayloadGenqlSelection{
    /** The list of updated subscription discounts impacted by the removed line. */
    discountsUpdated?: SubscriptionManualDiscountGenqlSelection
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The removed Subscription Line. */
    lineRemoved?: SubscriptionLineGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftLineUpdate` mutation. */
export interface SubscriptionDraftLineUpdatePayloadGenqlSelection{
    /** The Subscription Contract draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The updated Subscription Line. */
    lineUpdated?: SubscriptionLineGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `subscriptionDraftUpdate` mutation. */
export interface SubscriptionDraftUpdatePayloadGenqlSelection{
    /** The Subscription Draft object. */
    draft?: SubscriptionDraftGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: SubscriptionDraftUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Subscription Draft error. */
export interface SubscriptionDraftUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for a subscription free shipping discount on a contract. */
export interface SubscriptionFreeShippingDiscountInput {
/** The title associated with the subscription free shipping discount. */
title?: (Scalars['String'] | null),
/** The maximum number of times the subscription free shipping discount will be applied on orders. */
recurringCycleLimit?: (Scalars['Int'] | null)}


/** Represents a Subscription Line. */
export interface SubscriptionLineGenqlSelection{
    /** The price per unit for the subscription line in the contract's currency. */
    currentPrice?: MoneyV2GenqlSelection
    /** List of custom attributes associated to the line item. */
    customAttributes?: AttributeGenqlSelection
    /** Discount allocations. */
    discountAllocations?: SubscriptionDiscountAllocationGenqlSelection
    /** The unique ID. */
    id?: boolean | number
    /** Total line price including all discounts. */
    lineDiscountedPrice?: MoneyV2GenqlSelection
    /** Describe the price changes of the line over time. */
    pricingPolicy?: SubscriptionPricingPolicyGenqlSelection
    /** The product ID associated with the subscription line. */
    productId?: boolean | number
    /** The quantity of the unit selected for the subscription line. */
    quantity?: boolean | number
    /** Whether physical shipping is required for the variant. */
    requiresShipping?: boolean | number
    /**
     * The selling plan ID associated to the line.
     * 
     * Indicates which selling plan was used to create this
     * contract line initially. The selling plan ID is also used to
     * find the associated delivery profile.
     * 
     * The subscription contract, subscription line, or selling plan might have
     * changed. As a result, the selling plan's attributes might not
     * match the information on the contract.
     * 
     */
    sellingPlanId?: boolean | number
    /**
     * The selling plan name associated to the line. This name describes
     * the order line items created from this subscription line
     * for both merchants and customers.
     * 
     * The value can be different from the selling plan's name, because both
     * the selling plan's name and the subscription line's selling_plan_name
     * attribute can be updated independently.
     * 
     */
    sellingPlanName?: boolean | number
    /** Variant SKU number of the item associated with the subscription line. */
    sku?: boolean | number
    /** Whether the variant is taxable. */
    taxable?: boolean | number
    /** Product title of the item associated with the subscription line. */
    title?: boolean | number
    /** The product variant ID associated with the subscription line. */
    variantId?: boolean | number
    /** The image associated with the line item's variant or product. */
    variantImage?: ImageGenqlSelection
    /** Product variant title of the item associated with the subscription line. */
    variantTitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SubscriptionLines.
 * 
 */
export interface SubscriptionLineConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SubscriptionLineEdgeGenqlSelection
    /** A list of the nodes contained in SubscriptionLineEdge. */
    nodes?: SubscriptionLineGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SubscriptionLine and a cursor during pagination.
 * 
 */
export interface SubscriptionLineEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SubscriptionLineEdge. */
    node?: SubscriptionLineGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to add a new subscription line to a contract. */
export interface SubscriptionLineInput {
/** The ID of the product variant the subscription line refers to. */
productVariantId: Scalars['ID'],
/** The quantity of the product. */
quantity: Scalars['Int'],
/** The price of the product. */
currentPrice: Scalars['Decimal'],
/** The custom attributes for this subscription line. */
customAttributes?: (AttributeInput[] | null),
/** The selling plan for the subscription line. */
sellingPlanId?: (Scalars['ID'] | null),
/**
 * The selling plan name for the subscription line.
 * 
 * Defaults to using the selling plan's current name when not specified.
 * 
 */
sellingPlanName?: (Scalars['String'] | null),
/** Describes expected price changes of the subscription line over time. */
pricingPolicy?: (SubscriptionPricingPolicyInput | null)}


/** The input fields required to update a subscription line on a contract. */
export interface SubscriptionLineUpdateInput {
/** The ID of the product variant the subscription line refers to. */
productVariantId?: (Scalars['ID'] | null),
/** The quantity of the product. */
quantity?: (Scalars['Int'] | null),
/** The selling plan for the subscription line. */
sellingPlanId?: (Scalars['ID'] | null),
/** The selling plan name for the subscription line. */
sellingPlanName?: (Scalars['String'] | null),
/** The price of the product. */
currentPrice?: (Scalars['Decimal'] | null),
/** The custom attributes for this subscription line. */
customAttributes?: (AttributeInput[] | null),
/** Describes expected price changes of the subscription line over time. */
pricingPolicy?: (SubscriptionPricingPolicyInput | null)}


/** A local delivery option for a subscription contract. */
export interface SubscriptionLocalDeliveryOptionGenqlSelection{
    /** The code of the local delivery option. */
    code?: boolean | number
    /** The description of the local delivery option. */
    description?: boolean | number
    /** Whether a phone number is required for the local delivery option. */
    phoneRequired?: boolean | number
    /** The presentment title of the local delivery option. */
    presentmentTitle?: boolean | number
    /** The price of the local delivery option. */
    price?: MoneyV2GenqlSelection
    /** The title of the local delivery option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Mailing Address on a Subscription. */
export interface SubscriptionMailingAddressGenqlSelection{
    /** The first line of the address. Typically the street address or PO Box number. */
    address1?: boolean | number
    /** The second line of the address. Typically the number of the apartment, suite, or unit. */
    address2?: boolean | number
    /** The name of the city, district, village, or town. */
    city?: boolean | number
    /** The name of the customer's company or organization. */
    company?: boolean | number
    /** The name of the country. */
    country?: boolean | number
    /**
     * The two-letter code for the country of the address.
     * 
     * For example, US.
     * 
     */
    countryCode?: boolean | number
    /** The first name of the customer. */
    firstName?: boolean | number
    /** The last name of the customer. */
    lastName?: boolean | number
    /** The full name of the customer, based on firstName and lastName. */
    name?: boolean | number
    /** A unique phone number for the customer. Formatted using E.164 standard. For example, _+16135551111_. */
    phone?: boolean | number
    /** The region of the address, such as the province, state, or district. */
    province?: boolean | number
    /**
     * The two-letter code for the region.
     * 
     * For example, ON.
     * 
     */
    provinceCode?: boolean | number
    /** The zip or postal code of the address. */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Custom subscription discount. */
export interface SubscriptionManualDiscountGenqlSelection{
    /** Entitled line items used to apply the subscription discount on. */
    entitledLines?: SubscriptionDiscountEntitledLinesGenqlSelection
    /** The unique ID. */
    id?: boolean | number
    /** The maximum number of times the subscription discount will be applied on orders. */
    recurringCycleLimit?: boolean | number
    /** The reason that the discount on the subscription draft is rejected. */
    rejectionReason?: boolean | number
    /** Type of line the discount applies on. */
    targetType?: boolean | number
    /** The title associated with the subscription discount. */
    title?: boolean | number
    /** The type of the subscription discount. */
    type?: boolean | number
    /** The number of times the discount was applied. */
    usageCount?: boolean | number
    /** The value of the subscription discount. */
    value?: SubscriptionDiscountValueGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple SubscriptionManualDiscounts.
 * 
 */
export interface SubscriptionManualDiscountConnectionGenqlSelection{
    /** A list of edges. */
    edges?: SubscriptionManualDiscountEdgeGenqlSelection
    /** A list of the nodes contained in SubscriptionManualDiscountEdge. */
    nodes?: SubscriptionManualDiscountGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one SubscriptionManualDiscount and a cursor during pagination.
 * 
 */
export interface SubscriptionManualDiscountEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of SubscriptionManualDiscountEdge. */
    node?: SubscriptionManualDiscountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for the subscription lines the discount applies on. */
export interface SubscriptionManualDiscountEntitledLinesInput {
/** Specify whether the subscription discount will apply on all subscription lines. */
all?: (Scalars['Boolean'] | null),
/** The ID of the lines to add to or remove from the subscription discount. */
lines?: (SubscriptionManualDiscountLinesInput | null)}


/** The input fields for the fixed amount value of the discount and distribution on the lines. */
export interface SubscriptionManualDiscountFixedAmountInput {
/** Fixed amount value. */
amount?: (Scalars['Float'] | null),
/** Whether the amount is intended per line item or once per subscription. */
appliesOnEachItem?: (Scalars['Boolean'] | null)}


/** The input fields for a subscription discount on a contract. */
export interface SubscriptionManualDiscountInput {
/** The title associated with the subscription discount. */
title?: (Scalars['String'] | null),
/** Percentage or fixed amount value of the discount. */
value?: (SubscriptionManualDiscountValueInput | null),
/** The maximum number of times the subscription discount will be applied on orders. */
recurringCycleLimit?: (Scalars['Int'] | null),
/** Entitled line items used to apply the subscription discount on. */
entitledLines?: (SubscriptionManualDiscountEntitledLinesInput | null)}


/** The input fields for line items that the discount refers to. */
export interface SubscriptionManualDiscountLinesInput {
/** The ID of the lines to add to the subscription discount. */
add?: (Scalars['ID'][] | null),
/** The ID of the lines to remove from the subscription discount. */
remove?: (Scalars['ID'][] | null)}


/** The input fields for the discount value and its distribution. */
export interface SubscriptionManualDiscountValueInput {
/** The percentage value of the discount. Value must be between 0 - 100. */
percentage?: (Scalars['Int'] | null),
/** Fixed amount input in the currency defined by the subscription. */
fixedAmount?: (SubscriptionManualDiscountFixedAmountInput | null)}


/** A pickup option to deliver a subscription contract. */
export interface SubscriptionPickupOptionGenqlSelection{
    /** The code of the pickup option. */
    code?: boolean | number
    /** The description of the pickup option. */
    description?: boolean | number
    /** The pickup location. */
    location?: LocationGenqlSelection
    /** Whether a phone number is required for the pickup option. */
    phoneRequired?: boolean | number
    /** The estimated amount of time it takes for the pickup to be ready. For example, "Usually ready in 24 hours".). */
    pickupTime?: boolean | number
    /** The presentment title of the pickup option. */
    presentmentTitle?: boolean | number
    /** The price of the pickup option. */
    price?: MoneyV2GenqlSelection
    /** The title of the pickup option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a Subscription Line Pricing Policy. */
export interface SubscriptionPricingPolicyGenqlSelection{
    /** The base price per unit for the subscription line in the contract's currency. */
    basePrice?: MoneyV2GenqlSelection
    /** The adjustments per cycle for the subscription line. */
    cycleDiscounts?: SubscriptionCyclePriceAdjustmentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields for an array containing all pricing changes for each billing cycle. */
export interface SubscriptionPricingPolicyCycleDiscountsInput {
/** The cycle after which the pricing policy applies. */
afterCycle: Scalars['Int'],
/** The price adjustment type. */
adjustmentType: SellingPlanPricingPolicyAdjustmentType,
/** The price adjustment value. */
adjustmentValue: SellingPlanPricingPolicyValueInput,
/** The computed price after the adjustments are applied. */
computedPrice: Scalars['Decimal']}


/** The input fields for expected price changes of the subscription line over time. */
export interface SubscriptionPricingPolicyInput {
/** The base price per unit for the subscription line in the contract's currency. */
basePrice: Scalars['Decimal'],
/** An array containing all pricing changes for each billing cycle. */
cycleDiscounts: SubscriptionPricingPolicyCycleDiscountsInput[]}


/** A shipping option to deliver a subscription contract. */
export interface SubscriptionShippingOptionGenqlSelection{
    /**
     * @deprecated This field has never been implemented.
     * The carrier service that is providing this shipping option.
     * This field isn't currently supported and returns null.
     * 
     */
    carrierService?: DeliveryCarrierServiceGenqlSelection
    /** The code of the shipping option. */
    code?: boolean | number
    /** The description of the shipping option. */
    description?: boolean | number
    /** If a phone number is required for the shipping option. */
    phoneRequired?: boolean | number
    /** The presentment title of the shipping option. */
    presentmentTitle?: boolean | number
    /** The price of the shipping option. */
    price?: MoneyV2GenqlSelection
    /** The title of the shipping option. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The result of the query to fetch shipping options for the subscription contract. */
export interface SubscriptionShippingOptionResultGenqlSelection{
    on_SubscriptionShippingOptionResultFailure?:SubscriptionShippingOptionResultFailureGenqlSelection,
    on_SubscriptionShippingOptionResultSuccess?:SubscriptionShippingOptionResultSuccessGenqlSelection,
    __typename?: boolean | number
}


/** Failure determining available shipping options for delivery of a subscription contract. */
export interface SubscriptionShippingOptionResultFailureGenqlSelection{
    /** Failure reason. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A shipping option for delivery of a subscription contract. */
export interface SubscriptionShippingOptionResultSuccessGenqlSelection{
    /** Available shipping options. */
    shippingOptions?: SubscriptionShippingOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A suggested transaction. Suggested transaction are usually used in the context of refunds
 * and exchanges.
 * 
 */
export interface SuggestedOrderTransactionGenqlSelection{
    /** The masked account number associated with the payment method. */
    accountNumber?: boolean | number
    /**
     * @deprecated Use `amountSet` instead.
     * The amount of the transaction.
     */
    amount?: boolean | number
    /** The amount and currency of the suggested order transaction in shop and presentment currencies. */
    amountSet?: MoneyBagGenqlSelection
    /** The human-readable payment gateway name suggested to process the transaction. */
    formattedGateway?: boolean | number
    /** The suggested payment gateway used to process the transaction. */
    gateway?: boolean | number
    /** Specifies the kind of the suggested order transaction. */
    kind?: boolean | number
    /**
     * @deprecated Use `maximumRefundableSet` instead.
     * Specifies the available amount to refund on the gateway. Only available within SuggestedRefund.
     */
    maximumRefundable?: boolean | number
    /** Specifies the available amount to refund on the gateway in shop and presentment currencies. Only available within SuggestedRefund. */
    maximumRefundableSet?: MoneyBagGenqlSelection
    /** The associated parent transaction, for example the authorization of a capture. */
    parentTransaction?: OrderTransactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a refund suggested by Shopify based on the items being reimbursed. You can then use the suggested refund object to generate an actual refund. */
export interface SuggestedRefundGenqlSelection{
    /**
     * @deprecated Use `amountSet` instead.
     * The total monetary value to be refunded.
     */
    amount?: boolean | number
    /** The total monetary value to be refunded in shop and presentment currencies. */
    amountSet?: MoneyBagGenqlSelection
    /** The sum of all the discounted prices of the line items being refunded. */
    discountedSubtotalSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `maximumRefundableSet` instead.
     * The total monetary value available to refund.
     */
    maximumRefundable?: boolean | number
    /** The total monetary value available to refund in shop and presentment currencies. */
    maximumRefundableSet?: MoneyBagGenqlSelection
    /** A list of duties to be refunded from the order. */
    refundDuties?: RefundDutyGenqlSelection
    /** A list of line items to be refunded, along with restock instructions. */
    refundLineItems?: RefundLineItemGenqlSelection
    /** The shipping costs to be refunded from the order. */
    shipping?: ShippingRefundGenqlSelection
    /**
     * @deprecated Use `subtotalSet` instead.
     * The sum of all the prices of the line items being refunded.
     */
    subtotal?: boolean | number
    /** The sum of all the prices of the line items being refunded in shop and presentment currencies. */
    subtotalSet?: MoneyBagGenqlSelection
    /** A list of suggested order transactions. */
    suggestedTransactions?: SuggestedOrderTransactionGenqlSelection
    /** The total cart discount amount that was applied to all line items in this refund. */
    totalCartDiscountAmountSet?: MoneyBagGenqlSelection
    /** The sum of all the duties being refunded from the order in shop and presentment currencies. The value must be positive. */
    totalDutiesSet?: MoneyBagGenqlSelection
    /** The sum of the taxes being refunded from the order in shop and presentment currencies. The value must be positive. */
    totalTaxSet?: MoneyBagGenqlSelection
    /**
     * @deprecated Use `totalTaxSet` instead.
     * The sum of the taxes being refunded from the order. The value must be positive.
     */
    totalTaxes?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a return refund suggested by Shopify based on the items being reimbursed. You can then use the suggested refund object to generate an actual refund for the return. */
export interface SuggestedReturnRefundGenqlSelection{
    /** The total monetary value to be refunded in shop and presentment currencies. */
    amount?: MoneyBagGenqlSelection
    /** The sum of all the discounted prices of the line items being refunded. */
    discountedSubtotal?: MoneyBagGenqlSelection
    /** The total monetary value available to refund in shop and presentment currencies. */
    maximumRefundable?: MoneyBagGenqlSelection
    /** A list of duties to be refunded from the order. */
    refundDuties?: RefundDutyGenqlSelection
    /** The shipping costs to be refunded from the order. */
    shipping?: ShippingRefundGenqlSelection
    /** The sum of all the prices of the line items being refunded in shop and presentment currencies. */
    subtotal?: MoneyBagGenqlSelection
    /** A list of suggested order transactions. */
    suggestedTransactions?: SuggestedOrderTransactionGenqlSelection
    /** The total cart discount amount that was applied to all line items in this refund. */
    totalCartDiscountAmount?: MoneyBagGenqlSelection
    /** The sum of all the duties being refunded from the order in shop and presentment currencies. The value must be positive. */
    totalDuties?: MoneyBagGenqlSelection
    /** The sum of the taxes being refunded in shop and presentment currencies. The value must be positive. */
    totalTax?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The result in a tabular format with schema information and formatted and unformatted row data. */
export interface TableDataGenqlSelection{
    /** The data table columns. */
    columns?: TableDataColumnGenqlSelection
    /** The formatted data values. */
    rowData?: boolean | number
    /** The unformatted data values. */
    unformattedData?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A nested array representation of the data. An index in an array represents a row number. */
export interface TableDataColumnGenqlSelection{
    /** For comparison columns, indicates the column to compare to. */
    comparedTo?: boolean | number
    /** The data type of the column value. */
    dataType?: boolean | number
    /** The display name of the column in the data model. */
    displayName?: boolean | number
    /** The name of the column in the data model. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The default table response structure for a ShopifyQL query. */
export interface TableResponseGenqlSelection{
    /** A list of parse errors, if parsing fails. */
    parseErrors?: ParseErrorGenqlSelection
    /** The result in a tabular format with schema and row data. */
    tableData?: TableDataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `tagsAdd` mutation. */
export interface TagsAddPayloadGenqlSelection{
    /** The object that was updated. */
    node?: NodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `tagsRemove` mutation. */
export interface TagsRemovePayloadGenqlSelection{
    /** The object that was updated. */
    node?: NodeGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Tax app configuration of a merchant. */
export interface TaxAppConfigurationGenqlSelection{
    /** State of the tax app configuration. */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `taxAppConfigure` mutation. */
export interface TaxAppConfigurePayloadGenqlSelection{
    /** The updated tax app configuration. */
    taxAppConfiguration?: TaxAppConfigurationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: TaxAppConfigureUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `TaxAppConfigure`. */
export interface TaxAppConfigureUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a single tax applied to the associated line item. */
export interface TaxLineGenqlSelection{
    /** Whether the channel that submitted the tax line is liable for remitting. A value of null indicates unknown liability for this tax line. */
    channelLiable?: boolean | number
    /**
     * @deprecated Use `priceSet` instead.
     * The amount of tax, in shop currency, after discounts and before returns.
     */
    price?: boolean | number
    /** The amount of tax, in shop and presentment currencies, after discounts and before returns. */
    priceSet?: MoneyBagGenqlSelection
    /** The proportion of the line item price that the tax represents as a decimal. */
    rate?: boolean | number
    /** The proportion of the line item price that the tax represents as a percentage. */
    ratePercentage?: boolean | number
    /** The name of the tax. */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A TenderTransaction represents a transaction with financial impact on a shop's balance sheet. A tender transaction always
 * represents actual money movement between a buyer and a shop. TenderTransactions can be used instead of OrderTransactions
 * for reconciling a shop's cash flow. A TenderTransaction is immutable once created.
 * 
 */
export interface TenderTransactionGenqlSelection{
    /** The amount and currency of the tender transaction. */
    amount?: MoneyV2GenqlSelection
    /** A globally-unique ID. */
    id?: boolean | number
    /** Information about the payment method used for the transaction. */
    paymentMethod?: boolean | number
    /** Date and time when the transaction was processed. */
    processedAt?: boolean | number
    /** The remote gateway reference associated with the tender transaction. */
    remoteReference?: boolean | number
    /** Whether the transaction is a test transaction. */
    test?: boolean | number
    /** Information about the payment instrument used for the transaction. */
    transactionDetails?: TenderTransactionDetailsGenqlSelection
    /** The staff member who performed the transaction. */
    user?: StaffMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple TenderTransactions.
 * 
 */
export interface TenderTransactionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: TenderTransactionEdgeGenqlSelection
    /** A list of the nodes contained in TenderTransactionEdge. */
    nodes?: TenderTransactionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the credit card used for this transaction. */
export interface TenderTransactionCreditCardDetailsGenqlSelection{
    /** The name of the company that issued the customer's credit card. Example: `Visa`. */
    creditCardCompany?: boolean | number
    /** The customer's credit card number, with all digits except the last 4 redacted. Example: `•••• •••• •••• 1234` */
    creditCardNumber?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about the payment instrument used for this transaction. */
export interface TenderTransactionDetailsGenqlSelection{
    on_TenderTransactionCreditCardDetails?:TenderTransactionCreditCardDetailsGenqlSelection,
    __typename?: boolean | number
}


/**
 * An auto-generated type which holds one TenderTransaction and a cursor during pagination.
 * 
 */
export interface TenderTransactionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of TenderTransactionEdge. */
    node?: TenderTransactionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A sale associated with a tip. */
export interface TipSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line item for the associated sale. */
    lineItem?: LineItemGenqlSelection
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Transaction fee related to an order transaction. */
export interface TransactionFeeGenqlSelection{
    /** Amount of the fee. */
    amount?: MoneyV2GenqlSelection
    /** Flat rate charge for a transaction. */
    flatFee?: MoneyV2GenqlSelection
    /** Name of the credit card flat fee. */
    flatFeeName?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** Percentage charge. */
    rate?: boolean | number
    /** Name of the credit card rate. */
    rateName?: boolean | number
    /** Tax amount charged on the fee. */
    taxAmount?: MoneyV2GenqlSelection
    /** Name of the type of fee. */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Translatable content of a resource's field. */
export interface TranslatableContentGenqlSelection{
    /** Hash digest representation of the content value. */
    digest?: boolean | number
    /** The resource field that is being translated. */
    key?: boolean | number
    /** Locale of the content. */
    locale?: boolean | number
    /** Type of the translatable content. */
    type?: boolean | number
    /** Content value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A resource that has translatable fields. */
export interface TranslatableResourceGenqlSelection{
    /** GID of the resource. */
    resourceId?: boolean | number
    /** Translatable content. */
    translatableContent?: TranslatableContentGenqlSelection
    /** Translatable content translations. */
    translations?: (TranslationGenqlSelection & { __args: {
    /** Filters translations by locale. */
    locale: Scalars['String'], 
    /** Filters by outdated translations. */
    outdated?: (Scalars['Boolean'] | null), 
    /** Filters translations by market ID. Use this argument to retrieve content specific to a market. */
    marketId?: (Scalars['ID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple TranslatableResources.
 * 
 */
export interface TranslatableResourceConnectionGenqlSelection{
    /** A list of edges. */
    edges?: TranslatableResourceEdgeGenqlSelection
    /** A list of the nodes contained in TranslatableResourceEdge. */
    nodes?: TranslatableResourceGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one TranslatableResource and a cursor during pagination.
 * 
 */
export interface TranslatableResourceEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of TranslatableResourceEdge. */
    node?: TranslatableResourceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Translation of a field of a resource. */
export interface TranslationGenqlSelection{
    /** On the resource that this translation belongs to, the reference to the value being translated. */
    key?: boolean | number
    /** ISO code of the translation locale. */
    locale?: boolean | number
    /** The market that the translation is specific to. Null value means the translation is available in all markets. */
    market?: MarketGenqlSelection
    /** Whether the original content has changed since this translation was updated. */
    outdated?: boolean | number
    /** The date and time when the translation was updated. */
    updatedAt?: boolean | number
    /** Translation value. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields and values for creating or updating a translation. */
export interface TranslationInput {
/** ISO code of the locale being translated into. Only locales returned in `shopLocales` are valid. */
locale: Scalars['String'],
/** On the resource that this translation belongs to, the reference to the value being translated. */
key: Scalars['String'],
/** The value of the translation. */
value: Scalars['String'],
/** Hash digest representation of the content being translated. */
translatableContentDigest: Scalars['String'],
/** The ID of the market that the translation is specific to. Not specifying this field means that the translation will be available in all markets. */
marketId?: (Scalars['ID'] | null)}


/** Represents an error that happens during the execution of a translation mutation. */
export interface TranslationUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `translationsRegister` mutation. */
export interface TranslationsRegisterPayloadGenqlSelection{
    /** The translations that were created or updated. */
    translations?: TranslationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: TranslationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `translationsRemove` mutation. */
export interface TranslationsRemovePayloadGenqlSelection{
    /** The translations that were deleted. */
    translations?: TranslationGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: TranslationUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a typed custom attribute. */
export interface TypedAttributeGenqlSelection{
    /** Key or name of the attribute. */
    key?: boolean | number
    /** Value of the attribute. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Specifies the
 * [Urchin Traffic Module (UTM) parameters](https://en.wikipedia.org/wiki/UTM_parameters)
 * that are associated with a related marketing campaign.
 * 
 */
export interface UTMInput {
/** The name of the UTM campaign. */
campaign: Scalars['String'],
/** The name of the website or application where the referral link exists. */
source: Scalars['String'],
/** The UTM campaign medium. */
medium: Scalars['String']}


/** Represents a set of UTM parameters. */
export interface UTMParametersGenqlSelection{
    /** The name of a marketing campaign. */
    campaign?: boolean | number
    /** Identifies specific content in a marketing campaign. Used to differentiate between similar content or links in a marketing campaign to determine which is the most effective. */
    content?: boolean | number
    /** The medium of a marketing campaign, such as a banner or email newsletter. */
    medium?: boolean | number
    /** The source of traffic to the merchant's store, such as Google or an email newsletter. */
    source?: boolean | number
    /** Paid search terms used by a marketing campaign. */
    term?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** This is represents new sale types that have been added in future API versions. You may update to a more recent API version to receive additional details about this sale. */
export interface UnknownSaleGenqlSelection{
    /** The type of order action that the sale represents. */
    actionType?: boolean | number
    /** The unique ID for the sale. */
    id?: boolean | number
    /** The line type assocated with the sale. */
    lineType?: boolean | number
    /** The number of units either ordered or intended to be returned. */
    quantity?: boolean | number
    /** All individual taxes associated with the sale. */
    taxes?: SaleTaxGenqlSelection
    /** The total sale amount after taxes and discounts. */
    totalAmount?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale after taxes. */
    totalDiscountAmountAfterTaxes?: MoneyBagGenqlSelection
    /** The total discounts allocated to the sale before taxes. */
    totalDiscountAmountBeforeTaxes?: MoneyBagGenqlSelection
    /** The total amount of taxes for the sale. */
    totalTaxAmount?: MoneyBagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields required to update a media object. */
export interface UpdateMediaInput {
/** Specifies the media to update. */
id: Scalars['ID'],
/** The source from which to update the media preview image. May be an external URL or staged upload URL. */
previewImageSource?: (Scalars['String'] | null),
/** The alt text associated to the media. */
alt?: (Scalars['String'] | null)}


/** The URL redirect for the online store. */
export interface UrlRedirectGenqlSelection{
    /** The ID of the URL redirect. */
    id?: boolean | number
    /** The old path to be redirected from. When the user visits this path, they will be redirected to the target location. */
    path?: boolean | number
    /** The target location where the user will be redirected to. */
    target?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectBulkDeleteAll` mutation. */
export interface UrlRedirectBulkDeleteAllPayloadGenqlSelection{
    /** The asynchronous job removing the redirects. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectBulkDeleteByIds` mutation. */
export interface UrlRedirectBulkDeleteByIdsPayloadGenqlSelection{
    /** The asynchronous job removing the redirects. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectBulkDeleteByIdsUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `UrlRedirectBulkDeleteByIds`. */
export interface UrlRedirectBulkDeleteByIdsUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectBulkDeleteBySavedSearch` mutation. */
export interface UrlRedirectBulkDeleteBySavedSearchPayloadGenqlSelection{
    /** The asynchronous job removing the redirects. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectBulkDeleteBySavedSearchUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `UrlRedirectBulkDeleteBySavedSearch`. */
export interface UrlRedirectBulkDeleteBySavedSearchUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectBulkDeleteBySearch` mutation. */
export interface UrlRedirectBulkDeleteBySearchPayloadGenqlSelection{
    /** The asynchronous job removing the redirects. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectBulkDeleteBySearchUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An error that occurs during the execution of `UrlRedirectBulkDeleteBySearch`. */
export interface UrlRedirectBulkDeleteBySearchUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple UrlRedirects.
 * 
 */
export interface UrlRedirectConnectionGenqlSelection{
    /** A list of edges. */
    edges?: UrlRedirectEdgeGenqlSelection
    /** A list of the nodes contained in UrlRedirectEdge. */
    nodes?: UrlRedirectGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectCreate` mutation. */
export interface UrlRedirectCreatePayloadGenqlSelection{
    /** The created redirect. */
    urlRedirect?: UrlRedirectGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectDelete` mutation. */
export interface UrlRedirectDeletePayloadGenqlSelection{
    /** The ID of the deleted redirect. */
    deletedUrlRedirectId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one UrlRedirect and a cursor during pagination.
 * 
 */
export interface UrlRedirectEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of UrlRedirectEdge. */
    node?: UrlRedirectGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A request to import a [`URLRedirect`](https://shopify.dev/api/admin-graphql/latest/objects/UrlRedirect) object
 * into the Online Store channel. Apps can use this to query the state of an `UrlRedirectImport` request.
 * 
 * For more information, see [`url-redirect`](https://help.shopify.com/en/manual/online-store/menus-and-links/url-redirect)s.
 * 
 */
export interface UrlRedirectImportGenqlSelection{
    /** The number of rows in the file. */
    count?: boolean | number
    /** The number of redirects created from the import. */
    createdCount?: boolean | number
    /** The number of redirects that failed to be imported. */
    failedCount?: boolean | number
    /** Whether the import is finished. */
    finished?: boolean | number
    /** The date and time when the import finished. */
    finishedAt?: boolean | number
    /** The ID of the `UrlRedirectImport` object. */
    id?: boolean | number
    /** A list of up to three previews of the URL redirects to be imported. */
    previewRedirects?: UrlRedirectImportPreviewGenqlSelection
    /** The number of redirects updated during the import. */
    updatedCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectImportCreate` mutation. */
export interface UrlRedirectImportCreatePayloadGenqlSelection{
    /** The created `URLRedirectImport` object. */
    urlRedirectImport?: UrlRedirectImportGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectImportUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A preview of a URL redirect import row. */
export interface UrlRedirectImportPreviewGenqlSelection{
    /** The old path to be redirected from. When the user visits this path, they will be redirected to the target location. */
    path?: boolean | number
    /** The target location where the user will be redirected to. */
    target?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `urlRedirectImportSubmit` mutation. */
export interface UrlRedirectImportSubmitPayloadGenqlSelection{
    /** The asynchronous job importing the redirects. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectImportUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during execution of a redirect import mutation. */
export interface UrlRedirectImportUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to create or update a URL redirect. */
export interface UrlRedirectInput {
/** The old path to be redirected from. When the user visits this path, they will be redirected to the target location. */
path?: (Scalars['String'] | null),
/** The target location where the user will be redirected to. */
target?: (Scalars['String'] | null)}


/** Return type for `urlRedirectUpdate` mutation. */
export interface UrlRedirectUpdatePayloadGenqlSelection{
    /** Returns the updated URL redirect. */
    urlRedirect?: UrlRedirectGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UrlRedirectUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error that happens during execution of a redirect mutation. */
export interface UrlRedirectUserErrorGenqlSelection{
    /** The error code. */
    code?: boolean | number
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents an error in the input of a mutation. */
export interface UserErrorGenqlSelection{
    /** The path to the input field that caused the error. */
    field?: boolean | number
    /** The error message. */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a credit card payment instrument. */
export interface VaultCreditCardGenqlSelection{
    /** The billing address of the card. */
    billingAddress?: CustomerCreditCardBillingAddressGenqlSelection
    /** The brand for the card. */
    brand?: boolean | number
    /** Whether the card has been expired. */
    expired?: boolean | number
    /** The expiry month of the card. */
    expiryMonth?: boolean | number
    /** The expiry year of the card. */
    expiryYear?: boolean | number
    /** The last four digits for the card. */
    lastDigits?: boolean | number
    /** The name of the card holder. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Represents a paypal billing agreement payment instrument. */
export interface VaultPaypalBillingAgreementGenqlSelection{
    /** Whether the paypal billing agreement is inactive. */
    inactive?: boolean | number
    /** The paypal account name. */
    name?: boolean | number
    /** The paypal account email address. */
    paypalAccountEmail?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Representation of 3d vectors and points. It can represent
 * either the coordinates of a point in space, a direction, or
 * size. Presented as an object with three floating-point values.
 * 
 */
export interface Vector3GenqlSelection{
    /** The x coordinate of Vector3. */
    x?: boolean | number
    /** The y coordinate of Vector3. */
    y?: boolean | number
    /** The z coordinate of Vector3. */
    z?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a Shopify hosted video.
 * 
 */
export interface VideoGenqlSelection{
    /** A word or phrase to share the nature or contents of a media. */
    alt?: boolean | number
    /**
     * The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was created.
     * 
     */
    createdAt?: boolean | number
    /**
     * The video's duration in milliseconds. This value is `null` unless the video's status field is
     * [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready).
     * 
     */
    duration?: boolean | number
    /** Any errors that have occurred on the file. */
    fileErrors?: FileErrorGenqlSelection
    /** The status of the file. */
    fileStatus?: boolean | number
    /** The video's filename. */
    filename?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** The media content type. */
    mediaContentType?: boolean | number
    /** Any errors which have occurred on the media. */
    mediaErrors?: MediaErrorGenqlSelection
    /** The warnings attached to the media. */
    mediaWarnings?: MediaWarningGenqlSelection
    /**
     * The video's original source. This value is `null` unless the video's status field is
     * [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready).
     * 
     */
    originalSource?: VideoSourceGenqlSelection
    /** The preview image for the media. */
    preview?: MediaPreviewImageGenqlSelection
    /**
     * The video's sources. This value is empty unless the video's status field is
     * [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready).
     * 
     */
    sources?: VideoSourceGenqlSelection
    /** Current status of the media. */
    status?: boolean | number
    /** The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the file was last updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * Represents a source for a Shopify hosted video.
 * 
 * Types of sources include the original video, lower resolution versions of the original video,
 * and an m3u8 playlist file.
 * 
 * Only [videos](https://shopify.dev/api/admin-graphql/latest/objects/video) with a status field
 * of [READY](https://shopify.dev/api/admin-graphql/latest/enums/MediaStatus#value-ready) have sources.
 * 
 */
export interface VideoSourceGenqlSelection{
    /** The video source's file size in bytes. */
    fileSize?: boolean | number
    /** The video source's file format extension. */
    format?: boolean | number
    /** The video source's height. */
    height?: boolean | number
    /** The video source's MIME type. */
    mimeType?: boolean | number
    /** The video source's URL. */
    url?: boolean | number
    /** The video source's width. */
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A web pixel settings. */
export interface WebPixelGenqlSelection{
    /** A globally-unique ID. */
    id?: boolean | number
    /** The settings JSON object for the web pixel. */
    settings?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `webPixelCreate` mutation. */
export interface WebPixelCreatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsWebPixelUserErrorGenqlSelection
    /** The created web pixel settings. */
    webPixel?: WebPixelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `webPixelDelete` mutation. */
export interface WebPixelDeletePayloadGenqlSelection{
    /** The ID of the web pixel settings that was deleted. */
    deletedWebPixelId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsWebPixelUserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The input fields to use to update a web pixel. */
export interface WebPixelInput {
/** The web pixel settings in JSON format. */
settings: Scalars['JSON']}


/** Return type for `webPixelUpdate` mutation. */
export interface WebPixelUpdatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: ErrorsWebPixelUserErrorGenqlSelection
    /** The updated web pixel settings. */
    webPixel?: WebPixelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Amazon EventBridge partner event source to which webhook subscriptions publish events. */
export interface WebhookEventBridgeEndpointGenqlSelection{
    /** The ARN of this EventBridge partner event source. */
    arn?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An HTTPS endpoint to which webhook subscriptions send POST requests. */
export interface WebhookHttpEndpointGenqlSelection{
    /** The URL to which the webhooks events are sent. */
    callbackUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Google Cloud Pub/Sub topic to which webhook subscriptions publish events. */
export interface WebhookPubSubEndpointGenqlSelection{
    /** The Google Cloud Pub/Sub project ID. */
    pubSubProject?: boolean | number
    /** The Google Cloud Pub/Sub topic ID. */
    pubSubTopic?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * A webhook subscription is a persisted data object created by an app using the REST Admin API or GraphQL Admin API.
 * It describes the topic that the app wants to receive, and a destination where Shopify should send webhooks of the specified topic.
 * When an event for a given topic occurs, the webhook subscription sends a relevant payload to the destination.
 * Learn more about the [webhooks system](https://shopify.dev/apps/webhooks).
 * 
 */
export interface WebhookSubscriptionGenqlSelection{
    /** The Admin API version that Shopify uses to serialize webhook events. This value is inherited from the app that created the webhook subscription. */
    apiVersion?: ApiVersionGenqlSelection
    /**
     * @deprecated Use `endpoint` instead.
     * The destination URI to which the webhook subscription will send a message when an event occurs.
     */
    callbackUrl?: boolean | number
    /** The date and time when the webhook subscription was created. */
    createdAt?: boolean | number
    /** The endpoint to which the webhook subscription will send events. */
    endpoint?: WebhookSubscriptionEndpointGenqlSelection
    /** The format in which the webhook subscription should send the data. */
    format?: boolean | number
    /** A globally-unique ID. */
    id?: boolean | number
    /** An optional array of top-level resource fields that should be serialized and sent in the webhook message. If null, then all fields will be sent. */
    includeFields?: boolean | number
    /** The ID of the corresponding resource in the REST Admin API. */
    legacyResourceId?: boolean | number
    /** The list of namespaces for any metafields that should be included in the webhook subscription. */
    metafieldNamespaces?: boolean | number
    /**
     * @deprecated Metafields created using a reserved namespace are private by default. See our guide for [migrating private metafields](https://shopify.dev/docs/apps/custom-data/metafields/migrate-private-metafields). 
     * The list of namespaces for private metafields that should be included in the webhook subscription.
     */
    privateMetafieldNamespaces?: boolean | number
    /** The type of event that triggers the webhook. The topic determines when the webhook subscription sends a webhook, as well as what class of data object that webhook contains. */
    topic?: boolean | number
    /** The date and time when the webhook subscription was updated. */
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type for paginating through multiple WebhookSubscriptions.
 * 
 */
export interface WebhookSubscriptionConnectionGenqlSelection{
    /** A list of edges. */
    edges?: WebhookSubscriptionEdgeGenqlSelection
    /** A list of the nodes contained in WebhookSubscriptionEdge. */
    nodes?: WebhookSubscriptionGenqlSelection
    /** Information to aid in pagination. */
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `webhookSubscriptionCreate` mutation. */
export interface WebhookSubscriptionCreatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    /** The webhook subscription that was created. */
    webhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `webhookSubscriptionDelete` mutation. */
export interface WebhookSubscriptionDeletePayloadGenqlSelection{
    /** The ID of the deleted webhook subscription. */
    deletedWebhookSubscriptionId?: boolean | number
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * An auto-generated type which holds one WebhookSubscription and a cursor during pagination.
 * 
 */
export interface WebhookSubscriptionEdgeGenqlSelection{
    /** A cursor for use in pagination. */
    cursor?: boolean | number
    /** The item at the end of WebhookSubscriptionEdge. */
    node?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An endpoint to which webhook subscriptions send webhooks events. */
export interface WebhookSubscriptionEndpointGenqlSelection{
    on_WebhookEventBridgeEndpoint?:WebhookEventBridgeEndpointGenqlSelection,
    on_WebhookHttpEndpoint?:WebhookHttpEndpointGenqlSelection,
    on_WebhookPubSubEndpoint?:WebhookPubSubEndpointGenqlSelection,
    __typename?: boolean | number
}


/**
 * The input fields for a webhook subscription.
 * 
 */
export interface WebhookSubscriptionInput {
/** URL where the webhook subscription should send the POST request when the event occurs. */
callbackUrl?: (Scalars['URL'] | null),
/** The format in which the webhook subscription should send the data. */
format?: (WebhookSubscriptionFormat | null),
/** The list of fields to be included in the webhook subscription. */
includeFields?: (Scalars['String'][] | null),
/** The list of namespaces for any metafields that should be included in the webhook subscription. */
metafieldNamespaces?: (Scalars['String'][] | null)}


/** Return type for `webhookSubscriptionUpdate` mutation. */
export interface WebhookSubscriptionUpdatePayloadGenqlSelection{
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    /** The webhook subscription that was updated. */
    webhookSubscription?: WebhookSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A weight, which includes a numeric value and a unit of measurement. */
export interface WeightGenqlSelection{
    /** The unit of measurement for `value`. */
    unit?: boolean | number
    /** The weight value using the unit system specified with `unit`. */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/**
 * The input fields for the weight unit and value inputs.
 * 
 */
export interface WeightInput {
/** The weight value using the unit system specified with `weight_unit`. */
value: Scalars['Float'],
/** Unit of measurement for `value`. */
unit: WeightUnit}


/** Return type for `deliveryProfileCreate` mutation. */
export interface deliveryProfileCreatePayloadGenqlSelection{
    /** The delivery profile that was created. */
    profile?: DeliveryProfileGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `deliveryProfileRemove` mutation. */
export interface deliveryProfileRemovePayloadGenqlSelection{
    /** The delivery profile deletion job triggered by the mutation. */
    job?: JobGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Return type for `deliveryProfileUpdate` mutation. */
export interface deliveryProfileUpdatePayloadGenqlSelection{
    /** The delivery profile that was updated. */
    profile?: DeliveryProfileGenqlSelection
    /** The list of errors that occurred from executing the mutation. */
    userErrors?: UserErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export type QueryGenqlSelection = QueryRootGenqlSelection


    const AbandonedCheckout_possibleTypes: string[] = ['AbandonedCheckout']
    export const isAbandonedCheckout = (obj?: { __typename?: any } | null): obj is AbandonedCheckout => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAbandonedCheckout"')
      return AbandonedCheckout_possibleTypes.includes(obj.__typename)
    }
    


    const Abandonment_possibleTypes: string[] = ['Abandonment']
    export const isAbandonment = (obj?: { __typename?: any } | null): obj is Abandonment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAbandonment"')
      return Abandonment_possibleTypes.includes(obj.__typename)
    }
    


    const AbandonmentEmailStateUpdatePayload_possibleTypes: string[] = ['AbandonmentEmailStateUpdatePayload']
    export const isAbandonmentEmailStateUpdatePayload = (obj?: { __typename?: any } | null): obj is AbandonmentEmailStateUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAbandonmentEmailStateUpdatePayload"')
      return AbandonmentEmailStateUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AbandonmentEmailStateUpdateUserError_possibleTypes: string[] = ['AbandonmentEmailStateUpdateUserError']
    export const isAbandonmentEmailStateUpdateUserError = (obj?: { __typename?: any } | null): obj is AbandonmentEmailStateUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAbandonmentEmailStateUpdateUserError"')
      return AbandonmentEmailStateUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const AbandonmentUpdateActivitiesDeliveryStatusesPayload_possibleTypes: string[] = ['AbandonmentUpdateActivitiesDeliveryStatusesPayload']
    export const isAbandonmentUpdateActivitiesDeliveryStatusesPayload = (obj?: { __typename?: any } | null): obj is AbandonmentUpdateActivitiesDeliveryStatusesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAbandonmentUpdateActivitiesDeliveryStatusesPayload"')
      return AbandonmentUpdateActivitiesDeliveryStatusesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AbandonmentUpdateActivitiesDeliveryStatusesUserError_possibleTypes: string[] = ['AbandonmentUpdateActivitiesDeliveryStatusesUserError']
    export const isAbandonmentUpdateActivitiesDeliveryStatusesUserError = (obj?: { __typename?: any } | null): obj is AbandonmentUpdateActivitiesDeliveryStatusesUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAbandonmentUpdateActivitiesDeliveryStatusesUserError"')
      return AbandonmentUpdateActivitiesDeliveryStatusesUserError_possibleTypes.includes(obj.__typename)
    }
    


    const AccessScope_possibleTypes: string[] = ['AccessScope']
    export const isAccessScope = (obj?: { __typename?: any } | null): obj is AccessScope => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAccessScope"')
      return AccessScope_possibleTypes.includes(obj.__typename)
    }
    


    const AddAllProductsOperation_possibleTypes: string[] = ['AddAllProductsOperation']
    export const isAddAllProductsOperation = (obj?: { __typename?: any } | null): obj is AddAllProductsOperation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAddAllProductsOperation"')
      return AddAllProductsOperation_possibleTypes.includes(obj.__typename)
    }
    


    const AdditionalFee_possibleTypes: string[] = ['AdditionalFee']
    export const isAdditionalFee = (obj?: { __typename?: any } | null): obj is AdditionalFee => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAdditionalFee"')
      return AdditionalFee_possibleTypes.includes(obj.__typename)
    }
    


    const AdditionalFeeSale_possibleTypes: string[] = ['AdditionalFeeSale']
    export const isAdditionalFeeSale = (obj?: { __typename?: any } | null): obj is AdditionalFeeSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAdditionalFeeSale"')
      return AdditionalFeeSale_possibleTypes.includes(obj.__typename)
    }
    


    const AdjustmentSale_possibleTypes: string[] = ['AdjustmentSale']
    export const isAdjustmentSale = (obj?: { __typename?: any } | null): obj is AdjustmentSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAdjustmentSale"')
      return AdjustmentSale_possibleTypes.includes(obj.__typename)
    }
    


    const AllDiscountItems_possibleTypes: string[] = ['AllDiscountItems']
    export const isAllDiscountItems = (obj?: { __typename?: any } | null): obj is AllDiscountItems => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAllDiscountItems"')
      return AllDiscountItems_possibleTypes.includes(obj.__typename)
    }
    


    const ApiVersion_possibleTypes: string[] = ['ApiVersion']
    export const isApiVersion = (obj?: { __typename?: any } | null): obj is ApiVersion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApiVersion"')
      return ApiVersion_possibleTypes.includes(obj.__typename)
    }
    


    const App_possibleTypes: string[] = ['App']
    export const isApp = (obj?: { __typename?: any } | null): obj is App => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApp"')
      return App_possibleTypes.includes(obj.__typename)
    }
    


    const AppCatalog_possibleTypes: string[] = ['AppCatalog']
    export const isAppCatalog = (obj?: { __typename?: any } | null): obj is AppCatalog => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppCatalog"')
      return AppCatalog_possibleTypes.includes(obj.__typename)
    }
    


    const AppConnection_possibleTypes: string[] = ['AppConnection']
    export const isAppConnection = (obj?: { __typename?: any } | null): obj is AppConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppConnection"')
      return AppConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppCredit_possibleTypes: string[] = ['AppCredit']
    export const isAppCredit = (obj?: { __typename?: any } | null): obj is AppCredit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppCredit"')
      return AppCredit_possibleTypes.includes(obj.__typename)
    }
    


    const AppCreditConnection_possibleTypes: string[] = ['AppCreditConnection']
    export const isAppCreditConnection = (obj?: { __typename?: any } | null): obj is AppCreditConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppCreditConnection"')
      return AppCreditConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppCreditEdge_possibleTypes: string[] = ['AppCreditEdge']
    export const isAppCreditEdge = (obj?: { __typename?: any } | null): obj is AppCreditEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppCreditEdge"')
      return AppCreditEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppDiscountType_possibleTypes: string[] = ['AppDiscountType']
    export const isAppDiscountType = (obj?: { __typename?: any } | null): obj is AppDiscountType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppDiscountType"')
      return AppDiscountType_possibleTypes.includes(obj.__typename)
    }
    


    const AppEdge_possibleTypes: string[] = ['AppEdge']
    export const isAppEdge = (obj?: { __typename?: any } | null): obj is AppEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppEdge"')
      return AppEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppFeedback_possibleTypes: string[] = ['AppFeedback']
    export const isAppFeedback = (obj?: { __typename?: any } | null): obj is AppFeedback => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppFeedback"')
      return AppFeedback_possibleTypes.includes(obj.__typename)
    }
    


    const AppInstallation_possibleTypes: string[] = ['AppInstallation']
    export const isAppInstallation = (obj?: { __typename?: any } | null): obj is AppInstallation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInstallation"')
      return AppInstallation_possibleTypes.includes(obj.__typename)
    }
    


    const AppInstallationConnection_possibleTypes: string[] = ['AppInstallationConnection']
    export const isAppInstallationConnection = (obj?: { __typename?: any } | null): obj is AppInstallationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInstallationConnection"')
      return AppInstallationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppInstallationEdge_possibleTypes: string[] = ['AppInstallationEdge']
    export const isAppInstallationEdge = (obj?: { __typename?: any } | null): obj is AppInstallationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppInstallationEdge"')
      return AppInstallationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppPlanV2_possibleTypes: string[] = ['AppPlanV2']
    export const isAppPlanV2 = (obj?: { __typename?: any } | null): obj is AppPlanV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPlanV2"')
      return AppPlanV2_possibleTypes.includes(obj.__typename)
    }
    


    const AppPricingDetails_possibleTypes: string[] = ['AppRecurringPricing','AppUsagePricing']
    export const isAppPricingDetails = (obj?: { __typename?: any } | null): obj is AppPricingDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPricingDetails"')
      return AppPricingDetails_possibleTypes.includes(obj.__typename)
    }
    


    const AppPurchase_possibleTypes: string[] = ['AppPurchaseOneTime']
    export const isAppPurchase = (obj?: { __typename?: any } | null): obj is AppPurchase => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPurchase"')
      return AppPurchase_possibleTypes.includes(obj.__typename)
    }
    


    const AppPurchaseOneTime_possibleTypes: string[] = ['AppPurchaseOneTime']
    export const isAppPurchaseOneTime = (obj?: { __typename?: any } | null): obj is AppPurchaseOneTime => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPurchaseOneTime"')
      return AppPurchaseOneTime_possibleTypes.includes(obj.__typename)
    }
    


    const AppPurchaseOneTimeConnection_possibleTypes: string[] = ['AppPurchaseOneTimeConnection']
    export const isAppPurchaseOneTimeConnection = (obj?: { __typename?: any } | null): obj is AppPurchaseOneTimeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPurchaseOneTimeConnection"')
      return AppPurchaseOneTimeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppPurchaseOneTimeCreatePayload_possibleTypes: string[] = ['AppPurchaseOneTimeCreatePayload']
    export const isAppPurchaseOneTimeCreatePayload = (obj?: { __typename?: any } | null): obj is AppPurchaseOneTimeCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPurchaseOneTimeCreatePayload"')
      return AppPurchaseOneTimeCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppPurchaseOneTimeEdge_possibleTypes: string[] = ['AppPurchaseOneTimeEdge']
    export const isAppPurchaseOneTimeEdge = (obj?: { __typename?: any } | null): obj is AppPurchaseOneTimeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppPurchaseOneTimeEdge"')
      return AppPurchaseOneTimeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppRecurringPricing_possibleTypes: string[] = ['AppRecurringPricing']
    export const isAppRecurringPricing = (obj?: { __typename?: any } | null): obj is AppRecurringPricing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRecurringPricing"')
      return AppRecurringPricing_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecord_possibleTypes: string[] = ['AppRevenueAttributionRecord']
    export const isAppRevenueAttributionRecord = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecord => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecord"')
      return AppRevenueAttributionRecord_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecordConnection_possibleTypes: string[] = ['AppRevenueAttributionRecordConnection']
    export const isAppRevenueAttributionRecordConnection = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecordConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecordConnection"')
      return AppRevenueAttributionRecordConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecordCreatePayload_possibleTypes: string[] = ['AppRevenueAttributionRecordCreatePayload']
    export const isAppRevenueAttributionRecordCreatePayload = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecordCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecordCreatePayload"')
      return AppRevenueAttributionRecordCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecordCreateUserError_possibleTypes: string[] = ['AppRevenueAttributionRecordCreateUserError']
    export const isAppRevenueAttributionRecordCreateUserError = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecordCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecordCreateUserError"')
      return AppRevenueAttributionRecordCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecordDeletePayload_possibleTypes: string[] = ['AppRevenueAttributionRecordDeletePayload']
    export const isAppRevenueAttributionRecordDeletePayload = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecordDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecordDeletePayload"')
      return AppRevenueAttributionRecordDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecordDeleteUserError_possibleTypes: string[] = ['AppRevenueAttributionRecordDeleteUserError']
    export const isAppRevenueAttributionRecordDeleteUserError = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecordDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecordDeleteUserError"')
      return AppRevenueAttributionRecordDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const AppRevenueAttributionRecordEdge_possibleTypes: string[] = ['AppRevenueAttributionRecordEdge']
    export const isAppRevenueAttributionRecordEdge = (obj?: { __typename?: any } | null): obj is AppRevenueAttributionRecordEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppRevenueAttributionRecordEdge"')
      return AppRevenueAttributionRecordEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscription_possibleTypes: string[] = ['AppSubscription']
    export const isAppSubscription = (obj?: { __typename?: any } | null): obj is AppSubscription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscription"')
      return AppSubscription_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionCancelPayload_possibleTypes: string[] = ['AppSubscriptionCancelPayload']
    export const isAppSubscriptionCancelPayload = (obj?: { __typename?: any } | null): obj is AppSubscriptionCancelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionCancelPayload"')
      return AppSubscriptionCancelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionConnection_possibleTypes: string[] = ['AppSubscriptionConnection']
    export const isAppSubscriptionConnection = (obj?: { __typename?: any } | null): obj is AppSubscriptionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionConnection"')
      return AppSubscriptionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionCreatePayload_possibleTypes: string[] = ['AppSubscriptionCreatePayload']
    export const isAppSubscriptionCreatePayload = (obj?: { __typename?: any } | null): obj is AppSubscriptionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionCreatePayload"')
      return AppSubscriptionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionDiscount_possibleTypes: string[] = ['AppSubscriptionDiscount']
    export const isAppSubscriptionDiscount = (obj?: { __typename?: any } | null): obj is AppSubscriptionDiscount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionDiscount"')
      return AppSubscriptionDiscount_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionDiscountAmount_possibleTypes: string[] = ['AppSubscriptionDiscountAmount']
    export const isAppSubscriptionDiscountAmount = (obj?: { __typename?: any } | null): obj is AppSubscriptionDiscountAmount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionDiscountAmount"')
      return AppSubscriptionDiscountAmount_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionDiscountPercentage_possibleTypes: string[] = ['AppSubscriptionDiscountPercentage']
    export const isAppSubscriptionDiscountPercentage = (obj?: { __typename?: any } | null): obj is AppSubscriptionDiscountPercentage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionDiscountPercentage"')
      return AppSubscriptionDiscountPercentage_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionDiscountValue_possibleTypes: string[] = ['AppSubscriptionDiscountAmount','AppSubscriptionDiscountPercentage']
    export const isAppSubscriptionDiscountValue = (obj?: { __typename?: any } | null): obj is AppSubscriptionDiscountValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionDiscountValue"')
      return AppSubscriptionDiscountValue_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionEdge_possibleTypes: string[] = ['AppSubscriptionEdge']
    export const isAppSubscriptionEdge = (obj?: { __typename?: any } | null): obj is AppSubscriptionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionEdge"')
      return AppSubscriptionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionLineItem_possibleTypes: string[] = ['AppSubscriptionLineItem']
    export const isAppSubscriptionLineItem = (obj?: { __typename?: any } | null): obj is AppSubscriptionLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionLineItem"')
      return AppSubscriptionLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionLineItemUpdatePayload_possibleTypes: string[] = ['AppSubscriptionLineItemUpdatePayload']
    export const isAppSubscriptionLineItemUpdatePayload = (obj?: { __typename?: any } | null): obj is AppSubscriptionLineItemUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionLineItemUpdatePayload"')
      return AppSubscriptionLineItemUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionTrialExtendPayload_possibleTypes: string[] = ['AppSubscriptionTrialExtendPayload']
    export const isAppSubscriptionTrialExtendPayload = (obj?: { __typename?: any } | null): obj is AppSubscriptionTrialExtendPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionTrialExtendPayload"')
      return AppSubscriptionTrialExtendPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppSubscriptionTrialExtendUserError_possibleTypes: string[] = ['AppSubscriptionTrialExtendUserError']
    export const isAppSubscriptionTrialExtendUserError = (obj?: { __typename?: any } | null): obj is AppSubscriptionTrialExtendUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppSubscriptionTrialExtendUserError"')
      return AppSubscriptionTrialExtendUserError_possibleTypes.includes(obj.__typename)
    }
    


    const AppUsagePricing_possibleTypes: string[] = ['AppUsagePricing']
    export const isAppUsagePricing = (obj?: { __typename?: any } | null): obj is AppUsagePricing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppUsagePricing"')
      return AppUsagePricing_possibleTypes.includes(obj.__typename)
    }
    


    const AppUsageRecord_possibleTypes: string[] = ['AppUsageRecord']
    export const isAppUsageRecord = (obj?: { __typename?: any } | null): obj is AppUsageRecord => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppUsageRecord"')
      return AppUsageRecord_possibleTypes.includes(obj.__typename)
    }
    


    const AppUsageRecordConnection_possibleTypes: string[] = ['AppUsageRecordConnection']
    export const isAppUsageRecordConnection = (obj?: { __typename?: any } | null): obj is AppUsageRecordConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppUsageRecordConnection"')
      return AppUsageRecordConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AppUsageRecordCreatePayload_possibleTypes: string[] = ['AppUsageRecordCreatePayload']
    export const isAppUsageRecordCreatePayload = (obj?: { __typename?: any } | null): obj is AppUsageRecordCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppUsageRecordCreatePayload"')
      return AppUsageRecordCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AppUsageRecordEdge_possibleTypes: string[] = ['AppUsageRecordEdge']
    export const isAppUsageRecordEdge = (obj?: { __typename?: any } | null): obj is AppUsageRecordEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppUsageRecordEdge"')
      return AppUsageRecordEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Attribute_possibleTypes: string[] = ['Attribute']
    export const isAttribute = (obj?: { __typename?: any } | null): obj is Attribute => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAttribute"')
      return Attribute_possibleTypes.includes(obj.__typename)
    }
    


    const AutomaticDiscountApplication_possibleTypes: string[] = ['AutomaticDiscountApplication']
    export const isAutomaticDiscountApplication = (obj?: { __typename?: any } | null): obj is AutomaticDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutomaticDiscountApplication"')
      return AutomaticDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const AvailableChannelDefinitionsByChannel_possibleTypes: string[] = ['AvailableChannelDefinitionsByChannel']
    export const isAvailableChannelDefinitionsByChannel = (obj?: { __typename?: any } | null): obj is AvailableChannelDefinitionsByChannel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAvailableChannelDefinitionsByChannel"')
      return AvailableChannelDefinitionsByChannel_possibleTypes.includes(obj.__typename)
    }
    


    const BasicEvent_possibleTypes: string[] = ['BasicEvent']
    export const isBasicEvent = (obj?: { __typename?: any } | null): obj is BasicEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBasicEvent"')
      return BasicEvent_possibleTypes.includes(obj.__typename)
    }
    


    const BillingAttemptUserError_possibleTypes: string[] = ['BillingAttemptUserError']
    export const isBillingAttemptUserError = (obj?: { __typename?: any } | null): obj is BillingAttemptUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingAttemptUserError"')
      return BillingAttemptUserError_possibleTypes.includes(obj.__typename)
    }
    


    const BulkMutationUserError_possibleTypes: string[] = ['BulkMutationUserError']
    export const isBulkMutationUserError = (obj?: { __typename?: any } | null): obj is BulkMutationUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkMutationUserError"')
      return BulkMutationUserError_possibleTypes.includes(obj.__typename)
    }
    


    const BulkOperation_possibleTypes: string[] = ['BulkOperation']
    export const isBulkOperation = (obj?: { __typename?: any } | null): obj is BulkOperation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkOperation"')
      return BulkOperation_possibleTypes.includes(obj.__typename)
    }
    


    const BulkOperationCancelPayload_possibleTypes: string[] = ['BulkOperationCancelPayload']
    export const isBulkOperationCancelPayload = (obj?: { __typename?: any } | null): obj is BulkOperationCancelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkOperationCancelPayload"')
      return BulkOperationCancelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const BulkOperationRunMutationPayload_possibleTypes: string[] = ['BulkOperationRunMutationPayload']
    export const isBulkOperationRunMutationPayload = (obj?: { __typename?: any } | null): obj is BulkOperationRunMutationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkOperationRunMutationPayload"')
      return BulkOperationRunMutationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const BulkOperationRunQueryPayload_possibleTypes: string[] = ['BulkOperationRunQueryPayload']
    export const isBulkOperationRunQueryPayload = (obj?: { __typename?: any } | null): obj is BulkOperationRunQueryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkOperationRunQueryPayload"')
      return BulkOperationRunQueryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const BulkProductResourceFeedbackCreatePayload_possibleTypes: string[] = ['BulkProductResourceFeedbackCreatePayload']
    export const isBulkProductResourceFeedbackCreatePayload = (obj?: { __typename?: any } | null): obj is BulkProductResourceFeedbackCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkProductResourceFeedbackCreatePayload"')
      return BulkProductResourceFeedbackCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const BulkProductResourceFeedbackCreateUserError_possibleTypes: string[] = ['BulkProductResourceFeedbackCreateUserError']
    export const isBulkProductResourceFeedbackCreateUserError = (obj?: { __typename?: any } | null): obj is BulkProductResourceFeedbackCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBulkProductResourceFeedbackCreateUserError"')
      return BulkProductResourceFeedbackCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const BundlesFeature_possibleTypes: string[] = ['BundlesFeature']
    export const isBundlesFeature = (obj?: { __typename?: any } | null): obj is BundlesFeature => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBundlesFeature"')
      return BundlesFeature_possibleTypes.includes(obj.__typename)
    }
    


    const BusinessCustomerUserError_possibleTypes: string[] = ['BusinessCustomerUserError']
    export const isBusinessCustomerUserError = (obj?: { __typename?: any } | null): obj is BusinessCustomerUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBusinessCustomerUserError"')
      return BusinessCustomerUserError_possibleTypes.includes(obj.__typename)
    }
    


    const BuyerExperienceConfiguration_possibleTypes: string[] = ['BuyerExperienceConfiguration']
    export const isBuyerExperienceConfiguration = (obj?: { __typename?: any } | null): obj is BuyerExperienceConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBuyerExperienceConfiguration"')
      return BuyerExperienceConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedAutomaticDiscountApplication_possibleTypes: string[] = ['CalculatedAutomaticDiscountApplication']
    export const isCalculatedAutomaticDiscountApplication = (obj?: { __typename?: any } | null): obj is CalculatedAutomaticDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedAutomaticDiscountApplication"')
      return CalculatedAutomaticDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDiscountAllocation_possibleTypes: string[] = ['CalculatedDiscountAllocation']
    export const isCalculatedDiscountAllocation = (obj?: { __typename?: any } | null): obj is CalculatedDiscountAllocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDiscountAllocation"')
      return CalculatedDiscountAllocation_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDiscountApplication_possibleTypes: string[] = ['CalculatedAutomaticDiscountApplication','CalculatedDiscountCodeApplication','CalculatedManualDiscountApplication','CalculatedScriptDiscountApplication']
    export const isCalculatedDiscountApplication = (obj?: { __typename?: any } | null): obj is CalculatedDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDiscountApplication"')
      return CalculatedDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDiscountApplicationConnection_possibleTypes: string[] = ['CalculatedDiscountApplicationConnection']
    export const isCalculatedDiscountApplicationConnection = (obj?: { __typename?: any } | null): obj is CalculatedDiscountApplicationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDiscountApplicationConnection"')
      return CalculatedDiscountApplicationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDiscountApplicationEdge_possibleTypes: string[] = ['CalculatedDiscountApplicationEdge']
    export const isCalculatedDiscountApplicationEdge = (obj?: { __typename?: any } | null): obj is CalculatedDiscountApplicationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDiscountApplicationEdge"')
      return CalculatedDiscountApplicationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDiscountCodeApplication_possibleTypes: string[] = ['CalculatedDiscountCodeApplication']
    export const isCalculatedDiscountCodeApplication = (obj?: { __typename?: any } | null): obj is CalculatedDiscountCodeApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDiscountCodeApplication"')
      return CalculatedDiscountCodeApplication_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDraftOrder_possibleTypes: string[] = ['CalculatedDraftOrder']
    export const isCalculatedDraftOrder = (obj?: { __typename?: any } | null): obj is CalculatedDraftOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDraftOrder"')
      return CalculatedDraftOrder_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedDraftOrderLineItem_possibleTypes: string[] = ['CalculatedDraftOrderLineItem']
    export const isCalculatedDraftOrderLineItem = (obj?: { __typename?: any } | null): obj is CalculatedDraftOrderLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedDraftOrderLineItem"')
      return CalculatedDraftOrderLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedLineItem_possibleTypes: string[] = ['CalculatedLineItem']
    export const isCalculatedLineItem = (obj?: { __typename?: any } | null): obj is CalculatedLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedLineItem"')
      return CalculatedLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedLineItemConnection_possibleTypes: string[] = ['CalculatedLineItemConnection']
    export const isCalculatedLineItemConnection = (obj?: { __typename?: any } | null): obj is CalculatedLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedLineItemConnection"')
      return CalculatedLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedLineItemEdge_possibleTypes: string[] = ['CalculatedLineItemEdge']
    export const isCalculatedLineItemEdge = (obj?: { __typename?: any } | null): obj is CalculatedLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedLineItemEdge"')
      return CalculatedLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedManualDiscountApplication_possibleTypes: string[] = ['CalculatedManualDiscountApplication']
    export const isCalculatedManualDiscountApplication = (obj?: { __typename?: any } | null): obj is CalculatedManualDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedManualDiscountApplication"')
      return CalculatedManualDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedOrder_possibleTypes: string[] = ['CalculatedOrder']
    export const isCalculatedOrder = (obj?: { __typename?: any } | null): obj is CalculatedOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedOrder"')
      return CalculatedOrder_possibleTypes.includes(obj.__typename)
    }
    


    const CalculatedScriptDiscountApplication_possibleTypes: string[] = ['CalculatedScriptDiscountApplication']
    export const isCalculatedScriptDiscountApplication = (obj?: { __typename?: any } | null): obj is CalculatedScriptDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalculatedScriptDiscountApplication"')
      return CalculatedScriptDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const CardPaymentDetails_possibleTypes: string[] = ['CardPaymentDetails']
    export const isCardPaymentDetails = (obj?: { __typename?: any } | null): obj is CardPaymentDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCardPaymentDetails"')
      return CardPaymentDetails_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransform_possibleTypes: string[] = ['CartTransform']
    export const isCartTransform = (obj?: { __typename?: any } | null): obj is CartTransform => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransform"')
      return CartTransform_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransformConnection_possibleTypes: string[] = ['CartTransformConnection']
    export const isCartTransformConnection = (obj?: { __typename?: any } | null): obj is CartTransformConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransformConnection"')
      return CartTransformConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransformCreatePayload_possibleTypes: string[] = ['CartTransformCreatePayload']
    export const isCartTransformCreatePayload = (obj?: { __typename?: any } | null): obj is CartTransformCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransformCreatePayload"')
      return CartTransformCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransformCreateUserError_possibleTypes: string[] = ['CartTransformCreateUserError']
    export const isCartTransformCreateUserError = (obj?: { __typename?: any } | null): obj is CartTransformCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransformCreateUserError"')
      return CartTransformCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransformDeletePayload_possibleTypes: string[] = ['CartTransformDeletePayload']
    export const isCartTransformDeletePayload = (obj?: { __typename?: any } | null): obj is CartTransformDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransformDeletePayload"')
      return CartTransformDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransformDeleteUserError_possibleTypes: string[] = ['CartTransformDeleteUserError']
    export const isCartTransformDeleteUserError = (obj?: { __typename?: any } | null): obj is CartTransformDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransformDeleteUserError"')
      return CartTransformDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CartTransformEdge_possibleTypes: string[] = ['CartTransformEdge']
    export const isCartTransformEdge = (obj?: { __typename?: any } | null): obj is CartTransformEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCartTransformEdge"')
      return CartTransformEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Catalog_possibleTypes: string[] = ['AppCatalog','CompanyLocationCatalog','MarketCatalog']
    export const isCatalog = (obj?: { __typename?: any } | null): obj is Catalog => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalog"')
      return Catalog_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogConnection_possibleTypes: string[] = ['CatalogConnection']
    export const isCatalogConnection = (obj?: { __typename?: any } | null): obj is CatalogConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogConnection"')
      return CatalogConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogContextUpdatePayload_possibleTypes: string[] = ['CatalogContextUpdatePayload']
    export const isCatalogContextUpdatePayload = (obj?: { __typename?: any } | null): obj is CatalogContextUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogContextUpdatePayload"')
      return CatalogContextUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogCreatePayload_possibleTypes: string[] = ['CatalogCreatePayload']
    export const isCatalogCreatePayload = (obj?: { __typename?: any } | null): obj is CatalogCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogCreatePayload"')
      return CatalogCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogCsvOperation_possibleTypes: string[] = ['CatalogCsvOperation']
    export const isCatalogCsvOperation = (obj?: { __typename?: any } | null): obj is CatalogCsvOperation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogCsvOperation"')
      return CatalogCsvOperation_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogDeletePayload_possibleTypes: string[] = ['CatalogDeletePayload']
    export const isCatalogDeletePayload = (obj?: { __typename?: any } | null): obj is CatalogDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogDeletePayload"')
      return CatalogDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogEdge_possibleTypes: string[] = ['CatalogEdge']
    export const isCatalogEdge = (obj?: { __typename?: any } | null): obj is CatalogEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogEdge"')
      return CatalogEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogUpdatePayload_possibleTypes: string[] = ['CatalogUpdatePayload']
    export const isCatalogUpdatePayload = (obj?: { __typename?: any } | null): obj is CatalogUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogUpdatePayload"')
      return CatalogUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CatalogUserError_possibleTypes: string[] = ['CatalogUserError']
    export const isCatalogUserError = (obj?: { __typename?: any } | null): obj is CatalogUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCatalogUserError"')
      return CatalogUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Channel_possibleTypes: string[] = ['Channel']
    export const isChannel = (obj?: { __typename?: any } | null): obj is Channel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChannel"')
      return Channel_possibleTypes.includes(obj.__typename)
    }
    


    const ChannelConnection_possibleTypes: string[] = ['ChannelConnection']
    export const isChannelConnection = (obj?: { __typename?: any } | null): obj is ChannelConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChannelConnection"')
      return ChannelConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ChannelDefinition_possibleTypes: string[] = ['ChannelDefinition']
    export const isChannelDefinition = (obj?: { __typename?: any } | null): obj is ChannelDefinition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChannelDefinition"')
      return ChannelDefinition_possibleTypes.includes(obj.__typename)
    }
    


    const ChannelEdge_possibleTypes: string[] = ['ChannelEdge']
    export const isChannelEdge = (obj?: { __typename?: any } | null): obj is ChannelEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChannelEdge"')
      return ChannelEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ChannelInformation_possibleTypes: string[] = ['ChannelInformation']
    export const isChannelInformation = (obj?: { __typename?: any } | null): obj is ChannelInformation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChannelInformation"')
      return ChannelInformation_possibleTypes.includes(obj.__typename)
    }
    


    const CheckoutProfile_possibleTypes: string[] = ['CheckoutProfile']
    export const isCheckoutProfile = (obj?: { __typename?: any } | null): obj is CheckoutProfile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCheckoutProfile"')
      return CheckoutProfile_possibleTypes.includes(obj.__typename)
    }
    


    const CheckoutProfileConnection_possibleTypes: string[] = ['CheckoutProfileConnection']
    export const isCheckoutProfileConnection = (obj?: { __typename?: any } | null): obj is CheckoutProfileConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCheckoutProfileConnection"')
      return CheckoutProfileConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CheckoutProfileEdge_possibleTypes: string[] = ['CheckoutProfileEdge']
    export const isCheckoutProfileEdge = (obj?: { __typename?: any } | null): obj is CheckoutProfileEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCheckoutProfileEdge"')
      return CheckoutProfileEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Collection_possibleTypes: string[] = ['Collection']
    export const isCollection = (obj?: { __typename?: any } | null): obj is Collection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollection"')
      return Collection_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionAddProductsPayload_possibleTypes: string[] = ['CollectionAddProductsPayload']
    export const isCollectionAddProductsPayload = (obj?: { __typename?: any } | null): obj is CollectionAddProductsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionAddProductsPayload"')
      return CollectionAddProductsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionAddProductsV2Payload_possibleTypes: string[] = ['CollectionAddProductsV2Payload']
    export const isCollectionAddProductsV2Payload = (obj?: { __typename?: any } | null): obj is CollectionAddProductsV2Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionAddProductsV2Payload"')
      return CollectionAddProductsV2Payload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionAddProductsV2UserError_possibleTypes: string[] = ['CollectionAddProductsV2UserError']
    export const isCollectionAddProductsV2UserError = (obj?: { __typename?: any } | null): obj is CollectionAddProductsV2UserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionAddProductsV2UserError"')
      return CollectionAddProductsV2UserError_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionConnection_possibleTypes: string[] = ['CollectionConnection']
    export const isCollectionConnection = (obj?: { __typename?: any } | null): obj is CollectionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionConnection"')
      return CollectionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionCreatePayload_possibleTypes: string[] = ['CollectionCreatePayload']
    export const isCollectionCreatePayload = (obj?: { __typename?: any } | null): obj is CollectionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionCreatePayload"')
      return CollectionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionDeletePayload_possibleTypes: string[] = ['CollectionDeletePayload']
    export const isCollectionDeletePayload = (obj?: { __typename?: any } | null): obj is CollectionDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionDeletePayload"')
      return CollectionDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionEdge_possibleTypes: string[] = ['CollectionEdge']
    export const isCollectionEdge = (obj?: { __typename?: any } | null): obj is CollectionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionEdge"')
      return CollectionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionPublication_possibleTypes: string[] = ['CollectionPublication']
    export const isCollectionPublication = (obj?: { __typename?: any } | null): obj is CollectionPublication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionPublication"')
      return CollectionPublication_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionPublicationConnection_possibleTypes: string[] = ['CollectionPublicationConnection']
    export const isCollectionPublicationConnection = (obj?: { __typename?: any } | null): obj is CollectionPublicationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionPublicationConnection"')
      return CollectionPublicationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionPublicationEdge_possibleTypes: string[] = ['CollectionPublicationEdge']
    export const isCollectionPublicationEdge = (obj?: { __typename?: any } | null): obj is CollectionPublicationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionPublicationEdge"')
      return CollectionPublicationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionPublishPayload_possibleTypes: string[] = ['CollectionPublishPayload']
    export const isCollectionPublishPayload = (obj?: { __typename?: any } | null): obj is CollectionPublishPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionPublishPayload"')
      return CollectionPublishPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRemoveProductsPayload_possibleTypes: string[] = ['CollectionRemoveProductsPayload']
    export const isCollectionRemoveProductsPayload = (obj?: { __typename?: any } | null): obj is CollectionRemoveProductsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRemoveProductsPayload"')
      return CollectionRemoveProductsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionReorderProductsPayload_possibleTypes: string[] = ['CollectionReorderProductsPayload']
    export const isCollectionReorderProductsPayload = (obj?: { __typename?: any } | null): obj is CollectionReorderProductsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionReorderProductsPayload"')
      return CollectionReorderProductsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRule_possibleTypes: string[] = ['CollectionRule']
    export const isCollectionRule = (obj?: { __typename?: any } | null): obj is CollectionRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRule"')
      return CollectionRule_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleConditionObject_possibleTypes: string[] = ['CollectionRuleMetafieldCondition','CollectionRuleProductCategoryCondition','CollectionRuleTextCondition']
    export const isCollectionRuleConditionObject = (obj?: { __typename?: any } | null): obj is CollectionRuleConditionObject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleConditionObject"')
      return CollectionRuleConditionObject_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleConditions_possibleTypes: string[] = ['CollectionRuleConditions']
    export const isCollectionRuleConditions = (obj?: { __typename?: any } | null): obj is CollectionRuleConditions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleConditions"')
      return CollectionRuleConditions_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleConditionsRuleObject_possibleTypes: string[] = ['CollectionRuleMetafieldCondition']
    export const isCollectionRuleConditionsRuleObject = (obj?: { __typename?: any } | null): obj is CollectionRuleConditionsRuleObject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleConditionsRuleObject"')
      return CollectionRuleConditionsRuleObject_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleMetafieldCondition_possibleTypes: string[] = ['CollectionRuleMetafieldCondition']
    export const isCollectionRuleMetafieldCondition = (obj?: { __typename?: any } | null): obj is CollectionRuleMetafieldCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleMetafieldCondition"')
      return CollectionRuleMetafieldCondition_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleProductCategoryCondition_possibleTypes: string[] = ['CollectionRuleProductCategoryCondition']
    export const isCollectionRuleProductCategoryCondition = (obj?: { __typename?: any } | null): obj is CollectionRuleProductCategoryCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleProductCategoryCondition"')
      return CollectionRuleProductCategoryCondition_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleSet_possibleTypes: string[] = ['CollectionRuleSet']
    export const isCollectionRuleSet = (obj?: { __typename?: any } | null): obj is CollectionRuleSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleSet"')
      return CollectionRuleSet_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionRuleTextCondition_possibleTypes: string[] = ['CollectionRuleTextCondition']
    export const isCollectionRuleTextCondition = (obj?: { __typename?: any } | null): obj is CollectionRuleTextCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionRuleTextCondition"')
      return CollectionRuleTextCondition_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionUnpublishPayload_possibleTypes: string[] = ['CollectionUnpublishPayload']
    export const isCollectionUnpublishPayload = (obj?: { __typename?: any } | null): obj is CollectionUnpublishPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionUnpublishPayload"')
      return CollectionUnpublishPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CollectionUpdatePayload_possibleTypes: string[] = ['CollectionUpdatePayload']
    export const isCollectionUpdatePayload = (obj?: { __typename?: any } | null): obj is CollectionUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCollectionUpdatePayload"')
      return CollectionUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CommentEvent_possibleTypes: string[] = ['CommentEvent']
    export const isCommentEvent = (obj?: { __typename?: any } | null): obj is CommentEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommentEvent"')
      return CommentEvent_possibleTypes.includes(obj.__typename)
    }
    


    const CommentEventAttachment_possibleTypes: string[] = ['CommentEventAttachment']
    export const isCommentEventAttachment = (obj?: { __typename?: any } | null): obj is CommentEventAttachment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommentEventAttachment"')
      return CommentEventAttachment_possibleTypes.includes(obj.__typename)
    }
    


    const CommentEventEmbed_possibleTypes: string[] = ['Customer','DraftOrder','Order','Product','ProductVariant']
    export const isCommentEventEmbed = (obj?: { __typename?: any } | null): obj is CommentEventEmbed => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommentEventEmbed"')
      return CommentEventEmbed_possibleTypes.includes(obj.__typename)
    }
    


    const CommentEventSubject_possibleTypes: string[] = ['Company','CompanyLocation','Customer','DraftOrder','Order','PriceRule']
    export const isCommentEventSubject = (obj?: { __typename?: any } | null): obj is CommentEventSubject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCommentEventSubject"')
      return CommentEventSubject_possibleTypes.includes(obj.__typename)
    }
    


    const CompaniesDeletePayload_possibleTypes: string[] = ['CompaniesDeletePayload']
    export const isCompaniesDeletePayload = (obj?: { __typename?: any } | null): obj is CompaniesDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompaniesDeletePayload"')
      return CompaniesDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const Company_possibleTypes: string[] = ['Company']
    export const isCompany = (obj?: { __typename?: any } | null): obj is Company => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompany"')
      return Company_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyAddress_possibleTypes: string[] = ['CompanyAddress']
    export const isCompanyAddress = (obj?: { __typename?: any } | null): obj is CompanyAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyAddress"')
      return CompanyAddress_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyAddressDeletePayload_possibleTypes: string[] = ['CompanyAddressDeletePayload']
    export const isCompanyAddressDeletePayload = (obj?: { __typename?: any } | null): obj is CompanyAddressDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyAddressDeletePayload"')
      return CompanyAddressDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyAssignCustomerAsContactPayload_possibleTypes: string[] = ['CompanyAssignCustomerAsContactPayload']
    export const isCompanyAssignCustomerAsContactPayload = (obj?: { __typename?: any } | null): obj is CompanyAssignCustomerAsContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyAssignCustomerAsContactPayload"')
      return CompanyAssignCustomerAsContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyAssignMainContactPayload_possibleTypes: string[] = ['CompanyAssignMainContactPayload']
    export const isCompanyAssignMainContactPayload = (obj?: { __typename?: any } | null): obj is CompanyAssignMainContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyAssignMainContactPayload"')
      return CompanyAssignMainContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyConnection_possibleTypes: string[] = ['CompanyConnection']
    export const isCompanyConnection = (obj?: { __typename?: any } | null): obj is CompanyConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyConnection"')
      return CompanyConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContact_possibleTypes: string[] = ['CompanyContact']
    export const isCompanyContact = (obj?: { __typename?: any } | null): obj is CompanyContact => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContact"')
      return CompanyContact_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactAssignRolePayload_possibleTypes: string[] = ['CompanyContactAssignRolePayload']
    export const isCompanyContactAssignRolePayload = (obj?: { __typename?: any } | null): obj is CompanyContactAssignRolePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactAssignRolePayload"')
      return CompanyContactAssignRolePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactAssignRolesPayload_possibleTypes: string[] = ['CompanyContactAssignRolesPayload']
    export const isCompanyContactAssignRolesPayload = (obj?: { __typename?: any } | null): obj is CompanyContactAssignRolesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactAssignRolesPayload"')
      return CompanyContactAssignRolesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactConnection_possibleTypes: string[] = ['CompanyContactConnection']
    export const isCompanyContactConnection = (obj?: { __typename?: any } | null): obj is CompanyContactConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactConnection"')
      return CompanyContactConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactCreatePayload_possibleTypes: string[] = ['CompanyContactCreatePayload']
    export const isCompanyContactCreatePayload = (obj?: { __typename?: any } | null): obj is CompanyContactCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactCreatePayload"')
      return CompanyContactCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactDeletePayload_possibleTypes: string[] = ['CompanyContactDeletePayload']
    export const isCompanyContactDeletePayload = (obj?: { __typename?: any } | null): obj is CompanyContactDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactDeletePayload"')
      return CompanyContactDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactEdge_possibleTypes: string[] = ['CompanyContactEdge']
    export const isCompanyContactEdge = (obj?: { __typename?: any } | null): obj is CompanyContactEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactEdge"')
      return CompanyContactEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRemoveFromCompanyPayload_possibleTypes: string[] = ['CompanyContactRemoveFromCompanyPayload']
    export const isCompanyContactRemoveFromCompanyPayload = (obj?: { __typename?: any } | null): obj is CompanyContactRemoveFromCompanyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRemoveFromCompanyPayload"')
      return CompanyContactRemoveFromCompanyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRevokeRolePayload_possibleTypes: string[] = ['CompanyContactRevokeRolePayload']
    export const isCompanyContactRevokeRolePayload = (obj?: { __typename?: any } | null): obj is CompanyContactRevokeRolePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRevokeRolePayload"')
      return CompanyContactRevokeRolePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRevokeRolesPayload_possibleTypes: string[] = ['CompanyContactRevokeRolesPayload']
    export const isCompanyContactRevokeRolesPayload = (obj?: { __typename?: any } | null): obj is CompanyContactRevokeRolesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRevokeRolesPayload"')
      return CompanyContactRevokeRolesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRole_possibleTypes: string[] = ['CompanyContactRole']
    export const isCompanyContactRole = (obj?: { __typename?: any } | null): obj is CompanyContactRole => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRole"')
      return CompanyContactRole_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRoleAssignment_possibleTypes: string[] = ['CompanyContactRoleAssignment']
    export const isCompanyContactRoleAssignment = (obj?: { __typename?: any } | null): obj is CompanyContactRoleAssignment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRoleAssignment"')
      return CompanyContactRoleAssignment_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRoleAssignmentConnection_possibleTypes: string[] = ['CompanyContactRoleAssignmentConnection']
    export const isCompanyContactRoleAssignmentConnection = (obj?: { __typename?: any } | null): obj is CompanyContactRoleAssignmentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRoleAssignmentConnection"')
      return CompanyContactRoleAssignmentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRoleAssignmentEdge_possibleTypes: string[] = ['CompanyContactRoleAssignmentEdge']
    export const isCompanyContactRoleAssignmentEdge = (obj?: { __typename?: any } | null): obj is CompanyContactRoleAssignmentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRoleAssignmentEdge"')
      return CompanyContactRoleAssignmentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRoleConnection_possibleTypes: string[] = ['CompanyContactRoleConnection']
    export const isCompanyContactRoleConnection = (obj?: { __typename?: any } | null): obj is CompanyContactRoleConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRoleConnection"')
      return CompanyContactRoleConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactRoleEdge_possibleTypes: string[] = ['CompanyContactRoleEdge']
    export const isCompanyContactRoleEdge = (obj?: { __typename?: any } | null): obj is CompanyContactRoleEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactRoleEdge"')
      return CompanyContactRoleEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactSendWelcomeEmailPayload_possibleTypes: string[] = ['CompanyContactSendWelcomeEmailPayload']
    export const isCompanyContactSendWelcomeEmailPayload = (obj?: { __typename?: any } | null): obj is CompanyContactSendWelcomeEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactSendWelcomeEmailPayload"')
      return CompanyContactSendWelcomeEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactUpdatePayload_possibleTypes: string[] = ['CompanyContactUpdatePayload']
    export const isCompanyContactUpdatePayload = (obj?: { __typename?: any } | null): obj is CompanyContactUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactUpdatePayload"')
      return CompanyContactUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyContactsDeletePayload_possibleTypes: string[] = ['CompanyContactsDeletePayload']
    export const isCompanyContactsDeletePayload = (obj?: { __typename?: any } | null): obj is CompanyContactsDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyContactsDeletePayload"')
      return CompanyContactsDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyCreatePayload_possibleTypes: string[] = ['CompanyCreatePayload']
    export const isCompanyCreatePayload = (obj?: { __typename?: any } | null): obj is CompanyCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyCreatePayload"')
      return CompanyCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyDeletePayload_possibleTypes: string[] = ['CompanyDeletePayload']
    export const isCompanyDeletePayload = (obj?: { __typename?: any } | null): obj is CompanyDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyDeletePayload"')
      return CompanyDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyEdge_possibleTypes: string[] = ['CompanyEdge']
    export const isCompanyEdge = (obj?: { __typename?: any } | null): obj is CompanyEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyEdge"')
      return CompanyEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocation_possibleTypes: string[] = ['CompanyLocation']
    export const isCompanyLocation = (obj?: { __typename?: any } | null): obj is CompanyLocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocation"')
      return CompanyLocation_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationAssignAddressPayload_possibleTypes: string[] = ['CompanyLocationAssignAddressPayload']
    export const isCompanyLocationAssignAddressPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationAssignAddressPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationAssignAddressPayload"')
      return CompanyLocationAssignAddressPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationAssignRolesPayload_possibleTypes: string[] = ['CompanyLocationAssignRolesPayload']
    export const isCompanyLocationAssignRolesPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationAssignRolesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationAssignRolesPayload"')
      return CompanyLocationAssignRolesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationAssignTaxExemptionsPayload_possibleTypes: string[] = ['CompanyLocationAssignTaxExemptionsPayload']
    export const isCompanyLocationAssignTaxExemptionsPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationAssignTaxExemptionsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationAssignTaxExemptionsPayload"')
      return CompanyLocationAssignTaxExemptionsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationCatalog_possibleTypes: string[] = ['CompanyLocationCatalog']
    export const isCompanyLocationCatalog = (obj?: { __typename?: any } | null): obj is CompanyLocationCatalog => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationCatalog"')
      return CompanyLocationCatalog_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationConnection_possibleTypes: string[] = ['CompanyLocationConnection']
    export const isCompanyLocationConnection = (obj?: { __typename?: any } | null): obj is CompanyLocationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationConnection"')
      return CompanyLocationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationCreatePayload_possibleTypes: string[] = ['CompanyLocationCreatePayload']
    export const isCompanyLocationCreatePayload = (obj?: { __typename?: any } | null): obj is CompanyLocationCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationCreatePayload"')
      return CompanyLocationCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationCreateTaxRegistrationPayload_possibleTypes: string[] = ['CompanyLocationCreateTaxRegistrationPayload']
    export const isCompanyLocationCreateTaxRegistrationPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationCreateTaxRegistrationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationCreateTaxRegistrationPayload"')
      return CompanyLocationCreateTaxRegistrationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationDeletePayload_possibleTypes: string[] = ['CompanyLocationDeletePayload']
    export const isCompanyLocationDeletePayload = (obj?: { __typename?: any } | null): obj is CompanyLocationDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationDeletePayload"')
      return CompanyLocationDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationEdge_possibleTypes: string[] = ['CompanyLocationEdge']
    export const isCompanyLocationEdge = (obj?: { __typename?: any } | null): obj is CompanyLocationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationEdge"')
      return CompanyLocationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationRevokeRolesPayload_possibleTypes: string[] = ['CompanyLocationRevokeRolesPayload']
    export const isCompanyLocationRevokeRolesPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationRevokeRolesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationRevokeRolesPayload"')
      return CompanyLocationRevokeRolesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationRevokeTaxExemptionsPayload_possibleTypes: string[] = ['CompanyLocationRevokeTaxExemptionsPayload']
    export const isCompanyLocationRevokeTaxExemptionsPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationRevokeTaxExemptionsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationRevokeTaxExemptionsPayload"')
      return CompanyLocationRevokeTaxExemptionsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationRevokeTaxRegistrationPayload_possibleTypes: string[] = ['CompanyLocationRevokeTaxRegistrationPayload']
    export const isCompanyLocationRevokeTaxRegistrationPayload = (obj?: { __typename?: any } | null): obj is CompanyLocationRevokeTaxRegistrationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationRevokeTaxRegistrationPayload"')
      return CompanyLocationRevokeTaxRegistrationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationUpdatePayload_possibleTypes: string[] = ['CompanyLocationUpdatePayload']
    export const isCompanyLocationUpdatePayload = (obj?: { __typename?: any } | null): obj is CompanyLocationUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationUpdatePayload"')
      return CompanyLocationUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyLocationsDeletePayload_possibleTypes: string[] = ['CompanyLocationsDeletePayload']
    export const isCompanyLocationsDeletePayload = (obj?: { __typename?: any } | null): obj is CompanyLocationsDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyLocationsDeletePayload"')
      return CompanyLocationsDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyRevokeMainContactPayload_possibleTypes: string[] = ['CompanyRevokeMainContactPayload']
    export const isCompanyRevokeMainContactPayload = (obj?: { __typename?: any } | null): obj is CompanyRevokeMainContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyRevokeMainContactPayload"')
      return CompanyRevokeMainContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyUpdatePayload_possibleTypes: string[] = ['CompanyUpdatePayload']
    export const isCompanyUpdatePayload = (obj?: { __typename?: any } | null): obj is CompanyUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyUpdatePayload"')
      return CompanyUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CountriesInShippingZones_possibleTypes: string[] = ['CountriesInShippingZones']
    export const isCountriesInShippingZones = (obj?: { __typename?: any } | null): obj is CountriesInShippingZones => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCountriesInShippingZones"')
      return CountriesInShippingZones_possibleTypes.includes(obj.__typename)
    }
    


    const CountryHarmonizedSystemCode_possibleTypes: string[] = ['CountryHarmonizedSystemCode']
    export const isCountryHarmonizedSystemCode = (obj?: { __typename?: any } | null): obj is CountryHarmonizedSystemCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCountryHarmonizedSystemCode"')
      return CountryHarmonizedSystemCode_possibleTypes.includes(obj.__typename)
    }
    


    const CountryHarmonizedSystemCodeConnection_possibleTypes: string[] = ['CountryHarmonizedSystemCodeConnection']
    export const isCountryHarmonizedSystemCodeConnection = (obj?: { __typename?: any } | null): obj is CountryHarmonizedSystemCodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCountryHarmonizedSystemCodeConnection"')
      return CountryHarmonizedSystemCodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CountryHarmonizedSystemCodeEdge_possibleTypes: string[] = ['CountryHarmonizedSystemCodeEdge']
    export const isCountryHarmonizedSystemCodeEdge = (obj?: { __typename?: any } | null): obj is CountryHarmonizedSystemCodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCountryHarmonizedSystemCodeEdge"')
      return CountryHarmonizedSystemCodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CurrencyFormats_possibleTypes: string[] = ['CurrencyFormats']
    export const isCurrencyFormats = (obj?: { __typename?: any } | null): obj is CurrencyFormats => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCurrencyFormats"')
      return CurrencyFormats_possibleTypes.includes(obj.__typename)
    }
    


    const CurrencySetting_possibleTypes: string[] = ['CurrencySetting']
    export const isCurrencySetting = (obj?: { __typename?: any } | null): obj is CurrencySetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCurrencySetting"')
      return CurrencySetting_possibleTypes.includes(obj.__typename)
    }
    


    const CurrencySettingConnection_possibleTypes: string[] = ['CurrencySettingConnection']
    export const isCurrencySettingConnection = (obj?: { __typename?: any } | null): obj is CurrencySettingConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCurrencySettingConnection"')
      return CurrencySettingConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CurrencySettingEdge_possibleTypes: string[] = ['CurrencySettingEdge']
    export const isCurrencySettingEdge = (obj?: { __typename?: any } | null): obj is CurrencySettingEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCurrencySettingEdge"')
      return CurrencySettingEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Customer_possibleTypes: string[] = ['Customer']
    export const isCustomer = (obj?: { __typename?: any } | null): obj is Customer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomer"')
      return Customer_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerAddTaxExemptionsPayload_possibleTypes: string[] = ['CustomerAddTaxExemptionsPayload']
    export const isCustomerAddTaxExemptionsPayload = (obj?: { __typename?: any } | null): obj is CustomerAddTaxExemptionsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerAddTaxExemptionsPayload"')
      return CustomerAddTaxExemptionsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerConnection_possibleTypes: string[] = ['CustomerConnection']
    export const isCustomerConnection = (obj?: { __typename?: any } | null): obj is CustomerConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerConnection"')
      return CustomerConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerCreatePayload_possibleTypes: string[] = ['CustomerCreatePayload']
    export const isCustomerCreatePayload = (obj?: { __typename?: any } | null): obj is CustomerCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerCreatePayload"')
      return CustomerCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerCreditCard_possibleTypes: string[] = ['CustomerCreditCard']
    export const isCustomerCreditCard = (obj?: { __typename?: any } | null): obj is CustomerCreditCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerCreditCard"')
      return CustomerCreditCard_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerCreditCardBillingAddress_possibleTypes: string[] = ['CustomerCreditCardBillingAddress']
    export const isCustomerCreditCardBillingAddress = (obj?: { __typename?: any } | null): obj is CustomerCreditCardBillingAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerCreditCardBillingAddress"')
      return CustomerCreditCardBillingAddress_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerDeletePayload_possibleTypes: string[] = ['CustomerDeletePayload']
    export const isCustomerDeletePayload = (obj?: { __typename?: any } | null): obj is CustomerDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerDeletePayload"')
      return CustomerDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerEdge_possibleTypes: string[] = ['CustomerEdge']
    export const isCustomerEdge = (obj?: { __typename?: any } | null): obj is CustomerEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerEdge"')
      return CustomerEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerEmailAddress_possibleTypes: string[] = ['CustomerEmailAddress']
    export const isCustomerEmailAddress = (obj?: { __typename?: any } | null): obj is CustomerEmailAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerEmailAddress"')
      return CustomerEmailAddress_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerEmailMarketingConsentState_possibleTypes: string[] = ['CustomerEmailMarketingConsentState']
    export const isCustomerEmailMarketingConsentState = (obj?: { __typename?: any } | null): obj is CustomerEmailMarketingConsentState => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerEmailMarketingConsentState"')
      return CustomerEmailMarketingConsentState_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerEmailMarketingConsentUpdatePayload_possibleTypes: string[] = ['CustomerEmailMarketingConsentUpdatePayload']
    export const isCustomerEmailMarketingConsentUpdatePayload = (obj?: { __typename?: any } | null): obj is CustomerEmailMarketingConsentUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerEmailMarketingConsentUpdatePayload"')
      return CustomerEmailMarketingConsentUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerEmailMarketingConsentUpdateUserError_possibleTypes: string[] = ['CustomerEmailMarketingConsentUpdateUserError']
    export const isCustomerEmailMarketingConsentUpdateUserError = (obj?: { __typename?: any } | null): obj is CustomerEmailMarketingConsentUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerEmailMarketingConsentUpdateUserError"')
      return CustomerEmailMarketingConsentUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerGenerateAccountActivationUrlPayload_possibleTypes: string[] = ['CustomerGenerateAccountActivationUrlPayload']
    export const isCustomerGenerateAccountActivationUrlPayload = (obj?: { __typename?: any } | null): obj is CustomerGenerateAccountActivationUrlPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerGenerateAccountActivationUrlPayload"')
      return CustomerGenerateAccountActivationUrlPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerJourney_possibleTypes: string[] = ['CustomerJourney']
    export const isCustomerJourney = (obj?: { __typename?: any } | null): obj is CustomerJourney => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerJourney"')
      return CustomerJourney_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerJourneySummary_possibleTypes: string[] = ['CustomerJourneySummary']
    export const isCustomerJourneySummary = (obj?: { __typename?: any } | null): obj is CustomerJourneySummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerJourneySummary"')
      return CustomerJourneySummary_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergeError_possibleTypes: string[] = ['CustomerMergeError']
    export const isCustomerMergeError = (obj?: { __typename?: any } | null): obj is CustomerMergeError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergeError"')
      return CustomerMergeError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergePayload_possibleTypes: string[] = ['CustomerMergePayload']
    export const isCustomerMergePayload = (obj?: { __typename?: any } | null): obj is CustomerMergePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergePayload"')
      return CustomerMergePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergePreview_possibleTypes: string[] = ['CustomerMergePreview']
    export const isCustomerMergePreview = (obj?: { __typename?: any } | null): obj is CustomerMergePreview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergePreview"')
      return CustomerMergePreview_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergePreviewAlternateFields_possibleTypes: string[] = ['CustomerMergePreviewAlternateFields']
    export const isCustomerMergePreviewAlternateFields = (obj?: { __typename?: any } | null): obj is CustomerMergePreviewAlternateFields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergePreviewAlternateFields"')
      return CustomerMergePreviewAlternateFields_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergePreviewBlockingFields_possibleTypes: string[] = ['CustomerMergePreviewBlockingFields']
    export const isCustomerMergePreviewBlockingFields = (obj?: { __typename?: any } | null): obj is CustomerMergePreviewBlockingFields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergePreviewBlockingFields"')
      return CustomerMergePreviewBlockingFields_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergePreviewDefaultFields_possibleTypes: string[] = ['CustomerMergePreviewDefaultFields']
    export const isCustomerMergePreviewDefaultFields = (obj?: { __typename?: any } | null): obj is CustomerMergePreviewDefaultFields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergePreviewDefaultFields"')
      return CustomerMergePreviewDefaultFields_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergeRequest_possibleTypes: string[] = ['CustomerMergeRequest']
    export const isCustomerMergeRequest = (obj?: { __typename?: any } | null): obj is CustomerMergeRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergeRequest"')
      return CustomerMergeRequest_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergeUserError_possibleTypes: string[] = ['CustomerMergeUserError']
    export const isCustomerMergeUserError = (obj?: { __typename?: any } | null): obj is CustomerMergeUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergeUserError"')
      return CustomerMergeUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMergeable_possibleTypes: string[] = ['CustomerMergeable']
    export const isCustomerMergeable = (obj?: { __typename?: any } | null): obj is CustomerMergeable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMergeable"')
      return CustomerMergeable_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMoment_possibleTypes: string[] = ['CustomerVisit']
    export const isCustomerMoment = (obj?: { __typename?: any } | null): obj is CustomerMoment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMoment"')
      return CustomerMoment_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMomentConnection_possibleTypes: string[] = ['CustomerMomentConnection']
    export const isCustomerMomentConnection = (obj?: { __typename?: any } | null): obj is CustomerMomentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMomentConnection"')
      return CustomerMomentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerMomentEdge_possibleTypes: string[] = ['CustomerMomentEdge']
    export const isCustomerMomentEdge = (obj?: { __typename?: any } | null): obj is CustomerMomentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerMomentEdge"')
      return CustomerMomentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentInstrument_possibleTypes: string[] = ['CustomerCreditCard','CustomerPaypalBillingAgreement','CustomerShopPayAgreement']
    export const isCustomerPaymentInstrument = (obj?: { __typename?: any } | null): obj is CustomerPaymentInstrument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentInstrument"')
      return CustomerPaymentInstrument_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentInstrumentBillingAddress_possibleTypes: string[] = ['CustomerPaymentInstrumentBillingAddress']
    export const isCustomerPaymentInstrumentBillingAddress = (obj?: { __typename?: any } | null): obj is CustomerPaymentInstrumentBillingAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentInstrumentBillingAddress"')
      return CustomerPaymentInstrumentBillingAddress_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethod_possibleTypes: string[] = ['CustomerPaymentMethod']
    export const isCustomerPaymentMethod = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethod"')
      return CustomerPaymentMethod_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodConnection_possibleTypes: string[] = ['CustomerPaymentMethodConnection']
    export const isCustomerPaymentMethodConnection = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodConnection"')
      return CustomerPaymentMethodConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodCreateFromDuplicationDataPayload_possibleTypes: string[] = ['CustomerPaymentMethodCreateFromDuplicationDataPayload']
    export const isCustomerPaymentMethodCreateFromDuplicationDataPayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodCreateFromDuplicationDataPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodCreateFromDuplicationDataPayload"')
      return CustomerPaymentMethodCreateFromDuplicationDataPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodCreateFromDuplicationDataUserError_possibleTypes: string[] = ['CustomerPaymentMethodCreateFromDuplicationDataUserError']
    export const isCustomerPaymentMethodCreateFromDuplicationDataUserError = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodCreateFromDuplicationDataUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodCreateFromDuplicationDataUserError"')
      return CustomerPaymentMethodCreateFromDuplicationDataUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodCreditCardCreatePayload_possibleTypes: string[] = ['CustomerPaymentMethodCreditCardCreatePayload']
    export const isCustomerPaymentMethodCreditCardCreatePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodCreditCardCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodCreditCardCreatePayload"')
      return CustomerPaymentMethodCreditCardCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodCreditCardUpdatePayload_possibleTypes: string[] = ['CustomerPaymentMethodCreditCardUpdatePayload']
    export const isCustomerPaymentMethodCreditCardUpdatePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodCreditCardUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodCreditCardUpdatePayload"')
      return CustomerPaymentMethodCreditCardUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodEdge_possibleTypes: string[] = ['CustomerPaymentMethodEdge']
    export const isCustomerPaymentMethodEdge = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodEdge"')
      return CustomerPaymentMethodEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodGetDuplicationDataPayload_possibleTypes: string[] = ['CustomerPaymentMethodGetDuplicationDataPayload']
    export const isCustomerPaymentMethodGetDuplicationDataPayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodGetDuplicationDataPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodGetDuplicationDataPayload"')
      return CustomerPaymentMethodGetDuplicationDataPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodGetDuplicationDataUserError_possibleTypes: string[] = ['CustomerPaymentMethodGetDuplicationDataUserError']
    export const isCustomerPaymentMethodGetDuplicationDataUserError = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodGetDuplicationDataUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodGetDuplicationDataUserError"')
      return CustomerPaymentMethodGetDuplicationDataUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodGetUpdateUrlPayload_possibleTypes: string[] = ['CustomerPaymentMethodGetUpdateUrlPayload']
    export const isCustomerPaymentMethodGetUpdateUrlPayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodGetUpdateUrlPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodGetUpdateUrlPayload"')
      return CustomerPaymentMethodGetUpdateUrlPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodGetUpdateUrlUserError_possibleTypes: string[] = ['CustomerPaymentMethodGetUpdateUrlUserError']
    export const isCustomerPaymentMethodGetUpdateUrlUserError = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodGetUpdateUrlUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodGetUpdateUrlUserError"')
      return CustomerPaymentMethodGetUpdateUrlUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodPaypalBillingAgreementCreatePayload_possibleTypes: string[] = ['CustomerPaymentMethodPaypalBillingAgreementCreatePayload']
    export const isCustomerPaymentMethodPaypalBillingAgreementCreatePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodPaypalBillingAgreementCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodPaypalBillingAgreementCreatePayload"')
      return CustomerPaymentMethodPaypalBillingAgreementCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodPaypalBillingAgreementUpdatePayload_possibleTypes: string[] = ['CustomerPaymentMethodPaypalBillingAgreementUpdatePayload']
    export const isCustomerPaymentMethodPaypalBillingAgreementUpdatePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodPaypalBillingAgreementUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodPaypalBillingAgreementUpdatePayload"')
      return CustomerPaymentMethodPaypalBillingAgreementUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodRemoteCreatePayload_possibleTypes: string[] = ['CustomerPaymentMethodRemoteCreatePayload']
    export const isCustomerPaymentMethodRemoteCreatePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodRemoteCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodRemoteCreatePayload"')
      return CustomerPaymentMethodRemoteCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodRemoteCreditCardCreatePayload_possibleTypes: string[] = ['CustomerPaymentMethodRemoteCreditCardCreatePayload']
    export const isCustomerPaymentMethodRemoteCreditCardCreatePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodRemoteCreditCardCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodRemoteCreditCardCreatePayload"')
      return CustomerPaymentMethodRemoteCreditCardCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodRemoteUserError_possibleTypes: string[] = ['CustomerPaymentMethodRemoteUserError']
    export const isCustomerPaymentMethodRemoteUserError = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodRemoteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodRemoteUserError"')
      return CustomerPaymentMethodRemoteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodRevokePayload_possibleTypes: string[] = ['CustomerPaymentMethodRevokePayload']
    export const isCustomerPaymentMethodRevokePayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodRevokePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodRevokePayload"')
      return CustomerPaymentMethodRevokePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodSendUpdateEmailPayload_possibleTypes: string[] = ['CustomerPaymentMethodSendUpdateEmailPayload']
    export const isCustomerPaymentMethodSendUpdateEmailPayload = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodSendUpdateEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodSendUpdateEmailPayload"')
      return CustomerPaymentMethodSendUpdateEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaymentMethodUserError_possibleTypes: string[] = ['CustomerPaymentMethodUserError']
    export const isCustomerPaymentMethodUserError = (obj?: { __typename?: any } | null): obj is CustomerPaymentMethodUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaymentMethodUserError"')
      return CustomerPaymentMethodUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPaypalBillingAgreement_possibleTypes: string[] = ['CustomerPaypalBillingAgreement']
    export const isCustomerPaypalBillingAgreement = (obj?: { __typename?: any } | null): obj is CustomerPaypalBillingAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPaypalBillingAgreement"')
      return CustomerPaypalBillingAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerPhoneNumber_possibleTypes: string[] = ['CustomerPhoneNumber']
    export const isCustomerPhoneNumber = (obj?: { __typename?: any } | null): obj is CustomerPhoneNumber => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerPhoneNumber"')
      return CustomerPhoneNumber_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerRemoveTaxExemptionsPayload_possibleTypes: string[] = ['CustomerRemoveTaxExemptionsPayload']
    export const isCustomerRemoveTaxExemptionsPayload = (obj?: { __typename?: any } | null): obj is CustomerRemoveTaxExemptionsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerRemoveTaxExemptionsPayload"')
      return CustomerRemoveTaxExemptionsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerReplaceTaxExemptionsPayload_possibleTypes: string[] = ['CustomerReplaceTaxExemptionsPayload']
    export const isCustomerReplaceTaxExemptionsPayload = (obj?: { __typename?: any } | null): obj is CustomerReplaceTaxExemptionsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerReplaceTaxExemptionsPayload"')
      return CustomerReplaceTaxExemptionsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSegmentMember_possibleTypes: string[] = ['CustomerSegmentMember']
    export const isCustomerSegmentMember = (obj?: { __typename?: any } | null): obj is CustomerSegmentMember => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSegmentMember"')
      return CustomerSegmentMember_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSegmentMemberConnection_possibleTypes: string[] = ['CustomerSegmentMemberConnection']
    export const isCustomerSegmentMemberConnection = (obj?: { __typename?: any } | null): obj is CustomerSegmentMemberConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSegmentMemberConnection"')
      return CustomerSegmentMemberConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSegmentMemberEdge_possibleTypes: string[] = ['CustomerSegmentMemberEdge']
    export const isCustomerSegmentMemberEdge = (obj?: { __typename?: any } | null): obj is CustomerSegmentMemberEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSegmentMemberEdge"')
      return CustomerSegmentMemberEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSegmentMembersQuery_possibleTypes: string[] = ['CustomerSegmentMembersQuery']
    export const isCustomerSegmentMembersQuery = (obj?: { __typename?: any } | null): obj is CustomerSegmentMembersQuery => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSegmentMembersQuery"')
      return CustomerSegmentMembersQuery_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSegmentMembersQueryCreatePayload_possibleTypes: string[] = ['CustomerSegmentMembersQueryCreatePayload']
    export const isCustomerSegmentMembersQueryCreatePayload = (obj?: { __typename?: any } | null): obj is CustomerSegmentMembersQueryCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSegmentMembersQueryCreatePayload"')
      return CustomerSegmentMembersQueryCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSegmentMembersQueryUserError_possibleTypes: string[] = ['CustomerSegmentMembersQueryUserError']
    export const isCustomerSegmentMembersQueryUserError = (obj?: { __typename?: any } | null): obj is CustomerSegmentMembersQueryUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSegmentMembersQueryUserError"')
      return CustomerSegmentMembersQueryUserError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerShopPayAgreement_possibleTypes: string[] = ['CustomerShopPayAgreement']
    export const isCustomerShopPayAgreement = (obj?: { __typename?: any } | null): obj is CustomerShopPayAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerShopPayAgreement"')
      return CustomerShopPayAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSmsMarketingConsentError_possibleTypes: string[] = ['CustomerSmsMarketingConsentError']
    export const isCustomerSmsMarketingConsentError = (obj?: { __typename?: any } | null): obj is CustomerSmsMarketingConsentError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSmsMarketingConsentError"')
      return CustomerSmsMarketingConsentError_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSmsMarketingConsentState_possibleTypes: string[] = ['CustomerSmsMarketingConsentState']
    export const isCustomerSmsMarketingConsentState = (obj?: { __typename?: any } | null): obj is CustomerSmsMarketingConsentState => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSmsMarketingConsentState"')
      return CustomerSmsMarketingConsentState_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerSmsMarketingConsentUpdatePayload_possibleTypes: string[] = ['CustomerSmsMarketingConsentUpdatePayload']
    export const isCustomerSmsMarketingConsentUpdatePayload = (obj?: { __typename?: any } | null): obj is CustomerSmsMarketingConsentUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerSmsMarketingConsentUpdatePayload"')
      return CustomerSmsMarketingConsentUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerStatistics_possibleTypes: string[] = ['CustomerStatistics']
    export const isCustomerStatistics = (obj?: { __typename?: any } | null): obj is CustomerStatistics => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerStatistics"')
      return CustomerStatistics_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerUpdateDefaultAddressPayload_possibleTypes: string[] = ['CustomerUpdateDefaultAddressPayload']
    export const isCustomerUpdateDefaultAddressPayload = (obj?: { __typename?: any } | null): obj is CustomerUpdateDefaultAddressPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerUpdateDefaultAddressPayload"')
      return CustomerUpdateDefaultAddressPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerUpdatePayload_possibleTypes: string[] = ['CustomerUpdatePayload']
    export const isCustomerUpdatePayload = (obj?: { __typename?: any } | null): obj is CustomerUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerUpdatePayload"')
      return CustomerUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerVisit_possibleTypes: string[] = ['CustomerVisit']
    export const isCustomerVisit = (obj?: { __typename?: any } | null): obj is CustomerVisit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerVisit"')
      return CustomerVisit_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerVisitProductInfo_possibleTypes: string[] = ['CustomerVisitProductInfo']
    export const isCustomerVisitProductInfo = (obj?: { __typename?: any } | null): obj is CustomerVisitProductInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerVisitProductInfo"')
      return CustomerVisitProductInfo_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerVisitProductInfoConnection_possibleTypes: string[] = ['CustomerVisitProductInfoConnection']
    export const isCustomerVisitProductInfoConnection = (obj?: { __typename?: any } | null): obj is CustomerVisitProductInfoConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerVisitProductInfoConnection"')
      return CustomerVisitProductInfoConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CustomerVisitProductInfoEdge_possibleTypes: string[] = ['CustomerVisitProductInfoEdge']
    export const isCustomerVisitProductInfoEdge = (obj?: { __typename?: any } | null): obj is CustomerVisitProductInfoEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomerVisitProductInfoEdge"')
      return CustomerVisitProductInfoEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DelegateAccessToken_possibleTypes: string[] = ['DelegateAccessToken']
    export const isDelegateAccessToken = (obj?: { __typename?: any } | null): obj is DelegateAccessToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDelegateAccessToken"')
      return DelegateAccessToken_possibleTypes.includes(obj.__typename)
    }
    


    const DelegateAccessTokenCreatePayload_possibleTypes: string[] = ['DelegateAccessTokenCreatePayload']
    export const isDelegateAccessTokenCreatePayload = (obj?: { __typename?: any } | null): obj is DelegateAccessTokenCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDelegateAccessTokenCreatePayload"')
      return DelegateAccessTokenCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DelegateAccessTokenCreateUserError_possibleTypes: string[] = ['DelegateAccessTokenCreateUserError']
    export const isDelegateAccessTokenCreateUserError = (obj?: { __typename?: any } | null): obj is DelegateAccessTokenCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDelegateAccessTokenCreateUserError"')
      return DelegateAccessTokenCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const DelegateAccessTokenDestroyPayload_possibleTypes: string[] = ['DelegateAccessTokenDestroyPayload']
    export const isDelegateAccessTokenDestroyPayload = (obj?: { __typename?: any } | null): obj is DelegateAccessTokenDestroyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDelegateAccessTokenDestroyPayload"')
      return DelegateAccessTokenDestroyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DelegateAccessTokenDestroyUserError_possibleTypes: string[] = ['DelegateAccessTokenDestroyUserError']
    export const isDelegateAccessTokenDestroyUserError = (obj?: { __typename?: any } | null): obj is DelegateAccessTokenDestroyUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDelegateAccessTokenDestroyUserError"')
      return DelegateAccessTokenDestroyUserError_possibleTypes.includes(obj.__typename)
    }
    


    const DeletionEvent_possibleTypes: string[] = ['DeletionEvent']
    export const isDeletionEvent = (obj?: { __typename?: any } | null): obj is DeletionEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeletionEvent"')
      return DeletionEvent_possibleTypes.includes(obj.__typename)
    }
    


    const DeletionEventConnection_possibleTypes: string[] = ['DeletionEventConnection']
    export const isDeletionEventConnection = (obj?: { __typename?: any } | null): obj is DeletionEventConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeletionEventConnection"')
      return DeletionEventConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DeletionEventEdge_possibleTypes: string[] = ['DeletionEventEdge']
    export const isDeletionEventEdge = (obj?: { __typename?: any } | null): obj is DeletionEventEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeletionEventEdge"')
      return DeletionEventEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryAvailableService_possibleTypes: string[] = ['DeliveryAvailableService']
    export const isDeliveryAvailableService = (obj?: { __typename?: any } | null): obj is DeliveryAvailableService => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryAvailableService"')
      return DeliveryAvailableService_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryBrandedPromise_possibleTypes: string[] = ['DeliveryBrandedPromise']
    export const isDeliveryBrandedPromise = (obj?: { __typename?: any } | null): obj is DeliveryBrandedPromise => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryBrandedPromise"')
      return DeliveryBrandedPromise_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCarrierService_possibleTypes: string[] = ['DeliveryCarrierService']
    export const isDeliveryCarrierService = (obj?: { __typename?: any } | null): obj is DeliveryCarrierService => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCarrierService"')
      return DeliveryCarrierService_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCarrierServiceAndLocations_possibleTypes: string[] = ['DeliveryCarrierServiceAndLocations']
    export const isDeliveryCarrierServiceAndLocations = (obj?: { __typename?: any } | null): obj is DeliveryCarrierServiceAndLocations => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCarrierServiceAndLocations"')
      return DeliveryCarrierServiceAndLocations_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCondition_possibleTypes: string[] = ['DeliveryCondition']
    export const isDeliveryCondition = (obj?: { __typename?: any } | null): obj is DeliveryCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCondition"')
      return DeliveryCondition_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryConditionCriteria_possibleTypes: string[] = ['MoneyV2','Weight']
    export const isDeliveryConditionCriteria = (obj?: { __typename?: any } | null): obj is DeliveryConditionCriteria => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryConditionCriteria"')
      return DeliveryConditionCriteria_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCountry_possibleTypes: string[] = ['DeliveryCountry']
    export const isDeliveryCountry = (obj?: { __typename?: any } | null): obj is DeliveryCountry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCountry"')
      return DeliveryCountry_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCountryAndZone_possibleTypes: string[] = ['DeliveryCountryAndZone']
    export const isDeliveryCountryAndZone = (obj?: { __typename?: any } | null): obj is DeliveryCountryAndZone => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCountryAndZone"')
      return DeliveryCountryAndZone_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCountryCodeOrRestOfWorld_possibleTypes: string[] = ['DeliveryCountryCodeOrRestOfWorld']
    export const isDeliveryCountryCodeOrRestOfWorld = (obj?: { __typename?: any } | null): obj is DeliveryCountryCodeOrRestOfWorld => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCountryCodeOrRestOfWorld"')
      return DeliveryCountryCodeOrRestOfWorld_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCountryCodesOrRestOfWorld_possibleTypes: string[] = ['DeliveryCountryCodesOrRestOfWorld']
    export const isDeliveryCountryCodesOrRestOfWorld = (obj?: { __typename?: any } | null): obj is DeliveryCountryCodesOrRestOfWorld => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCountryCodesOrRestOfWorld"')
      return DeliveryCountryCodesOrRestOfWorld_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomization_possibleTypes: string[] = ['DeliveryCustomization']
    export const isDeliveryCustomization = (obj?: { __typename?: any } | null): obj is DeliveryCustomization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomization"')
      return DeliveryCustomization_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationActivationPayload_possibleTypes: string[] = ['DeliveryCustomizationActivationPayload']
    export const isDeliveryCustomizationActivationPayload = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationActivationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationActivationPayload"')
      return DeliveryCustomizationActivationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationConnection_possibleTypes: string[] = ['DeliveryCustomizationConnection']
    export const isDeliveryCustomizationConnection = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationConnection"')
      return DeliveryCustomizationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationCreatePayload_possibleTypes: string[] = ['DeliveryCustomizationCreatePayload']
    export const isDeliveryCustomizationCreatePayload = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationCreatePayload"')
      return DeliveryCustomizationCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationDeletePayload_possibleTypes: string[] = ['DeliveryCustomizationDeletePayload']
    export const isDeliveryCustomizationDeletePayload = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationDeletePayload"')
      return DeliveryCustomizationDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationEdge_possibleTypes: string[] = ['DeliveryCustomizationEdge']
    export const isDeliveryCustomizationEdge = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationEdge"')
      return DeliveryCustomizationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationError_possibleTypes: string[] = ['DeliveryCustomizationError']
    export const isDeliveryCustomizationError = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationError"')
      return DeliveryCustomizationError_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryCustomizationUpdatePayload_possibleTypes: string[] = ['DeliveryCustomizationUpdatePayload']
    export const isDeliveryCustomizationUpdatePayload = (obj?: { __typename?: any } | null): obj is DeliveryCustomizationUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryCustomizationUpdatePayload"')
      return DeliveryCustomizationUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLegacyModeBlocked_possibleTypes: string[] = ['DeliveryLegacyModeBlocked']
    export const isDeliveryLegacyModeBlocked = (obj?: { __typename?: any } | null): obj is DeliveryLegacyModeBlocked => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLegacyModeBlocked"')
      return DeliveryLegacyModeBlocked_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLocalPickupSettings_possibleTypes: string[] = ['DeliveryLocalPickupSettings']
    export const isDeliveryLocalPickupSettings = (obj?: { __typename?: any } | null): obj is DeliveryLocalPickupSettings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLocalPickupSettings"')
      return DeliveryLocalPickupSettings_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLocationGroup_possibleTypes: string[] = ['DeliveryLocationGroup']
    export const isDeliveryLocationGroup = (obj?: { __typename?: any } | null): obj is DeliveryLocationGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLocationGroup"')
      return DeliveryLocationGroup_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLocationGroupZone_possibleTypes: string[] = ['DeliveryLocationGroupZone']
    export const isDeliveryLocationGroupZone = (obj?: { __typename?: any } | null): obj is DeliveryLocationGroupZone => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLocationGroupZone"')
      return DeliveryLocationGroupZone_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLocationGroupZoneConnection_possibleTypes: string[] = ['DeliveryLocationGroupZoneConnection']
    export const isDeliveryLocationGroupZoneConnection = (obj?: { __typename?: any } | null): obj is DeliveryLocationGroupZoneConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLocationGroupZoneConnection"')
      return DeliveryLocationGroupZoneConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLocationGroupZoneEdge_possibleTypes: string[] = ['DeliveryLocationGroupZoneEdge']
    export const isDeliveryLocationGroupZoneEdge = (obj?: { __typename?: any } | null): obj is DeliveryLocationGroupZoneEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLocationGroupZoneEdge"')
      return DeliveryLocationGroupZoneEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryLocationLocalPickupSettingsError_possibleTypes: string[] = ['DeliveryLocationLocalPickupSettingsError']
    export const isDeliveryLocationLocalPickupSettingsError = (obj?: { __typename?: any } | null): obj is DeliveryLocationLocalPickupSettingsError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryLocationLocalPickupSettingsError"')
      return DeliveryLocationLocalPickupSettingsError_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryMethod_possibleTypes: string[] = ['DeliveryMethod']
    export const isDeliveryMethod = (obj?: { __typename?: any } | null): obj is DeliveryMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryMethod"')
      return DeliveryMethod_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryMethodDefinition_possibleTypes: string[] = ['DeliveryMethodDefinition']
    export const isDeliveryMethodDefinition = (obj?: { __typename?: any } | null): obj is DeliveryMethodDefinition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryMethodDefinition"')
      return DeliveryMethodDefinition_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryMethodDefinitionConnection_possibleTypes: string[] = ['DeliveryMethodDefinitionConnection']
    export const isDeliveryMethodDefinitionConnection = (obj?: { __typename?: any } | null): obj is DeliveryMethodDefinitionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryMethodDefinitionConnection"')
      return DeliveryMethodDefinitionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryMethodDefinitionCounts_possibleTypes: string[] = ['DeliveryMethodDefinitionCounts']
    export const isDeliveryMethodDefinitionCounts = (obj?: { __typename?: any } | null): obj is DeliveryMethodDefinitionCounts => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryMethodDefinitionCounts"')
      return DeliveryMethodDefinitionCounts_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryMethodDefinitionEdge_possibleTypes: string[] = ['DeliveryMethodDefinitionEdge']
    export const isDeliveryMethodDefinitionEdge = (obj?: { __typename?: any } | null): obj is DeliveryMethodDefinitionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryMethodDefinitionEdge"')
      return DeliveryMethodDefinitionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryParticipant_possibleTypes: string[] = ['DeliveryParticipant']
    export const isDeliveryParticipant = (obj?: { __typename?: any } | null): obj is DeliveryParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryParticipant"')
      return DeliveryParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryParticipantService_possibleTypes: string[] = ['DeliveryParticipantService']
    export const isDeliveryParticipantService = (obj?: { __typename?: any } | null): obj is DeliveryParticipantService => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryParticipantService"')
      return DeliveryParticipantService_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProductVariantsCount_possibleTypes: string[] = ['DeliveryProductVariantsCount']
    export const isDeliveryProductVariantsCount = (obj?: { __typename?: any } | null): obj is DeliveryProductVariantsCount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProductVariantsCount"')
      return DeliveryProductVariantsCount_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfile_possibleTypes: string[] = ['DeliveryProfile']
    export const isDeliveryProfile = (obj?: { __typename?: any } | null): obj is DeliveryProfile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfile"')
      return DeliveryProfile_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfileConnection_possibleTypes: string[] = ['DeliveryProfileConnection']
    export const isDeliveryProfileConnection = (obj?: { __typename?: any } | null): obj is DeliveryProfileConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfileConnection"')
      return DeliveryProfileConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfileEdge_possibleTypes: string[] = ['DeliveryProfileEdge']
    export const isDeliveryProfileEdge = (obj?: { __typename?: any } | null): obj is DeliveryProfileEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfileEdge"')
      return DeliveryProfileEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfileItem_possibleTypes: string[] = ['DeliveryProfileItem']
    export const isDeliveryProfileItem = (obj?: { __typename?: any } | null): obj is DeliveryProfileItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfileItem"')
      return DeliveryProfileItem_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfileItemConnection_possibleTypes: string[] = ['DeliveryProfileItemConnection']
    export const isDeliveryProfileItemConnection = (obj?: { __typename?: any } | null): obj is DeliveryProfileItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfileItemConnection"')
      return DeliveryProfileItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfileItemEdge_possibleTypes: string[] = ['DeliveryProfileItemEdge']
    export const isDeliveryProfileItemEdge = (obj?: { __typename?: any } | null): obj is DeliveryProfileItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfileItemEdge"')
      return DeliveryProfileItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProfileLocationGroup_possibleTypes: string[] = ['DeliveryProfileLocationGroup']
    export const isDeliveryProfileLocationGroup = (obj?: { __typename?: any } | null): obj is DeliveryProfileLocationGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProfileLocationGroup"')
      return DeliveryProfileLocationGroup_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryProvince_possibleTypes: string[] = ['DeliveryProvince']
    export const isDeliveryProvince = (obj?: { __typename?: any } | null): obj is DeliveryProvince => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryProvince"')
      return DeliveryProvince_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryRateDefinition_possibleTypes: string[] = ['DeliveryRateDefinition']
    export const isDeliveryRateDefinition = (obj?: { __typename?: any } | null): obj is DeliveryRateDefinition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryRateDefinition"')
      return DeliveryRateDefinition_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryRateProvider_possibleTypes: string[] = ['DeliveryParticipant','DeliveryRateDefinition']
    export const isDeliveryRateProvider = (obj?: { __typename?: any } | null): obj is DeliveryRateProvider => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryRateProvider"')
      return DeliveryRateProvider_possibleTypes.includes(obj.__typename)
    }
    


    const DeliverySetting_possibleTypes: string[] = ['DeliverySetting']
    export const isDeliverySetting = (obj?: { __typename?: any } | null): obj is DeliverySetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliverySetting"')
      return DeliverySetting_possibleTypes.includes(obj.__typename)
    }
    


    const DeliverySettingUpdatePayload_possibleTypes: string[] = ['DeliverySettingUpdatePayload']
    export const isDeliverySettingUpdatePayload = (obj?: { __typename?: any } | null): obj is DeliverySettingUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliverySettingUpdatePayload"')
      return DeliverySettingUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryShippingOriginAssignPayload_possibleTypes: string[] = ['DeliveryShippingOriginAssignPayload']
    export const isDeliveryShippingOriginAssignPayload = (obj?: { __typename?: any } | null): obj is DeliveryShippingOriginAssignPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryShippingOriginAssignPayload"')
      return DeliveryShippingOriginAssignPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DeliveryZone_possibleTypes: string[] = ['DeliveryZone']
    export const isDeliveryZone = (obj?: { __typename?: any } | null): obj is DeliveryZone => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeliveryZone"')
      return DeliveryZone_possibleTypes.includes(obj.__typename)
    }
    


    const Discount_possibleTypes: string[] = ['DiscountAutomaticApp','DiscountAutomaticBasic','DiscountAutomaticBxgy','DiscountCodeApp','DiscountCodeBasic','DiscountCodeBxgy','DiscountCodeFreeShipping']
    export const isDiscount = (obj?: { __typename?: any } | null): obj is Discount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscount"')
      return Discount_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAllocation_possibleTypes: string[] = ['DiscountAllocation']
    export const isDiscountAllocation = (obj?: { __typename?: any } | null): obj is DiscountAllocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAllocation"')
      return DiscountAllocation_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAmount_possibleTypes: string[] = ['DiscountAmount']
    export const isDiscountAmount = (obj?: { __typename?: any } | null): obj is DiscountAmount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAmount"')
      return DiscountAmount_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountApplication_possibleTypes: string[] = ['AutomaticDiscountApplication','DiscountCodeApplication','ManualDiscountApplication','ScriptDiscountApplication']
    export const isDiscountApplication = (obj?: { __typename?: any } | null): obj is DiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountApplication"')
      return DiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountApplicationConnection_possibleTypes: string[] = ['DiscountApplicationConnection']
    export const isDiscountApplicationConnection = (obj?: { __typename?: any } | null): obj is DiscountApplicationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountApplicationConnection"')
      return DiscountApplicationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountApplicationEdge_possibleTypes: string[] = ['DiscountApplicationEdge']
    export const isDiscountApplicationEdge = (obj?: { __typename?: any } | null): obj is DiscountApplicationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountApplicationEdge"')
      return DiscountApplicationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomatic_possibleTypes: string[] = ['DiscountAutomaticApp','DiscountAutomaticBasic','DiscountAutomaticBxgy']
    export const isDiscountAutomatic = (obj?: { __typename?: any } | null): obj is DiscountAutomatic => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomatic"')
      return DiscountAutomatic_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticActivatePayload_possibleTypes: string[] = ['DiscountAutomaticActivatePayload']
    export const isDiscountAutomaticActivatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticActivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticActivatePayload"')
      return DiscountAutomaticActivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticApp_possibleTypes: string[] = ['DiscountAutomaticApp']
    export const isDiscountAutomaticApp = (obj?: { __typename?: any } | null): obj is DiscountAutomaticApp => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticApp"')
      return DiscountAutomaticApp_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticAppCreatePayload_possibleTypes: string[] = ['DiscountAutomaticAppCreatePayload']
    export const isDiscountAutomaticAppCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticAppCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticAppCreatePayload"')
      return DiscountAutomaticAppCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticAppUpdatePayload_possibleTypes: string[] = ['DiscountAutomaticAppUpdatePayload']
    export const isDiscountAutomaticAppUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticAppUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticAppUpdatePayload"')
      return DiscountAutomaticAppUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBasic_possibleTypes: string[] = ['DiscountAutomaticBasic']
    export const isDiscountAutomaticBasic = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBasic => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBasic"')
      return DiscountAutomaticBasic_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBasicCreatePayload_possibleTypes: string[] = ['DiscountAutomaticBasicCreatePayload']
    export const isDiscountAutomaticBasicCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBasicCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBasicCreatePayload"')
      return DiscountAutomaticBasicCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBasicUpdatePayload_possibleTypes: string[] = ['DiscountAutomaticBasicUpdatePayload']
    export const isDiscountAutomaticBasicUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBasicUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBasicUpdatePayload"')
      return DiscountAutomaticBasicUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBulkDeletePayload_possibleTypes: string[] = ['DiscountAutomaticBulkDeletePayload']
    export const isDiscountAutomaticBulkDeletePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBulkDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBulkDeletePayload"')
      return DiscountAutomaticBulkDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBxgy_possibleTypes: string[] = ['DiscountAutomaticBxgy']
    export const isDiscountAutomaticBxgy = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBxgy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBxgy"')
      return DiscountAutomaticBxgy_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBxgyCreatePayload_possibleTypes: string[] = ['DiscountAutomaticBxgyCreatePayload']
    export const isDiscountAutomaticBxgyCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBxgyCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBxgyCreatePayload"')
      return DiscountAutomaticBxgyCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticBxgyUpdatePayload_possibleTypes: string[] = ['DiscountAutomaticBxgyUpdatePayload']
    export const isDiscountAutomaticBxgyUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticBxgyUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticBxgyUpdatePayload"')
      return DiscountAutomaticBxgyUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticConnection_possibleTypes: string[] = ['DiscountAutomaticConnection']
    export const isDiscountAutomaticConnection = (obj?: { __typename?: any } | null): obj is DiscountAutomaticConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticConnection"')
      return DiscountAutomaticConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticDeactivatePayload_possibleTypes: string[] = ['DiscountAutomaticDeactivatePayload']
    export const isDiscountAutomaticDeactivatePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticDeactivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticDeactivatePayload"')
      return DiscountAutomaticDeactivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticDeletePayload_possibleTypes: string[] = ['DiscountAutomaticDeletePayload']
    export const isDiscountAutomaticDeletePayload = (obj?: { __typename?: any } | null): obj is DiscountAutomaticDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticDeletePayload"')
      return DiscountAutomaticDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticEdge_possibleTypes: string[] = ['DiscountAutomaticEdge']
    export const isDiscountAutomaticEdge = (obj?: { __typename?: any } | null): obj is DiscountAutomaticEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticEdge"')
      return DiscountAutomaticEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticNode_possibleTypes: string[] = ['DiscountAutomaticNode']
    export const isDiscountAutomaticNode = (obj?: { __typename?: any } | null): obj is DiscountAutomaticNode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticNode"')
      return DiscountAutomaticNode_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticNodeConnection_possibleTypes: string[] = ['DiscountAutomaticNodeConnection']
    export const isDiscountAutomaticNodeConnection = (obj?: { __typename?: any } | null): obj is DiscountAutomaticNodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticNodeConnection"')
      return DiscountAutomaticNodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountAutomaticNodeEdge_possibleTypes: string[] = ['DiscountAutomaticNodeEdge']
    export const isDiscountAutomaticNodeEdge = (obj?: { __typename?: any } | null): obj is DiscountAutomaticNodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountAutomaticNodeEdge"')
      return DiscountAutomaticNodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCode_possibleTypes: string[] = ['DiscountCodeApp','DiscountCodeBasic','DiscountCodeBxgy','DiscountCodeFreeShipping']
    export const isDiscountCode = (obj?: { __typename?: any } | null): obj is DiscountCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCode"')
      return DiscountCode_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeActivatePayload_possibleTypes: string[] = ['DiscountCodeActivatePayload']
    export const isDiscountCodeActivatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeActivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeActivatePayload"')
      return DiscountCodeActivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeApp_possibleTypes: string[] = ['DiscountCodeApp']
    export const isDiscountCodeApp = (obj?: { __typename?: any } | null): obj is DiscountCodeApp => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeApp"')
      return DiscountCodeApp_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeAppCreatePayload_possibleTypes: string[] = ['DiscountCodeAppCreatePayload']
    export const isDiscountCodeAppCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeAppCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeAppCreatePayload"')
      return DiscountCodeAppCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeAppUpdatePayload_possibleTypes: string[] = ['DiscountCodeAppUpdatePayload']
    export const isDiscountCodeAppUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeAppUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeAppUpdatePayload"')
      return DiscountCodeAppUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeApplication_possibleTypes: string[] = ['DiscountCodeApplication']
    export const isDiscountCodeApplication = (obj?: { __typename?: any } | null): obj is DiscountCodeApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeApplication"')
      return DiscountCodeApplication_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBasic_possibleTypes: string[] = ['DiscountCodeBasic']
    export const isDiscountCodeBasic = (obj?: { __typename?: any } | null): obj is DiscountCodeBasic => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBasic"')
      return DiscountCodeBasic_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBasicCreatePayload_possibleTypes: string[] = ['DiscountCodeBasicCreatePayload']
    export const isDiscountCodeBasicCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBasicCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBasicCreatePayload"')
      return DiscountCodeBasicCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBasicUpdatePayload_possibleTypes: string[] = ['DiscountCodeBasicUpdatePayload']
    export const isDiscountCodeBasicUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBasicUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBasicUpdatePayload"')
      return DiscountCodeBasicUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBulkActivatePayload_possibleTypes: string[] = ['DiscountCodeBulkActivatePayload']
    export const isDiscountCodeBulkActivatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBulkActivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBulkActivatePayload"')
      return DiscountCodeBulkActivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBulkDeactivatePayload_possibleTypes: string[] = ['DiscountCodeBulkDeactivatePayload']
    export const isDiscountCodeBulkDeactivatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBulkDeactivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBulkDeactivatePayload"')
      return DiscountCodeBulkDeactivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBulkDeletePayload_possibleTypes: string[] = ['DiscountCodeBulkDeletePayload']
    export const isDiscountCodeBulkDeletePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBulkDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBulkDeletePayload"')
      return DiscountCodeBulkDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBxgy_possibleTypes: string[] = ['DiscountCodeBxgy']
    export const isDiscountCodeBxgy = (obj?: { __typename?: any } | null): obj is DiscountCodeBxgy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBxgy"')
      return DiscountCodeBxgy_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBxgyCreatePayload_possibleTypes: string[] = ['DiscountCodeBxgyCreatePayload']
    export const isDiscountCodeBxgyCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBxgyCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBxgyCreatePayload"')
      return DiscountCodeBxgyCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeBxgyUpdatePayload_possibleTypes: string[] = ['DiscountCodeBxgyUpdatePayload']
    export const isDiscountCodeBxgyUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeBxgyUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeBxgyUpdatePayload"')
      return DiscountCodeBxgyUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeDeactivatePayload_possibleTypes: string[] = ['DiscountCodeDeactivatePayload']
    export const isDiscountCodeDeactivatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeDeactivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeDeactivatePayload"')
      return DiscountCodeDeactivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeDeletePayload_possibleTypes: string[] = ['DiscountCodeDeletePayload']
    export const isDiscountCodeDeletePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeDeletePayload"')
      return DiscountCodeDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeFreeShipping_possibleTypes: string[] = ['DiscountCodeFreeShipping']
    export const isDiscountCodeFreeShipping = (obj?: { __typename?: any } | null): obj is DiscountCodeFreeShipping => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeFreeShipping"')
      return DiscountCodeFreeShipping_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeFreeShippingCreatePayload_possibleTypes: string[] = ['DiscountCodeFreeShippingCreatePayload']
    export const isDiscountCodeFreeShippingCreatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeFreeShippingCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeFreeShippingCreatePayload"')
      return DiscountCodeFreeShippingCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeFreeShippingUpdatePayload_possibleTypes: string[] = ['DiscountCodeFreeShippingUpdatePayload']
    export const isDiscountCodeFreeShippingUpdatePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeFreeShippingUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeFreeShippingUpdatePayload"')
      return DiscountCodeFreeShippingUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeNode_possibleTypes: string[] = ['DiscountCodeNode']
    export const isDiscountCodeNode = (obj?: { __typename?: any } | null): obj is DiscountCodeNode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeNode"')
      return DiscountCodeNode_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeNodeConnection_possibleTypes: string[] = ['DiscountCodeNodeConnection']
    export const isDiscountCodeNodeConnection = (obj?: { __typename?: any } | null): obj is DiscountCodeNodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeNodeConnection"')
      return DiscountCodeNodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeNodeEdge_possibleTypes: string[] = ['DiscountCodeNodeEdge']
    export const isDiscountCodeNodeEdge = (obj?: { __typename?: any } | null): obj is DiscountCodeNodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeNodeEdge"')
      return DiscountCodeNodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCodeRedeemCodeBulkDeletePayload_possibleTypes: string[] = ['DiscountCodeRedeemCodeBulkDeletePayload']
    export const isDiscountCodeRedeemCodeBulkDeletePayload = (obj?: { __typename?: any } | null): obj is DiscountCodeRedeemCodeBulkDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCodeRedeemCodeBulkDeletePayload"')
      return DiscountCodeRedeemCodeBulkDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCollections_possibleTypes: string[] = ['DiscountCollections']
    export const isDiscountCollections = (obj?: { __typename?: any } | null): obj is DiscountCollections => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCollections"')
      return DiscountCollections_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCombinesWith_possibleTypes: string[] = ['DiscountCombinesWith']
    export const isDiscountCombinesWith = (obj?: { __typename?: any } | null): obj is DiscountCombinesWith => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCombinesWith"')
      return DiscountCombinesWith_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCountries_possibleTypes: string[] = ['DiscountCountries']
    export const isDiscountCountries = (obj?: { __typename?: any } | null): obj is DiscountCountries => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCountries"')
      return DiscountCountries_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCountryAll_possibleTypes: string[] = ['DiscountCountryAll']
    export const isDiscountCountryAll = (obj?: { __typename?: any } | null): obj is DiscountCountryAll => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCountryAll"')
      return DiscountCountryAll_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerAll_possibleTypes: string[] = ['DiscountCustomerAll']
    export const isDiscountCustomerAll = (obj?: { __typename?: any } | null): obj is DiscountCustomerAll => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerAll"')
      return DiscountCustomerAll_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerBuys_possibleTypes: string[] = ['DiscountCustomerBuys']
    export const isDiscountCustomerBuys = (obj?: { __typename?: any } | null): obj is DiscountCustomerBuys => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerBuys"')
      return DiscountCustomerBuys_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerBuysValue_possibleTypes: string[] = ['DiscountPurchaseAmount','DiscountQuantity']
    export const isDiscountCustomerBuysValue = (obj?: { __typename?: any } | null): obj is DiscountCustomerBuysValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerBuysValue"')
      return DiscountCustomerBuysValue_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerGets_possibleTypes: string[] = ['DiscountCustomerGets']
    export const isDiscountCustomerGets = (obj?: { __typename?: any } | null): obj is DiscountCustomerGets => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerGets"')
      return DiscountCustomerGets_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerGetsValue_possibleTypes: string[] = ['DiscountAmount','DiscountOnQuantity','DiscountPercentage']
    export const isDiscountCustomerGetsValue = (obj?: { __typename?: any } | null): obj is DiscountCustomerGetsValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerGetsValue"')
      return DiscountCustomerGetsValue_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerSegments_possibleTypes: string[] = ['DiscountCustomerSegments']
    export const isDiscountCustomerSegments = (obj?: { __typename?: any } | null): obj is DiscountCustomerSegments => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerSegments"')
      return DiscountCustomerSegments_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomerSelection_possibleTypes: string[] = ['DiscountCustomerAll','DiscountCustomerSegments','DiscountCustomers']
    export const isDiscountCustomerSelection = (obj?: { __typename?: any } | null): obj is DiscountCustomerSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomerSelection"')
      return DiscountCustomerSelection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountCustomers_possibleTypes: string[] = ['DiscountCustomers']
    export const isDiscountCustomers = (obj?: { __typename?: any } | null): obj is DiscountCustomers => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountCustomers"')
      return DiscountCustomers_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountEffect_possibleTypes: string[] = ['DiscountPercentage']
    export const isDiscountEffect = (obj?: { __typename?: any } | null): obj is DiscountEffect => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountEffect"')
      return DiscountEffect_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountItems_possibleTypes: string[] = ['AllDiscountItems','DiscountCollections','DiscountProducts']
    export const isDiscountItems = (obj?: { __typename?: any } | null): obj is DiscountItems => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountItems"')
      return DiscountItems_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountMinimumQuantity_possibleTypes: string[] = ['DiscountMinimumQuantity']
    export const isDiscountMinimumQuantity = (obj?: { __typename?: any } | null): obj is DiscountMinimumQuantity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountMinimumQuantity"')
      return DiscountMinimumQuantity_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountMinimumRequirement_possibleTypes: string[] = ['DiscountMinimumQuantity','DiscountMinimumSubtotal']
    export const isDiscountMinimumRequirement = (obj?: { __typename?: any } | null): obj is DiscountMinimumRequirement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountMinimumRequirement"')
      return DiscountMinimumRequirement_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountMinimumSubtotal_possibleTypes: string[] = ['DiscountMinimumSubtotal']
    export const isDiscountMinimumSubtotal = (obj?: { __typename?: any } | null): obj is DiscountMinimumSubtotal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountMinimumSubtotal"')
      return DiscountMinimumSubtotal_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountNode_possibleTypes: string[] = ['DiscountNode']
    export const isDiscountNode = (obj?: { __typename?: any } | null): obj is DiscountNode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountNode"')
      return DiscountNode_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountNodeConnection_possibleTypes: string[] = ['DiscountNodeConnection']
    export const isDiscountNodeConnection = (obj?: { __typename?: any } | null): obj is DiscountNodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountNodeConnection"')
      return DiscountNodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountNodeEdge_possibleTypes: string[] = ['DiscountNodeEdge']
    export const isDiscountNodeEdge = (obj?: { __typename?: any } | null): obj is DiscountNodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountNodeEdge"')
      return DiscountNodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountOnQuantity_possibleTypes: string[] = ['DiscountOnQuantity']
    export const isDiscountOnQuantity = (obj?: { __typename?: any } | null): obj is DiscountOnQuantity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountOnQuantity"')
      return DiscountOnQuantity_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountPercentage_possibleTypes: string[] = ['DiscountPercentage']
    export const isDiscountPercentage = (obj?: { __typename?: any } | null): obj is DiscountPercentage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountPercentage"')
      return DiscountPercentage_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountProducts_possibleTypes: string[] = ['DiscountProducts']
    export const isDiscountProducts = (obj?: { __typename?: any } | null): obj is DiscountProducts => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountProducts"')
      return DiscountProducts_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountPurchaseAmount_possibleTypes: string[] = ['DiscountPurchaseAmount']
    export const isDiscountPurchaseAmount = (obj?: { __typename?: any } | null): obj is DiscountPurchaseAmount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountPurchaseAmount"')
      return DiscountPurchaseAmount_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountQuantity_possibleTypes: string[] = ['DiscountQuantity']
    export const isDiscountQuantity = (obj?: { __typename?: any } | null): obj is DiscountQuantity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountQuantity"')
      return DiscountQuantity_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCode_possibleTypes: string[] = ['DiscountRedeemCode']
    export const isDiscountRedeemCode = (obj?: { __typename?: any } | null): obj is DiscountRedeemCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCode"')
      return DiscountRedeemCode_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeBulkAddPayload_possibleTypes: string[] = ['DiscountRedeemCodeBulkAddPayload']
    export const isDiscountRedeemCodeBulkAddPayload = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeBulkAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeBulkAddPayload"')
      return DiscountRedeemCodeBulkAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeBulkCreation_possibleTypes: string[] = ['DiscountRedeemCodeBulkCreation']
    export const isDiscountRedeemCodeBulkCreation = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeBulkCreation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeBulkCreation"')
      return DiscountRedeemCodeBulkCreation_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeBulkCreationCode_possibleTypes: string[] = ['DiscountRedeemCodeBulkCreationCode']
    export const isDiscountRedeemCodeBulkCreationCode = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeBulkCreationCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeBulkCreationCode"')
      return DiscountRedeemCodeBulkCreationCode_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeBulkCreationCodeConnection_possibleTypes: string[] = ['DiscountRedeemCodeBulkCreationCodeConnection']
    export const isDiscountRedeemCodeBulkCreationCodeConnection = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeBulkCreationCodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeBulkCreationCodeConnection"')
      return DiscountRedeemCodeBulkCreationCodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeBulkCreationCodeEdge_possibleTypes: string[] = ['DiscountRedeemCodeBulkCreationCodeEdge']
    export const isDiscountRedeemCodeBulkCreationCodeEdge = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeBulkCreationCodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeBulkCreationCodeEdge"')
      return DiscountRedeemCodeBulkCreationCodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeConnection_possibleTypes: string[] = ['DiscountRedeemCodeConnection']
    export const isDiscountRedeemCodeConnection = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeConnection"')
      return DiscountRedeemCodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountRedeemCodeEdge_possibleTypes: string[] = ['DiscountRedeemCodeEdge']
    export const isDiscountRedeemCodeEdge = (obj?: { __typename?: any } | null): obj is DiscountRedeemCodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountRedeemCodeEdge"')
      return DiscountRedeemCodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountShareableUrl_possibleTypes: string[] = ['DiscountShareableUrl']
    export const isDiscountShareableUrl = (obj?: { __typename?: any } | null): obj is DiscountShareableUrl => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountShareableUrl"')
      return DiscountShareableUrl_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountShippingDestinationSelection_possibleTypes: string[] = ['DiscountCountries','DiscountCountryAll']
    export const isDiscountShippingDestinationSelection = (obj?: { __typename?: any } | null): obj is DiscountShippingDestinationSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountShippingDestinationSelection"')
      return DiscountShippingDestinationSelection_possibleTypes.includes(obj.__typename)
    }
    


    const DiscountUserError_possibleTypes: string[] = ['DiscountUserError']
    export const isDiscountUserError = (obj?: { __typename?: any } | null): obj is DiscountUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscountUserError"')
      return DiscountUserError_possibleTypes.includes(obj.__typename)
    }
    


    const DisplayableError_possibleTypes: string[] = ['AbandonmentEmailStateUpdateUserError','AbandonmentUpdateActivitiesDeliveryStatusesUserError','AppRevenueAttributionRecordCreateUserError','AppRevenueAttributionRecordDeleteUserError','AppSubscriptionTrialExtendUserError','BillingAttemptUserError','BulkMutationUserError','BulkProductResourceFeedbackCreateUserError','BusinessCustomerUserError','CartTransformCreateUserError','CartTransformDeleteUserError','CatalogUserError','CollectionAddProductsV2UserError','CustomerEmailMarketingConsentUpdateUserError','CustomerMergeUserError','CustomerPaymentMethodCreateFromDuplicationDataUserError','CustomerPaymentMethodGetDuplicationDataUserError','CustomerPaymentMethodGetUpdateUrlUserError','CustomerPaymentMethodRemoteUserError','CustomerPaymentMethodUserError','CustomerSegmentMembersQueryUserError','CustomerSmsMarketingConsentError','DelegateAccessTokenCreateUserError','DelegateAccessTokenDestroyUserError','DeliveryCustomizationError','DeliveryLocationLocalPickupSettingsError','DiscountUserError','DisputeEvidenceUpdateUserError','ErrorsServerPixelUserError','ErrorsWebPixelUserError','FilesUserError','FulfillmentOrderHoldUserError','FulfillmentOrderLineItemsPreparedForPickupUserError','FulfillmentOrderMergeUserError','FulfillmentOrderReleaseHoldUserError','FulfillmentOrderRescheduleUserError','FulfillmentOrderSplitUserError','FulfillmentOrdersReleaseHoldsUserError','FulfillmentOrdersSetFulfillmentDeadlineUserError','GiftCardUserError','InventoryAdjustQuantitiesUserError','InventoryBulkToggleActivationUserError','InventoryMoveQuantitiesUserError','InventorySetOnHandQuantitiesUserError','LocationActivateUserError','LocationAddUserError','LocationDeactivateUserError','LocationDeleteUserError','LocationEditUserError','MarketCurrencySettingsUserError','MarketUserError','MarketingActivityUserError','MediaUserError','MetafieldDefinitionCreateUserError','MetafieldDefinitionDeleteUserError','MetafieldDefinitionPinUserError','MetafieldDefinitionUnpinUserError','MetafieldDefinitionUpdateUserError','MetafieldsSetUserError','MetaobjectUserError','OrderCreateMandatePaymentUserError','OrderInvoiceSendUserError','PaymentCustomizationError','PaymentReminderSendUserError','PaymentTermsCreateUserError','PaymentTermsDeleteUserError','PaymentTermsUpdateUserError','PriceListFixedPricesByProductBulkUpdateUserError','PriceListPriceUserError','PriceListUserError','PriceRuleUserError','ProductChangeStatusUserError','ProductDeleteUserError','ProductDuplicateUserError','ProductFeedCreateUserError','ProductFeedDeleteUserError','ProductFullSyncUserError','ProductVariantRelationshipBulkUpdateUserError','ProductVariantsBulkCreateUserError','ProductVariantsBulkDeleteUserError','ProductVariantsBulkReorderUserError','ProductVariantsBulkUpdateUserError','PubSubWebhookSubscriptionCreateUserError','PubSubWebhookSubscriptionUpdateUserError','PublicationUserError','QuantityRuleUserError','ReturnUserError','SellingPlanGroupUserError','ShopPolicyUserError','ShopResourceFeedbackCreateUserError','StandardMetafieldDefinitionEnableUserError','SubscriptionBillingCycleUserError','SubscriptionContractUserError','SubscriptionDraftUserError','TaxAppConfigureUserError','TranslationUserError','UrlRedirectBulkDeleteByIdsUserError','UrlRedirectBulkDeleteBySavedSearchUserError','UrlRedirectBulkDeleteBySearchUserError','UrlRedirectImportUserError','UrlRedirectUserError','UserError']
    export const isDisplayableError = (obj?: { __typename?: any } | null): obj is DisplayableError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisplayableError"')
      return DisplayableError_possibleTypes.includes(obj.__typename)
    }
    


    const DisputeEvidenceUpdatePayload_possibleTypes: string[] = ['DisputeEvidenceUpdatePayload']
    export const isDisputeEvidenceUpdatePayload = (obj?: { __typename?: any } | null): obj is DisputeEvidenceUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisputeEvidenceUpdatePayload"')
      return DisputeEvidenceUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DisputeEvidenceUpdateUserError_possibleTypes: string[] = ['DisputeEvidenceUpdateUserError']
    export const isDisputeEvidenceUpdateUserError = (obj?: { __typename?: any } | null): obj is DisputeEvidenceUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDisputeEvidenceUpdateUserError"')
      return DisputeEvidenceUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Domain_possibleTypes: string[] = ['Domain']
    export const isDomain = (obj?: { __typename?: any } | null): obj is Domain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDomain"')
      return Domain_possibleTypes.includes(obj.__typename)
    }
    


    const DomainLocalization_possibleTypes: string[] = ['DomainLocalization']
    export const isDomainLocalization = (obj?: { __typename?: any } | null): obj is DomainLocalization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDomainLocalization"')
      return DomainLocalization_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrder_possibleTypes: string[] = ['DraftOrder']
    export const isDraftOrder = (obj?: { __typename?: any } | null): obj is DraftOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrder"')
      return DraftOrder_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderAppliedDiscount_possibleTypes: string[] = ['DraftOrderAppliedDiscount']
    export const isDraftOrderAppliedDiscount = (obj?: { __typename?: any } | null): obj is DraftOrderAppliedDiscount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderAppliedDiscount"')
      return DraftOrderAppliedDiscount_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderBulkAddTagsPayload_possibleTypes: string[] = ['DraftOrderBulkAddTagsPayload']
    export const isDraftOrderBulkAddTagsPayload = (obj?: { __typename?: any } | null): obj is DraftOrderBulkAddTagsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderBulkAddTagsPayload"')
      return DraftOrderBulkAddTagsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderBulkDeletePayload_possibleTypes: string[] = ['DraftOrderBulkDeletePayload']
    export const isDraftOrderBulkDeletePayload = (obj?: { __typename?: any } | null): obj is DraftOrderBulkDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderBulkDeletePayload"')
      return DraftOrderBulkDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderBulkRemoveTagsPayload_possibleTypes: string[] = ['DraftOrderBulkRemoveTagsPayload']
    export const isDraftOrderBulkRemoveTagsPayload = (obj?: { __typename?: any } | null): obj is DraftOrderBulkRemoveTagsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderBulkRemoveTagsPayload"')
      return DraftOrderBulkRemoveTagsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderCalculatePayload_possibleTypes: string[] = ['DraftOrderCalculatePayload']
    export const isDraftOrderCalculatePayload = (obj?: { __typename?: any } | null): obj is DraftOrderCalculatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderCalculatePayload"')
      return DraftOrderCalculatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderCompletePayload_possibleTypes: string[] = ['DraftOrderCompletePayload']
    export const isDraftOrderCompletePayload = (obj?: { __typename?: any } | null): obj is DraftOrderCompletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderCompletePayload"')
      return DraftOrderCompletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderConnection_possibleTypes: string[] = ['DraftOrderConnection']
    export const isDraftOrderConnection = (obj?: { __typename?: any } | null): obj is DraftOrderConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderConnection"')
      return DraftOrderConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderCreateFromOrderPayload_possibleTypes: string[] = ['DraftOrderCreateFromOrderPayload']
    export const isDraftOrderCreateFromOrderPayload = (obj?: { __typename?: any } | null): obj is DraftOrderCreateFromOrderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderCreateFromOrderPayload"')
      return DraftOrderCreateFromOrderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderCreateMerchantCheckoutPayload_possibleTypes: string[] = ['DraftOrderCreateMerchantCheckoutPayload']
    export const isDraftOrderCreateMerchantCheckoutPayload = (obj?: { __typename?: any } | null): obj is DraftOrderCreateMerchantCheckoutPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderCreateMerchantCheckoutPayload"')
      return DraftOrderCreateMerchantCheckoutPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderCreatePayload_possibleTypes: string[] = ['DraftOrderCreatePayload']
    export const isDraftOrderCreatePayload = (obj?: { __typename?: any } | null): obj is DraftOrderCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderCreatePayload"')
      return DraftOrderCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderDeletePayload_possibleTypes: string[] = ['DraftOrderDeletePayload']
    export const isDraftOrderDeletePayload = (obj?: { __typename?: any } | null): obj is DraftOrderDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderDeletePayload"')
      return DraftOrderDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderDuplicatePayload_possibleTypes: string[] = ['DraftOrderDuplicatePayload']
    export const isDraftOrderDuplicatePayload = (obj?: { __typename?: any } | null): obj is DraftOrderDuplicatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderDuplicatePayload"')
      return DraftOrderDuplicatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderEdge_possibleTypes: string[] = ['DraftOrderEdge']
    export const isDraftOrderEdge = (obj?: { __typename?: any } | null): obj is DraftOrderEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderEdge"')
      return DraftOrderEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderInvoicePreviewPayload_possibleTypes: string[] = ['DraftOrderInvoicePreviewPayload']
    export const isDraftOrderInvoicePreviewPayload = (obj?: { __typename?: any } | null): obj is DraftOrderInvoicePreviewPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderInvoicePreviewPayload"')
      return DraftOrderInvoicePreviewPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderInvoiceSendPayload_possibleTypes: string[] = ['DraftOrderInvoiceSendPayload']
    export const isDraftOrderInvoiceSendPayload = (obj?: { __typename?: any } | null): obj is DraftOrderInvoiceSendPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderInvoiceSendPayload"')
      return DraftOrderInvoiceSendPayload_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderLineItem_possibleTypes: string[] = ['DraftOrderLineItem']
    export const isDraftOrderLineItem = (obj?: { __typename?: any } | null): obj is DraftOrderLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderLineItem"')
      return DraftOrderLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderLineItemConnection_possibleTypes: string[] = ['DraftOrderLineItemConnection']
    export const isDraftOrderLineItemConnection = (obj?: { __typename?: any } | null): obj is DraftOrderLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderLineItemConnection"')
      return DraftOrderLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderLineItemEdge_possibleTypes: string[] = ['DraftOrderLineItemEdge']
    export const isDraftOrderLineItemEdge = (obj?: { __typename?: any } | null): obj is DraftOrderLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderLineItemEdge"')
      return DraftOrderLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderTag_possibleTypes: string[] = ['DraftOrderTag']
    export const isDraftOrderTag = (obj?: { __typename?: any } | null): obj is DraftOrderTag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderTag"')
      return DraftOrderTag_possibleTypes.includes(obj.__typename)
    }
    


    const DraftOrderUpdatePayload_possibleTypes: string[] = ['DraftOrderUpdatePayload']
    export const isDraftOrderUpdatePayload = (obj?: { __typename?: any } | null): obj is DraftOrderUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraftOrderUpdatePayload"')
      return DraftOrderUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const Duty_possibleTypes: string[] = ['Duty']
    export const isDuty = (obj?: { __typename?: any } | null): obj is Duty => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDuty"')
      return Duty_possibleTypes.includes(obj.__typename)
    }
    


    const DutySale_possibleTypes: string[] = ['DutySale']
    export const isDutySale = (obj?: { __typename?: any } | null): obj is DutySale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDutySale"')
      return DutySale_possibleTypes.includes(obj.__typename)
    }
    


    const EditableProperty_possibleTypes: string[] = ['EditableProperty']
    export const isEditableProperty = (obj?: { __typename?: any } | null): obj is EditableProperty => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEditableProperty"')
      return EditableProperty_possibleTypes.includes(obj.__typename)
    }
    


    const ErrorPosition_possibleTypes: string[] = ['ErrorPosition']
    export const isErrorPosition = (obj?: { __typename?: any } | null): obj is ErrorPosition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isErrorPosition"')
      return ErrorPosition_possibleTypes.includes(obj.__typename)
    }
    


    const ErrorsServerPixelUserError_possibleTypes: string[] = ['ErrorsServerPixelUserError']
    export const isErrorsServerPixelUserError = (obj?: { __typename?: any } | null): obj is ErrorsServerPixelUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isErrorsServerPixelUserError"')
      return ErrorsServerPixelUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ErrorsWebPixelUserError_possibleTypes: string[] = ['ErrorsWebPixelUserError']
    export const isErrorsWebPixelUserError = (obj?: { __typename?: any } | null): obj is ErrorsWebPixelUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isErrorsWebPixelUserError"')
      return ErrorsWebPixelUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Event_possibleTypes: string[] = ['BasicEvent','CommentEvent']
    export const isEvent = (obj?: { __typename?: any } | null): obj is Event => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEvent"')
      return Event_possibleTypes.includes(obj.__typename)
    }
    


    const EventBridgeServerPixelUpdatePayload_possibleTypes: string[] = ['EventBridgeServerPixelUpdatePayload']
    export const isEventBridgeServerPixelUpdatePayload = (obj?: { __typename?: any } | null): obj is EventBridgeServerPixelUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEventBridgeServerPixelUpdatePayload"')
      return EventBridgeServerPixelUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const EventBridgeWebhookSubscriptionCreatePayload_possibleTypes: string[] = ['EventBridgeWebhookSubscriptionCreatePayload']
    export const isEventBridgeWebhookSubscriptionCreatePayload = (obj?: { __typename?: any } | null): obj is EventBridgeWebhookSubscriptionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEventBridgeWebhookSubscriptionCreatePayload"')
      return EventBridgeWebhookSubscriptionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const EventBridgeWebhookSubscriptionUpdatePayload_possibleTypes: string[] = ['EventBridgeWebhookSubscriptionUpdatePayload']
    export const isEventBridgeWebhookSubscriptionUpdatePayload = (obj?: { __typename?: any } | null): obj is EventBridgeWebhookSubscriptionUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEventBridgeWebhookSubscriptionUpdatePayload"')
      return EventBridgeWebhookSubscriptionUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const EventConnection_possibleTypes: string[] = ['EventConnection']
    export const isEventConnection = (obj?: { __typename?: any } | null): obj is EventConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEventConnection"')
      return EventConnection_possibleTypes.includes(obj.__typename)
    }
    


    const EventEdge_possibleTypes: string[] = ['EventEdge']
    export const isEventEdge = (obj?: { __typename?: any } | null): obj is EventEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEventEdge"')
      return EventEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeV2_possibleTypes: string[] = ['ExchangeV2']
    export const isExchangeV2 = (obj?: { __typename?: any } | null): obj is ExchangeV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeV2"')
      return ExchangeV2_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeV2Additions_possibleTypes: string[] = ['ExchangeV2Additions']
    export const isExchangeV2Additions = (obj?: { __typename?: any } | null): obj is ExchangeV2Additions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeV2Additions"')
      return ExchangeV2Additions_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeV2Connection_possibleTypes: string[] = ['ExchangeV2Connection']
    export const isExchangeV2Connection = (obj?: { __typename?: any } | null): obj is ExchangeV2Connection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeV2Connection"')
      return ExchangeV2Connection_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeV2Edge_possibleTypes: string[] = ['ExchangeV2Edge']
    export const isExchangeV2Edge = (obj?: { __typename?: any } | null): obj is ExchangeV2Edge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeV2Edge"')
      return ExchangeV2Edge_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeV2LineItem_possibleTypes: string[] = ['ExchangeV2LineItem']
    export const isExchangeV2LineItem = (obj?: { __typename?: any } | null): obj is ExchangeV2LineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeV2LineItem"')
      return ExchangeV2LineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ExchangeV2Returns_possibleTypes: string[] = ['ExchangeV2Returns']
    export const isExchangeV2Returns = (obj?: { __typename?: any } | null): obj is ExchangeV2Returns => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExchangeV2Returns"')
      return ExchangeV2Returns_possibleTypes.includes(obj.__typename)
    }
    


    const ExternalVideo_possibleTypes: string[] = ['ExternalVideo']
    export const isExternalVideo = (obj?: { __typename?: any } | null): obj is ExternalVideo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExternalVideo"')
      return ExternalVideo_possibleTypes.includes(obj.__typename)
    }
    


    const FailedRequirement_possibleTypes: string[] = ['FailedRequirement']
    export const isFailedRequirement = (obj?: { __typename?: any } | null): obj is FailedRequirement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFailedRequirement"')
      return FailedRequirement_possibleTypes.includes(obj.__typename)
    }
    


    const File_possibleTypes: string[] = ['GenericFile','MediaImage','Video']
    export const isFile = (obj?: { __typename?: any } | null): obj is File => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFile"')
      return File_possibleTypes.includes(obj.__typename)
    }
    


    const FileAcknowledgeUpdateFailedPayload_possibleTypes: string[] = ['FileAcknowledgeUpdateFailedPayload']
    export const isFileAcknowledgeUpdateFailedPayload = (obj?: { __typename?: any } | null): obj is FileAcknowledgeUpdateFailedPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileAcknowledgeUpdateFailedPayload"')
      return FileAcknowledgeUpdateFailedPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FileConnection_possibleTypes: string[] = ['FileConnection']
    export const isFileConnection = (obj?: { __typename?: any } | null): obj is FileConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileConnection"')
      return FileConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FileCreatePayload_possibleTypes: string[] = ['FileCreatePayload']
    export const isFileCreatePayload = (obj?: { __typename?: any } | null): obj is FileCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileCreatePayload"')
      return FileCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FileDeletePayload_possibleTypes: string[] = ['FileDeletePayload']
    export const isFileDeletePayload = (obj?: { __typename?: any } | null): obj is FileDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileDeletePayload"')
      return FileDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FileEdge_possibleTypes: string[] = ['FileEdge']
    export const isFileEdge = (obj?: { __typename?: any } | null): obj is FileEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileEdge"')
      return FileEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FileError_possibleTypes: string[] = ['FileError']
    export const isFileError = (obj?: { __typename?: any } | null): obj is FileError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileError"')
      return FileError_possibleTypes.includes(obj.__typename)
    }
    


    const FileUpdatePayload_possibleTypes: string[] = ['FileUpdatePayload']
    export const isFileUpdatePayload = (obj?: { __typename?: any } | null): obj is FileUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFileUpdatePayload"')
      return FileUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FilesUserError_possibleTypes: string[] = ['FilesUserError']
    export const isFilesUserError = (obj?: { __typename?: any } | null): obj is FilesUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFilesUserError"')
      return FilesUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FilterOption_possibleTypes: string[] = ['FilterOption']
    export const isFilterOption = (obj?: { __typename?: any } | null): obj is FilterOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFilterOption"')
      return FilterOption_possibleTypes.includes(obj.__typename)
    }
    


    const FlowTriggerReceivePayload_possibleTypes: string[] = ['FlowTriggerReceivePayload']
    export const isFlowTriggerReceivePayload = (obj?: { __typename?: any } | null): obj is FlowTriggerReceivePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFlowTriggerReceivePayload"')
      return FlowTriggerReceivePayload_possibleTypes.includes(obj.__typename)
    }
    


    const Fulfillment_possibleTypes: string[] = ['Fulfillment']
    export const isFulfillment = (obj?: { __typename?: any } | null): obj is Fulfillment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillment"')
      return Fulfillment_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentCancelPayload_possibleTypes: string[] = ['FulfillmentCancelPayload']
    export const isFulfillmentCancelPayload = (obj?: { __typename?: any } | null): obj is FulfillmentCancelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentCancelPayload"')
      return FulfillmentCancelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentConnection_possibleTypes: string[] = ['FulfillmentConnection']
    export const isFulfillmentConnection = (obj?: { __typename?: any } | null): obj is FulfillmentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentConnection"')
      return FulfillmentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentCreateV2Payload_possibleTypes: string[] = ['FulfillmentCreateV2Payload']
    export const isFulfillmentCreateV2Payload = (obj?: { __typename?: any } | null): obj is FulfillmentCreateV2Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentCreateV2Payload"')
      return FulfillmentCreateV2Payload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentEdge_possibleTypes: string[] = ['FulfillmentEdge']
    export const isFulfillmentEdge = (obj?: { __typename?: any } | null): obj is FulfillmentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentEdge"')
      return FulfillmentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentEvent_possibleTypes: string[] = ['FulfillmentEvent']
    export const isFulfillmentEvent = (obj?: { __typename?: any } | null): obj is FulfillmentEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentEvent"')
      return FulfillmentEvent_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentEventConnection_possibleTypes: string[] = ['FulfillmentEventConnection']
    export const isFulfillmentEventConnection = (obj?: { __typename?: any } | null): obj is FulfillmentEventConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentEventConnection"')
      return FulfillmentEventConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentEventCreatePayload_possibleTypes: string[] = ['FulfillmentEventCreatePayload']
    export const isFulfillmentEventCreatePayload = (obj?: { __typename?: any } | null): obj is FulfillmentEventCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentEventCreatePayload"')
      return FulfillmentEventCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentEventEdge_possibleTypes: string[] = ['FulfillmentEventEdge']
    export const isFulfillmentEventEdge = (obj?: { __typename?: any } | null): obj is FulfillmentEventEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentEventEdge"')
      return FulfillmentEventEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentHold_possibleTypes: string[] = ['FulfillmentHold']
    export const isFulfillmentHold = (obj?: { __typename?: any } | null): obj is FulfillmentHold => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentHold"')
      return FulfillmentHold_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentLineItem_possibleTypes: string[] = ['FulfillmentLineItem']
    export const isFulfillmentLineItem = (obj?: { __typename?: any } | null): obj is FulfillmentLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentLineItem"')
      return FulfillmentLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentLineItemConnection_possibleTypes: string[] = ['FulfillmentLineItemConnection']
    export const isFulfillmentLineItemConnection = (obj?: { __typename?: any } | null): obj is FulfillmentLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentLineItemConnection"')
      return FulfillmentLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentLineItemEdge_possibleTypes: string[] = ['FulfillmentLineItemEdge']
    export const isFulfillmentLineItemEdge = (obj?: { __typename?: any } | null): obj is FulfillmentLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentLineItemEdge"')
      return FulfillmentLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrder_possibleTypes: string[] = ['FulfillmentOrder']
    export const isFulfillmentOrder = (obj?: { __typename?: any } | null): obj is FulfillmentOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrder"')
      return FulfillmentOrder_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderAcceptCancellationRequestPayload_possibleTypes: string[] = ['FulfillmentOrderAcceptCancellationRequestPayload']
    export const isFulfillmentOrderAcceptCancellationRequestPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderAcceptCancellationRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderAcceptCancellationRequestPayload"')
      return FulfillmentOrderAcceptCancellationRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderAcceptFulfillmentRequestPayload_possibleTypes: string[] = ['FulfillmentOrderAcceptFulfillmentRequestPayload']
    export const isFulfillmentOrderAcceptFulfillmentRequestPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderAcceptFulfillmentRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderAcceptFulfillmentRequestPayload"')
      return FulfillmentOrderAcceptFulfillmentRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderAssignedLocation_possibleTypes: string[] = ['FulfillmentOrderAssignedLocation']
    export const isFulfillmentOrderAssignedLocation = (obj?: { __typename?: any } | null): obj is FulfillmentOrderAssignedLocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderAssignedLocation"')
      return FulfillmentOrderAssignedLocation_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderCancelPayload_possibleTypes: string[] = ['FulfillmentOrderCancelPayload']
    export const isFulfillmentOrderCancelPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderCancelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderCancelPayload"')
      return FulfillmentOrderCancelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderClosePayload_possibleTypes: string[] = ['FulfillmentOrderClosePayload']
    export const isFulfillmentOrderClosePayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderClosePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderClosePayload"')
      return FulfillmentOrderClosePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderConnection_possibleTypes: string[] = ['FulfillmentOrderConnection']
    export const isFulfillmentOrderConnection = (obj?: { __typename?: any } | null): obj is FulfillmentOrderConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderConnection"')
      return FulfillmentOrderConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderDestination_possibleTypes: string[] = ['FulfillmentOrderDestination']
    export const isFulfillmentOrderDestination = (obj?: { __typename?: any } | null): obj is FulfillmentOrderDestination => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderDestination"')
      return FulfillmentOrderDestination_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderEdge_possibleTypes: string[] = ['FulfillmentOrderEdge']
    export const isFulfillmentOrderEdge = (obj?: { __typename?: any } | null): obj is FulfillmentOrderEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderEdge"')
      return FulfillmentOrderEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderHoldPayload_possibleTypes: string[] = ['FulfillmentOrderHoldPayload']
    export const isFulfillmentOrderHoldPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderHoldPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderHoldPayload"')
      return FulfillmentOrderHoldPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderHoldUserError_possibleTypes: string[] = ['FulfillmentOrderHoldUserError']
    export const isFulfillmentOrderHoldUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrderHoldUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderHoldUserError"')
      return FulfillmentOrderHoldUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderInternationalDuties_possibleTypes: string[] = ['FulfillmentOrderInternationalDuties']
    export const isFulfillmentOrderInternationalDuties = (obj?: { __typename?: any } | null): obj is FulfillmentOrderInternationalDuties => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderInternationalDuties"')
      return FulfillmentOrderInternationalDuties_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLineItem_possibleTypes: string[] = ['FulfillmentOrderLineItem']
    export const isFulfillmentOrderLineItem = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLineItem"')
      return FulfillmentOrderLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLineItemConnection_possibleTypes: string[] = ['FulfillmentOrderLineItemConnection']
    export const isFulfillmentOrderLineItemConnection = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLineItemConnection"')
      return FulfillmentOrderLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLineItemEdge_possibleTypes: string[] = ['FulfillmentOrderLineItemEdge']
    export const isFulfillmentOrderLineItemEdge = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLineItemEdge"')
      return FulfillmentOrderLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLineItemWarning_possibleTypes: string[] = ['FulfillmentOrderLineItemWarning']
    export const isFulfillmentOrderLineItemWarning = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLineItemWarning => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLineItemWarning"')
      return FulfillmentOrderLineItemWarning_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLineItemsPreparedForPickupPayload_possibleTypes: string[] = ['FulfillmentOrderLineItemsPreparedForPickupPayload']
    export const isFulfillmentOrderLineItemsPreparedForPickupPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLineItemsPreparedForPickupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLineItemsPreparedForPickupPayload"')
      return FulfillmentOrderLineItemsPreparedForPickupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLineItemsPreparedForPickupUserError_possibleTypes: string[] = ['FulfillmentOrderLineItemsPreparedForPickupUserError']
    export const isFulfillmentOrderLineItemsPreparedForPickupUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLineItemsPreparedForPickupUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLineItemsPreparedForPickupUserError"')
      return FulfillmentOrderLineItemsPreparedForPickupUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLocationForMove_possibleTypes: string[] = ['FulfillmentOrderLocationForMove']
    export const isFulfillmentOrderLocationForMove = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLocationForMove => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLocationForMove"')
      return FulfillmentOrderLocationForMove_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLocationForMoveConnection_possibleTypes: string[] = ['FulfillmentOrderLocationForMoveConnection']
    export const isFulfillmentOrderLocationForMoveConnection = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLocationForMoveConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLocationForMoveConnection"')
      return FulfillmentOrderLocationForMoveConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderLocationForMoveEdge_possibleTypes: string[] = ['FulfillmentOrderLocationForMoveEdge']
    export const isFulfillmentOrderLocationForMoveEdge = (obj?: { __typename?: any } | null): obj is FulfillmentOrderLocationForMoveEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderLocationForMoveEdge"')
      return FulfillmentOrderLocationForMoveEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMerchantRequest_possibleTypes: string[] = ['FulfillmentOrderMerchantRequest']
    export const isFulfillmentOrderMerchantRequest = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMerchantRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMerchantRequest"')
      return FulfillmentOrderMerchantRequest_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMerchantRequestConnection_possibleTypes: string[] = ['FulfillmentOrderMerchantRequestConnection']
    export const isFulfillmentOrderMerchantRequestConnection = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMerchantRequestConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMerchantRequestConnection"')
      return FulfillmentOrderMerchantRequestConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMerchantRequestEdge_possibleTypes: string[] = ['FulfillmentOrderMerchantRequestEdge']
    export const isFulfillmentOrderMerchantRequestEdge = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMerchantRequestEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMerchantRequestEdge"')
      return FulfillmentOrderMerchantRequestEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMergePayload_possibleTypes: string[] = ['FulfillmentOrderMergePayload']
    export const isFulfillmentOrderMergePayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMergePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMergePayload"')
      return FulfillmentOrderMergePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMergeResult_possibleTypes: string[] = ['FulfillmentOrderMergeResult']
    export const isFulfillmentOrderMergeResult = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMergeResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMergeResult"')
      return FulfillmentOrderMergeResult_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMergeUserError_possibleTypes: string[] = ['FulfillmentOrderMergeUserError']
    export const isFulfillmentOrderMergeUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMergeUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMergeUserError"')
      return FulfillmentOrderMergeUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderMovePayload_possibleTypes: string[] = ['FulfillmentOrderMovePayload']
    export const isFulfillmentOrderMovePayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderMovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderMovePayload"')
      return FulfillmentOrderMovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderOpenPayload_possibleTypes: string[] = ['FulfillmentOrderOpenPayload']
    export const isFulfillmentOrderOpenPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderOpenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderOpenPayload"')
      return FulfillmentOrderOpenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderRejectCancellationRequestPayload_possibleTypes: string[] = ['FulfillmentOrderRejectCancellationRequestPayload']
    export const isFulfillmentOrderRejectCancellationRequestPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderRejectCancellationRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderRejectCancellationRequestPayload"')
      return FulfillmentOrderRejectCancellationRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderRejectFulfillmentRequestPayload_possibleTypes: string[] = ['FulfillmentOrderRejectFulfillmentRequestPayload']
    export const isFulfillmentOrderRejectFulfillmentRequestPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderRejectFulfillmentRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderRejectFulfillmentRequestPayload"')
      return FulfillmentOrderRejectFulfillmentRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderReleaseHoldPayload_possibleTypes: string[] = ['FulfillmentOrderReleaseHoldPayload']
    export const isFulfillmentOrderReleaseHoldPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderReleaseHoldPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderReleaseHoldPayload"')
      return FulfillmentOrderReleaseHoldPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderReleaseHoldUserError_possibleTypes: string[] = ['FulfillmentOrderReleaseHoldUserError']
    export const isFulfillmentOrderReleaseHoldUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrderReleaseHoldUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderReleaseHoldUserError"')
      return FulfillmentOrderReleaseHoldUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderReschedulePayload_possibleTypes: string[] = ['FulfillmentOrderReschedulePayload']
    export const isFulfillmentOrderReschedulePayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderReschedulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderReschedulePayload"')
      return FulfillmentOrderReschedulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderRescheduleUserError_possibleTypes: string[] = ['FulfillmentOrderRescheduleUserError']
    export const isFulfillmentOrderRescheduleUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrderRescheduleUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderRescheduleUserError"')
      return FulfillmentOrderRescheduleUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderSplitPayload_possibleTypes: string[] = ['FulfillmentOrderSplitPayload']
    export const isFulfillmentOrderSplitPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderSplitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderSplitPayload"')
      return FulfillmentOrderSplitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderSplitResult_possibleTypes: string[] = ['FulfillmentOrderSplitResult']
    export const isFulfillmentOrderSplitResult = (obj?: { __typename?: any } | null): obj is FulfillmentOrderSplitResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderSplitResult"')
      return FulfillmentOrderSplitResult_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderSplitUserError_possibleTypes: string[] = ['FulfillmentOrderSplitUserError']
    export const isFulfillmentOrderSplitUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrderSplitUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderSplitUserError"')
      return FulfillmentOrderSplitUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderSubmitCancellationRequestPayload_possibleTypes: string[] = ['FulfillmentOrderSubmitCancellationRequestPayload']
    export const isFulfillmentOrderSubmitCancellationRequestPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderSubmitCancellationRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderSubmitCancellationRequestPayload"')
      return FulfillmentOrderSubmitCancellationRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderSubmitFulfillmentRequestPayload_possibleTypes: string[] = ['FulfillmentOrderSubmitFulfillmentRequestPayload']
    export const isFulfillmentOrderSubmitFulfillmentRequestPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrderSubmitFulfillmentRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderSubmitFulfillmentRequestPayload"')
      return FulfillmentOrderSubmitFulfillmentRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrderSupportedAction_possibleTypes: string[] = ['FulfillmentOrderSupportedAction']
    export const isFulfillmentOrderSupportedAction = (obj?: { __typename?: any } | null): obj is FulfillmentOrderSupportedAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrderSupportedAction"')
      return FulfillmentOrderSupportedAction_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrdersReleaseHoldsPayload_possibleTypes: string[] = ['FulfillmentOrdersReleaseHoldsPayload']
    export const isFulfillmentOrdersReleaseHoldsPayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrdersReleaseHoldsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrdersReleaseHoldsPayload"')
      return FulfillmentOrdersReleaseHoldsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrdersReleaseHoldsUserError_possibleTypes: string[] = ['FulfillmentOrdersReleaseHoldsUserError']
    export const isFulfillmentOrdersReleaseHoldsUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrdersReleaseHoldsUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrdersReleaseHoldsUserError"')
      return FulfillmentOrdersReleaseHoldsUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrdersSetFulfillmentDeadlinePayload_possibleTypes: string[] = ['FulfillmentOrdersSetFulfillmentDeadlinePayload']
    export const isFulfillmentOrdersSetFulfillmentDeadlinePayload = (obj?: { __typename?: any } | null): obj is FulfillmentOrdersSetFulfillmentDeadlinePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrdersSetFulfillmentDeadlinePayload"')
      return FulfillmentOrdersSetFulfillmentDeadlinePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOrdersSetFulfillmentDeadlineUserError_possibleTypes: string[] = ['FulfillmentOrdersSetFulfillmentDeadlineUserError']
    export const isFulfillmentOrdersSetFulfillmentDeadlineUserError = (obj?: { __typename?: any } | null): obj is FulfillmentOrdersSetFulfillmentDeadlineUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOrdersSetFulfillmentDeadlineUserError"')
      return FulfillmentOrdersSetFulfillmentDeadlineUserError_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentOriginAddress_possibleTypes: string[] = ['FulfillmentOriginAddress']
    export const isFulfillmentOriginAddress = (obj?: { __typename?: any } | null): obj is FulfillmentOriginAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentOriginAddress"')
      return FulfillmentOriginAddress_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentService_possibleTypes: string[] = ['FulfillmentService']
    export const isFulfillmentService = (obj?: { __typename?: any } | null): obj is FulfillmentService => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentService"')
      return FulfillmentService_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentServiceCreatePayload_possibleTypes: string[] = ['FulfillmentServiceCreatePayload']
    export const isFulfillmentServiceCreatePayload = (obj?: { __typename?: any } | null): obj is FulfillmentServiceCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentServiceCreatePayload"')
      return FulfillmentServiceCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentServiceDeletePayload_possibleTypes: string[] = ['FulfillmentServiceDeletePayload']
    export const isFulfillmentServiceDeletePayload = (obj?: { __typename?: any } | null): obj is FulfillmentServiceDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentServiceDeletePayload"')
      return FulfillmentServiceDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentServiceUpdatePayload_possibleTypes: string[] = ['FulfillmentServiceUpdatePayload']
    export const isFulfillmentServiceUpdatePayload = (obj?: { __typename?: any } | null): obj is FulfillmentServiceUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentServiceUpdatePayload"')
      return FulfillmentServiceUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentTrackingInfo_possibleTypes: string[] = ['FulfillmentTrackingInfo']
    export const isFulfillmentTrackingInfo = (obj?: { __typename?: any } | null): obj is FulfillmentTrackingInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentTrackingInfo"')
      return FulfillmentTrackingInfo_possibleTypes.includes(obj.__typename)
    }
    


    const FulfillmentTrackingInfoUpdateV2Payload_possibleTypes: string[] = ['FulfillmentTrackingInfoUpdateV2Payload']
    export const isFulfillmentTrackingInfoUpdateV2Payload = (obj?: { __typename?: any } | null): obj is FulfillmentTrackingInfoUpdateV2Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFulfillmentTrackingInfoUpdateV2Payload"')
      return FulfillmentTrackingInfoUpdateV2Payload_possibleTypes.includes(obj.__typename)
    }
    


    const FunctionsAppBridge_possibleTypes: string[] = ['FunctionsAppBridge']
    export const isFunctionsAppBridge = (obj?: { __typename?: any } | null): obj is FunctionsAppBridge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFunctionsAppBridge"')
      return FunctionsAppBridge_possibleTypes.includes(obj.__typename)
    }
    


    const FunctionsErrorHistory_possibleTypes: string[] = ['FunctionsErrorHistory']
    export const isFunctionsErrorHistory = (obj?: { __typename?: any } | null): obj is FunctionsErrorHistory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFunctionsErrorHistory"')
      return FunctionsErrorHistory_possibleTypes.includes(obj.__typename)
    }
    


    const GenericFile_possibleTypes: string[] = ['GenericFile']
    export const isGenericFile = (obj?: { __typename?: any } | null): obj is GenericFile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGenericFile"')
      return GenericFile_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCard_possibleTypes: string[] = ['GiftCard']
    export const isGiftCard = (obj?: { __typename?: any } | null): obj is GiftCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCard"')
      return GiftCard_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardConnection_possibleTypes: string[] = ['GiftCardConnection']
    export const isGiftCardConnection = (obj?: { __typename?: any } | null): obj is GiftCardConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardConnection"')
      return GiftCardConnection_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardCreatePayload_possibleTypes: string[] = ['GiftCardCreatePayload']
    export const isGiftCardCreatePayload = (obj?: { __typename?: any } | null): obj is GiftCardCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardCreatePayload"')
      return GiftCardCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardDisablePayload_possibleTypes: string[] = ['GiftCardDisablePayload']
    export const isGiftCardDisablePayload = (obj?: { __typename?: any } | null): obj is GiftCardDisablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardDisablePayload"')
      return GiftCardDisablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardEdge_possibleTypes: string[] = ['GiftCardEdge']
    export const isGiftCardEdge = (obj?: { __typename?: any } | null): obj is GiftCardEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardEdge"')
      return GiftCardEdge_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardSale_possibleTypes: string[] = ['GiftCardSale']
    export const isGiftCardSale = (obj?: { __typename?: any } | null): obj is GiftCardSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardSale"')
      return GiftCardSale_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardUpdatePayload_possibleTypes: string[] = ['GiftCardUpdatePayload']
    export const isGiftCardUpdatePayload = (obj?: { __typename?: any } | null): obj is GiftCardUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardUpdatePayload"')
      return GiftCardUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const GiftCardUserError_possibleTypes: string[] = ['GiftCardUserError']
    export const isGiftCardUserError = (obj?: { __typename?: any } | null): obj is GiftCardUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGiftCardUserError"')
      return GiftCardUserError_possibleTypes.includes(obj.__typename)
    }
    


    const HasEvents_possibleTypes: string[] = ['Company','CompanyLocation','Customer','DiscountAutomaticBxgy','DiscountAutomaticNode','DiscountCodeNode','DiscountNode','DraftOrder','Order','PriceRule']
    export const isHasEvents = (obj?: { __typename?: any } | null): obj is HasEvents => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHasEvents"')
      return HasEvents_possibleTypes.includes(obj.__typename)
    }
    


    const HasLocalizationExtensions_possibleTypes: string[] = ['DraftOrder','Order']
    export const isHasLocalizationExtensions = (obj?: { __typename?: any } | null): obj is HasLocalizationExtensions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHasLocalizationExtensions"')
      return HasLocalizationExtensions_possibleTypes.includes(obj.__typename)
    }
    


    const HasMetafieldDefinitions_possibleTypes: string[] = ['Collection','Company','CompanyLocation','Customer','DeliveryCustomization','DiscountAutomaticNode','DiscountCodeNode','DiscountNode','Location','Market','Order','PaymentCustomization','Product','ProductVariant']
    export const isHasMetafieldDefinitions = (obj?: { __typename?: any } | null): obj is HasMetafieldDefinitions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHasMetafieldDefinitions"')
      return HasMetafieldDefinitions_possibleTypes.includes(obj.__typename)
    }
    


    const HasMetafields_possibleTypes: string[] = ['AppInstallation','CartTransform','Collection','Company','CompanyLocation','Customer','CustomerSegmentMember','DeliveryCustomization','DiscountAutomaticNode','DiscountCodeNode','DiscountNode','DraftOrder','Image','Location','Market','MediaImage','Order','PaymentCustomization','Product','ProductVariant','Shop']
    export const isHasMetafields = (obj?: { __typename?: any } | null): obj is HasMetafields => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHasMetafields"')
      return HasMetafields_possibleTypes.includes(obj.__typename)
    }
    


    const HasPublishedTranslations_possibleTypes: string[] = ['Collection','Link','OnlineStoreArticle','OnlineStoreBlog','OnlineStorePage','Product','ProductOption','ProductVariant','SellingPlan','SellingPlanGroup','Shop','ShopPolicy']
    export const isHasPublishedTranslations = (obj?: { __typename?: any } | null): obj is HasPublishedTranslations => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHasPublishedTranslations"')
      return HasPublishedTranslations_possibleTypes.includes(obj.__typename)
    }
    


    const Image_possibleTypes: string[] = ['Image']
    export const isImage = (obj?: { __typename?: any } | null): obj is Image => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImage"')
      return Image_possibleTypes.includes(obj.__typename)
    }
    


    const ImageConnection_possibleTypes: string[] = ['ImageConnection']
    export const isImageConnection = (obj?: { __typename?: any } | null): obj is ImageConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImageConnection"')
      return ImageConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ImageEdge_possibleTypes: string[] = ['ImageEdge']
    export const isImageEdge = (obj?: { __typename?: any } | null): obj is ImageEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImageEdge"')
      return ImageEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ImageUploadParameter_possibleTypes: string[] = ['ImageUploadParameter']
    export const isImageUploadParameter = (obj?: { __typename?: any } | null): obj is ImageUploadParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImageUploadParameter"')
      return ImageUploadParameter_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryActivatePayload_possibleTypes: string[] = ['InventoryActivatePayload']
    export const isInventoryActivatePayload = (obj?: { __typename?: any } | null): obj is InventoryActivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryActivatePayload"')
      return InventoryActivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryAdjustQuantitiesPayload_possibleTypes: string[] = ['InventoryAdjustQuantitiesPayload']
    export const isInventoryAdjustQuantitiesPayload = (obj?: { __typename?: any } | null): obj is InventoryAdjustQuantitiesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryAdjustQuantitiesPayload"')
      return InventoryAdjustQuantitiesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryAdjustQuantitiesUserError_possibleTypes: string[] = ['InventoryAdjustQuantitiesUserError']
    export const isInventoryAdjustQuantitiesUserError = (obj?: { __typename?: any } | null): obj is InventoryAdjustQuantitiesUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryAdjustQuantitiesUserError"')
      return InventoryAdjustQuantitiesUserError_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryAdjustQuantityPayload_possibleTypes: string[] = ['InventoryAdjustQuantityPayload']
    export const isInventoryAdjustQuantityPayload = (obj?: { __typename?: any } | null): obj is InventoryAdjustQuantityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryAdjustQuantityPayload"')
      return InventoryAdjustQuantityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryAdjustmentGroup_possibleTypes: string[] = ['InventoryAdjustmentGroup']
    export const isInventoryAdjustmentGroup = (obj?: { __typename?: any } | null): obj is InventoryAdjustmentGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryAdjustmentGroup"')
      return InventoryAdjustmentGroup_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryBulkAdjustQuantityAtLocationPayload_possibleTypes: string[] = ['InventoryBulkAdjustQuantityAtLocationPayload']
    export const isInventoryBulkAdjustQuantityAtLocationPayload = (obj?: { __typename?: any } | null): obj is InventoryBulkAdjustQuantityAtLocationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryBulkAdjustQuantityAtLocationPayload"')
      return InventoryBulkAdjustQuantityAtLocationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryBulkToggleActivationPayload_possibleTypes: string[] = ['InventoryBulkToggleActivationPayload']
    export const isInventoryBulkToggleActivationPayload = (obj?: { __typename?: any } | null): obj is InventoryBulkToggleActivationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryBulkToggleActivationPayload"')
      return InventoryBulkToggleActivationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryBulkToggleActivationUserError_possibleTypes: string[] = ['InventoryBulkToggleActivationUserError']
    export const isInventoryBulkToggleActivationUserError = (obj?: { __typename?: any } | null): obj is InventoryBulkToggleActivationUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryBulkToggleActivationUserError"')
      return InventoryBulkToggleActivationUserError_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryChange_possibleTypes: string[] = ['InventoryChange']
    export const isInventoryChange = (obj?: { __typename?: any } | null): obj is InventoryChange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryChange"')
      return InventoryChange_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryDeactivatePayload_possibleTypes: string[] = ['InventoryDeactivatePayload']
    export const isInventoryDeactivatePayload = (obj?: { __typename?: any } | null): obj is InventoryDeactivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryDeactivatePayload"')
      return InventoryDeactivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryItem_possibleTypes: string[] = ['InventoryItem']
    export const isInventoryItem = (obj?: { __typename?: any } | null): obj is InventoryItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryItem"')
      return InventoryItem_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryItemConnection_possibleTypes: string[] = ['InventoryItemConnection']
    export const isInventoryItemConnection = (obj?: { __typename?: any } | null): obj is InventoryItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryItemConnection"')
      return InventoryItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryItemEdge_possibleTypes: string[] = ['InventoryItemEdge']
    export const isInventoryItemEdge = (obj?: { __typename?: any } | null): obj is InventoryItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryItemEdge"')
      return InventoryItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryItemUpdatePayload_possibleTypes: string[] = ['InventoryItemUpdatePayload']
    export const isInventoryItemUpdatePayload = (obj?: { __typename?: any } | null): obj is InventoryItemUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryItemUpdatePayload"')
      return InventoryItemUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryLevel_possibleTypes: string[] = ['InventoryLevel']
    export const isInventoryLevel = (obj?: { __typename?: any } | null): obj is InventoryLevel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryLevel"')
      return InventoryLevel_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryLevelConnection_possibleTypes: string[] = ['InventoryLevelConnection']
    export const isInventoryLevelConnection = (obj?: { __typename?: any } | null): obj is InventoryLevelConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryLevelConnection"')
      return InventoryLevelConnection_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryLevelEdge_possibleTypes: string[] = ['InventoryLevelEdge']
    export const isInventoryLevelEdge = (obj?: { __typename?: any } | null): obj is InventoryLevelEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryLevelEdge"')
      return InventoryLevelEdge_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryMoveQuantitiesPayload_possibleTypes: string[] = ['InventoryMoveQuantitiesPayload']
    export const isInventoryMoveQuantitiesPayload = (obj?: { __typename?: any } | null): obj is InventoryMoveQuantitiesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryMoveQuantitiesPayload"')
      return InventoryMoveQuantitiesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryMoveQuantitiesUserError_possibleTypes: string[] = ['InventoryMoveQuantitiesUserError']
    export const isInventoryMoveQuantitiesUserError = (obj?: { __typename?: any } | null): obj is InventoryMoveQuantitiesUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryMoveQuantitiesUserError"')
      return InventoryMoveQuantitiesUserError_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryProperties_possibleTypes: string[] = ['InventoryProperties']
    export const isInventoryProperties = (obj?: { __typename?: any } | null): obj is InventoryProperties => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryProperties"')
      return InventoryProperties_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryQuantity_possibleTypes: string[] = ['InventoryQuantity']
    export const isInventoryQuantity = (obj?: { __typename?: any } | null): obj is InventoryQuantity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryQuantity"')
      return InventoryQuantity_possibleTypes.includes(obj.__typename)
    }
    


    const InventoryQuantityName_possibleTypes: string[] = ['InventoryQuantityName']
    export const isInventoryQuantityName = (obj?: { __typename?: any } | null): obj is InventoryQuantityName => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventoryQuantityName"')
      return InventoryQuantityName_possibleTypes.includes(obj.__typename)
    }
    


    const InventorySetOnHandQuantitiesPayload_possibleTypes: string[] = ['InventorySetOnHandQuantitiesPayload']
    export const isInventorySetOnHandQuantitiesPayload = (obj?: { __typename?: any } | null): obj is InventorySetOnHandQuantitiesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventorySetOnHandQuantitiesPayload"')
      return InventorySetOnHandQuantitiesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const InventorySetOnHandQuantitiesUserError_possibleTypes: string[] = ['InventorySetOnHandQuantitiesUserError']
    export const isInventorySetOnHandQuantitiesUserError = (obj?: { __typename?: any } | null): obj is InventorySetOnHandQuantitiesUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInventorySetOnHandQuantitiesUserError"')
      return InventorySetOnHandQuantitiesUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Job_possibleTypes: string[] = ['Job']
    export const isJob = (obj?: { __typename?: any } | null): obj is Job => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isJob"')
      return Job_possibleTypes.includes(obj.__typename)
    }
    


    const JobResult_possibleTypes: string[] = ['CustomerSegmentMembersQuery']
    export const isJobResult = (obj?: { __typename?: any } | null): obj is JobResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isJobResult"')
      return JobResult_possibleTypes.includes(obj.__typename)
    }
    


    const LegacyInteroperability_possibleTypes: string[] = ['Customer','DraftOrder','Fulfillment','InventoryItem','Location','MarketingEvent','Metafield','MetafieldStorefrontVisibility','Order','PriceRule','Product','ProductVariant','Refund','SavedSearch','ScriptTag','ShopifyPaymentsDispute','ShopifyPaymentsPayout','WebhookSubscription']
    export const isLegacyInteroperability = (obj?: { __typename?: any } | null): obj is LegacyInteroperability => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLegacyInteroperability"')
      return LegacyInteroperability_possibleTypes.includes(obj.__typename)
    }
    


    const LimitedPendingOrderCount_possibleTypes: string[] = ['LimitedPendingOrderCount']
    export const isLimitedPendingOrderCount = (obj?: { __typename?: any } | null): obj is LimitedPendingOrderCount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLimitedPendingOrderCount"')
      return LimitedPendingOrderCount_possibleTypes.includes(obj.__typename)
    }
    


    const LineItem_possibleTypes: string[] = ['LineItem']
    export const isLineItem = (obj?: { __typename?: any } | null): obj is LineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItem"')
      return LineItem_possibleTypes.includes(obj.__typename)
    }
    


    const LineItemConnection_possibleTypes: string[] = ['LineItemConnection']
    export const isLineItemConnection = (obj?: { __typename?: any } | null): obj is LineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItemConnection"')
      return LineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const LineItemEdge_possibleTypes: string[] = ['LineItemEdge']
    export const isLineItemEdge = (obj?: { __typename?: any } | null): obj is LineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItemEdge"')
      return LineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const LineItemMutable_possibleTypes: string[] = ['LineItemMutable']
    export const isLineItemMutable = (obj?: { __typename?: any } | null): obj is LineItemMutable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItemMutable"')
      return LineItemMutable_possibleTypes.includes(obj.__typename)
    }
    


    const LineItemMutableConnection_possibleTypes: string[] = ['LineItemMutableConnection']
    export const isLineItemMutableConnection = (obj?: { __typename?: any } | null): obj is LineItemMutableConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItemMutableConnection"')
      return LineItemMutableConnection_possibleTypes.includes(obj.__typename)
    }
    


    const LineItemMutableEdge_possibleTypes: string[] = ['LineItemMutableEdge']
    export const isLineItemMutableEdge = (obj?: { __typename?: any } | null): obj is LineItemMutableEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItemMutableEdge"')
      return LineItemMutableEdge_possibleTypes.includes(obj.__typename)
    }
    


    const LineItemSellingPlan_possibleTypes: string[] = ['LineItemSellingPlan']
    export const isLineItemSellingPlan = (obj?: { __typename?: any } | null): obj is LineItemSellingPlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineItemSellingPlan"')
      return LineItemSellingPlan_possibleTypes.includes(obj.__typename)
    }
    


    const Link_possibleTypes: string[] = ['Link']
    export const isLink = (obj?: { __typename?: any } | null): obj is Link => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLink"')
      return Link_possibleTypes.includes(obj.__typename)
    }
    


    const Locale_possibleTypes: string[] = ['Locale']
    export const isLocale = (obj?: { __typename?: any } | null): obj is Locale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocale"')
      return Locale_possibleTypes.includes(obj.__typename)
    }
    


    const LocalizationExtension_possibleTypes: string[] = ['LocalizationExtension']
    export const isLocalizationExtension = (obj?: { __typename?: any } | null): obj is LocalizationExtension => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocalizationExtension"')
      return LocalizationExtension_possibleTypes.includes(obj.__typename)
    }
    


    const LocalizationExtensionConnection_possibleTypes: string[] = ['LocalizationExtensionConnection']
    export const isLocalizationExtensionConnection = (obj?: { __typename?: any } | null): obj is LocalizationExtensionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocalizationExtensionConnection"')
      return LocalizationExtensionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const LocalizationExtensionEdge_possibleTypes: string[] = ['LocalizationExtensionEdge']
    export const isLocalizationExtensionEdge = (obj?: { __typename?: any } | null): obj is LocalizationExtensionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocalizationExtensionEdge"')
      return LocalizationExtensionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Location_possibleTypes: string[] = ['Location']
    export const isLocation = (obj?: { __typename?: any } | null): obj is Location => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocation"')
      return Location_possibleTypes.includes(obj.__typename)
    }
    


    const LocationActivatePayload_possibleTypes: string[] = ['LocationActivatePayload']
    export const isLocationActivatePayload = (obj?: { __typename?: any } | null): obj is LocationActivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationActivatePayload"')
      return LocationActivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationActivateUserError_possibleTypes: string[] = ['LocationActivateUserError']
    export const isLocationActivateUserError = (obj?: { __typename?: any } | null): obj is LocationActivateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationActivateUserError"')
      return LocationActivateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const LocationAddPayload_possibleTypes: string[] = ['LocationAddPayload']
    export const isLocationAddPayload = (obj?: { __typename?: any } | null): obj is LocationAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationAddPayload"')
      return LocationAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationAddUserError_possibleTypes: string[] = ['LocationAddUserError']
    export const isLocationAddUserError = (obj?: { __typename?: any } | null): obj is LocationAddUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationAddUserError"')
      return LocationAddUserError_possibleTypes.includes(obj.__typename)
    }
    


    const LocationAddress_possibleTypes: string[] = ['LocationAddress']
    export const isLocationAddress = (obj?: { __typename?: any } | null): obj is LocationAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationAddress"')
      return LocationAddress_possibleTypes.includes(obj.__typename)
    }
    


    const LocationConnection_possibleTypes: string[] = ['LocationConnection']
    export const isLocationConnection = (obj?: { __typename?: any } | null): obj is LocationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationConnection"')
      return LocationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const LocationDeactivatePayload_possibleTypes: string[] = ['LocationDeactivatePayload']
    export const isLocationDeactivatePayload = (obj?: { __typename?: any } | null): obj is LocationDeactivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationDeactivatePayload"')
      return LocationDeactivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationDeactivateUserError_possibleTypes: string[] = ['LocationDeactivateUserError']
    export const isLocationDeactivateUserError = (obj?: { __typename?: any } | null): obj is LocationDeactivateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationDeactivateUserError"')
      return LocationDeactivateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const LocationDeletePayload_possibleTypes: string[] = ['LocationDeletePayload']
    export const isLocationDeletePayload = (obj?: { __typename?: any } | null): obj is LocationDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationDeletePayload"')
      return LocationDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationDeleteUserError_possibleTypes: string[] = ['LocationDeleteUserError']
    export const isLocationDeleteUserError = (obj?: { __typename?: any } | null): obj is LocationDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationDeleteUserError"')
      return LocationDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const LocationEdge_possibleTypes: string[] = ['LocationEdge']
    export const isLocationEdge = (obj?: { __typename?: any } | null): obj is LocationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationEdge"')
      return LocationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const LocationEditPayload_possibleTypes: string[] = ['LocationEditPayload']
    export const isLocationEditPayload = (obj?: { __typename?: any } | null): obj is LocationEditPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationEditPayload"')
      return LocationEditPayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationEditUserError_possibleTypes: string[] = ['LocationEditUserError']
    export const isLocationEditUserError = (obj?: { __typename?: any } | null): obj is LocationEditUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationEditUserError"')
      return LocationEditUserError_possibleTypes.includes(obj.__typename)
    }
    


    const LocationLocalPickupDisablePayload_possibleTypes: string[] = ['LocationLocalPickupDisablePayload']
    export const isLocationLocalPickupDisablePayload = (obj?: { __typename?: any } | null): obj is LocationLocalPickupDisablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationLocalPickupDisablePayload"')
      return LocationLocalPickupDisablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationLocalPickupEnablePayload_possibleTypes: string[] = ['LocationLocalPickupEnablePayload']
    export const isLocationLocalPickupEnablePayload = (obj?: { __typename?: any } | null): obj is LocationLocalPickupEnablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationLocalPickupEnablePayload"')
      return LocationLocalPickupEnablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const LocationSuggestedAddress_possibleTypes: string[] = ['LocationSuggestedAddress']
    export const isLocationSuggestedAddress = (obj?: { __typename?: any } | null): obj is LocationSuggestedAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationSuggestedAddress"')
      return LocationSuggestedAddress_possibleTypes.includes(obj.__typename)
    }
    


    const MailingAddress_possibleTypes: string[] = ['MailingAddress']
    export const isMailingAddress = (obj?: { __typename?: any } | null): obj is MailingAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMailingAddress"')
      return MailingAddress_possibleTypes.includes(obj.__typename)
    }
    


    const MailingAddressConnection_possibleTypes: string[] = ['MailingAddressConnection']
    export const isMailingAddressConnection = (obj?: { __typename?: any } | null): obj is MailingAddressConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMailingAddressConnection"')
      return MailingAddressConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MailingAddressEdge_possibleTypes: string[] = ['MailingAddressEdge']
    export const isMailingAddressEdge = (obj?: { __typename?: any } | null): obj is MailingAddressEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMailingAddressEdge"')
      return MailingAddressEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ManualDiscountApplication_possibleTypes: string[] = ['ManualDiscountApplication']
    export const isManualDiscountApplication = (obj?: { __typename?: any } | null): obj is ManualDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isManualDiscountApplication"')
      return ManualDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const Market_possibleTypes: string[] = ['Market']
    export const isMarket = (obj?: { __typename?: any } | null): obj is Market => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarket"')
      return Market_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCatalog_possibleTypes: string[] = ['MarketCatalog']
    export const isMarketCatalog = (obj?: { __typename?: any } | null): obj is MarketCatalog => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCatalog"')
      return MarketCatalog_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCatalogConnection_possibleTypes: string[] = ['MarketCatalogConnection']
    export const isMarketCatalogConnection = (obj?: { __typename?: any } | null): obj is MarketCatalogConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCatalogConnection"')
      return MarketCatalogConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCatalogEdge_possibleTypes: string[] = ['MarketCatalogEdge']
    export const isMarketCatalogEdge = (obj?: { __typename?: any } | null): obj is MarketCatalogEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCatalogEdge"')
      return MarketCatalogEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MarketConnection_possibleTypes: string[] = ['MarketConnection']
    export const isMarketConnection = (obj?: { __typename?: any } | null): obj is MarketConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketConnection"')
      return MarketConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCreatePayload_possibleTypes: string[] = ['MarketCreatePayload']
    export const isMarketCreatePayload = (obj?: { __typename?: any } | null): obj is MarketCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCreatePayload"')
      return MarketCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCurrencySettings_possibleTypes: string[] = ['MarketCurrencySettings']
    export const isMarketCurrencySettings = (obj?: { __typename?: any } | null): obj is MarketCurrencySettings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCurrencySettings"')
      return MarketCurrencySettings_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCurrencySettingsUpdatePayload_possibleTypes: string[] = ['MarketCurrencySettingsUpdatePayload']
    export const isMarketCurrencySettingsUpdatePayload = (obj?: { __typename?: any } | null): obj is MarketCurrencySettingsUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCurrencySettingsUpdatePayload"')
      return MarketCurrencySettingsUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketCurrencySettingsUserError_possibleTypes: string[] = ['MarketCurrencySettingsUserError']
    export const isMarketCurrencySettingsUserError = (obj?: { __typename?: any } | null): obj is MarketCurrencySettingsUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketCurrencySettingsUserError"')
      return MarketCurrencySettingsUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MarketDeletePayload_possibleTypes: string[] = ['MarketDeletePayload']
    export const isMarketDeletePayload = (obj?: { __typename?: any } | null): obj is MarketDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketDeletePayload"')
      return MarketDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketEdge_possibleTypes: string[] = ['MarketEdge']
    export const isMarketEdge = (obj?: { __typename?: any } | null): obj is MarketEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketEdge"')
      return MarketEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalizableContent_possibleTypes: string[] = ['MarketLocalizableContent']
    export const isMarketLocalizableContent = (obj?: { __typename?: any } | null): obj is MarketLocalizableContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalizableContent"')
      return MarketLocalizableContent_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalizableResource_possibleTypes: string[] = ['MarketLocalizableResource']
    export const isMarketLocalizableResource = (obj?: { __typename?: any } | null): obj is MarketLocalizableResource => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalizableResource"')
      return MarketLocalizableResource_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalizableResourceConnection_possibleTypes: string[] = ['MarketLocalizableResourceConnection']
    export const isMarketLocalizableResourceConnection = (obj?: { __typename?: any } | null): obj is MarketLocalizableResourceConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalizableResourceConnection"')
      return MarketLocalizableResourceConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalizableResourceEdge_possibleTypes: string[] = ['MarketLocalizableResourceEdge']
    export const isMarketLocalizableResourceEdge = (obj?: { __typename?: any } | null): obj is MarketLocalizableResourceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalizableResourceEdge"')
      return MarketLocalizableResourceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalization_possibleTypes: string[] = ['MarketLocalization']
    export const isMarketLocalization = (obj?: { __typename?: any } | null): obj is MarketLocalization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalization"')
      return MarketLocalization_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalizationsRegisterPayload_possibleTypes: string[] = ['MarketLocalizationsRegisterPayload']
    export const isMarketLocalizationsRegisterPayload = (obj?: { __typename?: any } | null): obj is MarketLocalizationsRegisterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalizationsRegisterPayload"')
      return MarketLocalizationsRegisterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketLocalizationsRemovePayload_possibleTypes: string[] = ['MarketLocalizationsRemovePayload']
    export const isMarketLocalizationsRemovePayload = (obj?: { __typename?: any } | null): obj is MarketLocalizationsRemovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketLocalizationsRemovePayload"')
      return MarketLocalizationsRemovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketRegion_possibleTypes: string[] = ['MarketRegionCountry']
    export const isMarketRegion = (obj?: { __typename?: any } | null): obj is MarketRegion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketRegion"')
      return MarketRegion_possibleTypes.includes(obj.__typename)
    }
    


    const MarketRegionConnection_possibleTypes: string[] = ['MarketRegionConnection']
    export const isMarketRegionConnection = (obj?: { __typename?: any } | null): obj is MarketRegionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketRegionConnection"')
      return MarketRegionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MarketRegionCountry_possibleTypes: string[] = ['MarketRegionCountry']
    export const isMarketRegionCountry = (obj?: { __typename?: any } | null): obj is MarketRegionCountry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketRegionCountry"')
      return MarketRegionCountry_possibleTypes.includes(obj.__typename)
    }
    


    const MarketRegionDeletePayload_possibleTypes: string[] = ['MarketRegionDeletePayload']
    export const isMarketRegionDeletePayload = (obj?: { __typename?: any } | null): obj is MarketRegionDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketRegionDeletePayload"')
      return MarketRegionDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketRegionEdge_possibleTypes: string[] = ['MarketRegionEdge']
    export const isMarketRegionEdge = (obj?: { __typename?: any } | null): obj is MarketRegionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketRegionEdge"')
      return MarketRegionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MarketRegionsCreatePayload_possibleTypes: string[] = ['MarketRegionsCreatePayload']
    export const isMarketRegionsCreatePayload = (obj?: { __typename?: any } | null): obj is MarketRegionsCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketRegionsCreatePayload"')
      return MarketRegionsCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketUpdatePayload_possibleTypes: string[] = ['MarketUpdatePayload']
    export const isMarketUpdatePayload = (obj?: { __typename?: any } | null): obj is MarketUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketUpdatePayload"')
      return MarketUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketUserError_possibleTypes: string[] = ['MarketUserError']
    export const isMarketUserError = (obj?: { __typename?: any } | null): obj is MarketUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketUserError"')
      return MarketUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MarketWebPresence_possibleTypes: string[] = ['MarketWebPresence']
    export const isMarketWebPresence = (obj?: { __typename?: any } | null): obj is MarketWebPresence => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketWebPresence"')
      return MarketWebPresence_possibleTypes.includes(obj.__typename)
    }
    


    const MarketWebPresenceCreatePayload_possibleTypes: string[] = ['MarketWebPresenceCreatePayload']
    export const isMarketWebPresenceCreatePayload = (obj?: { __typename?: any } | null): obj is MarketWebPresenceCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketWebPresenceCreatePayload"')
      return MarketWebPresenceCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketWebPresenceDeletePayload_possibleTypes: string[] = ['MarketWebPresenceDeletePayload']
    export const isMarketWebPresenceDeletePayload = (obj?: { __typename?: any } | null): obj is MarketWebPresenceDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketWebPresenceDeletePayload"')
      return MarketWebPresenceDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketWebPresenceRootUrl_possibleTypes: string[] = ['MarketWebPresenceRootUrl']
    export const isMarketWebPresenceRootUrl = (obj?: { __typename?: any } | null): obj is MarketWebPresenceRootUrl => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketWebPresenceRootUrl"')
      return MarketWebPresenceRootUrl_possibleTypes.includes(obj.__typename)
    }
    


    const MarketWebPresenceUpdatePayload_possibleTypes: string[] = ['MarketWebPresenceUpdatePayload']
    export const isMarketWebPresenceUpdatePayload = (obj?: { __typename?: any } | null): obj is MarketWebPresenceUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketWebPresenceUpdatePayload"')
      return MarketWebPresenceUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivity_possibleTypes: string[] = ['MarketingActivity']
    export const isMarketingActivity = (obj?: { __typename?: any } | null): obj is MarketingActivity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivity"')
      return MarketingActivity_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityConnection_possibleTypes: string[] = ['MarketingActivityConnection']
    export const isMarketingActivityConnection = (obj?: { __typename?: any } | null): obj is MarketingActivityConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityConnection"')
      return MarketingActivityConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityCreateExternalPayload_possibleTypes: string[] = ['MarketingActivityCreateExternalPayload']
    export const isMarketingActivityCreateExternalPayload = (obj?: { __typename?: any } | null): obj is MarketingActivityCreateExternalPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityCreateExternalPayload"')
      return MarketingActivityCreateExternalPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityCreatePayload_possibleTypes: string[] = ['MarketingActivityCreatePayload']
    export const isMarketingActivityCreatePayload = (obj?: { __typename?: any } | null): obj is MarketingActivityCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityCreatePayload"')
      return MarketingActivityCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityEdge_possibleTypes: string[] = ['MarketingActivityEdge']
    export const isMarketingActivityEdge = (obj?: { __typename?: any } | null): obj is MarketingActivityEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityEdge"')
      return MarketingActivityEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityExtensionAppErrors_possibleTypes: string[] = ['MarketingActivityExtensionAppErrors']
    export const isMarketingActivityExtensionAppErrors = (obj?: { __typename?: any } | null): obj is MarketingActivityExtensionAppErrors => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityExtensionAppErrors"')
      return MarketingActivityExtensionAppErrors_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityUpdateExternalPayload_possibleTypes: string[] = ['MarketingActivityUpdateExternalPayload']
    export const isMarketingActivityUpdateExternalPayload = (obj?: { __typename?: any } | null): obj is MarketingActivityUpdateExternalPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityUpdateExternalPayload"')
      return MarketingActivityUpdateExternalPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityUpdatePayload_possibleTypes: string[] = ['MarketingActivityUpdatePayload']
    export const isMarketingActivityUpdatePayload = (obj?: { __typename?: any } | null): obj is MarketingActivityUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityUpdatePayload"')
      return MarketingActivityUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingActivityUserError_possibleTypes: string[] = ['MarketingActivityUserError']
    export const isMarketingActivityUserError = (obj?: { __typename?: any } | null): obj is MarketingActivityUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingActivityUserError"')
      return MarketingActivityUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingBudget_possibleTypes: string[] = ['MarketingBudget']
    export const isMarketingBudget = (obj?: { __typename?: any } | null): obj is MarketingBudget => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingBudget"')
      return MarketingBudget_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingEngagement_possibleTypes: string[] = ['MarketingEngagement']
    export const isMarketingEngagement = (obj?: { __typename?: any } | null): obj is MarketingEngagement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingEngagement"')
      return MarketingEngagement_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingEngagementCreatePayload_possibleTypes: string[] = ['MarketingEngagementCreatePayload']
    export const isMarketingEngagementCreatePayload = (obj?: { __typename?: any } | null): obj is MarketingEngagementCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingEngagementCreatePayload"')
      return MarketingEngagementCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingEvent_possibleTypes: string[] = ['MarketingEvent']
    export const isMarketingEvent = (obj?: { __typename?: any } | null): obj is MarketingEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingEvent"')
      return MarketingEvent_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingEventConnection_possibleTypes: string[] = ['MarketingEventConnection']
    export const isMarketingEventConnection = (obj?: { __typename?: any } | null): obj is MarketingEventConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingEventConnection"')
      return MarketingEventConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MarketingEventEdge_possibleTypes: string[] = ['MarketingEventEdge']
    export const isMarketingEventEdge = (obj?: { __typename?: any } | null): obj is MarketingEventEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMarketingEventEdge"')
      return MarketingEventEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Media_possibleTypes: string[] = ['ExternalVideo','MediaImage','Model3d','Video']
    export const isMedia = (obj?: { __typename?: any } | null): obj is Media => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMedia"')
      return Media_possibleTypes.includes(obj.__typename)
    }
    


    const MediaConnection_possibleTypes: string[] = ['MediaConnection']
    export const isMediaConnection = (obj?: { __typename?: any } | null): obj is MediaConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaConnection"')
      return MediaConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MediaEdge_possibleTypes: string[] = ['MediaEdge']
    export const isMediaEdge = (obj?: { __typename?: any } | null): obj is MediaEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaEdge"')
      return MediaEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MediaError_possibleTypes: string[] = ['MediaError']
    export const isMediaError = (obj?: { __typename?: any } | null): obj is MediaError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaError"')
      return MediaError_possibleTypes.includes(obj.__typename)
    }
    


    const MediaImage_possibleTypes: string[] = ['MediaImage']
    export const isMediaImage = (obj?: { __typename?: any } | null): obj is MediaImage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaImage"')
      return MediaImage_possibleTypes.includes(obj.__typename)
    }
    


    const MediaImageOriginalSource_possibleTypes: string[] = ['MediaImageOriginalSource']
    export const isMediaImageOriginalSource = (obj?: { __typename?: any } | null): obj is MediaImageOriginalSource => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaImageOriginalSource"')
      return MediaImageOriginalSource_possibleTypes.includes(obj.__typename)
    }
    


    const MediaPreviewImage_possibleTypes: string[] = ['MediaPreviewImage']
    export const isMediaPreviewImage = (obj?: { __typename?: any } | null): obj is MediaPreviewImage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaPreviewImage"')
      return MediaPreviewImage_possibleTypes.includes(obj.__typename)
    }
    


    const MediaUserError_possibleTypes: string[] = ['MediaUserError']
    export const isMediaUserError = (obj?: { __typename?: any } | null): obj is MediaUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaUserError"')
      return MediaUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MediaWarning_possibleTypes: string[] = ['MediaWarning']
    export const isMediaWarning = (obj?: { __typename?: any } | null): obj is MediaWarning => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMediaWarning"')
      return MediaWarning_possibleTypes.includes(obj.__typename)
    }
    


    const MerchantApprovalSignals_possibleTypes: string[] = ['MerchantApprovalSignals']
    export const isMerchantApprovalSignals = (obj?: { __typename?: any } | null): obj is MerchantApprovalSignals => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMerchantApprovalSignals"')
      return MerchantApprovalSignals_possibleTypes.includes(obj.__typename)
    }
    


    const Metafield_possibleTypes: string[] = ['Metafield']
    export const isMetafield = (obj?: { __typename?: any } | null): obj is Metafield => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafield"')
      return Metafield_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldAccess_possibleTypes: string[] = ['MetafieldAccess']
    export const isMetafieldAccess = (obj?: { __typename?: any } | null): obj is MetafieldAccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldAccess"')
      return MetafieldAccess_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldConnection_possibleTypes: string[] = ['MetafieldConnection']
    export const isMetafieldConnection = (obj?: { __typename?: any } | null): obj is MetafieldConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldConnection"')
      return MetafieldConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinition_possibleTypes: string[] = ['MetafieldDefinition']
    export const isMetafieldDefinition = (obj?: { __typename?: any } | null): obj is MetafieldDefinition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinition"')
      return MetafieldDefinition_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionConnection_possibleTypes: string[] = ['MetafieldDefinitionConnection']
    export const isMetafieldDefinitionConnection = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionConnection"')
      return MetafieldDefinitionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionCreatePayload_possibleTypes: string[] = ['MetafieldDefinitionCreatePayload']
    export const isMetafieldDefinitionCreatePayload = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionCreatePayload"')
      return MetafieldDefinitionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionCreateUserError_possibleTypes: string[] = ['MetafieldDefinitionCreateUserError']
    export const isMetafieldDefinitionCreateUserError = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionCreateUserError"')
      return MetafieldDefinitionCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionDeletePayload_possibleTypes: string[] = ['MetafieldDefinitionDeletePayload']
    export const isMetafieldDefinitionDeletePayload = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionDeletePayload"')
      return MetafieldDefinitionDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionDeleteUserError_possibleTypes: string[] = ['MetafieldDefinitionDeleteUserError']
    export const isMetafieldDefinitionDeleteUserError = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionDeleteUserError"')
      return MetafieldDefinitionDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionEdge_possibleTypes: string[] = ['MetafieldDefinitionEdge']
    export const isMetafieldDefinitionEdge = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionEdge"')
      return MetafieldDefinitionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionPinPayload_possibleTypes: string[] = ['MetafieldDefinitionPinPayload']
    export const isMetafieldDefinitionPinPayload = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionPinPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionPinPayload"')
      return MetafieldDefinitionPinPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionPinUserError_possibleTypes: string[] = ['MetafieldDefinitionPinUserError']
    export const isMetafieldDefinitionPinUserError = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionPinUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionPinUserError"')
      return MetafieldDefinitionPinUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionSupportedValidation_possibleTypes: string[] = ['MetafieldDefinitionSupportedValidation']
    export const isMetafieldDefinitionSupportedValidation = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionSupportedValidation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionSupportedValidation"')
      return MetafieldDefinitionSupportedValidation_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionType_possibleTypes: string[] = ['MetafieldDefinitionType']
    export const isMetafieldDefinitionType = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionType"')
      return MetafieldDefinitionType_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionUnpinPayload_possibleTypes: string[] = ['MetafieldDefinitionUnpinPayload']
    export const isMetafieldDefinitionUnpinPayload = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionUnpinPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionUnpinPayload"')
      return MetafieldDefinitionUnpinPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionUnpinUserError_possibleTypes: string[] = ['MetafieldDefinitionUnpinUserError']
    export const isMetafieldDefinitionUnpinUserError = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionUnpinUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionUnpinUserError"')
      return MetafieldDefinitionUnpinUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionUpdatePayload_possibleTypes: string[] = ['MetafieldDefinitionUpdatePayload']
    export const isMetafieldDefinitionUpdatePayload = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionUpdatePayload"')
      return MetafieldDefinitionUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionUpdateUserError_possibleTypes: string[] = ['MetafieldDefinitionUpdateUserError']
    export const isMetafieldDefinitionUpdateUserError = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionUpdateUserError"')
      return MetafieldDefinitionUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDefinitionValidation_possibleTypes: string[] = ['MetafieldDefinitionValidation']
    export const isMetafieldDefinitionValidation = (obj?: { __typename?: any } | null): obj is MetafieldDefinitionValidation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDefinitionValidation"')
      return MetafieldDefinitionValidation_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldDeletePayload_possibleTypes: string[] = ['MetafieldDeletePayload']
    export const isMetafieldDeletePayload = (obj?: { __typename?: any } | null): obj is MetafieldDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldDeletePayload"')
      return MetafieldDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldEdge_possibleTypes: string[] = ['MetafieldEdge']
    export const isMetafieldEdge = (obj?: { __typename?: any } | null): obj is MetafieldEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldEdge"')
      return MetafieldEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldReference_possibleTypes: string[] = ['Collection','GenericFile','MediaImage','Metaobject','OnlineStorePage','Product','ProductVariant','Video']
    export const isMetafieldReference = (obj?: { __typename?: any } | null): obj is MetafieldReference => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldReference"')
      return MetafieldReference_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldReferenceConnection_possibleTypes: string[] = ['MetafieldReferenceConnection']
    export const isMetafieldReferenceConnection = (obj?: { __typename?: any } | null): obj is MetafieldReferenceConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldReferenceConnection"')
      return MetafieldReferenceConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldReferenceEdge_possibleTypes: string[] = ['MetafieldReferenceEdge']
    export const isMetafieldReferenceEdge = (obj?: { __typename?: any } | null): obj is MetafieldReferenceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldReferenceEdge"')
      return MetafieldReferenceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldReferencer_possibleTypes: string[] = ['AppInstallation','Collection','Customer','DeliveryCustomization','DiscountAutomaticNode','DiscountCodeNode','DiscountNode','DraftOrder','FulfillmentOrder','Location','Market','Metaobject','OnlineStoreArticle','OnlineStoreBlog','OnlineStorePage','Order','PaymentCustomization','Product','ProductVariant','Shop']
    export const isMetafieldReferencer = (obj?: { __typename?: any } | null): obj is MetafieldReferencer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldReferencer"')
      return MetafieldReferencer_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldRelation_possibleTypes: string[] = ['MetafieldRelation']
    export const isMetafieldRelation = (obj?: { __typename?: any } | null): obj is MetafieldRelation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldRelation"')
      return MetafieldRelation_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldRelationConnection_possibleTypes: string[] = ['MetafieldRelationConnection']
    export const isMetafieldRelationConnection = (obj?: { __typename?: any } | null): obj is MetafieldRelationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldRelationConnection"')
      return MetafieldRelationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldRelationEdge_possibleTypes: string[] = ['MetafieldRelationEdge']
    export const isMetafieldRelationEdge = (obj?: { __typename?: any } | null): obj is MetafieldRelationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldRelationEdge"')
      return MetafieldRelationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldStorefrontVisibility_possibleTypes: string[] = ['MetafieldStorefrontVisibility']
    export const isMetafieldStorefrontVisibility = (obj?: { __typename?: any } | null): obj is MetafieldStorefrontVisibility => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldStorefrontVisibility"')
      return MetafieldStorefrontVisibility_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldStorefrontVisibilityConnection_possibleTypes: string[] = ['MetafieldStorefrontVisibilityConnection']
    export const isMetafieldStorefrontVisibilityConnection = (obj?: { __typename?: any } | null): obj is MetafieldStorefrontVisibilityConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldStorefrontVisibilityConnection"')
      return MetafieldStorefrontVisibilityConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldStorefrontVisibilityCreatePayload_possibleTypes: string[] = ['MetafieldStorefrontVisibilityCreatePayload']
    export const isMetafieldStorefrontVisibilityCreatePayload = (obj?: { __typename?: any } | null): obj is MetafieldStorefrontVisibilityCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldStorefrontVisibilityCreatePayload"')
      return MetafieldStorefrontVisibilityCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldStorefrontVisibilityDeletePayload_possibleTypes: string[] = ['MetafieldStorefrontVisibilityDeletePayload']
    export const isMetafieldStorefrontVisibilityDeletePayload = (obj?: { __typename?: any } | null): obj is MetafieldStorefrontVisibilityDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldStorefrontVisibilityDeletePayload"')
      return MetafieldStorefrontVisibilityDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldStorefrontVisibilityEdge_possibleTypes: string[] = ['MetafieldStorefrontVisibilityEdge']
    export const isMetafieldStorefrontVisibilityEdge = (obj?: { __typename?: any } | null): obj is MetafieldStorefrontVisibilityEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldStorefrontVisibilityEdge"')
      return MetafieldStorefrontVisibilityEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldsSetPayload_possibleTypes: string[] = ['MetafieldsSetPayload']
    export const isMetafieldsSetPayload = (obj?: { __typename?: any } | null): obj is MetafieldsSetPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldsSetPayload"')
      return MetafieldsSetPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetafieldsSetUserError_possibleTypes: string[] = ['MetafieldsSetUserError']
    export const isMetafieldsSetUserError = (obj?: { __typename?: any } | null): obj is MetafieldsSetUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetafieldsSetUserError"')
      return MetafieldsSetUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Metaobject_possibleTypes: string[] = ['Metaobject']
    export const isMetaobject = (obj?: { __typename?: any } | null): obj is Metaobject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobject"')
      return Metaobject_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectAccess_possibleTypes: string[] = ['MetaobjectAccess']
    export const isMetaobjectAccess = (obj?: { __typename?: any } | null): obj is MetaobjectAccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectAccess"')
      return MetaobjectAccess_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectBulkDeletePayload_possibleTypes: string[] = ['MetaobjectBulkDeletePayload']
    export const isMetaobjectBulkDeletePayload = (obj?: { __typename?: any } | null): obj is MetaobjectBulkDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectBulkDeletePayload"')
      return MetaobjectBulkDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectCapabilities_possibleTypes: string[] = ['MetaobjectCapabilities']
    export const isMetaobjectCapabilities = (obj?: { __typename?: any } | null): obj is MetaobjectCapabilities => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectCapabilities"')
      return MetaobjectCapabilities_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectCapabilitiesPublishable_possibleTypes: string[] = ['MetaobjectCapabilitiesPublishable']
    export const isMetaobjectCapabilitiesPublishable = (obj?: { __typename?: any } | null): obj is MetaobjectCapabilitiesPublishable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectCapabilitiesPublishable"')
      return MetaobjectCapabilitiesPublishable_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectCapabilitiesTranslatable_possibleTypes: string[] = ['MetaobjectCapabilitiesTranslatable']
    export const isMetaobjectCapabilitiesTranslatable = (obj?: { __typename?: any } | null): obj is MetaobjectCapabilitiesTranslatable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectCapabilitiesTranslatable"')
      return MetaobjectCapabilitiesTranslatable_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectCapabilityData_possibleTypes: string[] = ['MetaobjectCapabilityData']
    export const isMetaobjectCapabilityData = (obj?: { __typename?: any } | null): obj is MetaobjectCapabilityData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectCapabilityData"')
      return MetaobjectCapabilityData_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectCapabilityDataPublishable_possibleTypes: string[] = ['MetaobjectCapabilityDataPublishable']
    export const isMetaobjectCapabilityDataPublishable = (obj?: { __typename?: any } | null): obj is MetaobjectCapabilityDataPublishable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectCapabilityDataPublishable"')
      return MetaobjectCapabilityDataPublishable_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectConnection_possibleTypes: string[] = ['MetaobjectConnection']
    export const isMetaobjectConnection = (obj?: { __typename?: any } | null): obj is MetaobjectConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectConnection"')
      return MetaobjectConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectCreatePayload_possibleTypes: string[] = ['MetaobjectCreatePayload']
    export const isMetaobjectCreatePayload = (obj?: { __typename?: any } | null): obj is MetaobjectCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectCreatePayload"')
      return MetaobjectCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDefinition_possibleTypes: string[] = ['MetaobjectDefinition']
    export const isMetaobjectDefinition = (obj?: { __typename?: any } | null): obj is MetaobjectDefinition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDefinition"')
      return MetaobjectDefinition_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDefinitionConnection_possibleTypes: string[] = ['MetaobjectDefinitionConnection']
    export const isMetaobjectDefinitionConnection = (obj?: { __typename?: any } | null): obj is MetaobjectDefinitionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDefinitionConnection"')
      return MetaobjectDefinitionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDefinitionCreatePayload_possibleTypes: string[] = ['MetaobjectDefinitionCreatePayload']
    export const isMetaobjectDefinitionCreatePayload = (obj?: { __typename?: any } | null): obj is MetaobjectDefinitionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDefinitionCreatePayload"')
      return MetaobjectDefinitionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDefinitionDeletePayload_possibleTypes: string[] = ['MetaobjectDefinitionDeletePayload']
    export const isMetaobjectDefinitionDeletePayload = (obj?: { __typename?: any } | null): obj is MetaobjectDefinitionDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDefinitionDeletePayload"')
      return MetaobjectDefinitionDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDefinitionEdge_possibleTypes: string[] = ['MetaobjectDefinitionEdge']
    export const isMetaobjectDefinitionEdge = (obj?: { __typename?: any } | null): obj is MetaobjectDefinitionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDefinitionEdge"')
      return MetaobjectDefinitionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDefinitionUpdatePayload_possibleTypes: string[] = ['MetaobjectDefinitionUpdatePayload']
    export const isMetaobjectDefinitionUpdatePayload = (obj?: { __typename?: any } | null): obj is MetaobjectDefinitionUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDefinitionUpdatePayload"')
      return MetaobjectDefinitionUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectDeletePayload_possibleTypes: string[] = ['MetaobjectDeletePayload']
    export const isMetaobjectDeletePayload = (obj?: { __typename?: any } | null): obj is MetaobjectDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectDeletePayload"')
      return MetaobjectDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectEdge_possibleTypes: string[] = ['MetaobjectEdge']
    export const isMetaobjectEdge = (obj?: { __typename?: any } | null): obj is MetaobjectEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectEdge"')
      return MetaobjectEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectField_possibleTypes: string[] = ['MetaobjectField']
    export const isMetaobjectField = (obj?: { __typename?: any } | null): obj is MetaobjectField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectField"')
      return MetaobjectField_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectFieldDefinition_possibleTypes: string[] = ['MetaobjectFieldDefinition']
    export const isMetaobjectFieldDefinition = (obj?: { __typename?: any } | null): obj is MetaobjectFieldDefinition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectFieldDefinition"')
      return MetaobjectFieldDefinition_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectUpdatePayload_possibleTypes: string[] = ['MetaobjectUpdatePayload']
    export const isMetaobjectUpdatePayload = (obj?: { __typename?: any } | null): obj is MetaobjectUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectUpdatePayload"')
      return MetaobjectUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectUpsertPayload_possibleTypes: string[] = ['MetaobjectUpsertPayload']
    export const isMetaobjectUpsertPayload = (obj?: { __typename?: any } | null): obj is MetaobjectUpsertPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectUpsertPayload"')
      return MetaobjectUpsertPayload_possibleTypes.includes(obj.__typename)
    }
    


    const MetaobjectUserError_possibleTypes: string[] = ['MetaobjectUserError']
    export const isMetaobjectUserError = (obj?: { __typename?: any } | null): obj is MetaobjectUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetaobjectUserError"')
      return MetaobjectUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Model3d_possibleTypes: string[] = ['Model3d']
    export const isModel3d = (obj?: { __typename?: any } | null): obj is Model3d => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isModel3d"')
      return Model3d_possibleTypes.includes(obj.__typename)
    }
    


    const Model3dBoundingBox_possibleTypes: string[] = ['Model3dBoundingBox']
    export const isModel3dBoundingBox = (obj?: { __typename?: any } | null): obj is Model3dBoundingBox => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isModel3dBoundingBox"')
      return Model3dBoundingBox_possibleTypes.includes(obj.__typename)
    }
    


    const Model3dSource_possibleTypes: string[] = ['Model3dSource']
    export const isModel3dSource = (obj?: { __typename?: any } | null): obj is Model3dSource => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isModel3dSource"')
      return Model3dSource_possibleTypes.includes(obj.__typename)
    }
    


    const MoneyBag_possibleTypes: string[] = ['MoneyBag']
    export const isMoneyBag = (obj?: { __typename?: any } | null): obj is MoneyBag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoneyBag"')
      return MoneyBag_possibleTypes.includes(obj.__typename)
    }
    


    const MoneyV2_possibleTypes: string[] = ['MoneyV2']
    export const isMoneyV2 = (obj?: { __typename?: any } | null): obj is MoneyV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMoneyV2"')
      return MoneyV2_possibleTypes.includes(obj.__typename)
    }
    


    const Mutation_possibleTypes: string[] = ['Mutation']
    export const isMutation = (obj?: { __typename?: any } | null): obj is Mutation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMutation"')
      return Mutation_possibleTypes.includes(obj.__typename)
    }
    


    const MutationsStagedUploadTargetGenerateUploadParameter_possibleTypes: string[] = ['MutationsStagedUploadTargetGenerateUploadParameter']
    export const isMutationsStagedUploadTargetGenerateUploadParameter = (obj?: { __typename?: any } | null): obj is MutationsStagedUploadTargetGenerateUploadParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMutationsStagedUploadTargetGenerateUploadParameter"')
      return MutationsStagedUploadTargetGenerateUploadParameter_possibleTypes.includes(obj.__typename)
    }
    


    const Navigable_possibleTypes: string[] = ['AbandonedCheckout','Company','CompanyLocation','DraftOrder','OnlineStoreArticle','OnlineStorePage','Product','ProductVariant']
    export const isNavigable = (obj?: { __typename?: any } | null): obj is Navigable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNavigable"')
      return Navigable_possibleTypes.includes(obj.__typename)
    }
    


    const NavigationItem_possibleTypes: string[] = ['NavigationItem']
    export const isNavigationItem = (obj?: { __typename?: any } | null): obj is NavigationItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNavigationItem"')
      return NavigationItem_possibleTypes.includes(obj.__typename)
    }
    


    const Node_possibleTypes: string[] = ['AbandonedCheckout','Abandonment','AddAllProductsOperation','AdditionalFee','App','AppCatalog','AppCredit','AppInstallation','AppPurchaseOneTime','AppRevenueAttributionRecord','AppSubscription','AppUsageRecord','BasicEvent','BulkOperation','CalculatedOrder','CartTransform','CatalogCsvOperation','Channel','ChannelDefinition','ChannelInformation','CheckoutProfile','Collection','CommentEvent','Company','CompanyAddress','CompanyContact','CompanyContactRole','CompanyContactRoleAssignment','CompanyLocation','CompanyLocationCatalog','Customer','CustomerPaymentMethod','CustomerSegmentMembersQuery','CustomerVisit','DeliveryCarrierService','DeliveryCondition','DeliveryCountry','DeliveryCustomization','DeliveryLocationGroup','DeliveryMethod','DeliveryMethodDefinition','DeliveryParticipant','DeliveryProfile','DeliveryProfileItem','DeliveryProvince','DeliveryRateDefinition','DeliveryZone','DiscountAutomaticBxgy','DiscountAutomaticNode','DiscountCodeNode','DiscountNode','DiscountRedeemCodeBulkCreation','Domain','DraftOrder','DraftOrderLineItem','DraftOrderTag','Duty','ExchangeV2','ExternalVideo','Fulfillment','FulfillmentEvent','FulfillmentLineItem','FulfillmentOrder','FulfillmentOrderDestination','FulfillmentOrderLineItem','FulfillmentOrderMerchantRequest','GenericFile','GiftCard','InventoryAdjustmentGroup','InventoryItem','InventoryLevel','LineItem','LineItemMutable','Location','MailingAddress','Market','MarketCatalog','MarketRegionCountry','MarketWebPresence','MarketingActivity','MarketingEvent','MediaImage','Metafield','MetafieldDefinition','MetafieldStorefrontVisibility','Metaobject','MetaobjectDefinition','Model3d','OnlineStoreArticle','OnlineStoreBlog','OnlineStorePage','Order','OrderDisputeSummary','OrderTransaction','PaymentCustomization','PaymentMandate','PaymentSchedule','PaymentTerms','PaymentTermsTemplate','PriceList','PriceRule','PriceRuleDiscountCode','PrivateMetafield','Product','ProductFeed','ProductOption','ProductTaxonomyNode','ProductVariant','ProductVariantComponent','Publication','PublicationResourceOperation','Refund','Return','ReturnLineItem','ReturnableFulfillment','ReverseDelivery','ReverseDeliveryLineItem','ReverseFulfillmentOrder','ReverseFulfillmentOrderDisposition','ReverseFulfillmentOrderLineItem','SaleAdditionalFee','SavedSearch','ScriptTag','Segment','SellingPlan','SellingPlanGroup','ServerPixel','Shop','ShopAddress','ShopPolicy','ShopifyPaymentsAccount','ShopifyPaymentsBankAccount','ShopifyPaymentsDispute','ShopifyPaymentsDisputeEvidence','ShopifyPaymentsDisputeFileUpload','ShopifyPaymentsDisputeFulfillment','ShopifyPaymentsPayout','ShopifyPaymentsVerification','StaffMember','StandardMetafieldDefinitionTemplate','StorefrontAccessToken','SubscriptionBillingAttempt','SubscriptionContract','SubscriptionDraft','TenderTransaction','TransactionFee','UrlRedirect','UrlRedirectImport','Video','WebPixel','WebhookSubscription']
    export const isNode = (obj?: { __typename?: any } | null): obj is Node => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNode"')
      return Node_possibleTypes.includes(obj.__typename)
    }
    


    const OnlineStoreArticle_possibleTypes: string[] = ['OnlineStoreArticle']
    export const isOnlineStoreArticle = (obj?: { __typename?: any } | null): obj is OnlineStoreArticle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnlineStoreArticle"')
      return OnlineStoreArticle_possibleTypes.includes(obj.__typename)
    }
    


    const OnlineStoreBlog_possibleTypes: string[] = ['OnlineStoreBlog']
    export const isOnlineStoreBlog = (obj?: { __typename?: any } | null): obj is OnlineStoreBlog => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnlineStoreBlog"')
      return OnlineStoreBlog_possibleTypes.includes(obj.__typename)
    }
    


    const OnlineStorePage_possibleTypes: string[] = ['OnlineStorePage']
    export const isOnlineStorePage = (obj?: { __typename?: any } | null): obj is OnlineStorePage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnlineStorePage"')
      return OnlineStorePage_possibleTypes.includes(obj.__typename)
    }
    


    const OnlineStorePreviewable_possibleTypes: string[] = ['Product']
    export const isOnlineStorePreviewable = (obj?: { __typename?: any } | null): obj is OnlineStorePreviewable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnlineStorePreviewable"')
      return OnlineStorePreviewable_possibleTypes.includes(obj.__typename)
    }
    


    const Order_possibleTypes: string[] = ['Order']
    export const isOrder = (obj?: { __typename?: any } | null): obj is Order => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrder"')
      return Order_possibleTypes.includes(obj.__typename)
    }
    


    const OrderAgreement_possibleTypes: string[] = ['OrderAgreement']
    export const isOrderAgreement = (obj?: { __typename?: any } | null): obj is OrderAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderAgreement"')
      return OrderAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const OrderApp_possibleTypes: string[] = ['OrderApp']
    export const isOrderApp = (obj?: { __typename?: any } | null): obj is OrderApp => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderApp"')
      return OrderApp_possibleTypes.includes(obj.__typename)
    }
    


    const OrderCapturePayload_possibleTypes: string[] = ['OrderCapturePayload']
    export const isOrderCapturePayload = (obj?: { __typename?: any } | null): obj is OrderCapturePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderCapturePayload"')
      return OrderCapturePayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderClosePayload_possibleTypes: string[] = ['OrderClosePayload']
    export const isOrderClosePayload = (obj?: { __typename?: any } | null): obj is OrderClosePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderClosePayload"')
      return OrderClosePayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderConnection_possibleTypes: string[] = ['OrderConnection']
    export const isOrderConnection = (obj?: { __typename?: any } | null): obj is OrderConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderConnection"')
      return OrderConnection_possibleTypes.includes(obj.__typename)
    }
    


    const OrderCreateMandatePaymentPayload_possibleTypes: string[] = ['OrderCreateMandatePaymentPayload']
    export const isOrderCreateMandatePaymentPayload = (obj?: { __typename?: any } | null): obj is OrderCreateMandatePaymentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderCreateMandatePaymentPayload"')
      return OrderCreateMandatePaymentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderCreateMandatePaymentUserError_possibleTypes: string[] = ['OrderCreateMandatePaymentUserError']
    export const isOrderCreateMandatePaymentUserError = (obj?: { __typename?: any } | null): obj is OrderCreateMandatePaymentUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderCreateMandatePaymentUserError"')
      return OrderCreateMandatePaymentUserError_possibleTypes.includes(obj.__typename)
    }
    


    const OrderDisputeSummary_possibleTypes: string[] = ['OrderDisputeSummary']
    export const isOrderDisputeSummary = (obj?: { __typename?: any } | null): obj is OrderDisputeSummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderDisputeSummary"')
      return OrderDisputeSummary_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEdge_possibleTypes: string[] = ['OrderEdge']
    export const isOrderEdge = (obj?: { __typename?: any } | null): obj is OrderEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEdge"')
      return OrderEdge_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditAddCustomItemPayload_possibleTypes: string[] = ['OrderEditAddCustomItemPayload']
    export const isOrderEditAddCustomItemPayload = (obj?: { __typename?: any } | null): obj is OrderEditAddCustomItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditAddCustomItemPayload"')
      return OrderEditAddCustomItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditAddLineItemDiscountPayload_possibleTypes: string[] = ['OrderEditAddLineItemDiscountPayload']
    export const isOrderEditAddLineItemDiscountPayload = (obj?: { __typename?: any } | null): obj is OrderEditAddLineItemDiscountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditAddLineItemDiscountPayload"')
      return OrderEditAddLineItemDiscountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditAddVariantPayload_possibleTypes: string[] = ['OrderEditAddVariantPayload']
    export const isOrderEditAddVariantPayload = (obj?: { __typename?: any } | null): obj is OrderEditAddVariantPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditAddVariantPayload"')
      return OrderEditAddVariantPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditAgreement_possibleTypes: string[] = ['OrderEditAgreement']
    export const isOrderEditAgreement = (obj?: { __typename?: any } | null): obj is OrderEditAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditAgreement"')
      return OrderEditAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditBeginPayload_possibleTypes: string[] = ['OrderEditBeginPayload']
    export const isOrderEditBeginPayload = (obj?: { __typename?: any } | null): obj is OrderEditBeginPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditBeginPayload"')
      return OrderEditBeginPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditCommitPayload_possibleTypes: string[] = ['OrderEditCommitPayload']
    export const isOrderEditCommitPayload = (obj?: { __typename?: any } | null): obj is OrderEditCommitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditCommitPayload"')
      return OrderEditCommitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditRemoveLineItemDiscountPayload_possibleTypes: string[] = ['OrderEditRemoveLineItemDiscountPayload']
    export const isOrderEditRemoveLineItemDiscountPayload = (obj?: { __typename?: any } | null): obj is OrderEditRemoveLineItemDiscountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditRemoveLineItemDiscountPayload"')
      return OrderEditRemoveLineItemDiscountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderEditSetQuantityPayload_possibleTypes: string[] = ['OrderEditSetQuantityPayload']
    export const isOrderEditSetQuantityPayload = (obj?: { __typename?: any } | null): obj is OrderEditSetQuantityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderEditSetQuantityPayload"')
      return OrderEditSetQuantityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderInvoiceSendPayload_possibleTypes: string[] = ['OrderInvoiceSendPayload']
    export const isOrderInvoiceSendPayload = (obj?: { __typename?: any } | null): obj is OrderInvoiceSendPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderInvoiceSendPayload"')
      return OrderInvoiceSendPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderInvoiceSendUserError_possibleTypes: string[] = ['OrderInvoiceSendUserError']
    export const isOrderInvoiceSendUserError = (obj?: { __typename?: any } | null): obj is OrderInvoiceSendUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderInvoiceSendUserError"')
      return OrderInvoiceSendUserError_possibleTypes.includes(obj.__typename)
    }
    


    const OrderMarkAsPaidPayload_possibleTypes: string[] = ['OrderMarkAsPaidPayload']
    export const isOrderMarkAsPaidPayload = (obj?: { __typename?: any } | null): obj is OrderMarkAsPaidPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderMarkAsPaidPayload"')
      return OrderMarkAsPaidPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderOpenPayload_possibleTypes: string[] = ['OrderOpenPayload']
    export const isOrderOpenPayload = (obj?: { __typename?: any } | null): obj is OrderOpenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderOpenPayload"')
      return OrderOpenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const OrderPaymentCollectionDetails_possibleTypes: string[] = ['OrderPaymentCollectionDetails']
    export const isOrderPaymentCollectionDetails = (obj?: { __typename?: any } | null): obj is OrderPaymentCollectionDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderPaymentCollectionDetails"')
      return OrderPaymentCollectionDetails_possibleTypes.includes(obj.__typename)
    }
    


    const OrderPaymentStatus_possibleTypes: string[] = ['OrderPaymentStatus']
    export const isOrderPaymentStatus = (obj?: { __typename?: any } | null): obj is OrderPaymentStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderPaymentStatus"')
      return OrderPaymentStatus_possibleTypes.includes(obj.__typename)
    }
    


    const OrderRisk_possibleTypes: string[] = ['OrderRisk']
    export const isOrderRisk = (obj?: { __typename?: any } | null): obj is OrderRisk => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderRisk"')
      return OrderRisk_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChange_possibleTypes: string[] = ['OrderStagedChangeAddCustomItem','OrderStagedChangeAddLineItemDiscount','OrderStagedChangeAddShippingLine','OrderStagedChangeAddVariant','OrderStagedChangeDecrementItem','OrderStagedChangeIncrementItem']
    export const isOrderStagedChange = (obj?: { __typename?: any } | null): obj is OrderStagedChange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChange"')
      return OrderStagedChange_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeAddCustomItem_possibleTypes: string[] = ['OrderStagedChangeAddCustomItem']
    export const isOrderStagedChangeAddCustomItem = (obj?: { __typename?: any } | null): obj is OrderStagedChangeAddCustomItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeAddCustomItem"')
      return OrderStagedChangeAddCustomItem_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeAddLineItemDiscount_possibleTypes: string[] = ['OrderStagedChangeAddLineItemDiscount']
    export const isOrderStagedChangeAddLineItemDiscount = (obj?: { __typename?: any } | null): obj is OrderStagedChangeAddLineItemDiscount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeAddLineItemDiscount"')
      return OrderStagedChangeAddLineItemDiscount_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeAddShippingLine_possibleTypes: string[] = ['OrderStagedChangeAddShippingLine']
    export const isOrderStagedChangeAddShippingLine = (obj?: { __typename?: any } | null): obj is OrderStagedChangeAddShippingLine => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeAddShippingLine"')
      return OrderStagedChangeAddShippingLine_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeAddVariant_possibleTypes: string[] = ['OrderStagedChangeAddVariant']
    export const isOrderStagedChangeAddVariant = (obj?: { __typename?: any } | null): obj is OrderStagedChangeAddVariant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeAddVariant"')
      return OrderStagedChangeAddVariant_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeConnection_possibleTypes: string[] = ['OrderStagedChangeConnection']
    export const isOrderStagedChangeConnection = (obj?: { __typename?: any } | null): obj is OrderStagedChangeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeConnection"')
      return OrderStagedChangeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeDecrementItem_possibleTypes: string[] = ['OrderStagedChangeDecrementItem']
    export const isOrderStagedChangeDecrementItem = (obj?: { __typename?: any } | null): obj is OrderStagedChangeDecrementItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeDecrementItem"')
      return OrderStagedChangeDecrementItem_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeEdge_possibleTypes: string[] = ['OrderStagedChangeEdge']
    export const isOrderStagedChangeEdge = (obj?: { __typename?: any } | null): obj is OrderStagedChangeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeEdge"')
      return OrderStagedChangeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const OrderStagedChangeIncrementItem_possibleTypes: string[] = ['OrderStagedChangeIncrementItem']
    export const isOrderStagedChangeIncrementItem = (obj?: { __typename?: any } | null): obj is OrderStagedChangeIncrementItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderStagedChangeIncrementItem"')
      return OrderStagedChangeIncrementItem_possibleTypes.includes(obj.__typename)
    }
    


    const OrderTransaction_possibleTypes: string[] = ['OrderTransaction']
    export const isOrderTransaction = (obj?: { __typename?: any } | null): obj is OrderTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderTransaction"')
      return OrderTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const OrderTransactionConnection_possibleTypes: string[] = ['OrderTransactionConnection']
    export const isOrderTransactionConnection = (obj?: { __typename?: any } | null): obj is OrderTransactionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderTransactionConnection"')
      return OrderTransactionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const OrderTransactionEdge_possibleTypes: string[] = ['OrderTransactionEdge']
    export const isOrderTransactionEdge = (obj?: { __typename?: any } | null): obj is OrderTransactionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderTransactionEdge"')
      return OrderTransactionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const OrderUpdatePayload_possibleTypes: string[] = ['OrderUpdatePayload']
    export const isOrderUpdatePayload = (obj?: { __typename?: any } | null): obj is OrderUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrderUpdatePayload"')
      return OrderUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PageInfo_possibleTypes: string[] = ['PageInfo']
    export const isPageInfo = (obj?: { __typename?: any } | null): obj is PageInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPageInfo"')
      return PageInfo_possibleTypes.includes(obj.__typename)
    }
    


    const ParseError_possibleTypes: string[] = ['ParseError']
    export const isParseError = (obj?: { __typename?: any } | null): obj is ParseError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isParseError"')
      return ParseError_possibleTypes.includes(obj.__typename)
    }
    


    const ParseErrorRange_possibleTypes: string[] = ['ParseErrorRange']
    export const isParseErrorRange = (obj?: { __typename?: any } | null): obj is ParseErrorRange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isParseErrorRange"')
      return ParseErrorRange_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomization_possibleTypes: string[] = ['PaymentCustomization']
    export const isPaymentCustomization = (obj?: { __typename?: any } | null): obj is PaymentCustomization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomization"')
      return PaymentCustomization_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationActivationPayload_possibleTypes: string[] = ['PaymentCustomizationActivationPayload']
    export const isPaymentCustomizationActivationPayload = (obj?: { __typename?: any } | null): obj is PaymentCustomizationActivationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationActivationPayload"')
      return PaymentCustomizationActivationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationConnection_possibleTypes: string[] = ['PaymentCustomizationConnection']
    export const isPaymentCustomizationConnection = (obj?: { __typename?: any } | null): obj is PaymentCustomizationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationConnection"')
      return PaymentCustomizationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationCreatePayload_possibleTypes: string[] = ['PaymentCustomizationCreatePayload']
    export const isPaymentCustomizationCreatePayload = (obj?: { __typename?: any } | null): obj is PaymentCustomizationCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationCreatePayload"')
      return PaymentCustomizationCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationDeletePayload_possibleTypes: string[] = ['PaymentCustomizationDeletePayload']
    export const isPaymentCustomizationDeletePayload = (obj?: { __typename?: any } | null): obj is PaymentCustomizationDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationDeletePayload"')
      return PaymentCustomizationDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationEdge_possibleTypes: string[] = ['PaymentCustomizationEdge']
    export const isPaymentCustomizationEdge = (obj?: { __typename?: any } | null): obj is PaymentCustomizationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationEdge"')
      return PaymentCustomizationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationError_possibleTypes: string[] = ['PaymentCustomizationError']
    export const isPaymentCustomizationError = (obj?: { __typename?: any } | null): obj is PaymentCustomizationError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationError"')
      return PaymentCustomizationError_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentCustomizationUpdatePayload_possibleTypes: string[] = ['PaymentCustomizationUpdatePayload']
    export const isPaymentCustomizationUpdatePayload = (obj?: { __typename?: any } | null): obj is PaymentCustomizationUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentCustomizationUpdatePayload"')
      return PaymentCustomizationUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentDetails_possibleTypes: string[] = ['CardPaymentDetails']
    export const isPaymentDetails = (obj?: { __typename?: any } | null): obj is PaymentDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentDetails"')
      return PaymentDetails_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentInstrument_possibleTypes: string[] = ['VaultCreditCard','VaultPaypalBillingAgreement']
    export const isPaymentInstrument = (obj?: { __typename?: any } | null): obj is PaymentInstrument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentInstrument"')
      return PaymentInstrument_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentMandate_possibleTypes: string[] = ['PaymentMandate']
    export const isPaymentMandate = (obj?: { __typename?: any } | null): obj is PaymentMandate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentMandate"')
      return PaymentMandate_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentReminderSendPayload_possibleTypes: string[] = ['PaymentReminderSendPayload']
    export const isPaymentReminderSendPayload = (obj?: { __typename?: any } | null): obj is PaymentReminderSendPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentReminderSendPayload"')
      return PaymentReminderSendPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentReminderSendUserError_possibleTypes: string[] = ['PaymentReminderSendUserError']
    export const isPaymentReminderSendUserError = (obj?: { __typename?: any } | null): obj is PaymentReminderSendUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentReminderSendUserError"')
      return PaymentReminderSendUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentSchedule_possibleTypes: string[] = ['PaymentSchedule']
    export const isPaymentSchedule = (obj?: { __typename?: any } | null): obj is PaymentSchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentSchedule"')
      return PaymentSchedule_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentScheduleConnection_possibleTypes: string[] = ['PaymentScheduleConnection']
    export const isPaymentScheduleConnection = (obj?: { __typename?: any } | null): obj is PaymentScheduleConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentScheduleConnection"')
      return PaymentScheduleConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentScheduleEdge_possibleTypes: string[] = ['PaymentScheduleEdge']
    export const isPaymentScheduleEdge = (obj?: { __typename?: any } | null): obj is PaymentScheduleEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentScheduleEdge"')
      return PaymentScheduleEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentSettings_possibleTypes: string[] = ['PaymentSettings']
    export const isPaymentSettings = (obj?: { __typename?: any } | null): obj is PaymentSettings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentSettings"')
      return PaymentSettings_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTerms_possibleTypes: string[] = ['PaymentTerms']
    export const isPaymentTerms = (obj?: { __typename?: any } | null): obj is PaymentTerms => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTerms"')
      return PaymentTerms_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsCreatePayload_possibleTypes: string[] = ['PaymentTermsCreatePayload']
    export const isPaymentTermsCreatePayload = (obj?: { __typename?: any } | null): obj is PaymentTermsCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsCreatePayload"')
      return PaymentTermsCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsCreateUserError_possibleTypes: string[] = ['PaymentTermsCreateUserError']
    export const isPaymentTermsCreateUserError = (obj?: { __typename?: any } | null): obj is PaymentTermsCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsCreateUserError"')
      return PaymentTermsCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsDeletePayload_possibleTypes: string[] = ['PaymentTermsDeletePayload']
    export const isPaymentTermsDeletePayload = (obj?: { __typename?: any } | null): obj is PaymentTermsDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsDeletePayload"')
      return PaymentTermsDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsDeleteUserError_possibleTypes: string[] = ['PaymentTermsDeleteUserError']
    export const isPaymentTermsDeleteUserError = (obj?: { __typename?: any } | null): obj is PaymentTermsDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsDeleteUserError"')
      return PaymentTermsDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsTemplate_possibleTypes: string[] = ['PaymentTermsTemplate']
    export const isPaymentTermsTemplate = (obj?: { __typename?: any } | null): obj is PaymentTermsTemplate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsTemplate"')
      return PaymentTermsTemplate_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsUpdatePayload_possibleTypes: string[] = ['PaymentTermsUpdatePayload']
    export const isPaymentTermsUpdatePayload = (obj?: { __typename?: any } | null): obj is PaymentTermsUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsUpdatePayload"')
      return PaymentTermsUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PaymentTermsUpdateUserError_possibleTypes: string[] = ['PaymentTermsUpdateUserError']
    export const isPaymentTermsUpdateUserError = (obj?: { __typename?: any } | null): obj is PaymentTermsUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPaymentTermsUpdateUserError"')
      return PaymentTermsUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PolarisVizDataPoint_possibleTypes: string[] = ['PolarisVizDataPoint']
    export const isPolarisVizDataPoint = (obj?: { __typename?: any } | null): obj is PolarisVizDataPoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPolarisVizDataPoint"')
      return PolarisVizDataPoint_possibleTypes.includes(obj.__typename)
    }
    


    const PolarisVizDataSeries_possibleTypes: string[] = ['PolarisVizDataSeries']
    export const isPolarisVizDataSeries = (obj?: { __typename?: any } | null): obj is PolarisVizDataSeries => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPolarisVizDataSeries"')
      return PolarisVizDataSeries_possibleTypes.includes(obj.__typename)
    }
    


    const PolarisVizResponse_possibleTypes: string[] = ['PolarisVizResponse']
    export const isPolarisVizResponse = (obj?: { __typename?: any } | null): obj is PolarisVizResponse => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPolarisVizResponse"')
      return PolarisVizResponse_possibleTypes.includes(obj.__typename)
    }
    


    const PriceList_possibleTypes: string[] = ['PriceList']
    export const isPriceList = (obj?: { __typename?: any } | null): obj is PriceList => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceList"')
      return PriceList_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListAdjustment_possibleTypes: string[] = ['PriceListAdjustment']
    export const isPriceListAdjustment = (obj?: { __typename?: any } | null): obj is PriceListAdjustment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListAdjustment"')
      return PriceListAdjustment_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListAdjustmentSettings_possibleTypes: string[] = ['PriceListAdjustmentSettings']
    export const isPriceListAdjustmentSettings = (obj?: { __typename?: any } | null): obj is PriceListAdjustmentSettings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListAdjustmentSettings"')
      return PriceListAdjustmentSettings_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListConnection_possibleTypes: string[] = ['PriceListConnection']
    export const isPriceListConnection = (obj?: { __typename?: any } | null): obj is PriceListConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListConnection"')
      return PriceListConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListCreatePayload_possibleTypes: string[] = ['PriceListCreatePayload']
    export const isPriceListCreatePayload = (obj?: { __typename?: any } | null): obj is PriceListCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListCreatePayload"')
      return PriceListCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListDeletePayload_possibleTypes: string[] = ['PriceListDeletePayload']
    export const isPriceListDeletePayload = (obj?: { __typename?: any } | null): obj is PriceListDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListDeletePayload"')
      return PriceListDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListEdge_possibleTypes: string[] = ['PriceListEdge']
    export const isPriceListEdge = (obj?: { __typename?: any } | null): obj is PriceListEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListEdge"')
      return PriceListEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListFixedPricesAddPayload_possibleTypes: string[] = ['PriceListFixedPricesAddPayload']
    export const isPriceListFixedPricesAddPayload = (obj?: { __typename?: any } | null): obj is PriceListFixedPricesAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListFixedPricesAddPayload"')
      return PriceListFixedPricesAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListFixedPricesByProductBulkUpdateUserError_possibleTypes: string[] = ['PriceListFixedPricesByProductBulkUpdateUserError']
    export const isPriceListFixedPricesByProductBulkUpdateUserError = (obj?: { __typename?: any } | null): obj is PriceListFixedPricesByProductBulkUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListFixedPricesByProductBulkUpdateUserError"')
      return PriceListFixedPricesByProductBulkUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListFixedPricesByProductUpdatePayload_possibleTypes: string[] = ['PriceListFixedPricesByProductUpdatePayload']
    export const isPriceListFixedPricesByProductUpdatePayload = (obj?: { __typename?: any } | null): obj is PriceListFixedPricesByProductUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListFixedPricesByProductUpdatePayload"')
      return PriceListFixedPricesByProductUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListFixedPricesDeletePayload_possibleTypes: string[] = ['PriceListFixedPricesDeletePayload']
    export const isPriceListFixedPricesDeletePayload = (obj?: { __typename?: any } | null): obj is PriceListFixedPricesDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListFixedPricesDeletePayload"')
      return PriceListFixedPricesDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListFixedPricesUpdatePayload_possibleTypes: string[] = ['PriceListFixedPricesUpdatePayload']
    export const isPriceListFixedPricesUpdatePayload = (obj?: { __typename?: any } | null): obj is PriceListFixedPricesUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListFixedPricesUpdatePayload"')
      return PriceListFixedPricesUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListParent_possibleTypes: string[] = ['PriceListParent']
    export const isPriceListParent = (obj?: { __typename?: any } | null): obj is PriceListParent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListParent"')
      return PriceListParent_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListPrice_possibleTypes: string[] = ['PriceListPrice']
    export const isPriceListPrice = (obj?: { __typename?: any } | null): obj is PriceListPrice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListPrice"')
      return PriceListPrice_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListPriceConnection_possibleTypes: string[] = ['PriceListPriceConnection']
    export const isPriceListPriceConnection = (obj?: { __typename?: any } | null): obj is PriceListPriceConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListPriceConnection"')
      return PriceListPriceConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListPriceEdge_possibleTypes: string[] = ['PriceListPriceEdge']
    export const isPriceListPriceEdge = (obj?: { __typename?: any } | null): obj is PriceListPriceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListPriceEdge"')
      return PriceListPriceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListPriceUserError_possibleTypes: string[] = ['PriceListPriceUserError']
    export const isPriceListPriceUserError = (obj?: { __typename?: any } | null): obj is PriceListPriceUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListPriceUserError"')
      return PriceListPriceUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListUpdatePayload_possibleTypes: string[] = ['PriceListUpdatePayload']
    export const isPriceListUpdatePayload = (obj?: { __typename?: any } | null): obj is PriceListUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListUpdatePayload"')
      return PriceListUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceListUserError_possibleTypes: string[] = ['PriceListUserError']
    export const isPriceListUserError = (obj?: { __typename?: any } | null): obj is PriceListUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceListUserError"')
      return PriceListUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRule_possibleTypes: string[] = ['PriceRule']
    export const isPriceRule = (obj?: { __typename?: any } | null): obj is PriceRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRule"')
      return PriceRule_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleActivatePayload_possibleTypes: string[] = ['PriceRuleActivatePayload']
    export const isPriceRuleActivatePayload = (obj?: { __typename?: any } | null): obj is PriceRuleActivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleActivatePayload"')
      return PriceRuleActivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleConnection_possibleTypes: string[] = ['PriceRuleConnection']
    export const isPriceRuleConnection = (obj?: { __typename?: any } | null): obj is PriceRuleConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleConnection"')
      return PriceRuleConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleCreatePayload_possibleTypes: string[] = ['PriceRuleCreatePayload']
    export const isPriceRuleCreatePayload = (obj?: { __typename?: any } | null): obj is PriceRuleCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleCreatePayload"')
      return PriceRuleCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleCustomerSelection_possibleTypes: string[] = ['PriceRuleCustomerSelection']
    export const isPriceRuleCustomerSelection = (obj?: { __typename?: any } | null): obj is PriceRuleCustomerSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleCustomerSelection"')
      return PriceRuleCustomerSelection_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDeactivatePayload_possibleTypes: string[] = ['PriceRuleDeactivatePayload']
    export const isPriceRuleDeactivatePayload = (obj?: { __typename?: any } | null): obj is PriceRuleDeactivatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDeactivatePayload"')
      return PriceRuleDeactivatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDeletePayload_possibleTypes: string[] = ['PriceRuleDeletePayload']
    export const isPriceRuleDeletePayload = (obj?: { __typename?: any } | null): obj is PriceRuleDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDeletePayload"')
      return PriceRuleDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDiscountCode_possibleTypes: string[] = ['PriceRuleDiscountCode']
    export const isPriceRuleDiscountCode = (obj?: { __typename?: any } | null): obj is PriceRuleDiscountCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDiscountCode"')
      return PriceRuleDiscountCode_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDiscountCodeConnection_possibleTypes: string[] = ['PriceRuleDiscountCodeConnection']
    export const isPriceRuleDiscountCodeConnection = (obj?: { __typename?: any } | null): obj is PriceRuleDiscountCodeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDiscountCodeConnection"')
      return PriceRuleDiscountCodeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDiscountCodeCreatePayload_possibleTypes: string[] = ['PriceRuleDiscountCodeCreatePayload']
    export const isPriceRuleDiscountCodeCreatePayload = (obj?: { __typename?: any } | null): obj is PriceRuleDiscountCodeCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDiscountCodeCreatePayload"')
      return PriceRuleDiscountCodeCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDiscountCodeEdge_possibleTypes: string[] = ['PriceRuleDiscountCodeEdge']
    export const isPriceRuleDiscountCodeEdge = (obj?: { __typename?: any } | null): obj is PriceRuleDiscountCodeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDiscountCodeEdge"')
      return PriceRuleDiscountCodeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleDiscountCodeUpdatePayload_possibleTypes: string[] = ['PriceRuleDiscountCodeUpdatePayload']
    export const isPriceRuleDiscountCodeUpdatePayload = (obj?: { __typename?: any } | null): obj is PriceRuleDiscountCodeUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleDiscountCodeUpdatePayload"')
      return PriceRuleDiscountCodeUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleEdge_possibleTypes: string[] = ['PriceRuleEdge']
    export const isPriceRuleEdge = (obj?: { __typename?: any } | null): obj is PriceRuleEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleEdge"')
      return PriceRuleEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleEntitlementToPrerequisiteQuantityRatio_possibleTypes: string[] = ['PriceRuleEntitlementToPrerequisiteQuantityRatio']
    export const isPriceRuleEntitlementToPrerequisiteQuantityRatio = (obj?: { __typename?: any } | null): obj is PriceRuleEntitlementToPrerequisiteQuantityRatio => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleEntitlementToPrerequisiteQuantityRatio"')
      return PriceRuleEntitlementToPrerequisiteQuantityRatio_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleFixedAmountValue_possibleTypes: string[] = ['PriceRuleFixedAmountValue']
    export const isPriceRuleFixedAmountValue = (obj?: { __typename?: any } | null): obj is PriceRuleFixedAmountValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleFixedAmountValue"')
      return PriceRuleFixedAmountValue_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleItemEntitlements_possibleTypes: string[] = ['PriceRuleItemEntitlements']
    export const isPriceRuleItemEntitlements = (obj?: { __typename?: any } | null): obj is PriceRuleItemEntitlements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleItemEntitlements"')
      return PriceRuleItemEntitlements_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleLineItemPrerequisites_possibleTypes: string[] = ['PriceRuleLineItemPrerequisites']
    export const isPriceRuleLineItemPrerequisites = (obj?: { __typename?: any } | null): obj is PriceRuleLineItemPrerequisites => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleLineItemPrerequisites"')
      return PriceRuleLineItemPrerequisites_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleMoneyRange_possibleTypes: string[] = ['PriceRuleMoneyRange']
    export const isPriceRuleMoneyRange = (obj?: { __typename?: any } | null): obj is PriceRuleMoneyRange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleMoneyRange"')
      return PriceRuleMoneyRange_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRulePercentValue_possibleTypes: string[] = ['PriceRulePercentValue']
    export const isPriceRulePercentValue = (obj?: { __typename?: any } | null): obj is PriceRulePercentValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRulePercentValue"')
      return PriceRulePercentValue_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRulePrerequisiteToEntitlementQuantityRatio_possibleTypes: string[] = ['PriceRulePrerequisiteToEntitlementQuantityRatio']
    export const isPriceRulePrerequisiteToEntitlementQuantityRatio = (obj?: { __typename?: any } | null): obj is PriceRulePrerequisiteToEntitlementQuantityRatio => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRulePrerequisiteToEntitlementQuantityRatio"')
      return PriceRulePrerequisiteToEntitlementQuantityRatio_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleQuantityRange_possibleTypes: string[] = ['PriceRuleQuantityRange']
    export const isPriceRuleQuantityRange = (obj?: { __typename?: any } | null): obj is PriceRuleQuantityRange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleQuantityRange"')
      return PriceRuleQuantityRange_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleShareableUrl_possibleTypes: string[] = ['PriceRuleShareableUrl']
    export const isPriceRuleShareableUrl = (obj?: { __typename?: any } | null): obj is PriceRuleShareableUrl => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleShareableUrl"')
      return PriceRuleShareableUrl_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleShippingLineEntitlements_possibleTypes: string[] = ['PriceRuleShippingLineEntitlements']
    export const isPriceRuleShippingLineEntitlements = (obj?: { __typename?: any } | null): obj is PriceRuleShippingLineEntitlements => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleShippingLineEntitlements"')
      return PriceRuleShippingLineEntitlements_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleUpdatePayload_possibleTypes: string[] = ['PriceRuleUpdatePayload']
    export const isPriceRuleUpdatePayload = (obj?: { __typename?: any } | null): obj is PriceRuleUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleUpdatePayload"')
      return PriceRuleUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleUserError_possibleTypes: string[] = ['PriceRuleUserError']
    export const isPriceRuleUserError = (obj?: { __typename?: any } | null): obj is PriceRuleUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleUserError"')
      return PriceRuleUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleValidityPeriod_possibleTypes: string[] = ['PriceRuleValidityPeriod']
    export const isPriceRuleValidityPeriod = (obj?: { __typename?: any } | null): obj is PriceRuleValidityPeriod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleValidityPeriod"')
      return PriceRuleValidityPeriod_possibleTypes.includes(obj.__typename)
    }
    


    const PriceRuleValue_possibleTypes: string[] = ['PriceRuleFixedAmountValue','PriceRulePercentValue']
    export const isPriceRuleValue = (obj?: { __typename?: any } | null): obj is PriceRuleValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceRuleValue"')
      return PriceRuleValue_possibleTypes.includes(obj.__typename)
    }
    


    const PricingPercentageValue_possibleTypes: string[] = ['PricingPercentageValue']
    export const isPricingPercentageValue = (obj?: { __typename?: any } | null): obj is PricingPercentageValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPricingPercentageValue"')
      return PricingPercentageValue_possibleTypes.includes(obj.__typename)
    }
    


    const PricingValue_possibleTypes: string[] = ['MoneyV2','PricingPercentageValue']
    export const isPricingValue = (obj?: { __typename?: any } | null): obj is PricingValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPricingValue"')
      return PricingValue_possibleTypes.includes(obj.__typename)
    }
    


    const PrivateMetafield_possibleTypes: string[] = ['PrivateMetafield']
    export const isPrivateMetafield = (obj?: { __typename?: any } | null): obj is PrivateMetafield => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateMetafield"')
      return PrivateMetafield_possibleTypes.includes(obj.__typename)
    }
    


    const PrivateMetafieldConnection_possibleTypes: string[] = ['PrivateMetafieldConnection']
    export const isPrivateMetafieldConnection = (obj?: { __typename?: any } | null): obj is PrivateMetafieldConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateMetafieldConnection"')
      return PrivateMetafieldConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PrivateMetafieldDeletePayload_possibleTypes: string[] = ['PrivateMetafieldDeletePayload']
    export const isPrivateMetafieldDeletePayload = (obj?: { __typename?: any } | null): obj is PrivateMetafieldDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateMetafieldDeletePayload"')
      return PrivateMetafieldDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PrivateMetafieldEdge_possibleTypes: string[] = ['PrivateMetafieldEdge']
    export const isPrivateMetafieldEdge = (obj?: { __typename?: any } | null): obj is PrivateMetafieldEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateMetafieldEdge"')
      return PrivateMetafieldEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PrivateMetafieldUpsertPayload_possibleTypes: string[] = ['PrivateMetafieldUpsertPayload']
    export const isPrivateMetafieldUpsertPayload = (obj?: { __typename?: any } | null): obj is PrivateMetafieldUpsertPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrivateMetafieldUpsertPayload"')
      return PrivateMetafieldUpsertPayload_possibleTypes.includes(obj.__typename)
    }
    


    const Product_possibleTypes: string[] = ['Product']
    export const isProduct = (obj?: { __typename?: any } | null): obj is Product => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProduct"')
      return Product_possibleTypes.includes(obj.__typename)
    }
    


    const ProductAppendImagesPayload_possibleTypes: string[] = ['ProductAppendImagesPayload']
    export const isProductAppendImagesPayload = (obj?: { __typename?: any } | null): obj is ProductAppendImagesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductAppendImagesPayload"')
      return ProductAppendImagesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductCategory_possibleTypes: string[] = ['ProductCategory']
    export const isProductCategory = (obj?: { __typename?: any } | null): obj is ProductCategory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductCategory"')
      return ProductCategory_possibleTypes.includes(obj.__typename)
    }
    


    const ProductChangeStatusPayload_possibleTypes: string[] = ['ProductChangeStatusPayload']
    export const isProductChangeStatusPayload = (obj?: { __typename?: any } | null): obj is ProductChangeStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductChangeStatusPayload"')
      return ProductChangeStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductChangeStatusUserError_possibleTypes: string[] = ['ProductChangeStatusUserError']
    export const isProductChangeStatusUserError = (obj?: { __typename?: any } | null): obj is ProductChangeStatusUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductChangeStatusUserError"')
      return ProductChangeStatusUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductConnection_possibleTypes: string[] = ['ProductConnection']
    export const isProductConnection = (obj?: { __typename?: any } | null): obj is ProductConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductConnection"')
      return ProductConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductContextualPricing_possibleTypes: string[] = ['ProductContextualPricing']
    export const isProductContextualPricing = (obj?: { __typename?: any } | null): obj is ProductContextualPricing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductContextualPricing"')
      return ProductContextualPricing_possibleTypes.includes(obj.__typename)
    }
    


    const ProductCreateMediaPayload_possibleTypes: string[] = ['ProductCreateMediaPayload']
    export const isProductCreateMediaPayload = (obj?: { __typename?: any } | null): obj is ProductCreateMediaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductCreateMediaPayload"')
      return ProductCreateMediaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductCreatePayload_possibleTypes: string[] = ['ProductCreatePayload']
    export const isProductCreatePayload = (obj?: { __typename?: any } | null): obj is ProductCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductCreatePayload"')
      return ProductCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDeleteAsyncPayload_possibleTypes: string[] = ['ProductDeleteAsyncPayload']
    export const isProductDeleteAsyncPayload = (obj?: { __typename?: any } | null): obj is ProductDeleteAsyncPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDeleteAsyncPayload"')
      return ProductDeleteAsyncPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDeleteImagesPayload_possibleTypes: string[] = ['ProductDeleteImagesPayload']
    export const isProductDeleteImagesPayload = (obj?: { __typename?: any } | null): obj is ProductDeleteImagesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDeleteImagesPayload"')
      return ProductDeleteImagesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDeleteMediaPayload_possibleTypes: string[] = ['ProductDeleteMediaPayload']
    export const isProductDeleteMediaPayload = (obj?: { __typename?: any } | null): obj is ProductDeleteMediaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDeleteMediaPayload"')
      return ProductDeleteMediaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDeletePayload_possibleTypes: string[] = ['ProductDeletePayload']
    export const isProductDeletePayload = (obj?: { __typename?: any } | null): obj is ProductDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDeletePayload"')
      return ProductDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDeleteUserError_possibleTypes: string[] = ['ProductDeleteUserError']
    export const isProductDeleteUserError = (obj?: { __typename?: any } | null): obj is ProductDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDeleteUserError"')
      return ProductDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDuplicateAsyncPayload_possibleTypes: string[] = ['ProductDuplicateAsyncPayload']
    export const isProductDuplicateAsyncPayload = (obj?: { __typename?: any } | null): obj is ProductDuplicateAsyncPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDuplicateAsyncPayload"')
      return ProductDuplicateAsyncPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDuplicateAsyncV2Payload_possibleTypes: string[] = ['ProductDuplicateAsyncV2Payload']
    export const isProductDuplicateAsyncV2Payload = (obj?: { __typename?: any } | null): obj is ProductDuplicateAsyncV2Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDuplicateAsyncV2Payload"')
      return ProductDuplicateAsyncV2Payload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDuplicateJob_possibleTypes: string[] = ['ProductDuplicateJob']
    export const isProductDuplicateJob = (obj?: { __typename?: any } | null): obj is ProductDuplicateJob => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDuplicateJob"')
      return ProductDuplicateJob_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDuplicatePayload_possibleTypes: string[] = ['ProductDuplicatePayload']
    export const isProductDuplicatePayload = (obj?: { __typename?: any } | null): obj is ProductDuplicatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDuplicatePayload"')
      return ProductDuplicatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductDuplicateUserError_possibleTypes: string[] = ['ProductDuplicateUserError']
    export const isProductDuplicateUserError = (obj?: { __typename?: any } | null): obj is ProductDuplicateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductDuplicateUserError"')
      return ProductDuplicateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductEdge_possibleTypes: string[] = ['ProductEdge']
    export const isProductEdge = (obj?: { __typename?: any } | null): obj is ProductEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductEdge"')
      return ProductEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeed_possibleTypes: string[] = ['ProductFeed']
    export const isProductFeed = (obj?: { __typename?: any } | null): obj is ProductFeed => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeed"')
      return ProductFeed_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeedConnection_possibleTypes: string[] = ['ProductFeedConnection']
    export const isProductFeedConnection = (obj?: { __typename?: any } | null): obj is ProductFeedConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeedConnection"')
      return ProductFeedConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeedCreatePayload_possibleTypes: string[] = ['ProductFeedCreatePayload']
    export const isProductFeedCreatePayload = (obj?: { __typename?: any } | null): obj is ProductFeedCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeedCreatePayload"')
      return ProductFeedCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeedCreateUserError_possibleTypes: string[] = ['ProductFeedCreateUserError']
    export const isProductFeedCreateUserError = (obj?: { __typename?: any } | null): obj is ProductFeedCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeedCreateUserError"')
      return ProductFeedCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeedDeletePayload_possibleTypes: string[] = ['ProductFeedDeletePayload']
    export const isProductFeedDeletePayload = (obj?: { __typename?: any } | null): obj is ProductFeedDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeedDeletePayload"')
      return ProductFeedDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeedDeleteUserError_possibleTypes: string[] = ['ProductFeedDeleteUserError']
    export const isProductFeedDeleteUserError = (obj?: { __typename?: any } | null): obj is ProductFeedDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeedDeleteUserError"')
      return ProductFeedDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFeedEdge_possibleTypes: string[] = ['ProductFeedEdge']
    export const isProductFeedEdge = (obj?: { __typename?: any } | null): obj is ProductFeedEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFeedEdge"')
      return ProductFeedEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFullSyncPayload_possibleTypes: string[] = ['ProductFullSyncPayload']
    export const isProductFullSyncPayload = (obj?: { __typename?: any } | null): obj is ProductFullSyncPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFullSyncPayload"')
      return ProductFullSyncPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductFullSyncUserError_possibleTypes: string[] = ['ProductFullSyncUserError']
    export const isProductFullSyncUserError = (obj?: { __typename?: any } | null): obj is ProductFullSyncUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductFullSyncUserError"')
      return ProductFullSyncUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductImageUpdatePayload_possibleTypes: string[] = ['ProductImageUpdatePayload']
    export const isProductImageUpdatePayload = (obj?: { __typename?: any } | null): obj is ProductImageUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductImageUpdatePayload"')
      return ProductImageUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductJoinSellingPlanGroupsPayload_possibleTypes: string[] = ['ProductJoinSellingPlanGroupsPayload']
    export const isProductJoinSellingPlanGroupsPayload = (obj?: { __typename?: any } | null): obj is ProductJoinSellingPlanGroupsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductJoinSellingPlanGroupsPayload"')
      return ProductJoinSellingPlanGroupsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductLeaveSellingPlanGroupsPayload_possibleTypes: string[] = ['ProductLeaveSellingPlanGroupsPayload']
    export const isProductLeaveSellingPlanGroupsPayload = (obj?: { __typename?: any } | null): obj is ProductLeaveSellingPlanGroupsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductLeaveSellingPlanGroupsPayload"')
      return ProductLeaveSellingPlanGroupsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductOption_possibleTypes: string[] = ['ProductOption']
    export const isProductOption = (obj?: { __typename?: any } | null): obj is ProductOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductOption"')
      return ProductOption_possibleTypes.includes(obj.__typename)
    }
    


    const ProductPriceRange_possibleTypes: string[] = ['ProductPriceRange']
    export const isProductPriceRange = (obj?: { __typename?: any } | null): obj is ProductPriceRange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductPriceRange"')
      return ProductPriceRange_possibleTypes.includes(obj.__typename)
    }
    


    const ProductPriceRangeV2_possibleTypes: string[] = ['ProductPriceRangeV2']
    export const isProductPriceRangeV2 = (obj?: { __typename?: any } | null): obj is ProductPriceRangeV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductPriceRangeV2"')
      return ProductPriceRangeV2_possibleTypes.includes(obj.__typename)
    }
    


    const ProductPublication_possibleTypes: string[] = ['ProductPublication']
    export const isProductPublication = (obj?: { __typename?: any } | null): obj is ProductPublication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductPublication"')
      return ProductPublication_possibleTypes.includes(obj.__typename)
    }
    


    const ProductPublicationConnection_possibleTypes: string[] = ['ProductPublicationConnection']
    export const isProductPublicationConnection = (obj?: { __typename?: any } | null): obj is ProductPublicationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductPublicationConnection"')
      return ProductPublicationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductPublicationEdge_possibleTypes: string[] = ['ProductPublicationEdge']
    export const isProductPublicationEdge = (obj?: { __typename?: any } | null): obj is ProductPublicationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductPublicationEdge"')
      return ProductPublicationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ProductPublishPayload_possibleTypes: string[] = ['ProductPublishPayload']
    export const isProductPublishPayload = (obj?: { __typename?: any } | null): obj is ProductPublishPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductPublishPayload"')
      return ProductPublishPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductReorderImagesPayload_possibleTypes: string[] = ['ProductReorderImagesPayload']
    export const isProductReorderImagesPayload = (obj?: { __typename?: any } | null): obj is ProductReorderImagesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductReorderImagesPayload"')
      return ProductReorderImagesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductReorderMediaPayload_possibleTypes: string[] = ['ProductReorderMediaPayload']
    export const isProductReorderMediaPayload = (obj?: { __typename?: any } | null): obj is ProductReorderMediaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductReorderMediaPayload"')
      return ProductReorderMediaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductResourceFeedback_possibleTypes: string[] = ['ProductResourceFeedback']
    export const isProductResourceFeedback = (obj?: { __typename?: any } | null): obj is ProductResourceFeedback => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductResourceFeedback"')
      return ProductResourceFeedback_possibleTypes.includes(obj.__typename)
    }
    


    const ProductSale_possibleTypes: string[] = ['ProductSale']
    export const isProductSale = (obj?: { __typename?: any } | null): obj is ProductSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductSale"')
      return ProductSale_possibleTypes.includes(obj.__typename)
    }
    


    const ProductTaxonomyNode_possibleTypes: string[] = ['ProductTaxonomyNode']
    export const isProductTaxonomyNode = (obj?: { __typename?: any } | null): obj is ProductTaxonomyNode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductTaxonomyNode"')
      return ProductTaxonomyNode_possibleTypes.includes(obj.__typename)
    }
    


    const ProductUnpublishPayload_possibleTypes: string[] = ['ProductUnpublishPayload']
    export const isProductUnpublishPayload = (obj?: { __typename?: any } | null): obj is ProductUnpublishPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductUnpublishPayload"')
      return ProductUnpublishPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductUpdateMediaPayload_possibleTypes: string[] = ['ProductUpdateMediaPayload']
    export const isProductUpdateMediaPayload = (obj?: { __typename?: any } | null): obj is ProductUpdateMediaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductUpdateMediaPayload"')
      return ProductUpdateMediaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductUpdatePayload_possibleTypes: string[] = ['ProductUpdatePayload']
    export const isProductUpdatePayload = (obj?: { __typename?: any } | null): obj is ProductUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductUpdatePayload"')
      return ProductUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariant_possibleTypes: string[] = ['ProductVariant']
    export const isProductVariant = (obj?: { __typename?: any } | null): obj is ProductVariant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariant"')
      return ProductVariant_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantAppendMediaPayload_possibleTypes: string[] = ['ProductVariantAppendMediaPayload']
    export const isProductVariantAppendMediaPayload = (obj?: { __typename?: any } | null): obj is ProductVariantAppendMediaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantAppendMediaPayload"')
      return ProductVariantAppendMediaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantComponent_possibleTypes: string[] = ['ProductVariantComponent']
    export const isProductVariantComponent = (obj?: { __typename?: any } | null): obj is ProductVariantComponent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantComponent"')
      return ProductVariantComponent_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantComponentConnection_possibleTypes: string[] = ['ProductVariantComponentConnection']
    export const isProductVariantComponentConnection = (obj?: { __typename?: any } | null): obj is ProductVariantComponentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantComponentConnection"')
      return ProductVariantComponentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantComponentEdge_possibleTypes: string[] = ['ProductVariantComponentEdge']
    export const isProductVariantComponentEdge = (obj?: { __typename?: any } | null): obj is ProductVariantComponentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantComponentEdge"')
      return ProductVariantComponentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantConnection_possibleTypes: string[] = ['ProductVariantConnection']
    export const isProductVariantConnection = (obj?: { __typename?: any } | null): obj is ProductVariantConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantConnection"')
      return ProductVariantConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantContextualPricing_possibleTypes: string[] = ['ProductVariantContextualPricing']
    export const isProductVariantContextualPricing = (obj?: { __typename?: any } | null): obj is ProductVariantContextualPricing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantContextualPricing"')
      return ProductVariantContextualPricing_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantCreatePayload_possibleTypes: string[] = ['ProductVariantCreatePayload']
    export const isProductVariantCreatePayload = (obj?: { __typename?: any } | null): obj is ProductVariantCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantCreatePayload"')
      return ProductVariantCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantDeletePayload_possibleTypes: string[] = ['ProductVariantDeletePayload']
    export const isProductVariantDeletePayload = (obj?: { __typename?: any } | null): obj is ProductVariantDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantDeletePayload"')
      return ProductVariantDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantDetachMediaPayload_possibleTypes: string[] = ['ProductVariantDetachMediaPayload']
    export const isProductVariantDetachMediaPayload = (obj?: { __typename?: any } | null): obj is ProductVariantDetachMediaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantDetachMediaPayload"')
      return ProductVariantDetachMediaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantEdge_possibleTypes: string[] = ['ProductVariantEdge']
    export const isProductVariantEdge = (obj?: { __typename?: any } | null): obj is ProductVariantEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantEdge"')
      return ProductVariantEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantJoinSellingPlanGroupsPayload_possibleTypes: string[] = ['ProductVariantJoinSellingPlanGroupsPayload']
    export const isProductVariantJoinSellingPlanGroupsPayload = (obj?: { __typename?: any } | null): obj is ProductVariantJoinSellingPlanGroupsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantJoinSellingPlanGroupsPayload"')
      return ProductVariantJoinSellingPlanGroupsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantLeaveSellingPlanGroupsPayload_possibleTypes: string[] = ['ProductVariantLeaveSellingPlanGroupsPayload']
    export const isProductVariantLeaveSellingPlanGroupsPayload = (obj?: { __typename?: any } | null): obj is ProductVariantLeaveSellingPlanGroupsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantLeaveSellingPlanGroupsPayload"')
      return ProductVariantLeaveSellingPlanGroupsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantPricePair_possibleTypes: string[] = ['ProductVariantPricePair']
    export const isProductVariantPricePair = (obj?: { __typename?: any } | null): obj is ProductVariantPricePair => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantPricePair"')
      return ProductVariantPricePair_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantPricePairConnection_possibleTypes: string[] = ['ProductVariantPricePairConnection']
    export const isProductVariantPricePairConnection = (obj?: { __typename?: any } | null): obj is ProductVariantPricePairConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantPricePairConnection"')
      return ProductVariantPricePairConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantPricePairEdge_possibleTypes: string[] = ['ProductVariantPricePairEdge']
    export const isProductVariantPricePairEdge = (obj?: { __typename?: any } | null): obj is ProductVariantPricePairEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantPricePairEdge"')
      return ProductVariantPricePairEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantRelationshipBulkUpdatePayload_possibleTypes: string[] = ['ProductVariantRelationshipBulkUpdatePayload']
    export const isProductVariantRelationshipBulkUpdatePayload = (obj?: { __typename?: any } | null): obj is ProductVariantRelationshipBulkUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantRelationshipBulkUpdatePayload"')
      return ProductVariantRelationshipBulkUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantRelationshipBulkUpdateUserError_possibleTypes: string[] = ['ProductVariantRelationshipBulkUpdateUserError']
    export const isProductVariantRelationshipBulkUpdateUserError = (obj?: { __typename?: any } | null): obj is ProductVariantRelationshipBulkUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantRelationshipBulkUpdateUserError"')
      return ProductVariantRelationshipBulkUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantUpdatePayload_possibleTypes: string[] = ['ProductVariantUpdatePayload']
    export const isProductVariantUpdatePayload = (obj?: { __typename?: any } | null): obj is ProductVariantUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantUpdatePayload"')
      return ProductVariantUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkCreatePayload_possibleTypes: string[] = ['ProductVariantsBulkCreatePayload']
    export const isProductVariantsBulkCreatePayload = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkCreatePayload"')
      return ProductVariantsBulkCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkCreateUserError_possibleTypes: string[] = ['ProductVariantsBulkCreateUserError']
    export const isProductVariantsBulkCreateUserError = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkCreateUserError"')
      return ProductVariantsBulkCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkDeletePayload_possibleTypes: string[] = ['ProductVariantsBulkDeletePayload']
    export const isProductVariantsBulkDeletePayload = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkDeletePayload"')
      return ProductVariantsBulkDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkDeleteUserError_possibleTypes: string[] = ['ProductVariantsBulkDeleteUserError']
    export const isProductVariantsBulkDeleteUserError = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkDeleteUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkDeleteUserError"')
      return ProductVariantsBulkDeleteUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkReorderPayload_possibleTypes: string[] = ['ProductVariantsBulkReorderPayload']
    export const isProductVariantsBulkReorderPayload = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkReorderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkReorderPayload"')
      return ProductVariantsBulkReorderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkReorderUserError_possibleTypes: string[] = ['ProductVariantsBulkReorderUserError']
    export const isProductVariantsBulkReorderUserError = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkReorderUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkReorderUserError"')
      return ProductVariantsBulkReorderUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkUpdatePayload_possibleTypes: string[] = ['ProductVariantsBulkUpdatePayload']
    export const isProductVariantsBulkUpdatePayload = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkUpdatePayload"')
      return ProductVariantsBulkUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ProductVariantsBulkUpdateUserError_possibleTypes: string[] = ['ProductVariantsBulkUpdateUserError']
    export const isProductVariantsBulkUpdateUserError = (obj?: { __typename?: any } | null): obj is ProductVariantsBulkUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProductVariantsBulkUpdateUserError"')
      return ProductVariantsBulkUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PubSubServerPixelUpdatePayload_possibleTypes: string[] = ['PubSubServerPixelUpdatePayload']
    export const isPubSubServerPixelUpdatePayload = (obj?: { __typename?: any } | null): obj is PubSubServerPixelUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPubSubServerPixelUpdatePayload"')
      return PubSubServerPixelUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PubSubWebhookSubscriptionCreatePayload_possibleTypes: string[] = ['PubSubWebhookSubscriptionCreatePayload']
    export const isPubSubWebhookSubscriptionCreatePayload = (obj?: { __typename?: any } | null): obj is PubSubWebhookSubscriptionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPubSubWebhookSubscriptionCreatePayload"')
      return PubSubWebhookSubscriptionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PubSubWebhookSubscriptionCreateUserError_possibleTypes: string[] = ['PubSubWebhookSubscriptionCreateUserError']
    export const isPubSubWebhookSubscriptionCreateUserError = (obj?: { __typename?: any } | null): obj is PubSubWebhookSubscriptionCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPubSubWebhookSubscriptionCreateUserError"')
      return PubSubWebhookSubscriptionCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const PubSubWebhookSubscriptionUpdatePayload_possibleTypes: string[] = ['PubSubWebhookSubscriptionUpdatePayload']
    export const isPubSubWebhookSubscriptionUpdatePayload = (obj?: { __typename?: any } | null): obj is PubSubWebhookSubscriptionUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPubSubWebhookSubscriptionUpdatePayload"')
      return PubSubWebhookSubscriptionUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PubSubWebhookSubscriptionUpdateUserError_possibleTypes: string[] = ['PubSubWebhookSubscriptionUpdateUserError']
    export const isPubSubWebhookSubscriptionUpdateUserError = (obj?: { __typename?: any } | null): obj is PubSubWebhookSubscriptionUpdateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPubSubWebhookSubscriptionUpdateUserError"')
      return PubSubWebhookSubscriptionUpdateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Publication_possibleTypes: string[] = ['Publication']
    export const isPublication = (obj?: { __typename?: any } | null): obj is Publication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublication"')
      return Publication_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationConnection_possibleTypes: string[] = ['PublicationConnection']
    export const isPublicationConnection = (obj?: { __typename?: any } | null): obj is PublicationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationConnection"')
      return PublicationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationCreatePayload_possibleTypes: string[] = ['PublicationCreatePayload']
    export const isPublicationCreatePayload = (obj?: { __typename?: any } | null): obj is PublicationCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationCreatePayload"')
      return PublicationCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationDeletePayload_possibleTypes: string[] = ['PublicationDeletePayload']
    export const isPublicationDeletePayload = (obj?: { __typename?: any } | null): obj is PublicationDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationDeletePayload"')
      return PublicationDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationEdge_possibleTypes: string[] = ['PublicationEdge']
    export const isPublicationEdge = (obj?: { __typename?: any } | null): obj is PublicationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationEdge"')
      return PublicationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationOperation_possibleTypes: string[] = ['AddAllProductsOperation','CatalogCsvOperation','PublicationResourceOperation']
    export const isPublicationOperation = (obj?: { __typename?: any } | null): obj is PublicationOperation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationOperation"')
      return PublicationOperation_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationResourceOperation_possibleTypes: string[] = ['PublicationResourceOperation']
    export const isPublicationResourceOperation = (obj?: { __typename?: any } | null): obj is PublicationResourceOperation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationResourceOperation"')
      return PublicationResourceOperation_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationUpdatePayload_possibleTypes: string[] = ['PublicationUpdatePayload']
    export const isPublicationUpdatePayload = (obj?: { __typename?: any } | null): obj is PublicationUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationUpdatePayload"')
      return PublicationUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const PublicationUserError_possibleTypes: string[] = ['PublicationUserError']
    export const isPublicationUserError = (obj?: { __typename?: any } | null): obj is PublicationUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicationUserError"')
      return PublicationUserError_possibleTypes.includes(obj.__typename)
    }
    


    const Publishable_possibleTypes: string[] = ['Collection','Product']
    export const isPublishable = (obj?: { __typename?: any } | null): obj is Publishable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublishable"')
      return Publishable_possibleTypes.includes(obj.__typename)
    }
    


    const PublishablePublishPayload_possibleTypes: string[] = ['PublishablePublishPayload']
    export const isPublishablePublishPayload = (obj?: { __typename?: any } | null): obj is PublishablePublishPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublishablePublishPayload"')
      return PublishablePublishPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PublishablePublishToCurrentChannelPayload_possibleTypes: string[] = ['PublishablePublishToCurrentChannelPayload']
    export const isPublishablePublishToCurrentChannelPayload = (obj?: { __typename?: any } | null): obj is PublishablePublishToCurrentChannelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublishablePublishToCurrentChannelPayload"')
      return PublishablePublishToCurrentChannelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PublishableUnpublishPayload_possibleTypes: string[] = ['PublishableUnpublishPayload']
    export const isPublishableUnpublishPayload = (obj?: { __typename?: any } | null): obj is PublishableUnpublishPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublishableUnpublishPayload"')
      return PublishableUnpublishPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PublishableUnpublishToCurrentChannelPayload_possibleTypes: string[] = ['PublishableUnpublishToCurrentChannelPayload']
    export const isPublishableUnpublishToCurrentChannelPayload = (obj?: { __typename?: any } | null): obj is PublishableUnpublishToCurrentChannelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublishableUnpublishToCurrentChannelPayload"')
      return PublishableUnpublishToCurrentChannelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PurchasingCompany_possibleTypes: string[] = ['PurchasingCompany']
    export const isPurchasingCompany = (obj?: { __typename?: any } | null): obj is PurchasingCompany => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPurchasingCompany"')
      return PurchasingCompany_possibleTypes.includes(obj.__typename)
    }
    


    const PurchasingEntity_possibleTypes: string[] = ['Customer','PurchasingCompany']
    export const isPurchasingEntity = (obj?: { __typename?: any } | null): obj is PurchasingEntity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPurchasingEntity"')
      return PurchasingEntity_possibleTypes.includes(obj.__typename)
    }
    


    const QuantityRule_possibleTypes: string[] = ['QuantityRule']
    export const isQuantityRule = (obj?: { __typename?: any } | null): obj is QuantityRule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuantityRule"')
      return QuantityRule_possibleTypes.includes(obj.__typename)
    }
    


    const QuantityRuleConnection_possibleTypes: string[] = ['QuantityRuleConnection']
    export const isQuantityRuleConnection = (obj?: { __typename?: any } | null): obj is QuantityRuleConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuantityRuleConnection"')
      return QuantityRuleConnection_possibleTypes.includes(obj.__typename)
    }
    


    const QuantityRuleEdge_possibleTypes: string[] = ['QuantityRuleEdge']
    export const isQuantityRuleEdge = (obj?: { __typename?: any } | null): obj is QuantityRuleEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuantityRuleEdge"')
      return QuantityRuleEdge_possibleTypes.includes(obj.__typename)
    }
    


    const QuantityRuleUserError_possibleTypes: string[] = ['QuantityRuleUserError']
    export const isQuantityRuleUserError = (obj?: { __typename?: any } | null): obj is QuantityRuleUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuantityRuleUserError"')
      return QuantityRuleUserError_possibleTypes.includes(obj.__typename)
    }
    


    const QuantityRulesAddPayload_possibleTypes: string[] = ['QuantityRulesAddPayload']
    export const isQuantityRulesAddPayload = (obj?: { __typename?: any } | null): obj is QuantityRulesAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuantityRulesAddPayload"')
      return QuantityRulesAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const QuantityRulesDeletePayload_possibleTypes: string[] = ['QuantityRulesDeletePayload']
    export const isQuantityRulesDeletePayload = (obj?: { __typename?: any } | null): obj is QuantityRulesDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuantityRulesDeletePayload"')
      return QuantityRulesDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const QueryRoot_possibleTypes: string[] = ['QueryRoot']
    export const isQueryRoot = (obj?: { __typename?: any } | null): obj is QueryRoot => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQueryRoot"')
      return QueryRoot_possibleTypes.includes(obj.__typename)
    }
    


    const Refund_possibleTypes: string[] = ['Refund']
    export const isRefund = (obj?: { __typename?: any } | null): obj is Refund => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefund"')
      return Refund_possibleTypes.includes(obj.__typename)
    }
    


    const RefundAgreement_possibleTypes: string[] = ['RefundAgreement']
    export const isRefundAgreement = (obj?: { __typename?: any } | null): obj is RefundAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundAgreement"')
      return RefundAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const RefundConnection_possibleTypes: string[] = ['RefundConnection']
    export const isRefundConnection = (obj?: { __typename?: any } | null): obj is RefundConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundConnection"')
      return RefundConnection_possibleTypes.includes(obj.__typename)
    }
    


    const RefundCreatePayload_possibleTypes: string[] = ['RefundCreatePayload']
    export const isRefundCreatePayload = (obj?: { __typename?: any } | null): obj is RefundCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundCreatePayload"')
      return RefundCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const RefundDuty_possibleTypes: string[] = ['RefundDuty']
    export const isRefundDuty = (obj?: { __typename?: any } | null): obj is RefundDuty => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundDuty"')
      return RefundDuty_possibleTypes.includes(obj.__typename)
    }
    


    const RefundEdge_possibleTypes: string[] = ['RefundEdge']
    export const isRefundEdge = (obj?: { __typename?: any } | null): obj is RefundEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundEdge"')
      return RefundEdge_possibleTypes.includes(obj.__typename)
    }
    


    const RefundLineItem_possibleTypes: string[] = ['RefundLineItem']
    export const isRefundLineItem = (obj?: { __typename?: any } | null): obj is RefundLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundLineItem"')
      return RefundLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const RefundLineItemConnection_possibleTypes: string[] = ['RefundLineItemConnection']
    export const isRefundLineItemConnection = (obj?: { __typename?: any } | null): obj is RefundLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundLineItemConnection"')
      return RefundLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const RefundLineItemEdge_possibleTypes: string[] = ['RefundLineItemEdge']
    export const isRefundLineItemEdge = (obj?: { __typename?: any } | null): obj is RefundLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundLineItemEdge"')
      return RefundLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ResourceAlert_possibleTypes: string[] = ['ResourceAlert']
    export const isResourceAlert = (obj?: { __typename?: any } | null): obj is ResourceAlert => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourceAlert"')
      return ResourceAlert_possibleTypes.includes(obj.__typename)
    }
    


    const ResourceAlertAction_possibleTypes: string[] = ['ResourceAlertAction']
    export const isResourceAlertAction = (obj?: { __typename?: any } | null): obj is ResourceAlertAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourceAlertAction"')
      return ResourceAlertAction_possibleTypes.includes(obj.__typename)
    }
    


    const ResourceFeedback_possibleTypes: string[] = ['ResourceFeedback']
    export const isResourceFeedback = (obj?: { __typename?: any } | null): obj is ResourceFeedback => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourceFeedback"')
      return ResourceFeedback_possibleTypes.includes(obj.__typename)
    }
    


    const ResourceLimit_possibleTypes: string[] = ['ResourceLimit']
    export const isResourceLimit = (obj?: { __typename?: any } | null): obj is ResourceLimit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourceLimit"')
      return ResourceLimit_possibleTypes.includes(obj.__typename)
    }
    


    const ResourceOperation_possibleTypes: string[] = ['AddAllProductsOperation','CatalogCsvOperation','PublicationResourceOperation']
    export const isResourceOperation = (obj?: { __typename?: any } | null): obj is ResourceOperation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourceOperation"')
      return ResourceOperation_possibleTypes.includes(obj.__typename)
    }
    


    const ResourcePublication_possibleTypes: string[] = ['ResourcePublication']
    export const isResourcePublication = (obj?: { __typename?: any } | null): obj is ResourcePublication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourcePublication"')
      return ResourcePublication_possibleTypes.includes(obj.__typename)
    }
    


    const ResourcePublicationConnection_possibleTypes: string[] = ['ResourcePublicationConnection']
    export const isResourcePublicationConnection = (obj?: { __typename?: any } | null): obj is ResourcePublicationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourcePublicationConnection"')
      return ResourcePublicationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ResourcePublicationEdge_possibleTypes: string[] = ['ResourcePublicationEdge']
    export const isResourcePublicationEdge = (obj?: { __typename?: any } | null): obj is ResourcePublicationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourcePublicationEdge"')
      return ResourcePublicationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ResourcePublicationV2_possibleTypes: string[] = ['ResourcePublicationV2']
    export const isResourcePublicationV2 = (obj?: { __typename?: any } | null): obj is ResourcePublicationV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourcePublicationV2"')
      return ResourcePublicationV2_possibleTypes.includes(obj.__typename)
    }
    


    const ResourcePublicationV2Connection_possibleTypes: string[] = ['ResourcePublicationV2Connection']
    export const isResourcePublicationV2Connection = (obj?: { __typename?: any } | null): obj is ResourcePublicationV2Connection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourcePublicationV2Connection"')
      return ResourcePublicationV2Connection_possibleTypes.includes(obj.__typename)
    }
    


    const ResourcePublicationV2Edge_possibleTypes: string[] = ['ResourcePublicationV2Edge']
    export const isResourcePublicationV2Edge = (obj?: { __typename?: any } | null): obj is ResourcePublicationV2Edge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResourcePublicationV2Edge"')
      return ResourcePublicationV2Edge_possibleTypes.includes(obj.__typename)
    }
    


    const Return_possibleTypes: string[] = ['Return']
    export const isReturn = (obj?: { __typename?: any } | null): obj is Return => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturn"')
      return Return_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnApproveRequestPayload_possibleTypes: string[] = ['ReturnApproveRequestPayload']
    export const isReturnApproveRequestPayload = (obj?: { __typename?: any } | null): obj is ReturnApproveRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnApproveRequestPayload"')
      return ReturnApproveRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnCancelPayload_possibleTypes: string[] = ['ReturnCancelPayload']
    export const isReturnCancelPayload = (obj?: { __typename?: any } | null): obj is ReturnCancelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnCancelPayload"')
      return ReturnCancelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnClosePayload_possibleTypes: string[] = ['ReturnClosePayload']
    export const isReturnClosePayload = (obj?: { __typename?: any } | null): obj is ReturnClosePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnClosePayload"')
      return ReturnClosePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnConnection_possibleTypes: string[] = ['ReturnConnection']
    export const isReturnConnection = (obj?: { __typename?: any } | null): obj is ReturnConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnConnection"')
      return ReturnConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnCreatePayload_possibleTypes: string[] = ['ReturnCreatePayload']
    export const isReturnCreatePayload = (obj?: { __typename?: any } | null): obj is ReturnCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnCreatePayload"')
      return ReturnCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnDecline_possibleTypes: string[] = ['ReturnDecline']
    export const isReturnDecline = (obj?: { __typename?: any } | null): obj is ReturnDecline => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnDecline"')
      return ReturnDecline_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnDeclineRequestPayload_possibleTypes: string[] = ['ReturnDeclineRequestPayload']
    export const isReturnDeclineRequestPayload = (obj?: { __typename?: any } | null): obj is ReturnDeclineRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnDeclineRequestPayload"')
      return ReturnDeclineRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnEdge_possibleTypes: string[] = ['ReturnEdge']
    export const isReturnEdge = (obj?: { __typename?: any } | null): obj is ReturnEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnEdge"')
      return ReturnEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnLineItem_possibleTypes: string[] = ['ReturnLineItem']
    export const isReturnLineItem = (obj?: { __typename?: any } | null): obj is ReturnLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnLineItem"')
      return ReturnLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnLineItemConnection_possibleTypes: string[] = ['ReturnLineItemConnection']
    export const isReturnLineItemConnection = (obj?: { __typename?: any } | null): obj is ReturnLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnLineItemConnection"')
      return ReturnLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnLineItemEdge_possibleTypes: string[] = ['ReturnLineItemEdge']
    export const isReturnLineItemEdge = (obj?: { __typename?: any } | null): obj is ReturnLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnLineItemEdge"')
      return ReturnLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnRefundPayload_possibleTypes: string[] = ['ReturnRefundPayload']
    export const isReturnRefundPayload = (obj?: { __typename?: any } | null): obj is ReturnRefundPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnRefundPayload"')
      return ReturnRefundPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnReopenPayload_possibleTypes: string[] = ['ReturnReopenPayload']
    export const isReturnReopenPayload = (obj?: { __typename?: any } | null): obj is ReturnReopenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnReopenPayload"')
      return ReturnReopenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnRequestPayload_possibleTypes: string[] = ['ReturnRequestPayload']
    export const isReturnRequestPayload = (obj?: { __typename?: any } | null): obj is ReturnRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnRequestPayload"')
      return ReturnRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnUserError_possibleTypes: string[] = ['ReturnUserError']
    export const isReturnUserError = (obj?: { __typename?: any } | null): obj is ReturnUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnUserError"')
      return ReturnUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnableFulfillment_possibleTypes: string[] = ['ReturnableFulfillment']
    export const isReturnableFulfillment = (obj?: { __typename?: any } | null): obj is ReturnableFulfillment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnableFulfillment"')
      return ReturnableFulfillment_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnableFulfillmentConnection_possibleTypes: string[] = ['ReturnableFulfillmentConnection']
    export const isReturnableFulfillmentConnection = (obj?: { __typename?: any } | null): obj is ReturnableFulfillmentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnableFulfillmentConnection"')
      return ReturnableFulfillmentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnableFulfillmentEdge_possibleTypes: string[] = ['ReturnableFulfillmentEdge']
    export const isReturnableFulfillmentEdge = (obj?: { __typename?: any } | null): obj is ReturnableFulfillmentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnableFulfillmentEdge"')
      return ReturnableFulfillmentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnableFulfillmentLineItem_possibleTypes: string[] = ['ReturnableFulfillmentLineItem']
    export const isReturnableFulfillmentLineItem = (obj?: { __typename?: any } | null): obj is ReturnableFulfillmentLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnableFulfillmentLineItem"')
      return ReturnableFulfillmentLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnableFulfillmentLineItemConnection_possibleTypes: string[] = ['ReturnableFulfillmentLineItemConnection']
    export const isReturnableFulfillmentLineItemConnection = (obj?: { __typename?: any } | null): obj is ReturnableFulfillmentLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnableFulfillmentLineItemConnection"')
      return ReturnableFulfillmentLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReturnableFulfillmentLineItemEdge_possibleTypes: string[] = ['ReturnableFulfillmentLineItemEdge']
    export const isReturnableFulfillmentLineItemEdge = (obj?: { __typename?: any } | null): obj is ReturnableFulfillmentLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReturnableFulfillmentLineItemEdge"')
      return ReturnableFulfillmentLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDelivery_possibleTypes: string[] = ['ReverseDelivery']
    export const isReverseDelivery = (obj?: { __typename?: any } | null): obj is ReverseDelivery => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDelivery"')
      return ReverseDelivery_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryConnection_possibleTypes: string[] = ['ReverseDeliveryConnection']
    export const isReverseDeliveryConnection = (obj?: { __typename?: any } | null): obj is ReverseDeliveryConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryConnection"')
      return ReverseDeliveryConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryCreateWithShippingPayload_possibleTypes: string[] = ['ReverseDeliveryCreateWithShippingPayload']
    export const isReverseDeliveryCreateWithShippingPayload = (obj?: { __typename?: any } | null): obj is ReverseDeliveryCreateWithShippingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryCreateWithShippingPayload"')
      return ReverseDeliveryCreateWithShippingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryDeliverable_possibleTypes: string[] = ['ReverseDeliveryShippingDeliverable']
    export const isReverseDeliveryDeliverable = (obj?: { __typename?: any } | null): obj is ReverseDeliveryDeliverable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryDeliverable"')
      return ReverseDeliveryDeliverable_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryDisposePayload_possibleTypes: string[] = ['ReverseDeliveryDisposePayload']
    export const isReverseDeliveryDisposePayload = (obj?: { __typename?: any } | null): obj is ReverseDeliveryDisposePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryDisposePayload"')
      return ReverseDeliveryDisposePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryEdge_possibleTypes: string[] = ['ReverseDeliveryEdge']
    export const isReverseDeliveryEdge = (obj?: { __typename?: any } | null): obj is ReverseDeliveryEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryEdge"')
      return ReverseDeliveryEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryLabelV2_possibleTypes: string[] = ['ReverseDeliveryLabelV2']
    export const isReverseDeliveryLabelV2 = (obj?: { __typename?: any } | null): obj is ReverseDeliveryLabelV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryLabelV2"')
      return ReverseDeliveryLabelV2_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryLineItem_possibleTypes: string[] = ['ReverseDeliveryLineItem']
    export const isReverseDeliveryLineItem = (obj?: { __typename?: any } | null): obj is ReverseDeliveryLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryLineItem"')
      return ReverseDeliveryLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryLineItemConnection_possibleTypes: string[] = ['ReverseDeliveryLineItemConnection']
    export const isReverseDeliveryLineItemConnection = (obj?: { __typename?: any } | null): obj is ReverseDeliveryLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryLineItemConnection"')
      return ReverseDeliveryLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryLineItemEdge_possibleTypes: string[] = ['ReverseDeliveryLineItemEdge']
    export const isReverseDeliveryLineItemEdge = (obj?: { __typename?: any } | null): obj is ReverseDeliveryLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryLineItemEdge"')
      return ReverseDeliveryLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryShippingDeliverable_possibleTypes: string[] = ['ReverseDeliveryShippingDeliverable']
    export const isReverseDeliveryShippingDeliverable = (obj?: { __typename?: any } | null): obj is ReverseDeliveryShippingDeliverable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryShippingDeliverable"')
      return ReverseDeliveryShippingDeliverable_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryShippingUpdatePayload_possibleTypes: string[] = ['ReverseDeliveryShippingUpdatePayload']
    export const isReverseDeliveryShippingUpdatePayload = (obj?: { __typename?: any } | null): obj is ReverseDeliveryShippingUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryShippingUpdatePayload"')
      return ReverseDeliveryShippingUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseDeliveryTrackingV2_possibleTypes: string[] = ['ReverseDeliveryTrackingV2']
    export const isReverseDeliveryTrackingV2 = (obj?: { __typename?: any } | null): obj is ReverseDeliveryTrackingV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseDeliveryTrackingV2"')
      return ReverseDeliveryTrackingV2_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrder_possibleTypes: string[] = ['ReverseFulfillmentOrder']
    export const isReverseFulfillmentOrder = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrder"')
      return ReverseFulfillmentOrder_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderConnection_possibleTypes: string[] = ['ReverseFulfillmentOrderConnection']
    export const isReverseFulfillmentOrderConnection = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderConnection"')
      return ReverseFulfillmentOrderConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderDisposePayload_possibleTypes: string[] = ['ReverseFulfillmentOrderDisposePayload']
    export const isReverseFulfillmentOrderDisposePayload = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderDisposePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderDisposePayload"')
      return ReverseFulfillmentOrderDisposePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderDisposition_possibleTypes: string[] = ['ReverseFulfillmentOrderDisposition']
    export const isReverseFulfillmentOrderDisposition = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderDisposition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderDisposition"')
      return ReverseFulfillmentOrderDisposition_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderEdge_possibleTypes: string[] = ['ReverseFulfillmentOrderEdge']
    export const isReverseFulfillmentOrderEdge = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderEdge"')
      return ReverseFulfillmentOrderEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderLineItem_possibleTypes: string[] = ['ReverseFulfillmentOrderLineItem']
    export const isReverseFulfillmentOrderLineItem = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderLineItem"')
      return ReverseFulfillmentOrderLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderLineItemConnection_possibleTypes: string[] = ['ReverseFulfillmentOrderLineItemConnection']
    export const isReverseFulfillmentOrderLineItemConnection = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderLineItemConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderLineItemConnection"')
      return ReverseFulfillmentOrderLineItemConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderLineItemEdge_possibleTypes: string[] = ['ReverseFulfillmentOrderLineItemEdge']
    export const isReverseFulfillmentOrderLineItemEdge = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderLineItemEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderLineItemEdge"')
      return ReverseFulfillmentOrderLineItemEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ReverseFulfillmentOrderThirdPartyConfirmation_possibleTypes: string[] = ['ReverseFulfillmentOrderThirdPartyConfirmation']
    export const isReverseFulfillmentOrderThirdPartyConfirmation = (obj?: { __typename?: any } | null): obj is ReverseFulfillmentOrderThirdPartyConfirmation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReverseFulfillmentOrderThirdPartyConfirmation"')
      return ReverseFulfillmentOrderThirdPartyConfirmation_possibleTypes.includes(obj.__typename)
    }
    


    const RowCount_possibleTypes: string[] = ['RowCount']
    export const isRowCount = (obj?: { __typename?: any } | null): obj is RowCount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRowCount"')
      return RowCount_possibleTypes.includes(obj.__typename)
    }
    


    const SEO_possibleTypes: string[] = ['SEO']
    export const isSEO = (obj?: { __typename?: any } | null): obj is SEO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSEO"')
      return SEO_possibleTypes.includes(obj.__typename)
    }
    


    const Sale_possibleTypes: string[] = ['AdditionalFeeSale','AdjustmentSale','DutySale','GiftCardSale','ProductSale','ShippingLineSale','TipSale','UnknownSale']
    export const isSale = (obj?: { __typename?: any } | null): obj is Sale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSale"')
      return Sale_possibleTypes.includes(obj.__typename)
    }
    


    const SaleAdditionalFee_possibleTypes: string[] = ['SaleAdditionalFee']
    export const isSaleAdditionalFee = (obj?: { __typename?: any } | null): obj is SaleAdditionalFee => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSaleAdditionalFee"')
      return SaleAdditionalFee_possibleTypes.includes(obj.__typename)
    }
    


    const SaleConnection_possibleTypes: string[] = ['SaleConnection']
    export const isSaleConnection = (obj?: { __typename?: any } | null): obj is SaleConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSaleConnection"')
      return SaleConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SaleEdge_possibleTypes: string[] = ['SaleEdge']
    export const isSaleEdge = (obj?: { __typename?: any } | null): obj is SaleEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSaleEdge"')
      return SaleEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SaleTax_possibleTypes: string[] = ['SaleTax']
    export const isSaleTax = (obj?: { __typename?: any } | null): obj is SaleTax => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSaleTax"')
      return SaleTax_possibleTypes.includes(obj.__typename)
    }
    


    const SalesAgreement_possibleTypes: string[] = ['OrderAgreement','OrderEditAgreement','RefundAgreement']
    export const isSalesAgreement = (obj?: { __typename?: any } | null): obj is SalesAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSalesAgreement"')
      return SalesAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const SalesAgreementConnection_possibleTypes: string[] = ['SalesAgreementConnection']
    export const isSalesAgreementConnection = (obj?: { __typename?: any } | null): obj is SalesAgreementConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSalesAgreementConnection"')
      return SalesAgreementConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SalesAgreementEdge_possibleTypes: string[] = ['SalesAgreementEdge']
    export const isSalesAgreementEdge = (obj?: { __typename?: any } | null): obj is SalesAgreementEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSalesAgreementEdge"')
      return SalesAgreementEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SavedSearch_possibleTypes: string[] = ['SavedSearch']
    export const isSavedSearch = (obj?: { __typename?: any } | null): obj is SavedSearch => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedSearch"')
      return SavedSearch_possibleTypes.includes(obj.__typename)
    }
    


    const SavedSearchConnection_possibleTypes: string[] = ['SavedSearchConnection']
    export const isSavedSearchConnection = (obj?: { __typename?: any } | null): obj is SavedSearchConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedSearchConnection"')
      return SavedSearchConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SavedSearchCreatePayload_possibleTypes: string[] = ['SavedSearchCreatePayload']
    export const isSavedSearchCreatePayload = (obj?: { __typename?: any } | null): obj is SavedSearchCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedSearchCreatePayload"')
      return SavedSearchCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SavedSearchDeletePayload_possibleTypes: string[] = ['SavedSearchDeletePayload']
    export const isSavedSearchDeletePayload = (obj?: { __typename?: any } | null): obj is SavedSearchDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedSearchDeletePayload"')
      return SavedSearchDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SavedSearchEdge_possibleTypes: string[] = ['SavedSearchEdge']
    export const isSavedSearchEdge = (obj?: { __typename?: any } | null): obj is SavedSearchEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedSearchEdge"')
      return SavedSearchEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SavedSearchUpdatePayload_possibleTypes: string[] = ['SavedSearchUpdatePayload']
    export const isSavedSearchUpdatePayload = (obj?: { __typename?: any } | null): obj is SavedSearchUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedSearchUpdatePayload"')
      return SavedSearchUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptDiscountApplication_possibleTypes: string[] = ['ScriptDiscountApplication']
    export const isScriptDiscountApplication = (obj?: { __typename?: any } | null): obj is ScriptDiscountApplication => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptDiscountApplication"')
      return ScriptDiscountApplication_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptTag_possibleTypes: string[] = ['ScriptTag']
    export const isScriptTag = (obj?: { __typename?: any } | null): obj is ScriptTag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptTag"')
      return ScriptTag_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptTagConnection_possibleTypes: string[] = ['ScriptTagConnection']
    export const isScriptTagConnection = (obj?: { __typename?: any } | null): obj is ScriptTagConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptTagConnection"')
      return ScriptTagConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptTagCreatePayload_possibleTypes: string[] = ['ScriptTagCreatePayload']
    export const isScriptTagCreatePayload = (obj?: { __typename?: any } | null): obj is ScriptTagCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptTagCreatePayload"')
      return ScriptTagCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptTagDeletePayload_possibleTypes: string[] = ['ScriptTagDeletePayload']
    export const isScriptTagDeletePayload = (obj?: { __typename?: any } | null): obj is ScriptTagDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptTagDeletePayload"')
      return ScriptTagDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptTagEdge_possibleTypes: string[] = ['ScriptTagEdge']
    export const isScriptTagEdge = (obj?: { __typename?: any } | null): obj is ScriptTagEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptTagEdge"')
      return ScriptTagEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ScriptTagUpdatePayload_possibleTypes: string[] = ['ScriptTagUpdatePayload']
    export const isScriptTagUpdatePayload = (obj?: { __typename?: any } | null): obj is ScriptTagUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScriptTagUpdatePayload"')
      return ScriptTagUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SearchFilter_possibleTypes: string[] = ['SearchFilter']
    export const isSearchFilter = (obj?: { __typename?: any } | null): obj is SearchFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchFilter"')
      return SearchFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SearchFilterOptions_possibleTypes: string[] = ['SearchFilterOptions']
    export const isSearchFilterOptions = (obj?: { __typename?: any } | null): obj is SearchFilterOptions => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchFilterOptions"')
      return SearchFilterOptions_possibleTypes.includes(obj.__typename)
    }
    


    const SearchResult_possibleTypes: string[] = ['SearchResult']
    export const isSearchResult = (obj?: { __typename?: any } | null): obj is SearchResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResult"')
      return SearchResult_possibleTypes.includes(obj.__typename)
    }
    


    const SearchResultConnection_possibleTypes: string[] = ['SearchResultConnection']
    export const isSearchResultConnection = (obj?: { __typename?: any } | null): obj is SearchResultConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultConnection"')
      return SearchResultConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SearchResultEdge_possibleTypes: string[] = ['SearchResultEdge']
    export const isSearchResultEdge = (obj?: { __typename?: any } | null): obj is SearchResultEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultEdge"')
      return SearchResultEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Segment_possibleTypes: string[] = ['Segment']
    export const isSegment = (obj?: { __typename?: any } | null): obj is Segment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegment"')
      return Segment_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentAssociationFilter_possibleTypes: string[] = ['SegmentAssociationFilter']
    export const isSegmentAssociationFilter = (obj?: { __typename?: any } | null): obj is SegmentAssociationFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentAssociationFilter"')
      return SegmentAssociationFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentAttributeStatistics_possibleTypes: string[] = ['SegmentAttributeStatistics']
    export const isSegmentAttributeStatistics = (obj?: { __typename?: any } | null): obj is SegmentAttributeStatistics => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentAttributeStatistics"')
      return SegmentAttributeStatistics_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentBooleanFilter_possibleTypes: string[] = ['SegmentBooleanFilter']
    export const isSegmentBooleanFilter = (obj?: { __typename?: any } | null): obj is SegmentBooleanFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentBooleanFilter"')
      return SegmentBooleanFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentConnection_possibleTypes: string[] = ['SegmentConnection']
    export const isSegmentConnection = (obj?: { __typename?: any } | null): obj is SegmentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentConnection"')
      return SegmentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentCreatePayload_possibleTypes: string[] = ['SegmentCreatePayload']
    export const isSegmentCreatePayload = (obj?: { __typename?: any } | null): obj is SegmentCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentCreatePayload"')
      return SegmentCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentDateFilter_possibleTypes: string[] = ['SegmentDateFilter']
    export const isSegmentDateFilter = (obj?: { __typename?: any } | null): obj is SegmentDateFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentDateFilter"')
      return SegmentDateFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentDeletePayload_possibleTypes: string[] = ['SegmentDeletePayload']
    export const isSegmentDeletePayload = (obj?: { __typename?: any } | null): obj is SegmentDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentDeletePayload"')
      return SegmentDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentEdge_possibleTypes: string[] = ['SegmentEdge']
    export const isSegmentEdge = (obj?: { __typename?: any } | null): obj is SegmentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentEdge"')
      return SegmentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentEnumFilter_possibleTypes: string[] = ['SegmentEnumFilter']
    export const isSegmentEnumFilter = (obj?: { __typename?: any } | null): obj is SegmentEnumFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentEnumFilter"')
      return SegmentEnumFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentEventFilter_possibleTypes: string[] = ['SegmentEventFilter']
    export const isSegmentEventFilter = (obj?: { __typename?: any } | null): obj is SegmentEventFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentEventFilter"')
      return SegmentEventFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentEventFilterParameter_possibleTypes: string[] = ['SegmentEventFilterParameter']
    export const isSegmentEventFilterParameter = (obj?: { __typename?: any } | null): obj is SegmentEventFilterParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentEventFilterParameter"')
      return SegmentEventFilterParameter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentFilter_possibleTypes: string[] = ['SegmentAssociationFilter','SegmentBooleanFilter','SegmentDateFilter','SegmentEnumFilter','SegmentEventFilter','SegmentFloatFilter','SegmentIntegerFilter','SegmentStringFilter']
    export const isSegmentFilter = (obj?: { __typename?: any } | null): obj is SegmentFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentFilter"')
      return SegmentFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentFilterConnection_possibleTypes: string[] = ['SegmentFilterConnection']
    export const isSegmentFilterConnection = (obj?: { __typename?: any } | null): obj is SegmentFilterConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentFilterConnection"')
      return SegmentFilterConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentFilterEdge_possibleTypes: string[] = ['SegmentFilterEdge']
    export const isSegmentFilterEdge = (obj?: { __typename?: any } | null): obj is SegmentFilterEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentFilterEdge"')
      return SegmentFilterEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentFloatFilter_possibleTypes: string[] = ['SegmentFloatFilter']
    export const isSegmentFloatFilter = (obj?: { __typename?: any } | null): obj is SegmentFloatFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentFloatFilter"')
      return SegmentFloatFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentIntegerFilter_possibleTypes: string[] = ['SegmentIntegerFilter']
    export const isSegmentIntegerFilter = (obj?: { __typename?: any } | null): obj is SegmentIntegerFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentIntegerFilter"')
      return SegmentIntegerFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentMembership_possibleTypes: string[] = ['SegmentMembership']
    export const isSegmentMembership = (obj?: { __typename?: any } | null): obj is SegmentMembership => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentMembership"')
      return SegmentMembership_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentMembershipResponse_possibleTypes: string[] = ['SegmentMembershipResponse']
    export const isSegmentMembershipResponse = (obj?: { __typename?: any } | null): obj is SegmentMembershipResponse => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentMembershipResponse"')
      return SegmentMembershipResponse_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentMigration_possibleTypes: string[] = ['SegmentMigration']
    export const isSegmentMigration = (obj?: { __typename?: any } | null): obj is SegmentMigration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentMigration"')
      return SegmentMigration_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentMigrationConnection_possibleTypes: string[] = ['SegmentMigrationConnection']
    export const isSegmentMigrationConnection = (obj?: { __typename?: any } | null): obj is SegmentMigrationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentMigrationConnection"')
      return SegmentMigrationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentMigrationEdge_possibleTypes: string[] = ['SegmentMigrationEdge']
    export const isSegmentMigrationEdge = (obj?: { __typename?: any } | null): obj is SegmentMigrationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentMigrationEdge"')
      return SegmentMigrationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentStatistics_possibleTypes: string[] = ['SegmentStatistics']
    export const isSegmentStatistics = (obj?: { __typename?: any } | null): obj is SegmentStatistics => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentStatistics"')
      return SegmentStatistics_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentStringFilter_possibleTypes: string[] = ['SegmentStringFilter']
    export const isSegmentStringFilter = (obj?: { __typename?: any } | null): obj is SegmentStringFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentStringFilter"')
      return SegmentStringFilter_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentUpdatePayload_possibleTypes: string[] = ['SegmentUpdatePayload']
    export const isSegmentUpdatePayload = (obj?: { __typename?: any } | null): obj is SegmentUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentUpdatePayload"')
      return SegmentUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentValue_possibleTypes: string[] = ['SegmentValue']
    export const isSegmentValue = (obj?: { __typename?: any } | null): obj is SegmentValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentValue"')
      return SegmentValue_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentValueConnection_possibleTypes: string[] = ['SegmentValueConnection']
    export const isSegmentValueConnection = (obj?: { __typename?: any } | null): obj is SegmentValueConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentValueConnection"')
      return SegmentValueConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SegmentValueEdge_possibleTypes: string[] = ['SegmentValueEdge']
    export const isSegmentValueEdge = (obj?: { __typename?: any } | null): obj is SegmentValueEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSegmentValueEdge"')
      return SegmentValueEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SelectedOption_possibleTypes: string[] = ['SelectedOption']
    export const isSelectedOption = (obj?: { __typename?: any } | null): obj is SelectedOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSelectedOption"')
      return SelectedOption_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlan_possibleTypes: string[] = ['SellingPlan']
    export const isSellingPlan = (obj?: { __typename?: any } | null): obj is SellingPlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlan"')
      return SellingPlan_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanAnchor_possibleTypes: string[] = ['SellingPlanAnchor']
    export const isSellingPlanAnchor = (obj?: { __typename?: any } | null): obj is SellingPlanAnchor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanAnchor"')
      return SellingPlanAnchor_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanBillingPolicy_possibleTypes: string[] = ['SellingPlanFixedBillingPolicy','SellingPlanRecurringBillingPolicy']
    export const isSellingPlanBillingPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanBillingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanBillingPolicy"')
      return SellingPlanBillingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanCheckoutCharge_possibleTypes: string[] = ['SellingPlanCheckoutCharge']
    export const isSellingPlanCheckoutCharge = (obj?: { __typename?: any } | null): obj is SellingPlanCheckoutCharge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanCheckoutCharge"')
      return SellingPlanCheckoutCharge_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanCheckoutChargePercentageValue_possibleTypes: string[] = ['SellingPlanCheckoutChargePercentageValue']
    export const isSellingPlanCheckoutChargePercentageValue = (obj?: { __typename?: any } | null): obj is SellingPlanCheckoutChargePercentageValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanCheckoutChargePercentageValue"')
      return SellingPlanCheckoutChargePercentageValue_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanCheckoutChargeValue_possibleTypes: string[] = ['MoneyV2','SellingPlanCheckoutChargePercentageValue']
    export const isSellingPlanCheckoutChargeValue = (obj?: { __typename?: any } | null): obj is SellingPlanCheckoutChargeValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanCheckoutChargeValue"')
      return SellingPlanCheckoutChargeValue_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanConnection_possibleTypes: string[] = ['SellingPlanConnection']
    export const isSellingPlanConnection = (obj?: { __typename?: any } | null): obj is SellingPlanConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanConnection"')
      return SellingPlanConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanDeliveryPolicy_possibleTypes: string[] = ['SellingPlanFixedDeliveryPolicy','SellingPlanRecurringDeliveryPolicy']
    export const isSellingPlanDeliveryPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanDeliveryPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanDeliveryPolicy"')
      return SellingPlanDeliveryPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanEdge_possibleTypes: string[] = ['SellingPlanEdge']
    export const isSellingPlanEdge = (obj?: { __typename?: any } | null): obj is SellingPlanEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanEdge"')
      return SellingPlanEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanFixedBillingPolicy_possibleTypes: string[] = ['SellingPlanFixedBillingPolicy']
    export const isSellingPlanFixedBillingPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanFixedBillingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanFixedBillingPolicy"')
      return SellingPlanFixedBillingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanFixedDeliveryPolicy_possibleTypes: string[] = ['SellingPlanFixedDeliveryPolicy']
    export const isSellingPlanFixedDeliveryPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanFixedDeliveryPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanFixedDeliveryPolicy"')
      return SellingPlanFixedDeliveryPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanFixedPricingPolicy_possibleTypes: string[] = ['SellingPlanFixedPricingPolicy']
    export const isSellingPlanFixedPricingPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanFixedPricingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanFixedPricingPolicy"')
      return SellingPlanFixedPricingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroup_possibleTypes: string[] = ['SellingPlanGroup']
    export const isSellingPlanGroup = (obj?: { __typename?: any } | null): obj is SellingPlanGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroup"')
      return SellingPlanGroup_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupAddProductVariantsPayload_possibleTypes: string[] = ['SellingPlanGroupAddProductVariantsPayload']
    export const isSellingPlanGroupAddProductVariantsPayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupAddProductVariantsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupAddProductVariantsPayload"')
      return SellingPlanGroupAddProductVariantsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupAddProductsPayload_possibleTypes: string[] = ['SellingPlanGroupAddProductsPayload']
    export const isSellingPlanGroupAddProductsPayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupAddProductsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupAddProductsPayload"')
      return SellingPlanGroupAddProductsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupConnection_possibleTypes: string[] = ['SellingPlanGroupConnection']
    export const isSellingPlanGroupConnection = (obj?: { __typename?: any } | null): obj is SellingPlanGroupConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupConnection"')
      return SellingPlanGroupConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupCreatePayload_possibleTypes: string[] = ['SellingPlanGroupCreatePayload']
    export const isSellingPlanGroupCreatePayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupCreatePayload"')
      return SellingPlanGroupCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupDeletePayload_possibleTypes: string[] = ['SellingPlanGroupDeletePayload']
    export const isSellingPlanGroupDeletePayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupDeletePayload"')
      return SellingPlanGroupDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupEdge_possibleTypes: string[] = ['SellingPlanGroupEdge']
    export const isSellingPlanGroupEdge = (obj?: { __typename?: any } | null): obj is SellingPlanGroupEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupEdge"')
      return SellingPlanGroupEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupRemoveProductVariantsPayload_possibleTypes: string[] = ['SellingPlanGroupRemoveProductVariantsPayload']
    export const isSellingPlanGroupRemoveProductVariantsPayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupRemoveProductVariantsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupRemoveProductVariantsPayload"')
      return SellingPlanGroupRemoveProductVariantsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupRemoveProductsPayload_possibleTypes: string[] = ['SellingPlanGroupRemoveProductsPayload']
    export const isSellingPlanGroupRemoveProductsPayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupRemoveProductsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupRemoveProductsPayload"')
      return SellingPlanGroupRemoveProductsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupUpdatePayload_possibleTypes: string[] = ['SellingPlanGroupUpdatePayload']
    export const isSellingPlanGroupUpdatePayload = (obj?: { __typename?: any } | null): obj is SellingPlanGroupUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupUpdatePayload"')
      return SellingPlanGroupUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanGroupUserError_possibleTypes: string[] = ['SellingPlanGroupUserError']
    export const isSellingPlanGroupUserError = (obj?: { __typename?: any } | null): obj is SellingPlanGroupUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanGroupUserError"')
      return SellingPlanGroupUserError_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanInventoryPolicy_possibleTypes: string[] = ['SellingPlanInventoryPolicy']
    export const isSellingPlanInventoryPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanInventoryPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanInventoryPolicy"')
      return SellingPlanInventoryPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanPricingPolicy_possibleTypes: string[] = ['SellingPlanFixedPricingPolicy','SellingPlanRecurringPricingPolicy']
    export const isSellingPlanPricingPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanPricingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanPricingPolicy"')
      return SellingPlanPricingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanPricingPolicyAdjustmentValue_possibleTypes: string[] = ['MoneyV2','SellingPlanPricingPolicyPercentageValue']
    export const isSellingPlanPricingPolicyAdjustmentValue = (obj?: { __typename?: any } | null): obj is SellingPlanPricingPolicyAdjustmentValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanPricingPolicyAdjustmentValue"')
      return SellingPlanPricingPolicyAdjustmentValue_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanPricingPolicyBase_possibleTypes: string[] = ['SellingPlanFixedPricingPolicy','SellingPlanRecurringPricingPolicy']
    export const isSellingPlanPricingPolicyBase = (obj?: { __typename?: any } | null): obj is SellingPlanPricingPolicyBase => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanPricingPolicyBase"')
      return SellingPlanPricingPolicyBase_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanPricingPolicyPercentageValue_possibleTypes: string[] = ['SellingPlanPricingPolicyPercentageValue']
    export const isSellingPlanPricingPolicyPercentageValue = (obj?: { __typename?: any } | null): obj is SellingPlanPricingPolicyPercentageValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanPricingPolicyPercentageValue"')
      return SellingPlanPricingPolicyPercentageValue_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanRecurringBillingPolicy_possibleTypes: string[] = ['SellingPlanRecurringBillingPolicy']
    export const isSellingPlanRecurringBillingPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanRecurringBillingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanRecurringBillingPolicy"')
      return SellingPlanRecurringBillingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanRecurringDeliveryPolicy_possibleTypes: string[] = ['SellingPlanRecurringDeliveryPolicy']
    export const isSellingPlanRecurringDeliveryPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanRecurringDeliveryPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanRecurringDeliveryPolicy"')
      return SellingPlanRecurringDeliveryPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SellingPlanRecurringPricingPolicy_possibleTypes: string[] = ['SellingPlanRecurringPricingPolicy']
    export const isSellingPlanRecurringPricingPolicy = (obj?: { __typename?: any } | null): obj is SellingPlanRecurringPricingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSellingPlanRecurringPricingPolicy"')
      return SellingPlanRecurringPricingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const ServerPixel_possibleTypes: string[] = ['ServerPixel']
    export const isServerPixel = (obj?: { __typename?: any } | null): obj is ServerPixel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServerPixel"')
      return ServerPixel_possibleTypes.includes(obj.__typename)
    }
    


    const ServerPixelCreatePayload_possibleTypes: string[] = ['ServerPixelCreatePayload']
    export const isServerPixelCreatePayload = (obj?: { __typename?: any } | null): obj is ServerPixelCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServerPixelCreatePayload"')
      return ServerPixelCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ServerPixelDeletePayload_possibleTypes: string[] = ['ServerPixelDeletePayload']
    export const isServerPixelDeletePayload = (obj?: { __typename?: any } | null): obj is ServerPixelDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServerPixelDeletePayload"')
      return ServerPixelDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingLine_possibleTypes: string[] = ['ShippingLine']
    export const isShippingLine = (obj?: { __typename?: any } | null): obj is ShippingLine => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingLine"')
      return ShippingLine_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingLineConnection_possibleTypes: string[] = ['ShippingLineConnection']
    export const isShippingLineConnection = (obj?: { __typename?: any } | null): obj is ShippingLineConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingLineConnection"')
      return ShippingLineConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingLineEdge_possibleTypes: string[] = ['ShippingLineEdge']
    export const isShippingLineEdge = (obj?: { __typename?: any } | null): obj is ShippingLineEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingLineEdge"')
      return ShippingLineEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingLineSale_possibleTypes: string[] = ['ShippingLineSale']
    export const isShippingLineSale = (obj?: { __typename?: any } | null): obj is ShippingLineSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingLineSale"')
      return ShippingLineSale_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingMethod_possibleTypes: string[] = ['ShippingMethod']
    export const isShippingMethod = (obj?: { __typename?: any } | null): obj is ShippingMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingMethod"')
      return ShippingMethod_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingPackageDeletePayload_possibleTypes: string[] = ['ShippingPackageDeletePayload']
    export const isShippingPackageDeletePayload = (obj?: { __typename?: any } | null): obj is ShippingPackageDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingPackageDeletePayload"')
      return ShippingPackageDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingPackageMakeDefaultPayload_possibleTypes: string[] = ['ShippingPackageMakeDefaultPayload']
    export const isShippingPackageMakeDefaultPayload = (obj?: { __typename?: any } | null): obj is ShippingPackageMakeDefaultPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingPackageMakeDefaultPayload"')
      return ShippingPackageMakeDefaultPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingPackageUpdatePayload_possibleTypes: string[] = ['ShippingPackageUpdatePayload']
    export const isShippingPackageUpdatePayload = (obj?: { __typename?: any } | null): obj is ShippingPackageUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingPackageUpdatePayload"')
      return ShippingPackageUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingRate_possibleTypes: string[] = ['ShippingRate']
    export const isShippingRate = (obj?: { __typename?: any } | null): obj is ShippingRate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingRate"')
      return ShippingRate_possibleTypes.includes(obj.__typename)
    }
    


    const ShippingRefund_possibleTypes: string[] = ['ShippingRefund']
    export const isShippingRefund = (obj?: { __typename?: any } | null): obj is ShippingRefund => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShippingRefund"')
      return ShippingRefund_possibleTypes.includes(obj.__typename)
    }
    


    const Shop_possibleTypes: string[] = ['Shop']
    export const isShop = (obj?: { __typename?: any } | null): obj is Shop => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShop"')
      return Shop_possibleTypes.includes(obj.__typename)
    }
    


    const ShopAddress_possibleTypes: string[] = ['ShopAddress']
    export const isShopAddress = (obj?: { __typename?: any } | null): obj is ShopAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopAddress"')
      return ShopAddress_possibleTypes.includes(obj.__typename)
    }
    


    const ShopAlert_possibleTypes: string[] = ['ShopAlert']
    export const isShopAlert = (obj?: { __typename?: any } | null): obj is ShopAlert => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopAlert"')
      return ShopAlert_possibleTypes.includes(obj.__typename)
    }
    


    const ShopAlertAction_possibleTypes: string[] = ['ShopAlertAction']
    export const isShopAlertAction = (obj?: { __typename?: any } | null): obj is ShopAlertAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopAlertAction"')
      return ShopAlertAction_possibleTypes.includes(obj.__typename)
    }
    


    const ShopBillingPreferences_possibleTypes: string[] = ['ShopBillingPreferences']
    export const isShopBillingPreferences = (obj?: { __typename?: any } | null): obj is ShopBillingPreferences => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopBillingPreferences"')
      return ShopBillingPreferences_possibleTypes.includes(obj.__typename)
    }
    


    const ShopFeatures_possibleTypes: string[] = ['ShopFeatures']
    export const isShopFeatures = (obj?: { __typename?: any } | null): obj is ShopFeatures => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopFeatures"')
      return ShopFeatures_possibleTypes.includes(obj.__typename)
    }
    


    const ShopLocale_possibleTypes: string[] = ['ShopLocale']
    export const isShopLocale = (obj?: { __typename?: any } | null): obj is ShopLocale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopLocale"')
      return ShopLocale_possibleTypes.includes(obj.__typename)
    }
    


    const ShopLocaleDisablePayload_possibleTypes: string[] = ['ShopLocaleDisablePayload']
    export const isShopLocaleDisablePayload = (obj?: { __typename?: any } | null): obj is ShopLocaleDisablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopLocaleDisablePayload"')
      return ShopLocaleDisablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShopLocaleEnablePayload_possibleTypes: string[] = ['ShopLocaleEnablePayload']
    export const isShopLocaleEnablePayload = (obj?: { __typename?: any } | null): obj is ShopLocaleEnablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopLocaleEnablePayload"')
      return ShopLocaleEnablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShopLocaleUpdatePayload_possibleTypes: string[] = ['ShopLocaleUpdatePayload']
    export const isShopLocaleUpdatePayload = (obj?: { __typename?: any } | null): obj is ShopLocaleUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopLocaleUpdatePayload"')
      return ShopLocaleUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShopPlan_possibleTypes: string[] = ['ShopPlan']
    export const isShopPlan = (obj?: { __typename?: any } | null): obj is ShopPlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopPlan"')
      return ShopPlan_possibleTypes.includes(obj.__typename)
    }
    


    const ShopPolicy_possibleTypes: string[] = ['ShopPolicy']
    export const isShopPolicy = (obj?: { __typename?: any } | null): obj is ShopPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopPolicy"')
      return ShopPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const ShopPolicyUpdatePayload_possibleTypes: string[] = ['ShopPolicyUpdatePayload']
    export const isShopPolicyUpdatePayload = (obj?: { __typename?: any } | null): obj is ShopPolicyUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopPolicyUpdatePayload"')
      return ShopPolicyUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShopPolicyUserError_possibleTypes: string[] = ['ShopPolicyUserError']
    export const isShopPolicyUserError = (obj?: { __typename?: any } | null): obj is ShopPolicyUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopPolicyUserError"')
      return ShopPolicyUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ShopResourceFeedbackCreatePayload_possibleTypes: string[] = ['ShopResourceFeedbackCreatePayload']
    export const isShopResourceFeedbackCreatePayload = (obj?: { __typename?: any } | null): obj is ShopResourceFeedbackCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopResourceFeedbackCreatePayload"')
      return ShopResourceFeedbackCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ShopResourceFeedbackCreateUserError_possibleTypes: string[] = ['ShopResourceFeedbackCreateUserError']
    export const isShopResourceFeedbackCreateUserError = (obj?: { __typename?: any } | null): obj is ShopResourceFeedbackCreateUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopResourceFeedbackCreateUserError"')
      return ShopResourceFeedbackCreateUserError_possibleTypes.includes(obj.__typename)
    }
    


    const ShopResourceLimits_possibleTypes: string[] = ['ShopResourceLimits']
    export const isShopResourceLimits = (obj?: { __typename?: any } | null): obj is ShopResourceLimits => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopResourceLimits"')
      return ShopResourceLimits_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyFunction_possibleTypes: string[] = ['ShopifyFunction']
    export const isShopifyFunction = (obj?: { __typename?: any } | null): obj is ShopifyFunction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyFunction"')
      return ShopifyFunction_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyFunctionConnection_possibleTypes: string[] = ['ShopifyFunctionConnection']
    export const isShopifyFunctionConnection = (obj?: { __typename?: any } | null): obj is ShopifyFunctionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyFunctionConnection"')
      return ShopifyFunctionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyFunctionEdge_possibleTypes: string[] = ['ShopifyFunctionEdge']
    export const isShopifyFunctionEdge = (obj?: { __typename?: any } | null): obj is ShopifyFunctionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyFunctionEdge"')
      return ShopifyFunctionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsAccount_possibleTypes: string[] = ['ShopifyPaymentsAccount']
    export const isShopifyPaymentsAccount = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsAccount"')
      return ShopifyPaymentsAccount_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsBankAccount_possibleTypes: string[] = ['ShopifyPaymentsBankAccount']
    export const isShopifyPaymentsBankAccount = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsBankAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsBankAccount"')
      return ShopifyPaymentsBankAccount_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsBankAccountConnection_possibleTypes: string[] = ['ShopifyPaymentsBankAccountConnection']
    export const isShopifyPaymentsBankAccountConnection = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsBankAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsBankAccountConnection"')
      return ShopifyPaymentsBankAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsBankAccountEdge_possibleTypes: string[] = ['ShopifyPaymentsBankAccountEdge']
    export const isShopifyPaymentsBankAccountEdge = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsBankAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsBankAccountEdge"')
      return ShopifyPaymentsBankAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsChargeStatementDescriptor_possibleTypes: string[] = ['ShopifyPaymentsDefaultChargeStatementDescriptor','ShopifyPaymentsJpChargeStatementDescriptor']
    export const isShopifyPaymentsChargeStatementDescriptor = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsChargeStatementDescriptor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsChargeStatementDescriptor"')
      return ShopifyPaymentsChargeStatementDescriptor_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDefaultChargeStatementDescriptor_possibleTypes: string[] = ['ShopifyPaymentsDefaultChargeStatementDescriptor']
    export const isShopifyPaymentsDefaultChargeStatementDescriptor = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDefaultChargeStatementDescriptor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDefaultChargeStatementDescriptor"')
      return ShopifyPaymentsDefaultChargeStatementDescriptor_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDispute_possibleTypes: string[] = ['ShopifyPaymentsDispute']
    export const isShopifyPaymentsDispute = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDispute => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDispute"')
      return ShopifyPaymentsDispute_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDisputeConnection_possibleTypes: string[] = ['ShopifyPaymentsDisputeConnection']
    export const isShopifyPaymentsDisputeConnection = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDisputeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDisputeConnection"')
      return ShopifyPaymentsDisputeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDisputeEdge_possibleTypes: string[] = ['ShopifyPaymentsDisputeEdge']
    export const isShopifyPaymentsDisputeEdge = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDisputeEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDisputeEdge"')
      return ShopifyPaymentsDisputeEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDisputeEvidence_possibleTypes: string[] = ['ShopifyPaymentsDisputeEvidence']
    export const isShopifyPaymentsDisputeEvidence = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDisputeEvidence => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDisputeEvidence"')
      return ShopifyPaymentsDisputeEvidence_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDisputeFileUpload_possibleTypes: string[] = ['ShopifyPaymentsDisputeFileUpload']
    export const isShopifyPaymentsDisputeFileUpload = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDisputeFileUpload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDisputeFileUpload"')
      return ShopifyPaymentsDisputeFileUpload_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDisputeFulfillment_possibleTypes: string[] = ['ShopifyPaymentsDisputeFulfillment']
    export const isShopifyPaymentsDisputeFulfillment = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDisputeFulfillment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDisputeFulfillment"')
      return ShopifyPaymentsDisputeFulfillment_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsDisputeReasonDetails_possibleTypes: string[] = ['ShopifyPaymentsDisputeReasonDetails']
    export const isShopifyPaymentsDisputeReasonDetails = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsDisputeReasonDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsDisputeReasonDetails"')
      return ShopifyPaymentsDisputeReasonDetails_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsExtendedAuthorization_possibleTypes: string[] = ['ShopifyPaymentsExtendedAuthorization']
    export const isShopifyPaymentsExtendedAuthorization = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsExtendedAuthorization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsExtendedAuthorization"')
      return ShopifyPaymentsExtendedAuthorization_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsFraudSettings_possibleTypes: string[] = ['ShopifyPaymentsFraudSettings']
    export const isShopifyPaymentsFraudSettings = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsFraudSettings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsFraudSettings"')
      return ShopifyPaymentsFraudSettings_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsJpChargeStatementDescriptor_possibleTypes: string[] = ['ShopifyPaymentsJpChargeStatementDescriptor']
    export const isShopifyPaymentsJpChargeStatementDescriptor = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsJpChargeStatementDescriptor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsJpChargeStatementDescriptor"')
      return ShopifyPaymentsJpChargeStatementDescriptor_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsNotificationSettings_possibleTypes: string[] = ['ShopifyPaymentsNotificationSettings']
    export const isShopifyPaymentsNotificationSettings = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsNotificationSettings => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsNotificationSettings"')
      return ShopifyPaymentsNotificationSettings_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsPayout_possibleTypes: string[] = ['ShopifyPaymentsPayout']
    export const isShopifyPaymentsPayout = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsPayout => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsPayout"')
      return ShopifyPaymentsPayout_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsPayoutConnection_possibleTypes: string[] = ['ShopifyPaymentsPayoutConnection']
    export const isShopifyPaymentsPayoutConnection = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsPayoutConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsPayoutConnection"')
      return ShopifyPaymentsPayoutConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsPayoutEdge_possibleTypes: string[] = ['ShopifyPaymentsPayoutEdge']
    export const isShopifyPaymentsPayoutEdge = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsPayoutEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsPayoutEdge"')
      return ShopifyPaymentsPayoutEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsPayoutSchedule_possibleTypes: string[] = ['ShopifyPaymentsPayoutSchedule']
    export const isShopifyPaymentsPayoutSchedule = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsPayoutSchedule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsPayoutSchedule"')
      return ShopifyPaymentsPayoutSchedule_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsPayoutSummary_possibleTypes: string[] = ['ShopifyPaymentsPayoutSummary']
    export const isShopifyPaymentsPayoutSummary = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsPayoutSummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsPayoutSummary"')
      return ShopifyPaymentsPayoutSummary_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsRefundSet_possibleTypes: string[] = ['ShopifyPaymentsRefundSet']
    export const isShopifyPaymentsRefundSet = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsRefundSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsRefundSet"')
      return ShopifyPaymentsRefundSet_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsTransactionSet_possibleTypes: string[] = ['ShopifyPaymentsTransactionSet']
    export const isShopifyPaymentsTransactionSet = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsTransactionSet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsTransactionSet"')
      return ShopifyPaymentsTransactionSet_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsVerification_possibleTypes: string[] = ['ShopifyPaymentsVerification']
    export const isShopifyPaymentsVerification = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsVerification => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsVerification"')
      return ShopifyPaymentsVerification_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsVerificationDocument_possibleTypes: string[] = ['ShopifyPaymentsVerificationDocument']
    export const isShopifyPaymentsVerificationDocument = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsVerificationDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsVerificationDocument"')
      return ShopifyPaymentsVerificationDocument_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyPaymentsVerificationSubject_possibleTypes: string[] = ['ShopifyPaymentsVerificationSubject']
    export const isShopifyPaymentsVerificationSubject = (obj?: { __typename?: any } | null): obj is ShopifyPaymentsVerificationSubject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyPaymentsVerificationSubject"')
      return ShopifyPaymentsVerificationSubject_possibleTypes.includes(obj.__typename)
    }
    


    const ShopifyqlResponse_possibleTypes: string[] = ['PolarisVizResponse','TableResponse']
    export const isShopifyqlResponse = (obj?: { __typename?: any } | null): obj is ShopifyqlResponse => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShopifyqlResponse"')
      return ShopifyqlResponse_possibleTypes.includes(obj.__typename)
    }
    


    const StaffMember_possibleTypes: string[] = ['StaffMember']
    export const isStaffMember = (obj?: { __typename?: any } | null): obj is StaffMember => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStaffMember"')
      return StaffMember_possibleTypes.includes(obj.__typename)
    }
    


    const StaffMemberConnection_possibleTypes: string[] = ['StaffMemberConnection']
    export const isStaffMemberConnection = (obj?: { __typename?: any } | null): obj is StaffMemberConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStaffMemberConnection"')
      return StaffMemberConnection_possibleTypes.includes(obj.__typename)
    }
    


    const StaffMemberEdge_possibleTypes: string[] = ['StaffMemberEdge']
    export const isStaffMemberEdge = (obj?: { __typename?: any } | null): obj is StaffMemberEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStaffMemberEdge"')
      return StaffMemberEdge_possibleTypes.includes(obj.__typename)
    }
    


    const StaffMemberPrivateData_possibleTypes: string[] = ['StaffMemberPrivateData']
    export const isStaffMemberPrivateData = (obj?: { __typename?: any } | null): obj is StaffMemberPrivateData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStaffMemberPrivateData"')
      return StaffMemberPrivateData_possibleTypes.includes(obj.__typename)
    }
    


    const StagedMediaUploadTarget_possibleTypes: string[] = ['StagedMediaUploadTarget']
    export const isStagedMediaUploadTarget = (obj?: { __typename?: any } | null): obj is StagedMediaUploadTarget => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedMediaUploadTarget"')
      return StagedMediaUploadTarget_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUploadParameter_possibleTypes: string[] = ['StagedUploadParameter']
    export const isStagedUploadParameter = (obj?: { __typename?: any } | null): obj is StagedUploadParameter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUploadParameter"')
      return StagedUploadParameter_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUploadTarget_possibleTypes: string[] = ['StagedUploadTarget']
    export const isStagedUploadTarget = (obj?: { __typename?: any } | null): obj is StagedUploadTarget => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUploadTarget"')
      return StagedUploadTarget_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUploadTargetGeneratePayload_possibleTypes: string[] = ['StagedUploadTargetGeneratePayload']
    export const isStagedUploadTargetGeneratePayload = (obj?: { __typename?: any } | null): obj is StagedUploadTargetGeneratePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUploadTargetGeneratePayload"')
      return StagedUploadTargetGeneratePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUploadTargetsGeneratePayload_possibleTypes: string[] = ['StagedUploadTargetsGeneratePayload']
    export const isStagedUploadTargetsGeneratePayload = (obj?: { __typename?: any } | null): obj is StagedUploadTargetsGeneratePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUploadTargetsGeneratePayload"')
      return StagedUploadTargetsGeneratePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StagedUploadsCreatePayload_possibleTypes: string[] = ['StagedUploadsCreatePayload']
    export const isStagedUploadsCreatePayload = (obj?: { __typename?: any } | null): obj is StagedUploadsCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStagedUploadsCreatePayload"')
      return StagedUploadsCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StandardMetafieldDefinitionEnablePayload_possibleTypes: string[] = ['StandardMetafieldDefinitionEnablePayload']
    export const isStandardMetafieldDefinitionEnablePayload = (obj?: { __typename?: any } | null): obj is StandardMetafieldDefinitionEnablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardMetafieldDefinitionEnablePayload"')
      return StandardMetafieldDefinitionEnablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StandardMetafieldDefinitionEnableUserError_possibleTypes: string[] = ['StandardMetafieldDefinitionEnableUserError']
    export const isStandardMetafieldDefinitionEnableUserError = (obj?: { __typename?: any } | null): obj is StandardMetafieldDefinitionEnableUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardMetafieldDefinitionEnableUserError"')
      return StandardMetafieldDefinitionEnableUserError_possibleTypes.includes(obj.__typename)
    }
    


    const StandardMetafieldDefinitionTemplate_possibleTypes: string[] = ['StandardMetafieldDefinitionTemplate']
    export const isStandardMetafieldDefinitionTemplate = (obj?: { __typename?: any } | null): obj is StandardMetafieldDefinitionTemplate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardMetafieldDefinitionTemplate"')
      return StandardMetafieldDefinitionTemplate_possibleTypes.includes(obj.__typename)
    }
    


    const StandardMetafieldDefinitionTemplateConnection_possibleTypes: string[] = ['StandardMetafieldDefinitionTemplateConnection']
    export const isStandardMetafieldDefinitionTemplateConnection = (obj?: { __typename?: any } | null): obj is StandardMetafieldDefinitionTemplateConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardMetafieldDefinitionTemplateConnection"')
      return StandardMetafieldDefinitionTemplateConnection_possibleTypes.includes(obj.__typename)
    }
    


    const StandardMetafieldDefinitionTemplateEdge_possibleTypes: string[] = ['StandardMetafieldDefinitionTemplateEdge']
    export const isStandardMetafieldDefinitionTemplateEdge = (obj?: { __typename?: any } | null): obj is StandardMetafieldDefinitionTemplateEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardMetafieldDefinitionTemplateEdge"')
      return StandardMetafieldDefinitionTemplateEdge_possibleTypes.includes(obj.__typename)
    }
    


    const StandardMetaobjectDefinitionEnablePayload_possibleTypes: string[] = ['StandardMetaobjectDefinitionEnablePayload']
    export const isStandardMetaobjectDefinitionEnablePayload = (obj?: { __typename?: any } | null): obj is StandardMetaobjectDefinitionEnablePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardMetaobjectDefinitionEnablePayload"')
      return StandardMetaobjectDefinitionEnablePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StandardizedProductType_possibleTypes: string[] = ['StandardizedProductType']
    export const isStandardizedProductType = (obj?: { __typename?: any } | null): obj is StandardizedProductType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardizedProductType"')
      return StandardizedProductType_possibleTypes.includes(obj.__typename)
    }
    


    const StorefrontAccessToken_possibleTypes: string[] = ['StorefrontAccessToken']
    export const isStorefrontAccessToken = (obj?: { __typename?: any } | null): obj is StorefrontAccessToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStorefrontAccessToken"')
      return StorefrontAccessToken_possibleTypes.includes(obj.__typename)
    }
    


    const StorefrontAccessTokenConnection_possibleTypes: string[] = ['StorefrontAccessTokenConnection']
    export const isStorefrontAccessTokenConnection = (obj?: { __typename?: any } | null): obj is StorefrontAccessTokenConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStorefrontAccessTokenConnection"')
      return StorefrontAccessTokenConnection_possibleTypes.includes(obj.__typename)
    }
    


    const StorefrontAccessTokenCreatePayload_possibleTypes: string[] = ['StorefrontAccessTokenCreatePayload']
    export const isStorefrontAccessTokenCreatePayload = (obj?: { __typename?: any } | null): obj is StorefrontAccessTokenCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStorefrontAccessTokenCreatePayload"')
      return StorefrontAccessTokenCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StorefrontAccessTokenDeletePayload_possibleTypes: string[] = ['StorefrontAccessTokenDeletePayload']
    export const isStorefrontAccessTokenDeletePayload = (obj?: { __typename?: any } | null): obj is StorefrontAccessTokenDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStorefrontAccessTokenDeletePayload"')
      return StorefrontAccessTokenDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const StorefrontAccessTokenEdge_possibleTypes: string[] = ['StorefrontAccessTokenEdge']
    export const isStorefrontAccessTokenEdge = (obj?: { __typename?: any } | null): obj is StorefrontAccessTokenEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStorefrontAccessTokenEdge"')
      return StorefrontAccessTokenEdge_possibleTypes.includes(obj.__typename)
    }
    


    const StringConnection_possibleTypes: string[] = ['StringConnection']
    export const isStringConnection = (obj?: { __typename?: any } | null): obj is StringConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStringConnection"')
      return StringConnection_possibleTypes.includes(obj.__typename)
    }
    


    const StringEdge_possibleTypes: string[] = ['StringEdge']
    export const isStringEdge = (obj?: { __typename?: any } | null): obj is StringEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStringEdge"')
      return StringEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionAppliedCodeDiscount_possibleTypes: string[] = ['SubscriptionAppliedCodeDiscount']
    export const isSubscriptionAppliedCodeDiscount = (obj?: { __typename?: any } | null): obj is SubscriptionAppliedCodeDiscount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionAppliedCodeDiscount"')
      return SubscriptionAppliedCodeDiscount_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingAttempt_possibleTypes: string[] = ['SubscriptionBillingAttempt']
    export const isSubscriptionBillingAttempt = (obj?: { __typename?: any } | null): obj is SubscriptionBillingAttempt => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingAttempt"')
      return SubscriptionBillingAttempt_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingAttemptConnection_possibleTypes: string[] = ['SubscriptionBillingAttemptConnection']
    export const isSubscriptionBillingAttemptConnection = (obj?: { __typename?: any } | null): obj is SubscriptionBillingAttemptConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingAttemptConnection"')
      return SubscriptionBillingAttemptConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingAttemptCreatePayload_possibleTypes: string[] = ['SubscriptionBillingAttemptCreatePayload']
    export const isSubscriptionBillingAttemptCreatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingAttemptCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingAttemptCreatePayload"')
      return SubscriptionBillingAttemptCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingAttemptEdge_possibleTypes: string[] = ['SubscriptionBillingAttemptEdge']
    export const isSubscriptionBillingAttemptEdge = (obj?: { __typename?: any } | null): obj is SubscriptionBillingAttemptEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingAttemptEdge"')
      return SubscriptionBillingAttemptEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycle_possibleTypes: string[] = ['SubscriptionBillingCycle']
    export const isSubscriptionBillingCycle = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycle"')
      return SubscriptionBillingCycle_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleConnection_possibleTypes: string[] = ['SubscriptionBillingCycleConnection']
    export const isSubscriptionBillingCycleConnection = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleConnection"')
      return SubscriptionBillingCycleConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleContractDraftCommitPayload_possibleTypes: string[] = ['SubscriptionBillingCycleContractDraftCommitPayload']
    export const isSubscriptionBillingCycleContractDraftCommitPayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleContractDraftCommitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleContractDraftCommitPayload"')
      return SubscriptionBillingCycleContractDraftCommitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleContractDraftConcatenatePayload_possibleTypes: string[] = ['SubscriptionBillingCycleContractDraftConcatenatePayload']
    export const isSubscriptionBillingCycleContractDraftConcatenatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleContractDraftConcatenatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleContractDraftConcatenatePayload"')
      return SubscriptionBillingCycleContractDraftConcatenatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleContractEditPayload_possibleTypes: string[] = ['SubscriptionBillingCycleContractEditPayload']
    export const isSubscriptionBillingCycleContractEditPayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleContractEditPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleContractEditPayload"')
      return SubscriptionBillingCycleContractEditPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleEdge_possibleTypes: string[] = ['SubscriptionBillingCycleEdge']
    export const isSubscriptionBillingCycleEdge = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleEdge"')
      return SubscriptionBillingCycleEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleEditDeletePayload_possibleTypes: string[] = ['SubscriptionBillingCycleEditDeletePayload']
    export const isSubscriptionBillingCycleEditDeletePayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleEditDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleEditDeletePayload"')
      return SubscriptionBillingCycleEditDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleEditedContract_possibleTypes: string[] = ['SubscriptionBillingCycleEditedContract']
    export const isSubscriptionBillingCycleEditedContract = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleEditedContract => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleEditedContract"')
      return SubscriptionBillingCycleEditedContract_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleEditsDeletePayload_possibleTypes: string[] = ['SubscriptionBillingCycleEditsDeletePayload']
    export const isSubscriptionBillingCycleEditsDeletePayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleEditsDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleEditsDeletePayload"')
      return SubscriptionBillingCycleEditsDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleScheduleEditPayload_possibleTypes: string[] = ['SubscriptionBillingCycleScheduleEditPayload']
    export const isSubscriptionBillingCycleScheduleEditPayload = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleScheduleEditPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleScheduleEditPayload"')
      return SubscriptionBillingCycleScheduleEditPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingCycleUserError_possibleTypes: string[] = ['SubscriptionBillingCycleUserError']
    export const isSubscriptionBillingCycleUserError = (obj?: { __typename?: any } | null): obj is SubscriptionBillingCycleUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingCycleUserError"')
      return SubscriptionBillingCycleUserError_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionBillingPolicy_possibleTypes: string[] = ['SubscriptionBillingPolicy']
    export const isSubscriptionBillingPolicy = (obj?: { __typename?: any } | null): obj is SubscriptionBillingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionBillingPolicy"')
      return SubscriptionBillingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContract_possibleTypes: string[] = ['SubscriptionContract']
    export const isSubscriptionContract = (obj?: { __typename?: any } | null): obj is SubscriptionContract => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContract"')
      return SubscriptionContract_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractAtomicCreatePayload_possibleTypes: string[] = ['SubscriptionContractAtomicCreatePayload']
    export const isSubscriptionContractAtomicCreatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionContractAtomicCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractAtomicCreatePayload"')
      return SubscriptionContractAtomicCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractBase_possibleTypes: string[] = ['SubscriptionBillingCycleEditedContract','SubscriptionContract']
    export const isSubscriptionContractBase = (obj?: { __typename?: any } | null): obj is SubscriptionContractBase => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractBase"')
      return SubscriptionContractBase_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractConnection_possibleTypes: string[] = ['SubscriptionContractConnection']
    export const isSubscriptionContractConnection = (obj?: { __typename?: any } | null): obj is SubscriptionContractConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractConnection"')
      return SubscriptionContractConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractCreatePayload_possibleTypes: string[] = ['SubscriptionContractCreatePayload']
    export const isSubscriptionContractCreatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionContractCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractCreatePayload"')
      return SubscriptionContractCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractEdge_possibleTypes: string[] = ['SubscriptionContractEdge']
    export const isSubscriptionContractEdge = (obj?: { __typename?: any } | null): obj is SubscriptionContractEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractEdge"')
      return SubscriptionContractEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractProductChangePayload_possibleTypes: string[] = ['SubscriptionContractProductChangePayload']
    export const isSubscriptionContractProductChangePayload = (obj?: { __typename?: any } | null): obj is SubscriptionContractProductChangePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractProductChangePayload"')
      return SubscriptionContractProductChangePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractSetNextBillingDatePayload_possibleTypes: string[] = ['SubscriptionContractSetNextBillingDatePayload']
    export const isSubscriptionContractSetNextBillingDatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionContractSetNextBillingDatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractSetNextBillingDatePayload"')
      return SubscriptionContractSetNextBillingDatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractUpdatePayload_possibleTypes: string[] = ['SubscriptionContractUpdatePayload']
    export const isSubscriptionContractUpdatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionContractUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractUpdatePayload"')
      return SubscriptionContractUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionContractUserError_possibleTypes: string[] = ['SubscriptionContractUserError']
    export const isSubscriptionContractUserError = (obj?: { __typename?: any } | null): obj is SubscriptionContractUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionContractUserError"')
      return SubscriptionContractUserError_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionCyclePriceAdjustment_possibleTypes: string[] = ['SubscriptionCyclePriceAdjustment']
    export const isSubscriptionCyclePriceAdjustment = (obj?: { __typename?: any } | null): obj is SubscriptionCyclePriceAdjustment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionCyclePriceAdjustment"')
      return SubscriptionCyclePriceAdjustment_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethod_possibleTypes: string[] = ['SubscriptionDeliveryMethodLocalDelivery','SubscriptionDeliveryMethodPickup','SubscriptionDeliveryMethodShipping']
    export const isSubscriptionDeliveryMethod = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethod => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethod"')
      return SubscriptionDeliveryMethod_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethodLocalDelivery_possibleTypes: string[] = ['SubscriptionDeliveryMethodLocalDelivery']
    export const isSubscriptionDeliveryMethodLocalDelivery = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethodLocalDelivery => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethodLocalDelivery"')
      return SubscriptionDeliveryMethodLocalDelivery_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethodLocalDeliveryOption_possibleTypes: string[] = ['SubscriptionDeliveryMethodLocalDeliveryOption']
    export const isSubscriptionDeliveryMethodLocalDeliveryOption = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethodLocalDeliveryOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethodLocalDeliveryOption"')
      return SubscriptionDeliveryMethodLocalDeliveryOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethodPickup_possibleTypes: string[] = ['SubscriptionDeliveryMethodPickup']
    export const isSubscriptionDeliveryMethodPickup = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethodPickup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethodPickup"')
      return SubscriptionDeliveryMethodPickup_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethodPickupOption_possibleTypes: string[] = ['SubscriptionDeliveryMethodPickupOption']
    export const isSubscriptionDeliveryMethodPickupOption = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethodPickupOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethodPickupOption"')
      return SubscriptionDeliveryMethodPickupOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethodShipping_possibleTypes: string[] = ['SubscriptionDeliveryMethodShipping']
    export const isSubscriptionDeliveryMethodShipping = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethodShipping => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethodShipping"')
      return SubscriptionDeliveryMethodShipping_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryMethodShippingOption_possibleTypes: string[] = ['SubscriptionDeliveryMethodShippingOption']
    export const isSubscriptionDeliveryMethodShippingOption = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryMethodShippingOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryMethodShippingOption"')
      return SubscriptionDeliveryMethodShippingOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryOption_possibleTypes: string[] = ['SubscriptionLocalDeliveryOption','SubscriptionPickupOption','SubscriptionShippingOption']
    export const isSubscriptionDeliveryOption = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryOption"')
      return SubscriptionDeliveryOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryOptionResult_possibleTypes: string[] = ['SubscriptionDeliveryOptionResultFailure','SubscriptionDeliveryOptionResultSuccess']
    export const isSubscriptionDeliveryOptionResult = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryOptionResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryOptionResult"')
      return SubscriptionDeliveryOptionResult_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryOptionResultFailure_possibleTypes: string[] = ['SubscriptionDeliveryOptionResultFailure']
    export const isSubscriptionDeliveryOptionResultFailure = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryOptionResultFailure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryOptionResultFailure"')
      return SubscriptionDeliveryOptionResultFailure_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryOptionResultSuccess_possibleTypes: string[] = ['SubscriptionDeliveryOptionResultSuccess']
    export const isSubscriptionDeliveryOptionResultSuccess = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryOptionResultSuccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryOptionResultSuccess"')
      return SubscriptionDeliveryOptionResultSuccess_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDeliveryPolicy_possibleTypes: string[] = ['SubscriptionDeliveryPolicy']
    export const isSubscriptionDeliveryPolicy = (obj?: { __typename?: any } | null): obj is SubscriptionDeliveryPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDeliveryPolicy"')
      return SubscriptionDeliveryPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscount_possibleTypes: string[] = ['SubscriptionAppliedCodeDiscount','SubscriptionManualDiscount']
    export const isSubscriptionDiscount = (obj?: { __typename?: any } | null): obj is SubscriptionDiscount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscount"')
      return SubscriptionDiscount_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountAllocation_possibleTypes: string[] = ['SubscriptionDiscountAllocation']
    export const isSubscriptionDiscountAllocation = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountAllocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountAllocation"')
      return SubscriptionDiscountAllocation_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountConnection_possibleTypes: string[] = ['SubscriptionDiscountConnection']
    export const isSubscriptionDiscountConnection = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountConnection"')
      return SubscriptionDiscountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountEdge_possibleTypes: string[] = ['SubscriptionDiscountEdge']
    export const isSubscriptionDiscountEdge = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountEdge"')
      return SubscriptionDiscountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountEntitledLines_possibleTypes: string[] = ['SubscriptionDiscountEntitledLines']
    export const isSubscriptionDiscountEntitledLines = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountEntitledLines => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountEntitledLines"')
      return SubscriptionDiscountEntitledLines_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountFixedAmountValue_possibleTypes: string[] = ['SubscriptionDiscountFixedAmountValue']
    export const isSubscriptionDiscountFixedAmountValue = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountFixedAmountValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountFixedAmountValue"')
      return SubscriptionDiscountFixedAmountValue_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountPercentageValue_possibleTypes: string[] = ['SubscriptionDiscountPercentageValue']
    export const isSubscriptionDiscountPercentageValue = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountPercentageValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountPercentageValue"')
      return SubscriptionDiscountPercentageValue_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDiscountValue_possibleTypes: string[] = ['SubscriptionDiscountFixedAmountValue','SubscriptionDiscountPercentageValue']
    export const isSubscriptionDiscountValue = (obj?: { __typename?: any } | null): obj is SubscriptionDiscountValue => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDiscountValue"')
      return SubscriptionDiscountValue_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraft_possibleTypes: string[] = ['SubscriptionDraft']
    export const isSubscriptionDraft = (obj?: { __typename?: any } | null): obj is SubscriptionDraft => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraft"')
      return SubscriptionDraft_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftCommitPayload_possibleTypes: string[] = ['SubscriptionDraftCommitPayload']
    export const isSubscriptionDraftCommitPayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftCommitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftCommitPayload"')
      return SubscriptionDraftCommitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftDiscountAddPayload_possibleTypes: string[] = ['SubscriptionDraftDiscountAddPayload']
    export const isSubscriptionDraftDiscountAddPayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftDiscountAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftDiscountAddPayload"')
      return SubscriptionDraftDiscountAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftDiscountCodeApplyPayload_possibleTypes: string[] = ['SubscriptionDraftDiscountCodeApplyPayload']
    export const isSubscriptionDraftDiscountCodeApplyPayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftDiscountCodeApplyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftDiscountCodeApplyPayload"')
      return SubscriptionDraftDiscountCodeApplyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftDiscountRemovePayload_possibleTypes: string[] = ['SubscriptionDraftDiscountRemovePayload']
    export const isSubscriptionDraftDiscountRemovePayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftDiscountRemovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftDiscountRemovePayload"')
      return SubscriptionDraftDiscountRemovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftDiscountUpdatePayload_possibleTypes: string[] = ['SubscriptionDraftDiscountUpdatePayload']
    export const isSubscriptionDraftDiscountUpdatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftDiscountUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftDiscountUpdatePayload"')
      return SubscriptionDraftDiscountUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftFreeShippingDiscountAddPayload_possibleTypes: string[] = ['SubscriptionDraftFreeShippingDiscountAddPayload']
    export const isSubscriptionDraftFreeShippingDiscountAddPayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftFreeShippingDiscountAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftFreeShippingDiscountAddPayload"')
      return SubscriptionDraftFreeShippingDiscountAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftFreeShippingDiscountUpdatePayload_possibleTypes: string[] = ['SubscriptionDraftFreeShippingDiscountUpdatePayload']
    export const isSubscriptionDraftFreeShippingDiscountUpdatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftFreeShippingDiscountUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftFreeShippingDiscountUpdatePayload"')
      return SubscriptionDraftFreeShippingDiscountUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftLineAddPayload_possibleTypes: string[] = ['SubscriptionDraftLineAddPayload']
    export const isSubscriptionDraftLineAddPayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftLineAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftLineAddPayload"')
      return SubscriptionDraftLineAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftLineRemovePayload_possibleTypes: string[] = ['SubscriptionDraftLineRemovePayload']
    export const isSubscriptionDraftLineRemovePayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftLineRemovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftLineRemovePayload"')
      return SubscriptionDraftLineRemovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftLineUpdatePayload_possibleTypes: string[] = ['SubscriptionDraftLineUpdatePayload']
    export const isSubscriptionDraftLineUpdatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftLineUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftLineUpdatePayload"')
      return SubscriptionDraftLineUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftUpdatePayload_possibleTypes: string[] = ['SubscriptionDraftUpdatePayload']
    export const isSubscriptionDraftUpdatePayload = (obj?: { __typename?: any } | null): obj is SubscriptionDraftUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftUpdatePayload"')
      return SubscriptionDraftUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionDraftUserError_possibleTypes: string[] = ['SubscriptionDraftUserError']
    export const isSubscriptionDraftUserError = (obj?: { __typename?: any } | null): obj is SubscriptionDraftUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionDraftUserError"')
      return SubscriptionDraftUserError_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionLine_possibleTypes: string[] = ['SubscriptionLine']
    export const isSubscriptionLine = (obj?: { __typename?: any } | null): obj is SubscriptionLine => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionLine"')
      return SubscriptionLine_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionLineConnection_possibleTypes: string[] = ['SubscriptionLineConnection']
    export const isSubscriptionLineConnection = (obj?: { __typename?: any } | null): obj is SubscriptionLineConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionLineConnection"')
      return SubscriptionLineConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionLineEdge_possibleTypes: string[] = ['SubscriptionLineEdge']
    export const isSubscriptionLineEdge = (obj?: { __typename?: any } | null): obj is SubscriptionLineEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionLineEdge"')
      return SubscriptionLineEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionLocalDeliveryOption_possibleTypes: string[] = ['SubscriptionLocalDeliveryOption']
    export const isSubscriptionLocalDeliveryOption = (obj?: { __typename?: any } | null): obj is SubscriptionLocalDeliveryOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionLocalDeliveryOption"')
      return SubscriptionLocalDeliveryOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionMailingAddress_possibleTypes: string[] = ['SubscriptionMailingAddress']
    export const isSubscriptionMailingAddress = (obj?: { __typename?: any } | null): obj is SubscriptionMailingAddress => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionMailingAddress"')
      return SubscriptionMailingAddress_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionManualDiscount_possibleTypes: string[] = ['SubscriptionManualDiscount']
    export const isSubscriptionManualDiscount = (obj?: { __typename?: any } | null): obj is SubscriptionManualDiscount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionManualDiscount"')
      return SubscriptionManualDiscount_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionManualDiscountConnection_possibleTypes: string[] = ['SubscriptionManualDiscountConnection']
    export const isSubscriptionManualDiscountConnection = (obj?: { __typename?: any } | null): obj is SubscriptionManualDiscountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionManualDiscountConnection"')
      return SubscriptionManualDiscountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionManualDiscountEdge_possibleTypes: string[] = ['SubscriptionManualDiscountEdge']
    export const isSubscriptionManualDiscountEdge = (obj?: { __typename?: any } | null): obj is SubscriptionManualDiscountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionManualDiscountEdge"')
      return SubscriptionManualDiscountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionPickupOption_possibleTypes: string[] = ['SubscriptionPickupOption']
    export const isSubscriptionPickupOption = (obj?: { __typename?: any } | null): obj is SubscriptionPickupOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionPickupOption"')
      return SubscriptionPickupOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionPricingPolicy_possibleTypes: string[] = ['SubscriptionPricingPolicy']
    export const isSubscriptionPricingPolicy = (obj?: { __typename?: any } | null): obj is SubscriptionPricingPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionPricingPolicy"')
      return SubscriptionPricingPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionShippingOption_possibleTypes: string[] = ['SubscriptionShippingOption']
    export const isSubscriptionShippingOption = (obj?: { __typename?: any } | null): obj is SubscriptionShippingOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionShippingOption"')
      return SubscriptionShippingOption_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionShippingOptionResult_possibleTypes: string[] = ['SubscriptionShippingOptionResultFailure','SubscriptionShippingOptionResultSuccess']
    export const isSubscriptionShippingOptionResult = (obj?: { __typename?: any } | null): obj is SubscriptionShippingOptionResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionShippingOptionResult"')
      return SubscriptionShippingOptionResult_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionShippingOptionResultFailure_possibleTypes: string[] = ['SubscriptionShippingOptionResultFailure']
    export const isSubscriptionShippingOptionResultFailure = (obj?: { __typename?: any } | null): obj is SubscriptionShippingOptionResultFailure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionShippingOptionResultFailure"')
      return SubscriptionShippingOptionResultFailure_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionShippingOptionResultSuccess_possibleTypes: string[] = ['SubscriptionShippingOptionResultSuccess']
    export const isSubscriptionShippingOptionResultSuccess = (obj?: { __typename?: any } | null): obj is SubscriptionShippingOptionResultSuccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionShippingOptionResultSuccess"')
      return SubscriptionShippingOptionResultSuccess_possibleTypes.includes(obj.__typename)
    }
    


    const SuggestedOrderTransaction_possibleTypes: string[] = ['SuggestedOrderTransaction']
    export const isSuggestedOrderTransaction = (obj?: { __typename?: any } | null): obj is SuggestedOrderTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSuggestedOrderTransaction"')
      return SuggestedOrderTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const SuggestedRefund_possibleTypes: string[] = ['SuggestedRefund']
    export const isSuggestedRefund = (obj?: { __typename?: any } | null): obj is SuggestedRefund => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSuggestedRefund"')
      return SuggestedRefund_possibleTypes.includes(obj.__typename)
    }
    


    const SuggestedReturnRefund_possibleTypes: string[] = ['SuggestedReturnRefund']
    export const isSuggestedReturnRefund = (obj?: { __typename?: any } | null): obj is SuggestedReturnRefund => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSuggestedReturnRefund"')
      return SuggestedReturnRefund_possibleTypes.includes(obj.__typename)
    }
    


    const TableData_possibleTypes: string[] = ['TableData']
    export const isTableData = (obj?: { __typename?: any } | null): obj is TableData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTableData"')
      return TableData_possibleTypes.includes(obj.__typename)
    }
    


    const TableDataColumn_possibleTypes: string[] = ['TableDataColumn']
    export const isTableDataColumn = (obj?: { __typename?: any } | null): obj is TableDataColumn => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTableDataColumn"')
      return TableDataColumn_possibleTypes.includes(obj.__typename)
    }
    


    const TableResponse_possibleTypes: string[] = ['TableResponse']
    export const isTableResponse = (obj?: { __typename?: any } | null): obj is TableResponse => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTableResponse"')
      return TableResponse_possibleTypes.includes(obj.__typename)
    }
    


    const TagsAddPayload_possibleTypes: string[] = ['TagsAddPayload']
    export const isTagsAddPayload = (obj?: { __typename?: any } | null): obj is TagsAddPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTagsAddPayload"')
      return TagsAddPayload_possibleTypes.includes(obj.__typename)
    }
    


    const TagsRemovePayload_possibleTypes: string[] = ['TagsRemovePayload']
    export const isTagsRemovePayload = (obj?: { __typename?: any } | null): obj is TagsRemovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTagsRemovePayload"')
      return TagsRemovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const TaxAppConfiguration_possibleTypes: string[] = ['TaxAppConfiguration']
    export const isTaxAppConfiguration = (obj?: { __typename?: any } | null): obj is TaxAppConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaxAppConfiguration"')
      return TaxAppConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const TaxAppConfigurePayload_possibleTypes: string[] = ['TaxAppConfigurePayload']
    export const isTaxAppConfigurePayload = (obj?: { __typename?: any } | null): obj is TaxAppConfigurePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaxAppConfigurePayload"')
      return TaxAppConfigurePayload_possibleTypes.includes(obj.__typename)
    }
    


    const TaxAppConfigureUserError_possibleTypes: string[] = ['TaxAppConfigureUserError']
    export const isTaxAppConfigureUserError = (obj?: { __typename?: any } | null): obj is TaxAppConfigureUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaxAppConfigureUserError"')
      return TaxAppConfigureUserError_possibleTypes.includes(obj.__typename)
    }
    


    const TaxLine_possibleTypes: string[] = ['TaxLine']
    export const isTaxLine = (obj?: { __typename?: any } | null): obj is TaxLine => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaxLine"')
      return TaxLine_possibleTypes.includes(obj.__typename)
    }
    


    const TenderTransaction_possibleTypes: string[] = ['TenderTransaction']
    export const isTenderTransaction = (obj?: { __typename?: any } | null): obj is TenderTransaction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTenderTransaction"')
      return TenderTransaction_possibleTypes.includes(obj.__typename)
    }
    


    const TenderTransactionConnection_possibleTypes: string[] = ['TenderTransactionConnection']
    export const isTenderTransactionConnection = (obj?: { __typename?: any } | null): obj is TenderTransactionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTenderTransactionConnection"')
      return TenderTransactionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TenderTransactionCreditCardDetails_possibleTypes: string[] = ['TenderTransactionCreditCardDetails']
    export const isTenderTransactionCreditCardDetails = (obj?: { __typename?: any } | null): obj is TenderTransactionCreditCardDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTenderTransactionCreditCardDetails"')
      return TenderTransactionCreditCardDetails_possibleTypes.includes(obj.__typename)
    }
    


    const TenderTransactionDetails_possibleTypes: string[] = ['TenderTransactionCreditCardDetails']
    export const isTenderTransactionDetails = (obj?: { __typename?: any } | null): obj is TenderTransactionDetails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTenderTransactionDetails"')
      return TenderTransactionDetails_possibleTypes.includes(obj.__typename)
    }
    


    const TenderTransactionEdge_possibleTypes: string[] = ['TenderTransactionEdge']
    export const isTenderTransactionEdge = (obj?: { __typename?: any } | null): obj is TenderTransactionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTenderTransactionEdge"')
      return TenderTransactionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const TipSale_possibleTypes: string[] = ['TipSale']
    export const isTipSale = (obj?: { __typename?: any } | null): obj is TipSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTipSale"')
      return TipSale_possibleTypes.includes(obj.__typename)
    }
    


    const TransactionFee_possibleTypes: string[] = ['TransactionFee']
    export const isTransactionFee = (obj?: { __typename?: any } | null): obj is TransactionFee => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransactionFee"')
      return TransactionFee_possibleTypes.includes(obj.__typename)
    }
    


    const TranslatableContent_possibleTypes: string[] = ['TranslatableContent']
    export const isTranslatableContent = (obj?: { __typename?: any } | null): obj is TranslatableContent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslatableContent"')
      return TranslatableContent_possibleTypes.includes(obj.__typename)
    }
    


    const TranslatableResource_possibleTypes: string[] = ['TranslatableResource']
    export const isTranslatableResource = (obj?: { __typename?: any } | null): obj is TranslatableResource => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslatableResource"')
      return TranslatableResource_possibleTypes.includes(obj.__typename)
    }
    


    const TranslatableResourceConnection_possibleTypes: string[] = ['TranslatableResourceConnection']
    export const isTranslatableResourceConnection = (obj?: { __typename?: any } | null): obj is TranslatableResourceConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslatableResourceConnection"')
      return TranslatableResourceConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TranslatableResourceEdge_possibleTypes: string[] = ['TranslatableResourceEdge']
    export const isTranslatableResourceEdge = (obj?: { __typename?: any } | null): obj is TranslatableResourceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslatableResourceEdge"')
      return TranslatableResourceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const Translation_possibleTypes: string[] = ['Translation']
    export const isTranslation = (obj?: { __typename?: any } | null): obj is Translation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslation"')
      return Translation_possibleTypes.includes(obj.__typename)
    }
    


    const TranslationUserError_possibleTypes: string[] = ['TranslationUserError']
    export const isTranslationUserError = (obj?: { __typename?: any } | null): obj is TranslationUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslationUserError"')
      return TranslationUserError_possibleTypes.includes(obj.__typename)
    }
    


    const TranslationsRegisterPayload_possibleTypes: string[] = ['TranslationsRegisterPayload']
    export const isTranslationsRegisterPayload = (obj?: { __typename?: any } | null): obj is TranslationsRegisterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslationsRegisterPayload"')
      return TranslationsRegisterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const TranslationsRemovePayload_possibleTypes: string[] = ['TranslationsRemovePayload']
    export const isTranslationsRemovePayload = (obj?: { __typename?: any } | null): obj is TranslationsRemovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTranslationsRemovePayload"')
      return TranslationsRemovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const TypedAttribute_possibleTypes: string[] = ['TypedAttribute']
    export const isTypedAttribute = (obj?: { __typename?: any } | null): obj is TypedAttribute => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTypedAttribute"')
      return TypedAttribute_possibleTypes.includes(obj.__typename)
    }
    


    const UTMParameters_possibleTypes: string[] = ['UTMParameters']
    export const isUTMParameters = (obj?: { __typename?: any } | null): obj is UTMParameters => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUTMParameters"')
      return UTMParameters_possibleTypes.includes(obj.__typename)
    }
    


    const UnknownSale_possibleTypes: string[] = ['UnknownSale']
    export const isUnknownSale = (obj?: { __typename?: any } | null): obj is UnknownSale => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUnknownSale"')
      return UnknownSale_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirect_possibleTypes: string[] = ['UrlRedirect']
    export const isUrlRedirect = (obj?: { __typename?: any } | null): obj is UrlRedirect => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirect"')
      return UrlRedirect_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteAllPayload_possibleTypes: string[] = ['UrlRedirectBulkDeleteAllPayload']
    export const isUrlRedirectBulkDeleteAllPayload = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteAllPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteAllPayload"')
      return UrlRedirectBulkDeleteAllPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteByIdsPayload_possibleTypes: string[] = ['UrlRedirectBulkDeleteByIdsPayload']
    export const isUrlRedirectBulkDeleteByIdsPayload = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteByIdsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteByIdsPayload"')
      return UrlRedirectBulkDeleteByIdsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteByIdsUserError_possibleTypes: string[] = ['UrlRedirectBulkDeleteByIdsUserError']
    export const isUrlRedirectBulkDeleteByIdsUserError = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteByIdsUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteByIdsUserError"')
      return UrlRedirectBulkDeleteByIdsUserError_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteBySavedSearchPayload_possibleTypes: string[] = ['UrlRedirectBulkDeleteBySavedSearchPayload']
    export const isUrlRedirectBulkDeleteBySavedSearchPayload = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteBySavedSearchPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteBySavedSearchPayload"')
      return UrlRedirectBulkDeleteBySavedSearchPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteBySavedSearchUserError_possibleTypes: string[] = ['UrlRedirectBulkDeleteBySavedSearchUserError']
    export const isUrlRedirectBulkDeleteBySavedSearchUserError = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteBySavedSearchUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteBySavedSearchUserError"')
      return UrlRedirectBulkDeleteBySavedSearchUserError_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteBySearchPayload_possibleTypes: string[] = ['UrlRedirectBulkDeleteBySearchPayload']
    export const isUrlRedirectBulkDeleteBySearchPayload = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteBySearchPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteBySearchPayload"')
      return UrlRedirectBulkDeleteBySearchPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectBulkDeleteBySearchUserError_possibleTypes: string[] = ['UrlRedirectBulkDeleteBySearchUserError']
    export const isUrlRedirectBulkDeleteBySearchUserError = (obj?: { __typename?: any } | null): obj is UrlRedirectBulkDeleteBySearchUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectBulkDeleteBySearchUserError"')
      return UrlRedirectBulkDeleteBySearchUserError_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectConnection_possibleTypes: string[] = ['UrlRedirectConnection']
    export const isUrlRedirectConnection = (obj?: { __typename?: any } | null): obj is UrlRedirectConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectConnection"')
      return UrlRedirectConnection_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectCreatePayload_possibleTypes: string[] = ['UrlRedirectCreatePayload']
    export const isUrlRedirectCreatePayload = (obj?: { __typename?: any } | null): obj is UrlRedirectCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectCreatePayload"')
      return UrlRedirectCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectDeletePayload_possibleTypes: string[] = ['UrlRedirectDeletePayload']
    export const isUrlRedirectDeletePayload = (obj?: { __typename?: any } | null): obj is UrlRedirectDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectDeletePayload"')
      return UrlRedirectDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectEdge_possibleTypes: string[] = ['UrlRedirectEdge']
    export const isUrlRedirectEdge = (obj?: { __typename?: any } | null): obj is UrlRedirectEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectEdge"')
      return UrlRedirectEdge_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectImport_possibleTypes: string[] = ['UrlRedirectImport']
    export const isUrlRedirectImport = (obj?: { __typename?: any } | null): obj is UrlRedirectImport => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectImport"')
      return UrlRedirectImport_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectImportCreatePayload_possibleTypes: string[] = ['UrlRedirectImportCreatePayload']
    export const isUrlRedirectImportCreatePayload = (obj?: { __typename?: any } | null): obj is UrlRedirectImportCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectImportCreatePayload"')
      return UrlRedirectImportCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectImportPreview_possibleTypes: string[] = ['UrlRedirectImportPreview']
    export const isUrlRedirectImportPreview = (obj?: { __typename?: any } | null): obj is UrlRedirectImportPreview => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectImportPreview"')
      return UrlRedirectImportPreview_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectImportSubmitPayload_possibleTypes: string[] = ['UrlRedirectImportSubmitPayload']
    export const isUrlRedirectImportSubmitPayload = (obj?: { __typename?: any } | null): obj is UrlRedirectImportSubmitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectImportSubmitPayload"')
      return UrlRedirectImportSubmitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectImportUserError_possibleTypes: string[] = ['UrlRedirectImportUserError']
    export const isUrlRedirectImportUserError = (obj?: { __typename?: any } | null): obj is UrlRedirectImportUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectImportUserError"')
      return UrlRedirectImportUserError_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectUpdatePayload_possibleTypes: string[] = ['UrlRedirectUpdatePayload']
    export const isUrlRedirectUpdatePayload = (obj?: { __typename?: any } | null): obj is UrlRedirectUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectUpdatePayload"')
      return UrlRedirectUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UrlRedirectUserError_possibleTypes: string[] = ['UrlRedirectUserError']
    export const isUrlRedirectUserError = (obj?: { __typename?: any } | null): obj is UrlRedirectUserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUrlRedirectUserError"')
      return UrlRedirectUserError_possibleTypes.includes(obj.__typename)
    }
    


    const UserError_possibleTypes: string[] = ['UserError']
    export const isUserError = (obj?: { __typename?: any } | null): obj is UserError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserError"')
      return UserError_possibleTypes.includes(obj.__typename)
    }
    


    const VaultCreditCard_possibleTypes: string[] = ['VaultCreditCard']
    export const isVaultCreditCard = (obj?: { __typename?: any } | null): obj is VaultCreditCard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVaultCreditCard"')
      return VaultCreditCard_possibleTypes.includes(obj.__typename)
    }
    


    const VaultPaypalBillingAgreement_possibleTypes: string[] = ['VaultPaypalBillingAgreement']
    export const isVaultPaypalBillingAgreement = (obj?: { __typename?: any } | null): obj is VaultPaypalBillingAgreement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVaultPaypalBillingAgreement"')
      return VaultPaypalBillingAgreement_possibleTypes.includes(obj.__typename)
    }
    


    const Vector3_possibleTypes: string[] = ['Vector3']
    export const isVector3 = (obj?: { __typename?: any } | null): obj is Vector3 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVector3"')
      return Vector3_possibleTypes.includes(obj.__typename)
    }
    


    const Video_possibleTypes: string[] = ['Video']
    export const isVideo = (obj?: { __typename?: any } | null): obj is Video => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideo"')
      return Video_possibleTypes.includes(obj.__typename)
    }
    


    const VideoSource_possibleTypes: string[] = ['VideoSource']
    export const isVideoSource = (obj?: { __typename?: any } | null): obj is VideoSource => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoSource"')
      return VideoSource_possibleTypes.includes(obj.__typename)
    }
    


    const WebPixel_possibleTypes: string[] = ['WebPixel']
    export const isWebPixel = (obj?: { __typename?: any } | null): obj is WebPixel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebPixel"')
      return WebPixel_possibleTypes.includes(obj.__typename)
    }
    


    const WebPixelCreatePayload_possibleTypes: string[] = ['WebPixelCreatePayload']
    export const isWebPixelCreatePayload = (obj?: { __typename?: any } | null): obj is WebPixelCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebPixelCreatePayload"')
      return WebPixelCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const WebPixelDeletePayload_possibleTypes: string[] = ['WebPixelDeletePayload']
    export const isWebPixelDeletePayload = (obj?: { __typename?: any } | null): obj is WebPixelDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebPixelDeletePayload"')
      return WebPixelDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const WebPixelUpdatePayload_possibleTypes: string[] = ['WebPixelUpdatePayload']
    export const isWebPixelUpdatePayload = (obj?: { __typename?: any } | null): obj is WebPixelUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebPixelUpdatePayload"')
      return WebPixelUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookEventBridgeEndpoint_possibleTypes: string[] = ['WebhookEventBridgeEndpoint']
    export const isWebhookEventBridgeEndpoint = (obj?: { __typename?: any } | null): obj is WebhookEventBridgeEndpoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookEventBridgeEndpoint"')
      return WebhookEventBridgeEndpoint_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookHttpEndpoint_possibleTypes: string[] = ['WebhookHttpEndpoint']
    export const isWebhookHttpEndpoint = (obj?: { __typename?: any } | null): obj is WebhookHttpEndpoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookHttpEndpoint"')
      return WebhookHttpEndpoint_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookPubSubEndpoint_possibleTypes: string[] = ['WebhookPubSubEndpoint']
    export const isWebhookPubSubEndpoint = (obj?: { __typename?: any } | null): obj is WebhookPubSubEndpoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookPubSubEndpoint"')
      return WebhookPubSubEndpoint_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscription_possibleTypes: string[] = ['WebhookSubscription']
    export const isWebhookSubscription = (obj?: { __typename?: any } | null): obj is WebhookSubscription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscription"')
      return WebhookSubscription_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscriptionConnection_possibleTypes: string[] = ['WebhookSubscriptionConnection']
    export const isWebhookSubscriptionConnection = (obj?: { __typename?: any } | null): obj is WebhookSubscriptionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscriptionConnection"')
      return WebhookSubscriptionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscriptionCreatePayload_possibleTypes: string[] = ['WebhookSubscriptionCreatePayload']
    export const isWebhookSubscriptionCreatePayload = (obj?: { __typename?: any } | null): obj is WebhookSubscriptionCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscriptionCreatePayload"')
      return WebhookSubscriptionCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscriptionDeletePayload_possibleTypes: string[] = ['WebhookSubscriptionDeletePayload']
    export const isWebhookSubscriptionDeletePayload = (obj?: { __typename?: any } | null): obj is WebhookSubscriptionDeletePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscriptionDeletePayload"')
      return WebhookSubscriptionDeletePayload_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscriptionEdge_possibleTypes: string[] = ['WebhookSubscriptionEdge']
    export const isWebhookSubscriptionEdge = (obj?: { __typename?: any } | null): obj is WebhookSubscriptionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscriptionEdge"')
      return WebhookSubscriptionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscriptionEndpoint_possibleTypes: string[] = ['WebhookEventBridgeEndpoint','WebhookHttpEndpoint','WebhookPubSubEndpoint']
    export const isWebhookSubscriptionEndpoint = (obj?: { __typename?: any } | null): obj is WebhookSubscriptionEndpoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscriptionEndpoint"')
      return WebhookSubscriptionEndpoint_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookSubscriptionUpdatePayload_possibleTypes: string[] = ['WebhookSubscriptionUpdatePayload']
    export const isWebhookSubscriptionUpdatePayload = (obj?: { __typename?: any } | null): obj is WebhookSubscriptionUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookSubscriptionUpdatePayload"')
      return WebhookSubscriptionUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const Weight_possibleTypes: string[] = ['Weight']
    export const isWeight = (obj?: { __typename?: any } | null): obj is Weight => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWeight"')
      return Weight_possibleTypes.includes(obj.__typename)
    }
    


    const deliveryProfileCreatePayload_possibleTypes: string[] = ['deliveryProfileCreatePayload']
    export const isdeliveryProfileCreatePayload = (obj?: { __typename?: any } | null): obj is deliveryProfileCreatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeliveryProfileCreatePayload"')
      return deliveryProfileCreatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deliveryProfileRemovePayload_possibleTypes: string[] = ['deliveryProfileRemovePayload']
    export const isdeliveryProfileRemovePayload = (obj?: { __typename?: any } | null): obj is deliveryProfileRemovePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeliveryProfileRemovePayload"')
      return deliveryProfileRemovePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deliveryProfileUpdatePayload_possibleTypes: string[] = ['deliveryProfileUpdatePayload']
    export const isdeliveryProfileUpdatePayload = (obj?: { __typename?: any } | null): obj is deliveryProfileUpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeliveryProfileUpdatePayload"')
      return deliveryProfileUpdatePayload_possibleTypes.includes(obj.__typename)
    }
    

export const enumAbandonmentAbandonmentType = {
   BROWSE: 'BROWSE' as const,
   CART: 'CART' as const,
   CHECKOUT: 'CHECKOUT' as const
}

export const enumAbandonmentDeliveryState = {
   NOT_SENT: 'NOT_SENT' as const,
   SENT: 'SENT' as const,
   SCHEDULED: 'SCHEDULED' as const
}

export const enumAbandonmentEmailState = {
   NOT_SENT: 'NOT_SENT' as const,
   SENT: 'SENT' as const,
   SCHEDULED: 'SCHEDULED' as const
}

export const enumAbandonmentEmailStateUpdateUserErrorCode = {
   ABANDONMENT_NOT_FOUND: 'ABANDONMENT_NOT_FOUND' as const
}

export const enumAbandonmentUpdateActivitiesDeliveryStatusesUserErrorCode = {
   ABANDONMENT_NOT_FOUND: 'ABANDONMENT_NOT_FOUND' as const,
   MARKETING_ACTIVITY_NOT_FOUND: 'MARKETING_ACTIVITY_NOT_FOUND' as const,
   DELIVERY_STATUS_INFO_NOT_FOUND: 'DELIVERY_STATUS_INFO_NOT_FOUND' as const
}

export const enumAppDeveloperType = {
   SHOPIFY: 'SHOPIFY' as const,
   PARTNER: 'PARTNER' as const,
   MERCHANT: 'MERCHANT' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumAppInstallationCategory = {
   CHANNEL: 'CHANNEL' as const,
   POS_EMBEDDED: 'POS_EMBEDDED' as const
}

export const enumAppInstallationPrivacy = {
   PUBLIC: 'PUBLIC' as const,
   PRIVATE: 'PRIVATE' as const
}

export const enumAppInstallationSortKeys = {
   INSTALLED_AT: 'INSTALLED_AT' as const,
   APP_TITLE: 'APP_TITLE' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumAppPricingInterval = {
   ANNUAL: 'ANNUAL' as const,
   EVERY_30_DAYS: 'EVERY_30_DAYS' as const
}

export const enumAppPublicCategory = {
   PRIVATE: 'PRIVATE' as const,
   PUBLIC: 'PUBLIC' as const,
   CUSTOM: 'CUSTOM' as const,
   OTHER: 'OTHER' as const
}

export const enumAppPurchaseStatus = {
   ACCEPTED: 'ACCEPTED' as const,
   ACTIVE: 'ACTIVE' as const,
   DECLINED: 'DECLINED' as const,
   EXPIRED: 'EXPIRED' as const,
   PENDING: 'PENDING' as const
}

export const enumAppRevenueAttributionRecordCreateUserErrorCode = {
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const
}

export const enumAppRevenueAttributionRecordDeleteUserErrorCode = {
   INVALID: 'INVALID' as const
}

export const enumAppRevenueAttributionRecordSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumAppRevenueAttributionType = {
   APPLICATION_PURCHASE: 'APPLICATION_PURCHASE' as const,
   APPLICATION_SUBSCRIPTION: 'APPLICATION_SUBSCRIPTION' as const,
   APPLICATION_USAGE: 'APPLICATION_USAGE' as const,
   OTHER: 'OTHER' as const
}

export const enumAppSubscriptionReplacementBehavior = {
   APPLY_IMMEDIATELY: 'APPLY_IMMEDIATELY' as const,
   APPLY_ON_NEXT_BILLING_CYCLE: 'APPLY_ON_NEXT_BILLING_CYCLE' as const,
   STANDARD: 'STANDARD' as const
}

export const enumAppSubscriptionSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumAppSubscriptionStatus = {
   PENDING: 'PENDING' as const,
   ACCEPTED: 'ACCEPTED' as const,
   ACTIVE: 'ACTIVE' as const,
   DECLINED: 'DECLINED' as const,
   EXPIRED: 'EXPIRED' as const,
   FROZEN: 'FROZEN' as const,
   CANCELLED: 'CANCELLED' as const
}

export const enumAppSubscriptionTrialExtendUserErrorCode = {
   SUBSCRIPTION_NOT_FOUND: 'SUBSCRIPTION_NOT_FOUND' as const,
   TRIAL_NOT_ACTIVE: 'TRIAL_NOT_ACTIVE' as const,
   SUBSCRIPTION_NOT_ACTIVE: 'SUBSCRIPTION_NOT_ACTIVE' as const
}

export const enumAppTransactionSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumAppUsageRecordSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumAutomaticDiscountSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumBadgeType = {
   DEFAULT: 'DEFAULT' as const,
   SUCCESS: 'SUCCESS' as const,
   ATTENTION: 'ATTENTION' as const,
   WARNING: 'WARNING' as const,
   INFO: 'INFO' as const
}

export const enumBillingAttemptUserErrorCode = {
   INVALID: 'INVALID' as const,
   BLANK: 'BLANK' as const,
   CONTRACT_NOT_FOUND: 'CONTRACT_NOT_FOUND' as const,
   ORIGIN_TIME_BEFORE_CONTRACT_CREATION: 'ORIGIN_TIME_BEFORE_CONTRACT_CREATION' as const,
   UPCOMING_CYCLE_LIMIT_EXCEEDED: 'UPCOMING_CYCLE_LIMIT_EXCEEDED' as const,
   CYCLE_INDEX_OUT_OF_RANGE: 'CYCLE_INDEX_OUT_OF_RANGE' as const,
   CYCLE_START_DATE_OUT_OF_RANGE: 'CYCLE_START_DATE_OUT_OF_RANGE' as const,
   ORIGIN_TIME_OUT_OF_RANGE: 'ORIGIN_TIME_OUT_OF_RANGE' as const
}

export const enumBulkMutationErrorCode = {
   OPERATION_IN_PROGRESS: 'OPERATION_IN_PROGRESS' as const,
   INVALID_MUTATION: 'INVALID_MUTATION' as const,
   INVALID_STAGED_UPLOAD_FILE: 'INVALID_STAGED_UPLOAD_FILE' as const,
   NO_SUCH_FILE: 'NO_SUCH_FILE' as const,
   INTERNAL_FILE_SERVER_ERROR: 'INTERNAL_FILE_SERVER_ERROR' as const
}

export const enumBulkOperationErrorCode = {
   ACCESS_DENIED: 'ACCESS_DENIED' as const,
   INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR' as const,
   TIMEOUT: 'TIMEOUT' as const
}

export const enumBulkOperationStatus = {
   CANCELED: 'CANCELED' as const,
   CANCELING: 'CANCELING' as const,
   COMPLETED: 'COMPLETED' as const,
   CREATED: 'CREATED' as const,
   EXPIRED: 'EXPIRED' as const,
   FAILED: 'FAILED' as const,
   RUNNING: 'RUNNING' as const
}

export const enumBulkOperationType = {
   QUERY: 'QUERY' as const,
   MUTATION: 'MUTATION' as const
}

export const enumBulkProductResourceFeedbackCreateUserErrorCode = {
   MAXIMUM_FEEDBACK_LIMIT_EXCEEDED: 'MAXIMUM_FEEDBACK_LIMIT_EXCEEDED' as const,
   OUTDATED_FEEDBACK: 'OUTDATED_FEEDBACK' as const,
   PRODUCT_NOT_FOUND: 'PRODUCT_NOT_FOUND' as const,
   INVALID: 'INVALID' as const,
   BLANK: 'BLANK' as const,
   PRESENT: 'PRESENT' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const
}

export const enumBusinessCustomerErrorCode = {
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND' as const,
   FAILED_TO_DELETE: 'FAILED_TO_DELETE' as const,
   REQUIRED: 'REQUIRED' as const,
   NO_INPUT: 'NO_INPUT' as const,
   INVALID_INPUT: 'INVALID_INPUT' as const,
   UNEXPECTED_TYPE: 'UNEXPECTED_TYPE' as const,
   TOO_LONG: 'TOO_LONG' as const,
   LIMIT_REACHED: 'LIMIT_REACHED' as const,
   INVALID: 'INVALID' as const,
   BLANK: 'BLANK' as const,
   TAKEN: 'TAKEN' as const
}

export const enumCartTransformCreateUserErrorCode = {
   INPUT_INVALID: 'INPUT_INVALID' as const,
   FUNCTION_NOT_FOUND: 'FUNCTION_NOT_FOUND' as const,
   FUNCTION_ALREADY_REGISTERED: 'FUNCTION_ALREADY_REGISTERED' as const,
   FUNCTION_DOES_NOT_IMPLEMENT: 'FUNCTION_DOES_NOT_IMPLEMENT' as const
}

export const enumCartTransformDeleteUserErrorCode = {
   NOT_FOUND: 'NOT_FOUND' as const,
   UNAUTHORIZED_APP_SCOPE: 'UNAUTHORIZED_APP_SCOPE' as const
}

export const enumCatalogSortKeys = {
   TITLE: 'TITLE' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCatalogStatus = {
   ACTIVE: 'ACTIVE' as const,
   ARCHIVED: 'ARCHIVED' as const,
   DRAFT: 'DRAFT' as const
}

export const enumCatalogType = {
   NONE: 'NONE' as const,
   APP: 'APP' as const,
   COMPANY_LOCATION: 'COMPANY_LOCATION' as const,
   MARKET: 'MARKET' as const
}

export const enumCatalogUserErrorCode = {
   APP_CATALOG_PRICE_LIST_ASSIGNMENT: 'APP_CATALOG_PRICE_LIST_ASSIGNMENT' as const,
   CATALOG_FAILED_TO_SAVE: 'CATALOG_FAILED_TO_SAVE' as const,
   CATALOG_NOT_FOUND: 'CATALOG_NOT_FOUND' as const,
   PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET: 'PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET' as const,
   CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES: 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' as const,
   CANNOT_ADD_MORE_THAN_ONE_MARKET: 'CANNOT_ADD_MORE_THAN_ONE_MARKET' as const,
   COMPANY_LOCATION_CATALOG_STATUS_PLAN: 'COMPANY_LOCATION_CATALOG_STATUS_PLAN' as const,
   CONTEXT_ALREADY_ASSIGNED_TO_CATALOG: 'CONTEXT_ALREADY_ASSIGNED_TO_CATALOG' as const,
   CONTEXT_CATALOG_LIMIT_REACHED: 'CONTEXT_CATALOG_LIMIT_REACHED' as const,
   COMPANY_LOCATION_NOT_FOUND: 'COMPANY_LOCATION_NOT_FOUND' as const,
   CONTEXT_DRIVER_MISMATCH: 'CONTEXT_DRIVER_MISMATCH' as const,
   COUNTRY_PRICE_LIST_ASSIGNMENT: 'COUNTRY_PRICE_LIST_ASSIGNMENT' as const,
   INVALID_CATALOG_CONTEXT_TYPE: 'INVALID_CATALOG_CONTEXT_TYPE' as const,
   MARKET_CATALOG_STATUS: 'MARKET_CATALOG_STATUS' as const,
   MARKET_NOT_FOUND: 'MARKET_NOT_FOUND' as const,
   MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH: 'MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH' as const,
   MARKET_TAKEN: 'MARKET_TAKEN' as const,
   MUST_PROVIDE_EXACTLY_ONE_CONTEXT_TYPE: 'MUST_PROVIDE_EXACTLY_ONE_CONTEXT_TYPE' as const,
   PRICE_LIST_FAILED_TO_SAVE: 'PRICE_LIST_FAILED_TO_SAVE' as const,
   PRICE_LIST_NOT_FOUND: 'PRICE_LIST_NOT_FOUND' as const,
   PRICE_LIST_LOCKED: 'PRICE_LIST_LOCKED' as const,
   PUBLICATION_NOT_FOUND: 'PUBLICATION_NOT_FOUND' as const,
   REQUIRES_CONTEXTS_TO_ADD_OR_REMOVE: 'REQUIRES_CONTEXTS_TO_ADD_OR_REMOVE' as const,
   UNSUPPORTED_CATALOG_ACTION: 'UNSUPPORTED_CATALOG_ACTION' as const,
   CANNOT_CREATE_APP_CATALOG: 'CANNOT_CREATE_APP_CATALOG' as const,
   CANNOT_MODIFY_APP_CATALOG: 'CANNOT_MODIFY_APP_CATALOG' as const,
   CANNOT_DELETE_APP_CATALOG: 'CANNOT_DELETE_APP_CATALOG' as const,
   CANNOT_CREATE_MARKET_CATALOG: 'CANNOT_CREATE_MARKET_CATALOG' as const,
   CANNOT_MODIFY_MARKET_CATALOG: 'CANNOT_MODIFY_MARKET_CATALOG' as const,
   CANNOT_DELETE_MARKET_CATALOG: 'CANNOT_DELETE_MARKET_CATALOG' as const,
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   BLANK: 'BLANK' as const
}

export const enumCheckoutProfileSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   EDITED_AT: 'EDITED_AT' as const,
   IS_PUBLISHED: 'IS_PUBLISHED' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCodeDiscountSortKeys = {
   STARTS_AT: 'STARTS_AT' as const,
   ENDS_AT: 'ENDS_AT' as const,
   TITLE: 'TITLE' as const,
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCollectionAddProductsV2UserErrorCode = {
   CANT_ADD_TO_SMART_COLLECTION: 'CANT_ADD_TO_SMART_COLLECTION' as const,
   COLLECTION_DOES_NOT_EXIST: 'COLLECTION_DOES_NOT_EXIST' as const
}

export const enumCollectionRuleColumn = {
   TAG: 'TAG' as const,
   TITLE: 'TITLE' as const,
   TYPE: 'TYPE' as const,
   PRODUCT_TAXONOMY_NODE_ID: 'PRODUCT_TAXONOMY_NODE_ID' as const,
   VENDOR: 'VENDOR' as const,
   VARIANT_PRICE: 'VARIANT_PRICE' as const,
   IS_PRICE_REDUCED: 'IS_PRICE_REDUCED' as const,
   VARIANT_COMPARE_AT_PRICE: 'VARIANT_COMPARE_AT_PRICE' as const,
   VARIANT_WEIGHT: 'VARIANT_WEIGHT' as const,
   VARIANT_INVENTORY: 'VARIANT_INVENTORY' as const,
   VARIANT_TITLE: 'VARIANT_TITLE' as const,
   PRODUCT_METAFIELD_DEFINITION: 'PRODUCT_METAFIELD_DEFINITION' as const,
   VARIANT_METAFIELD_DEFINITION: 'VARIANT_METAFIELD_DEFINITION' as const
}

export const enumCollectionRuleRelation = {
   CONTAINS: 'CONTAINS' as const,
   ENDS_WITH: 'ENDS_WITH' as const,
   EQUALS: 'EQUALS' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   IS_NOT_SET: 'IS_NOT_SET' as const,
   IS_SET: 'IS_SET' as const,
   LESS_THAN: 'LESS_THAN' as const,
   NOT_CONTAINS: 'NOT_CONTAINS' as const,
   NOT_EQUALS: 'NOT_EQUALS' as const,
   STARTS_WITH: 'STARTS_WITH' as const
}

export const enumCollectionSortKeys = {
   TITLE: 'TITLE' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCollectionSortOrder = {
   ALPHA_ASC: 'ALPHA_ASC' as const,
   ALPHA_DESC: 'ALPHA_DESC' as const,
   BEST_SELLING: 'BEST_SELLING' as const,
   CREATED: 'CREATED' as const,
   CREATED_DESC: 'CREATED_DESC' as const,
   MANUAL: 'MANUAL' as const,
   PRICE_ASC: 'PRICE_ASC' as const,
   PRICE_DESC: 'PRICE_DESC' as const
}

export const enumCompanyAddressType = {
   BILLING: 'BILLING' as const,
   SHIPPING: 'SHIPPING' as const
}

export const enumCompanyContactRoleAssignmentSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   LOCATION_NAME: 'LOCATION_NAME' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCompanyContactRoleSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCompanyContactSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   TITLE: 'TITLE' as const,
   COMPANY_ID: 'COMPANY_ID' as const,
   NAME: 'NAME' as const,
   EMAIL: 'EMAIL' as const,
   NAME_EMAIL: 'NAME_EMAIL' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCompanyLocationSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   NAME: 'NAME' as const,
   COMPANY_ID: 'COMPANY_ID' as const,
   COMPANY_AND_LOCATION_NAME: 'COMPANY_AND_LOCATION_NAME' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCompanySortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   SINCE_DATE: 'SINCE_DATE' as const,
   NAME: 'NAME' as const,
   ORDER_COUNT: 'ORDER_COUNT' as const,
   TOTAL_SPENT: 'TOTAL_SPENT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCountryCode = {
   AF: 'AF' as const,
   AX: 'AX' as const,
   AL: 'AL' as const,
   DZ: 'DZ' as const,
   AD: 'AD' as const,
   AO: 'AO' as const,
   AI: 'AI' as const,
   AG: 'AG' as const,
   AR: 'AR' as const,
   AM: 'AM' as const,
   AW: 'AW' as const,
   AC: 'AC' as const,
   AU: 'AU' as const,
   AT: 'AT' as const,
   AZ: 'AZ' as const,
   BS: 'BS' as const,
   BH: 'BH' as const,
   BD: 'BD' as const,
   BB: 'BB' as const,
   BY: 'BY' as const,
   BE: 'BE' as const,
   BZ: 'BZ' as const,
   BJ: 'BJ' as const,
   BM: 'BM' as const,
   BT: 'BT' as const,
   BO: 'BO' as const,
   BA: 'BA' as const,
   BW: 'BW' as const,
   BV: 'BV' as const,
   BR: 'BR' as const,
   IO: 'IO' as const,
   BN: 'BN' as const,
   BG: 'BG' as const,
   BF: 'BF' as const,
   BI: 'BI' as const,
   KH: 'KH' as const,
   CA: 'CA' as const,
   CV: 'CV' as const,
   BQ: 'BQ' as const,
   KY: 'KY' as const,
   CF: 'CF' as const,
   TD: 'TD' as const,
   CL: 'CL' as const,
   CN: 'CN' as const,
   CX: 'CX' as const,
   CC: 'CC' as const,
   CO: 'CO' as const,
   KM: 'KM' as const,
   CG: 'CG' as const,
   CD: 'CD' as const,
   CK: 'CK' as const,
   CR: 'CR' as const,
   HR: 'HR' as const,
   CU: 'CU' as const,
   CW: 'CW' as const,
   CY: 'CY' as const,
   CZ: 'CZ' as const,
   CI: 'CI' as const,
   DK: 'DK' as const,
   DJ: 'DJ' as const,
   DM: 'DM' as const,
   DO: 'DO' as const,
   EC: 'EC' as const,
   EG: 'EG' as const,
   SV: 'SV' as const,
   GQ: 'GQ' as const,
   ER: 'ER' as const,
   EE: 'EE' as const,
   SZ: 'SZ' as const,
   ET: 'ET' as const,
   FK: 'FK' as const,
   FO: 'FO' as const,
   FJ: 'FJ' as const,
   FI: 'FI' as const,
   FR: 'FR' as const,
   GF: 'GF' as const,
   PF: 'PF' as const,
   TF: 'TF' as const,
   GA: 'GA' as const,
   GM: 'GM' as const,
   GE: 'GE' as const,
   DE: 'DE' as const,
   GH: 'GH' as const,
   GI: 'GI' as const,
   GR: 'GR' as const,
   GL: 'GL' as const,
   GD: 'GD' as const,
   GP: 'GP' as const,
   GT: 'GT' as const,
   GG: 'GG' as const,
   GN: 'GN' as const,
   GW: 'GW' as const,
   GY: 'GY' as const,
   HT: 'HT' as const,
   HM: 'HM' as const,
   VA: 'VA' as const,
   HN: 'HN' as const,
   HK: 'HK' as const,
   HU: 'HU' as const,
   IS: 'IS' as const,
   IN: 'IN' as const,
   ID: 'ID' as const,
   IR: 'IR' as const,
   IQ: 'IQ' as const,
   IE: 'IE' as const,
   IM: 'IM' as const,
   IL: 'IL' as const,
   IT: 'IT' as const,
   JM: 'JM' as const,
   JP: 'JP' as const,
   JE: 'JE' as const,
   JO: 'JO' as const,
   KZ: 'KZ' as const,
   KE: 'KE' as const,
   KI: 'KI' as const,
   KP: 'KP' as const,
   XK: 'XK' as const,
   KW: 'KW' as const,
   KG: 'KG' as const,
   LA: 'LA' as const,
   LV: 'LV' as const,
   LB: 'LB' as const,
   LS: 'LS' as const,
   LR: 'LR' as const,
   LY: 'LY' as const,
   LI: 'LI' as const,
   LT: 'LT' as const,
   LU: 'LU' as const,
   MO: 'MO' as const,
   MG: 'MG' as const,
   MW: 'MW' as const,
   MY: 'MY' as const,
   MV: 'MV' as const,
   ML: 'ML' as const,
   MT: 'MT' as const,
   MQ: 'MQ' as const,
   MR: 'MR' as const,
   MU: 'MU' as const,
   YT: 'YT' as const,
   MX: 'MX' as const,
   MD: 'MD' as const,
   MC: 'MC' as const,
   MN: 'MN' as const,
   ME: 'ME' as const,
   MS: 'MS' as const,
   MA: 'MA' as const,
   MZ: 'MZ' as const,
   MM: 'MM' as const,
   NA: 'NA' as const,
   NR: 'NR' as const,
   NP: 'NP' as const,
   NL: 'NL' as const,
   AN: 'AN' as const,
   NC: 'NC' as const,
   NZ: 'NZ' as const,
   NI: 'NI' as const,
   NE: 'NE' as const,
   NG: 'NG' as const,
   NU: 'NU' as const,
   NF: 'NF' as const,
   MK: 'MK' as const,
   NO: 'NO' as const,
   OM: 'OM' as const,
   PK: 'PK' as const,
   PS: 'PS' as const,
   PA: 'PA' as const,
   PG: 'PG' as const,
   PY: 'PY' as const,
   PE: 'PE' as const,
   PH: 'PH' as const,
   PN: 'PN' as const,
   PL: 'PL' as const,
   PT: 'PT' as const,
   QA: 'QA' as const,
   CM: 'CM' as const,
   RE: 'RE' as const,
   RO: 'RO' as const,
   RU: 'RU' as const,
   RW: 'RW' as const,
   BL: 'BL' as const,
   SH: 'SH' as const,
   KN: 'KN' as const,
   LC: 'LC' as const,
   MF: 'MF' as const,
   PM: 'PM' as const,
   WS: 'WS' as const,
   SM: 'SM' as const,
   ST: 'ST' as const,
   SA: 'SA' as const,
   SN: 'SN' as const,
   RS: 'RS' as const,
   SC: 'SC' as const,
   SL: 'SL' as const,
   SG: 'SG' as const,
   SX: 'SX' as const,
   SK: 'SK' as const,
   SI: 'SI' as const,
   SB: 'SB' as const,
   SO: 'SO' as const,
   ZA: 'ZA' as const,
   GS: 'GS' as const,
   KR: 'KR' as const,
   SS: 'SS' as const,
   ES: 'ES' as const,
   LK: 'LK' as const,
   VC: 'VC' as const,
   SD: 'SD' as const,
   SR: 'SR' as const,
   SJ: 'SJ' as const,
   SE: 'SE' as const,
   CH: 'CH' as const,
   SY: 'SY' as const,
   TW: 'TW' as const,
   TJ: 'TJ' as const,
   TZ: 'TZ' as const,
   TH: 'TH' as const,
   TL: 'TL' as const,
   TG: 'TG' as const,
   TK: 'TK' as const,
   TO: 'TO' as const,
   TT: 'TT' as const,
   TA: 'TA' as const,
   TN: 'TN' as const,
   TR: 'TR' as const,
   TM: 'TM' as const,
   TC: 'TC' as const,
   TV: 'TV' as const,
   UG: 'UG' as const,
   UA: 'UA' as const,
   AE: 'AE' as const,
   GB: 'GB' as const,
   US: 'US' as const,
   UM: 'UM' as const,
   UY: 'UY' as const,
   UZ: 'UZ' as const,
   VU: 'VU' as const,
   VE: 'VE' as const,
   VN: 'VN' as const,
   VG: 'VG' as const,
   WF: 'WF' as const,
   EH: 'EH' as const,
   YE: 'YE' as const,
   ZM: 'ZM' as const,
   ZW: 'ZW' as const,
   ZZ: 'ZZ' as const
}

export const enumCropRegion = {
   CENTER: 'CENTER' as const,
   TOP: 'TOP' as const,
   BOTTOM: 'BOTTOM' as const,
   LEFT: 'LEFT' as const,
   RIGHT: 'RIGHT' as const
}

export const enumCurrencyCode = {
   USD: 'USD' as const,
   EUR: 'EUR' as const,
   GBP: 'GBP' as const,
   CAD: 'CAD' as const,
   AFN: 'AFN' as const,
   ALL: 'ALL' as const,
   DZD: 'DZD' as const,
   AOA: 'AOA' as const,
   ARS: 'ARS' as const,
   AMD: 'AMD' as const,
   AWG: 'AWG' as const,
   AUD: 'AUD' as const,
   BBD: 'BBD' as const,
   AZN: 'AZN' as const,
   BDT: 'BDT' as const,
   BSD: 'BSD' as const,
   BHD: 'BHD' as const,
   BIF: 'BIF' as const,
   BZD: 'BZD' as const,
   BMD: 'BMD' as const,
   BTN: 'BTN' as const,
   BAM: 'BAM' as const,
   BRL: 'BRL' as const,
   BOB: 'BOB' as const,
   BWP: 'BWP' as const,
   BND: 'BND' as const,
   BGN: 'BGN' as const,
   MMK: 'MMK' as const,
   KHR: 'KHR' as const,
   CVE: 'CVE' as const,
   KYD: 'KYD' as const,
   XAF: 'XAF' as const,
   CLP: 'CLP' as const,
   CNY: 'CNY' as const,
   COP: 'COP' as const,
   KMF: 'KMF' as const,
   CDF: 'CDF' as const,
   CRC: 'CRC' as const,
   HRK: 'HRK' as const,
   CZK: 'CZK' as const,
   DKK: 'DKK' as const,
   DOP: 'DOP' as const,
   XCD: 'XCD' as const,
   EGP: 'EGP' as const,
   ETB: 'ETB' as const,
   XPF: 'XPF' as const,
   FJD: 'FJD' as const,
   GMD: 'GMD' as const,
   GHS: 'GHS' as const,
   GTQ: 'GTQ' as const,
   GYD: 'GYD' as const,
   GEL: 'GEL' as const,
   HTG: 'HTG' as const,
   HNL: 'HNL' as const,
   HKD: 'HKD' as const,
   HUF: 'HUF' as const,
   ISK: 'ISK' as const,
   INR: 'INR' as const,
   IDR: 'IDR' as const,
   ILS: 'ILS' as const,
   IQD: 'IQD' as const,
   JMD: 'JMD' as const,
   JPY: 'JPY' as const,
   JEP: 'JEP' as const,
   JOD: 'JOD' as const,
   KZT: 'KZT' as const,
   KES: 'KES' as const,
   KWD: 'KWD' as const,
   KGS: 'KGS' as const,
   LAK: 'LAK' as const,
   LVL: 'LVL' as const,
   LBP: 'LBP' as const,
   LSL: 'LSL' as const,
   LRD: 'LRD' as const,
   LTL: 'LTL' as const,
   MGA: 'MGA' as const,
   MKD: 'MKD' as const,
   MOP: 'MOP' as const,
   MWK: 'MWK' as const,
   MVR: 'MVR' as const,
   MXN: 'MXN' as const,
   MYR: 'MYR' as const,
   MUR: 'MUR' as const,
   MDL: 'MDL' as const,
   MAD: 'MAD' as const,
   MNT: 'MNT' as const,
   MZN: 'MZN' as const,
   NAD: 'NAD' as const,
   NPR: 'NPR' as const,
   ANG: 'ANG' as const,
   NZD: 'NZD' as const,
   NIO: 'NIO' as const,
   NGN: 'NGN' as const,
   NOK: 'NOK' as const,
   OMR: 'OMR' as const,
   PAB: 'PAB' as const,
   PKR: 'PKR' as const,
   PGK: 'PGK' as const,
   PYG: 'PYG' as const,
   PEN: 'PEN' as const,
   PHP: 'PHP' as const,
   PLN: 'PLN' as const,
   QAR: 'QAR' as const,
   RON: 'RON' as const,
   RUB: 'RUB' as const,
   RWF: 'RWF' as const,
   WST: 'WST' as const,
   SAR: 'SAR' as const,
   RSD: 'RSD' as const,
   SCR: 'SCR' as const,
   SGD: 'SGD' as const,
   SDG: 'SDG' as const,
   SYP: 'SYP' as const,
   ZAR: 'ZAR' as const,
   KRW: 'KRW' as const,
   SSP: 'SSP' as const,
   SBD: 'SBD' as const,
   LKR: 'LKR' as const,
   SRD: 'SRD' as const,
   SZL: 'SZL' as const,
   SEK: 'SEK' as const,
   CHF: 'CHF' as const,
   TWD: 'TWD' as const,
   THB: 'THB' as const,
   TZS: 'TZS' as const,
   TTD: 'TTD' as const,
   TND: 'TND' as const,
   TRY: 'TRY' as const,
   TMT: 'TMT' as const,
   UGX: 'UGX' as const,
   UAH: 'UAH' as const,
   AED: 'AED' as const,
   UYU: 'UYU' as const,
   UZS: 'UZS' as const,
   VUV: 'VUV' as const,
   VND: 'VND' as const,
   XOF: 'XOF' as const,
   YER: 'YER' as const,
   ZMW: 'ZMW' as const,
   BYN: 'BYN' as const,
   BYR: 'BYR' as const,
   DJF: 'DJF' as const,
   ERN: 'ERN' as const,
   FKP: 'FKP' as const,
   GIP: 'GIP' as const,
   GNF: 'GNF' as const,
   IRR: 'IRR' as const,
   KID: 'KID' as const,
   LYD: 'LYD' as const,
   MRU: 'MRU' as const,
   SLL: 'SLL' as const,
   SHP: 'SHP' as const,
   SOS: 'SOS' as const,
   STD: 'STD' as const,
   STN: 'STN' as const,
   TJS: 'TJS' as const,
   TOP: 'TOP' as const,
   VED: 'VED' as const,
   VEF: 'VEF' as const,
   VES: 'VES' as const,
   XXX: 'XXX' as const
}

export const enumCustomerConsentCollectedFrom = {
   SHOPIFY: 'SHOPIFY' as const,
   OTHER: 'OTHER' as const
}

export const enumCustomerEmailAddressMarketingState = {
   INVALID: 'INVALID' as const,
   NOT_SUBSCRIBED: 'NOT_SUBSCRIBED' as const,
   PENDING: 'PENDING' as const,
   SUBSCRIBED: 'SUBSCRIBED' as const,
   UNSUBSCRIBED: 'UNSUBSCRIBED' as const
}

export const enumCustomerEmailAddressOpenTrackingLevel = {
   UNKNOWN: 'UNKNOWN' as const,
   OPTED_IN: 'OPTED_IN' as const,
   OPTED_OUT: 'OPTED_OUT' as const
}

export const enumCustomerEmailMarketingConsentUpdateUserErrorCode = {
   INVALID: 'INVALID' as const,
   INCLUSION: 'INCLUSION' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   MISSING_ARGUMENT: 'MISSING_ARGUMENT' as const
}

export const enumCustomerEmailMarketingState = {
   NOT_SUBSCRIBED: 'NOT_SUBSCRIBED' as const,
   PENDING: 'PENDING' as const,
   SUBSCRIBED: 'SUBSCRIBED' as const,
   UNSUBSCRIBED: 'UNSUBSCRIBED' as const,
   REDACTED: 'REDACTED' as const,
   INVALID: 'INVALID' as const
}

export const enumCustomerMarketingOptInLevel = {
   SINGLE_OPT_IN: 'SINGLE_OPT_IN' as const,
   CONFIRMED_OPT_IN: 'CONFIRMED_OPT_IN' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumCustomerMergeErrorCode = {
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   INVALID_CUSTOMER: 'INVALID_CUSTOMER' as const,
   INVALID_CUSTOMER_ID: 'INVALID_CUSTOMER_ID' as const,
   CUSTOMER_HAS_GIFT_CARDS: 'CUSTOMER_HAS_GIFT_CARDS' as const,
   MISSING_OVERRIDE_ATTRIBUTE: 'MISSING_OVERRIDE_ATTRIBUTE' as const,
   OVERRIDE_ATTRIBUTE_INVALID: 'OVERRIDE_ATTRIBUTE_INVALID' as const
}

export const enumCustomerMergeErrorFieldType = {
   DELETED_AT: 'DELETED_AT' as const,
   REDACTED_AT: 'REDACTED_AT' as const,
   SUBSCRIPTIONS: 'SUBSCRIPTIONS' as const,
   MERGE_IN_PROGRESS: 'MERGE_IN_PROGRESS' as const,
   GIFT_CARDS: 'GIFT_CARDS' as const,
   COMPANY_CONTACT: 'COMPANY_CONTACT' as const,
   CUSTOMER_PAYMENT_METHODS: 'CUSTOMER_PAYMENT_METHODS' as const,
   PENDING_DATA_REQUEST: 'PENDING_DATA_REQUEST' as const,
   MULTIPASS_IDENTIFIER: 'MULTIPASS_IDENTIFIER' as const
}

export const enumCustomerMergeRequestStatus = {
   REQUESTED: 'REQUESTED' as const,
   IN_PROGRESS: 'IN_PROGRESS' as const,
   COMPLETED: 'COMPLETED' as const,
   FAILED: 'FAILED' as const
}

export const enumCustomerPaymentMethodCreateFromDuplicationDataUserErrorCode = {
   TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS' as const,
   CUSTOMER_DOES_NOT_EXIST: 'CUSTOMER_DOES_NOT_EXIST' as const,
   INVALID_ENCRYPTED_DUPLICATION_DATA: 'INVALID_ENCRYPTED_DUPLICATION_DATA' as const
}

export const enumCustomerPaymentMethodGetDuplicationDataUserErrorCode = {
   PAYMENT_METHOD_DOES_NOT_EXIST: 'PAYMENT_METHOD_DOES_NOT_EXIST' as const,
   INVALID_INSTRUMENT: 'INVALID_INSTRUMENT' as const,
   TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS' as const,
   CUSTOMER_DOES_NOT_EXIST: 'CUSTOMER_DOES_NOT_EXIST' as const,
   SAME_SHOP: 'SAME_SHOP' as const,
   INVALID_ORGANIZATION_SHOP: 'INVALID_ORGANIZATION_SHOP' as const
}

export const enumCustomerPaymentMethodGetUpdateUrlUserErrorCode = {
   PAYMENT_METHOD_DOES_NOT_EXIST: 'PAYMENT_METHOD_DOES_NOT_EXIST' as const,
   INVALID_INSTRUMENT: 'INVALID_INSTRUMENT' as const,
   TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS' as const,
   CUSTOMER_DOES_NOT_EXIST: 'CUSTOMER_DOES_NOT_EXIST' as const
}

export const enumCustomerPaymentMethodRemoteUserErrorCode = {
   INVALID: 'INVALID' as const,
   PRESENT: 'PRESENT' as const,
   TAKEN: 'TAKEN' as const,
   EXACTLY_ONE_REMOTE_REFERENCE_REQUIRED: 'EXACTLY_ONE_REMOTE_REFERENCE_REQUIRED' as const,
   AUTHORIZE_NET_NOT_ENABLED_FOR_SUBSCRIPTIONS: 'AUTHORIZE_NET_NOT_ENABLED_FOR_SUBSCRIPTIONS' as const,
   BRAINTREE_NOT_ENABLED_FOR_SUBSCRIPTIONS: 'BRAINTREE_NOT_ENABLED_FOR_SUBSCRIPTIONS' as const
}

export const enumCustomerPaymentMethodRevocationReason = {
   AUTHORIZE_NET_GATEWAY_NOT_ENABLED: 'AUTHORIZE_NET_GATEWAY_NOT_ENABLED' as const,
   AUTHORIZE_NET_RETURNED_NO_PAYMENT_METHOD: 'AUTHORIZE_NET_RETURNED_NO_PAYMENT_METHOD' as const,
   FAILED_TO_UPDATE_CREDIT_CARD: 'FAILED_TO_UPDATE_CREDIT_CARD' as const,
   STRIPE_API_AUTHENTICATION_ERROR: 'STRIPE_API_AUTHENTICATION_ERROR' as const,
   STRIPE_API_INVALID_REQUEST_ERROR: 'STRIPE_API_INVALID_REQUEST_ERROR' as const,
   STRIPE_GATEWAY_NOT_ENABLED: 'STRIPE_GATEWAY_NOT_ENABLED' as const,
   STRIPE_RETURNED_NO_PAYMENT_METHOD: 'STRIPE_RETURNED_NO_PAYMENT_METHOD' as const,
   STRIPE_PAYMENT_METHOD_NOT_CARD: 'STRIPE_PAYMENT_METHOD_NOT_CARD' as const,
   BRAINTREE_API_AUTHENTICATION_ERROR: 'BRAINTREE_API_AUTHENTICATION_ERROR' as const,
   BRAINTREE_GATEWAY_NOT_ENABLED: 'BRAINTREE_GATEWAY_NOT_ENABLED' as const,
   BRAINTREE_RETURNED_NO_PAYMENT_METHOD: 'BRAINTREE_RETURNED_NO_PAYMENT_METHOD' as const,
   BRAINTREE_PAYMENT_METHOD_NOT_CARD: 'BRAINTREE_PAYMENT_METHOD_NOT_CARD' as const,
   MANUALLY_REVOKED: 'MANUALLY_REVOKED' as const,
   MERGED: 'MERGED' as const
}

export const enumCustomerPaymentMethodUserErrorCode = {
   INVALID: 'INVALID' as const,
   PRESENT: 'PRESENT' as const,
   TAKEN: 'TAKEN' as const
}

export const enumCustomerPredictedSpendTier = {
   HIGH: 'HIGH' as const,
   MEDIUM: 'MEDIUM' as const,
   LOW: 'LOW' as const
}

export const enumCustomerProductSubscriberStatus = {
   ACTIVE: 'ACTIVE' as const,
   CANCELLED: 'CANCELLED' as const,
   EXPIRED: 'EXPIRED' as const,
   FAILED: 'FAILED' as const,
   NEVER_SUBSCRIBED: 'NEVER_SUBSCRIBED' as const,
   PAUSED: 'PAUSED' as const
}

export const enumCustomerSavedSearchSortKeys = {
   NAME: 'NAME' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCustomerSegmentMembersQueryUserErrorCode = {
   INVALID: 'INVALID' as const
}

export const enumCustomerSmsMarketingConsentErrorCode = {
   INVALID: 'INVALID' as const,
   INCLUSION: 'INCLUSION' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   MISSING_ARGUMENT: 'MISSING_ARGUMENT' as const
}

export const enumCustomerSmsMarketingState = {
   NOT_SUBSCRIBED: 'NOT_SUBSCRIBED' as const,
   PENDING: 'PENDING' as const,
   SUBSCRIBED: 'SUBSCRIBED' as const,
   UNSUBSCRIBED: 'UNSUBSCRIBED' as const,
   REDACTED: 'REDACTED' as const
}

export const enumCustomerSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   NAME: 'NAME' as const,
   LOCATION: 'LOCATION' as const,
   ORDERS_COUNT: 'ORDERS_COUNT' as const,
   LAST_ORDER_DATE: 'LAST_ORDER_DATE' as const,
   TOTAL_SPENT: 'TOTAL_SPENT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumCustomerState = {
   DECLINED: 'DECLINED' as const,
   DISABLED: 'DISABLED' as const,
   ENABLED: 'ENABLED' as const,
   INVITED: 'INVITED' as const
}

export const enumDayOfTheWeek = {
   MONDAY: 'MONDAY' as const,
   TUESDAY: 'TUESDAY' as const,
   WEDNESDAY: 'WEDNESDAY' as const,
   THURSDAY: 'THURSDAY' as const,
   FRIDAY: 'FRIDAY' as const,
   SATURDAY: 'SATURDAY' as const,
   SUNDAY: 'SUNDAY' as const
}

export const enumDelegateAccessTokenCreateUserErrorCode = {
   EMPTY_ACCESS_SCOPE: 'EMPTY_ACCESS_SCOPE' as const,
   DELEGATE_ACCESS_TOKEN: 'DELEGATE_ACCESS_TOKEN' as const,
   NEGATIVE_EXPIRES_IN: 'NEGATIVE_EXPIRES_IN' as const,
   EXPIRES_AFTER_PARENT: 'EXPIRES_AFTER_PARENT' as const,
   REFRESH_TOKEN: 'REFRESH_TOKEN' as const,
   PERSISTENCE_FAILED: 'PERSISTENCE_FAILED' as const,
   UNKNOWN_SCOPES: 'UNKNOWN_SCOPES' as const
}

export const enumDelegateAccessTokenDestroyUserErrorCode = {
   PERSISTENCE_FAILED: 'PERSISTENCE_FAILED' as const,
   ACCESS_TOKEN_NOT_FOUND: 'ACCESS_TOKEN_NOT_FOUND' as const,
   CAN_ONLY_DELETE_DELEGATE_TOKENS: 'CAN_ONLY_DELETE_DELEGATE_TOKENS' as const,
   ACCESS_DENIED: 'ACCESS_DENIED' as const
}

export const enumDeletionEventSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumDeletionEventSubjectType = {
   COLLECTION: 'COLLECTION' as const,
   PRODUCT: 'PRODUCT' as const
}

export const enumDeliveryConditionField = {
   TOTAL_WEIGHT: 'TOTAL_WEIGHT' as const,
   TOTAL_PRICE: 'TOTAL_PRICE' as const
}

export const enumDeliveryConditionOperator = {
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const
}

export const enumDeliveryCustomizationErrorCode = {
   INVALID: 'INVALID' as const,
   FUNCTION_NOT_FOUND: 'FUNCTION_NOT_FOUND' as const,
   DELIVERY_CUSTOMIZATION_NOT_FOUND: 'DELIVERY_CUSTOMIZATION_NOT_FOUND' as const,
   DELIVERY_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE: 'DELIVERY_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE' as const,
   UNAUTHORIZED_APP_SCOPE: 'UNAUTHORIZED_APP_SCOPE' as const,
   MAXIMUM_ACTIVE_DELIVERY_CUSTOMIZATIONS: 'MAXIMUM_ACTIVE_DELIVERY_CUSTOMIZATIONS' as const,
   CUSTOM_APP_FUNCTION_NOT_ELIGIBLE: 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' as const,
   FUNCTION_DOES_NOT_IMPLEMENT: 'FUNCTION_DOES_NOT_IMPLEMENT' as const,
   FUNCTION_PENDING_DELETION: 'FUNCTION_PENDING_DELETION' as const,
   FUNCTION_ID_CANNOT_BE_CHANGED: 'FUNCTION_ID_CANNOT_BE_CHANGED' as const,
   REQUIRED_INPUT_FIELD: 'REQUIRED_INPUT_FIELD' as const,
   INVALID_METAFIELDS: 'INVALID_METAFIELDS' as const
}

export const enumDeliveryLegacyModeBlockedReason = {
   MULTI_LOCATION_DISABLED: 'MULTI_LOCATION_DISABLED' as const,
   NO_LOCATIONS_FULFILLING_ONLINE_ORDERS: 'NO_LOCATIONS_FULFILLING_ONLINE_ORDERS' as const
}

export const enumDeliveryLocalPickupTime = {
   ONE_HOUR: 'ONE_HOUR' as const,
   TWO_HOURS: 'TWO_HOURS' as const,
   FOUR_HOURS: 'FOUR_HOURS' as const,
   TWENTY_FOUR_HOURS: 'TWENTY_FOUR_HOURS' as const,
   TWO_TO_FOUR_DAYS: 'TWO_TO_FOUR_DAYS' as const,
   FIVE_OR_MORE_DAYS: 'FIVE_OR_MORE_DAYS' as const
}

export const enumDeliveryLocationLocalPickupSettingsErrorCode = {
   ACTIVE_LOCATION_NOT_FOUND: 'ACTIVE_LOCATION_NOT_FOUND' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumDeliveryMethodDefinitionType = {
   MERCHANT: 'MERCHANT' as const,
   PARTICIPANT: 'PARTICIPANT' as const
}

export const enumDeliveryMethodType = {
   SHIPPING: 'SHIPPING' as const,
   PICK_UP: 'PICK_UP' as const,
   NONE: 'NONE' as const,
   RETAIL: 'RETAIL' as const,
   LOCAL: 'LOCAL' as const
}

export const enumDigitalWallet = {
   APPLE_PAY: 'APPLE_PAY' as const,
   ANDROID_PAY: 'ANDROID_PAY' as const,
   GOOGLE_PAY: 'GOOGLE_PAY' as const,
   SHOPIFY_PAY: 'SHOPIFY_PAY' as const
}

export const enumDiscountApplicationAllocationMethod = {
   ACROSS: 'ACROSS' as const,
   EACH: 'EACH' as const,
   ONE: 'ONE' as const
}

export const enumDiscountApplicationLevel = {
   ORDER: 'ORDER' as const,
   LINE: 'LINE' as const
}

export const enumDiscountApplicationTargetSelection = {
   ALL: 'ALL' as const,
   ENTITLED: 'ENTITLED' as const,
   EXPLICIT: 'EXPLICIT' as const
}

export const enumDiscountApplicationTargetType = {
   LINE_ITEM: 'LINE_ITEM' as const,
   SHIPPING_LINE: 'SHIPPING_LINE' as const
}

export const enumDiscountClass = {
   PRODUCT: 'PRODUCT' as const,
   ORDER: 'ORDER' as const,
   SHIPPING: 'SHIPPING' as const
}

export const enumDiscountCodeSortKeys = {
   CODE: 'CODE' as const,
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumDiscountErrorCode = {
   BLANK: 'BLANK' as const,
   PRESENT: 'PRESENT' as const,
   EQUAL_TO: 'EQUAL_TO' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   INVALID: 'INVALID' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const,
   LESS_THAN: 'LESS_THAN' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   TOO_MANY_ARGUMENTS: 'TOO_MANY_ARGUMENTS' as const,
   MISSING_ARGUMENT: 'MISSING_ARGUMENT' as const,
   ACTIVE_PERIOD_OVERLAP: 'ACTIVE_PERIOD_OVERLAP' as const,
   EXCEEDED_MAX: 'EXCEEDED_MAX' as const,
   MINIMUM_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT: 'MINIMUM_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT' as const,
   VALUE_OUTSIDE_RANGE: 'VALUE_OUTSIDE_RANGE' as const,
   CONFLICT: 'CONFLICT' as const,
   IMPLICIT_DUPLICATE: 'IMPLICIT_DUPLICATE' as const,
   DUPLICATE: 'DUPLICATE' as const,
   INCLUSION: 'INCLUSION' as const,
   INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS: 'INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS' as const,
   INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE: 'INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE' as const,
   MAX_APP_DISCOUNTS: 'MAX_APP_DISCOUNTS' as const
}

export const enumDiscountShareableUrlTargetType = {
   HOME: 'HOME' as const,
   PRODUCT: 'PRODUCT' as const,
   COLLECTION: 'COLLECTION' as const
}

export const enumDiscountSortKeys = {
   STARTS_AT: 'STARTS_AT' as const,
   ENDS_AT: 'ENDS_AT' as const,
   TITLE: 'TITLE' as const,
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumDiscountStatus = {
   ACTIVE: 'ACTIVE' as const,
   EXPIRED: 'EXPIRED' as const,
   SCHEDULED: 'SCHEDULED' as const
}

export const enumDiscountTargetType = {
   LINE_ITEM: 'LINE_ITEM' as const,
   SHIPPING_LINE: 'SHIPPING_LINE' as const
}

export const enumDiscountType = {
   MANUAL: 'MANUAL' as const,
   CODE_DISCOUNT: 'CODE_DISCOUNT' as const
}

export const enumDisputeEvidenceUpdateUserErrorCode = {
   DISPUTE_EVIDENCE_NOT_FOUND: 'DISPUTE_EVIDENCE_NOT_FOUND' as const,
   EVIDENCE_ALREADY_ACCEPTED: 'EVIDENCE_ALREADY_ACCEPTED' as const,
   EVIDENCE_PAST_DUE_DATE: 'EVIDENCE_PAST_DUE_DATE' as const,
   FILES_SIZE_EXCEEDED_LIMIT: 'FILES_SIZE_EXCEEDED_LIMIT' as const,
   TOO_LARGE: 'TOO_LARGE' as const,
   INVALID: 'INVALID' as const
}

export const enumDisputeStatus = {
   NEEDS_RESPONSE: 'NEEDS_RESPONSE' as const,
   UNDER_REVIEW: 'UNDER_REVIEW' as const,
   CHARGE_REFUNDED: 'CHARGE_REFUNDED' as const,
   ACCEPTED: 'ACCEPTED' as const,
   WON: 'WON' as const,
   LOST: 'LOST' as const
}

export const enumDisputeType = {
   CHARGEBACK: 'CHARGEBACK' as const,
   INQUIRY: 'INQUIRY' as const
}

export const enumDraftOrderAppliedDiscountType = {
   FIXED_AMOUNT: 'FIXED_AMOUNT' as const,
   PERCENTAGE: 'PERCENTAGE' as const
}

export const enumDraftOrderSortKeys = {
   NUMBER: 'NUMBER' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   STATUS: 'STATUS' as const,
   TOTAL_PRICE: 'TOTAL_PRICE' as const,
   CUSTOMER_NAME: 'CUSTOMER_NAME' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumDraftOrderStatus = {
   COMPLETED: 'COMPLETED' as const,
   INVOICE_SENT: 'INVOICE_SENT' as const,
   OPEN: 'OPEN' as const
}

export const enumErrorsServerPixelUserErrorCode = {
   NOT_FOUND: 'NOT_FOUND' as const,
   ALREADY_EXISTS: 'ALREADY_EXISTS' as const,
   PUB_SUB_ERROR: 'PUB_SUB_ERROR' as const,
   NEEDS_CONFIGURATION_TO_CONNECT: 'NEEDS_CONFIGURATION_TO_CONNECT' as const
}

export const enumErrorsWebPixelUserErrorCode = {
   BLANK: 'BLANK' as const,
   TAKEN: 'TAKEN' as const,
   NOT_FOUND: 'NOT_FOUND' as const,
   INVALID_SETTINGS: 'INVALID_SETTINGS' as const,
   UNABLE_TO_DELETE: 'UNABLE_TO_DELETE' as const
}

export const enumEventSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumFileContentType = {
   IMAGE: 'IMAGE' as const,
   FILE: 'FILE' as const,
   VIDEO: 'VIDEO' as const
}

export const enumFileCreateInputDuplicateResolutionMode = {
   APPEND_UUID: 'APPEND_UUID' as const,
   RAISE_ERROR: 'RAISE_ERROR' as const,
   REPLACE: 'REPLACE' as const
}

export const enumFileErrorCode = {
   UNKNOWN: 'UNKNOWN' as const,
   INVALID_SIGNED_URL: 'INVALID_SIGNED_URL' as const,
   IMAGE_DOWNLOAD_FAILURE: 'IMAGE_DOWNLOAD_FAILURE' as const,
   IMAGE_PROCESSING_FAILURE: 'IMAGE_PROCESSING_FAILURE' as const,
   MEDIA_TIMEOUT_ERROR: 'MEDIA_TIMEOUT_ERROR' as const,
   EXTERNAL_VIDEO_NOT_FOUND: 'EXTERNAL_VIDEO_NOT_FOUND' as const,
   EXTERNAL_VIDEO_UNLISTED: 'EXTERNAL_VIDEO_UNLISTED' as const,
   EXTERNAL_VIDEO_INVALID_ASPECT_RATIO: 'EXTERNAL_VIDEO_INVALID_ASPECT_RATIO' as const,
   EXTERNAL_VIDEO_EMBED_DISABLED: 'EXTERNAL_VIDEO_EMBED_DISABLED' as const,
   EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING: 'EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING' as const,
   GENERIC_FILE_DOWNLOAD_FAILURE: 'GENERIC_FILE_DOWNLOAD_FAILURE' as const,
   GENERIC_FILE_INVALID_SIZE: 'GENERIC_FILE_INVALID_SIZE' as const,
   VIDEO_METADATA_READ_ERROR: 'VIDEO_METADATA_READ_ERROR' as const,
   VIDEO_INVALID_FILETYPE_ERROR: 'VIDEO_INVALID_FILETYPE_ERROR' as const,
   VIDEO_MIN_WIDTH_ERROR: 'VIDEO_MIN_WIDTH_ERROR' as const,
   VIDEO_MAX_WIDTH_ERROR: 'VIDEO_MAX_WIDTH_ERROR' as const,
   VIDEO_MIN_HEIGHT_ERROR: 'VIDEO_MIN_HEIGHT_ERROR' as const,
   VIDEO_MAX_HEIGHT_ERROR: 'VIDEO_MAX_HEIGHT_ERROR' as const,
   VIDEO_MIN_DURATION_ERROR: 'VIDEO_MIN_DURATION_ERROR' as const,
   VIDEO_MAX_DURATION_ERROR: 'VIDEO_MAX_DURATION_ERROR' as const,
   VIDEO_VALIDATION_ERROR: 'VIDEO_VALIDATION_ERROR' as const,
   MODEL3D_VALIDATION_ERROR: 'MODEL3D_VALIDATION_ERROR' as const,
   MODEL3D_THUMBNAIL_GENERATION_ERROR: 'MODEL3D_THUMBNAIL_GENERATION_ERROR' as const,
   MODEL3D_THUMBNAIL_REGENERATION_ERROR: 'MODEL3D_THUMBNAIL_REGENERATION_ERROR' as const,
   MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR: 'MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR' as const,
   MODEL3D_GLB_OUTPUT_CREATION_ERROR: 'MODEL3D_GLB_OUTPUT_CREATION_ERROR' as const,
   MODEL3D_PROCESSING_FAILURE: 'MODEL3D_PROCESSING_FAILURE' as const,
   UNSUPPORTED_IMAGE_FILE_TYPE: 'UNSUPPORTED_IMAGE_FILE_TYPE' as const,
   INVALID_IMAGE_FILE_SIZE: 'INVALID_IMAGE_FILE_SIZE' as const,
   INVALID_IMAGE_ASPECT_RATIO: 'INVALID_IMAGE_ASPECT_RATIO' as const,
   INVALID_IMAGE_RESOLUTION: 'INVALID_IMAGE_RESOLUTION' as const,
   FILE_STORAGE_LIMIT_EXCEEDED: 'FILE_STORAGE_LIMIT_EXCEEDED' as const,
   DUPLICATE_FILENAME_ERROR: 'DUPLICATE_FILENAME_ERROR' as const
}

export const enumFileSortKeys = {
   FILENAME: 'FILENAME' as const,
   ORIGINAL_UPLOAD_SIZE: 'ORIGINAL_UPLOAD_SIZE' as const,
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumFileStatus = {
   UPLOADED: 'UPLOADED' as const,
   PROCESSING: 'PROCESSING' as const,
   READY: 'READY' as const,
   FAILED: 'FAILED' as const
}

export const enumFilesErrorCode = {
   INVALID: 'INVALID' as const,
   FILE_DOES_NOT_EXIST: 'FILE_DOES_NOT_EXIST' as const,
   FILE_LOCKED: 'FILE_LOCKED' as const,
   UNSUPPORTED_MEDIA_TYPE_FOR_FILENAME_UPDATE: 'UNSUPPORTED_MEDIA_TYPE_FOR_FILENAME_UPDATE' as const,
   TOO_MANY_ARGUMENTS: 'TOO_MANY_ARGUMENTS' as const,
   BLANK_SEARCH: 'BLANK_SEARCH' as const,
   MISSING_ARGUMENTS: 'MISSING_ARGUMENTS' as const,
   INVALID_QUERY: 'INVALID_QUERY' as const,
   INVALID_FILENAME_EXTENSION: 'INVALID_FILENAME_EXTENSION' as const,
   INVALID_FILENAME: 'INVALID_FILENAME' as const,
   FILENAME_ALREADY_EXISTS: 'FILENAME_ALREADY_EXISTS' as const,
   UNACCEPTABLE_UNVERIFIED_TRIAL_ASSET: 'UNACCEPTABLE_UNVERIFIED_TRIAL_ASSET' as const,
   UNACCEPTABLE_ASSET: 'UNACCEPTABLE_ASSET' as const,
   UNACCEPTABLE_TRIAL_ASSET: 'UNACCEPTABLE_TRIAL_ASSET' as const,
   ALT_VALUE_LIMIT_EXCEEDED: 'ALT_VALUE_LIMIT_EXCEEDED' as const,
   NON_READY_STATE: 'NON_READY_STATE' as const,
   NON_IMAGE_MEDIA_PER_SHOP_LIMIT_EXCEEDED: 'NON_IMAGE_MEDIA_PER_SHOP_LIMIT_EXCEEDED' as const,
   MISMATCHED_FILENAME_AND_ORIGINAL_SOURCE: 'MISMATCHED_FILENAME_AND_ORIGINAL_SOURCE' as const,
   INVALID_DUPLICATE_MODE_FOR_TYPE: 'INVALID_DUPLICATE_MODE_FOR_TYPE' as const,
   INVALID_IMAGE_SOURCE_URL: 'INVALID_IMAGE_SOURCE_URL' as const,
   MISSING_FILENAME_FOR_DUPLICATE_MODE_REPLACE: 'MISSING_FILENAME_FOR_DUPLICATE_MODE_REPLACE' as const
}

export const enumFulfillmentDisplayStatus = {
   ATTEMPTED_DELIVERY: 'ATTEMPTED_DELIVERY' as const,
   CANCELED: 'CANCELED' as const,
   CONFIRMED: 'CONFIRMED' as const,
   DELIVERED: 'DELIVERED' as const,
   FAILURE: 'FAILURE' as const,
   FULFILLED: 'FULFILLED' as const,
   IN_TRANSIT: 'IN_TRANSIT' as const,
   LABEL_PRINTED: 'LABEL_PRINTED' as const,
   LABEL_PURCHASED: 'LABEL_PURCHASED' as const,
   LABEL_VOIDED: 'LABEL_VOIDED' as const,
   MARKED_AS_FULFILLED: 'MARKED_AS_FULFILLED' as const,
   NOT_DELIVERED: 'NOT_DELIVERED' as const,
   OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY' as const,
   READY_FOR_PICKUP: 'READY_FOR_PICKUP' as const,
   PICKED_UP: 'PICKED_UP' as const,
   SUBMITTED: 'SUBMITTED' as const
}

export const enumFulfillmentEventSortKeys = {
   HAPPENED_AT: 'HAPPENED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumFulfillmentEventStatus = {
   LABEL_PURCHASED: 'LABEL_PURCHASED' as const,
   LABEL_PRINTED: 'LABEL_PRINTED' as const,
   READY_FOR_PICKUP: 'READY_FOR_PICKUP' as const,
   CONFIRMED: 'CONFIRMED' as const,
   IN_TRANSIT: 'IN_TRANSIT' as const,
   OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY' as const,
   ATTEMPTED_DELIVERY: 'ATTEMPTED_DELIVERY' as const,
   DELIVERED: 'DELIVERED' as const,
   FAILURE: 'FAILURE' as const
}

export const enumFulfillmentHoldReason = {
   AWAITING_PAYMENT: 'AWAITING_PAYMENT' as const,
   HIGH_RISK_OF_FRAUD: 'HIGH_RISK_OF_FRAUD' as const,
   INCORRECT_ADDRESS: 'INCORRECT_ADDRESS' as const,
   INVENTORY_OUT_OF_STOCK: 'INVENTORY_OUT_OF_STOCK' as const,
   UNKNOWN_DELIVERY_DATE: 'UNKNOWN_DELIVERY_DATE' as const,
   ONLINE_STORE_POST_PURCHASE_CROSS_SELL: 'ONLINE_STORE_POST_PURCHASE_CROSS_SELL' as const,
   OTHER: 'OTHER' as const
}

export const enumFulfillmentOrderAction = {
   CREATE_FULFILLMENT: 'CREATE_FULFILLMENT' as const,
   REQUEST_FULFILLMENT: 'REQUEST_FULFILLMENT' as const,
   CANCEL_FULFILLMENT_ORDER: 'CANCEL_FULFILLMENT_ORDER' as const,
   MOVE: 'MOVE' as const,
   REQUEST_CANCELLATION: 'REQUEST_CANCELLATION' as const,
   MARK_AS_OPEN: 'MARK_AS_OPEN' as const,
   RELEASE_HOLD: 'RELEASE_HOLD' as const,
   HOLD: 'HOLD' as const,
   EXTERNAL: 'EXTERNAL' as const,
   SPLIT: 'SPLIT' as const,
   MERGE: 'MERGE' as const
}

export const enumFulfillmentOrderAssignmentStatus = {
   CANCELLATION_REQUESTED: 'CANCELLATION_REQUESTED' as const,
   FULFILLMENT_REQUESTED: 'FULFILLMENT_REQUESTED' as const,
   FULFILLMENT_ACCEPTED: 'FULFILLMENT_ACCEPTED' as const
}

export const enumFulfillmentOrderHoldUserErrorCode = {
   FULFILLMENT_ORDER_NOT_FOUND: 'FULFILLMENT_ORDER_NOT_FOUND' as const,
   TAKEN: 'TAKEN' as const,
   GREATER_THAN_ZERO: 'GREATER_THAN_ZERO' as const,
   INVALID_LINE_ITEM_QUANTITY: 'INVALID_LINE_ITEM_QUANTITY' as const
}

export const enumFulfillmentOrderLineItemsPreparedForPickupUserErrorCode = {
   NO_LINE_ITEMS_TO_PREPARE_FOR_FULFILLMENT_ORDER: 'NO_LINE_ITEMS_TO_PREPARE_FOR_FULFILLMENT_ORDER' as const,
   FULFILLMENT_ORDER_INVALID: 'FULFILLMENT_ORDER_INVALID' as const,
   UNABLE_TO_PREPARE_QUANTITY: 'UNABLE_TO_PREPARE_QUANTITY' as const
}

export const enumFulfillmentOrderMerchantRequestKind = {
   FULFILLMENT_REQUEST: 'FULFILLMENT_REQUEST' as const,
   CANCELLATION_REQUEST: 'CANCELLATION_REQUEST' as const
}

export const enumFulfillmentOrderMergeUserErrorCode = {
   FULFILLMENT_ORDER_NOT_FOUND: 'FULFILLMENT_ORDER_NOT_FOUND' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   INVALID_LINE_ITEM_QUANTITY: 'INVALID_LINE_ITEM_QUANTITY' as const
}

export const enumFulfillmentOrderRejectionReason = {
   INCORRECT_ADDRESS: 'INCORRECT_ADDRESS' as const,
   INVENTORY_OUT_OF_STOCK: 'INVENTORY_OUT_OF_STOCK' as const,
   INELIGIBLE_PRODUCT: 'INELIGIBLE_PRODUCT' as const,
   UNDELIVERABLE_DESTINATION: 'UNDELIVERABLE_DESTINATION' as const,
   OTHER: 'OTHER' as const
}

export const enumFulfillmentOrderReleaseHoldUserErrorCode = {
   FULFILLMENT_ORDER_NOT_FOUND: 'FULFILLMENT_ORDER_NOT_FOUND' as const,
   GREATER_THAN_ZERO: 'GREATER_THAN_ZERO' as const,
   INVALID_LINE_ITEM_QUANTITY: 'INVALID_LINE_ITEM_QUANTITY' as const
}

export const enumFulfillmentOrderRequestStatus = {
   UNSUBMITTED: 'UNSUBMITTED' as const,
   SUBMITTED: 'SUBMITTED' as const,
   ACCEPTED: 'ACCEPTED' as const,
   REJECTED: 'REJECTED' as const,
   CANCELLATION_REQUESTED: 'CANCELLATION_REQUESTED' as const,
   CANCELLATION_ACCEPTED: 'CANCELLATION_ACCEPTED' as const,
   CANCELLATION_REJECTED: 'CANCELLATION_REJECTED' as const,
   CLOSED: 'CLOSED' as const
}

export const enumFulfillmentOrderRescheduleUserErrorCode = {
   FULFILLMENT_ORDER_NOT_FOUND: 'FULFILLMENT_ORDER_NOT_FOUND' as const
}

export const enumFulfillmentOrderSortKeys = {
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumFulfillmentOrderSplitUserErrorCode = {
   FULFILLMENT_ORDER_NOT_FOUND: 'FULFILLMENT_ORDER_NOT_FOUND' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   INVALID_LINE_ITEM_QUANTITY: 'INVALID_LINE_ITEM_QUANTITY' as const
}

export const enumFulfillmentOrderStatus = {
   OPEN: 'OPEN' as const,
   IN_PROGRESS: 'IN_PROGRESS' as const,
   CANCELLED: 'CANCELLED' as const,
   INCOMPLETE: 'INCOMPLETE' as const,
   CLOSED: 'CLOSED' as const,
   SCHEDULED: 'SCHEDULED' as const,
   ON_HOLD: 'ON_HOLD' as const
}

export const enumFulfillmentOrdersReleaseHoldsUserErrorCode = {
   FAILED_TO_CREATE_JOB: 'FAILED_TO_CREATE_JOB' as const
}

export const enumFulfillmentOrdersSetFulfillmentDeadlineUserErrorCode = {
   FULFILLMENT_ORDERS_NOT_FOUND: 'FULFILLMENT_ORDERS_NOT_FOUND' as const
}

export const enumFulfillmentServiceType = {
   GIFT_CARD: 'GIFT_CARD' as const,
   MANUAL: 'MANUAL' as const,
   THIRD_PARTY: 'THIRD_PARTY' as const
}

export const enumFulfillmentStatus = {
   PENDING: 'PENDING' as const,
   OPEN: 'OPEN' as const,
   SUCCESS: 'SUCCESS' as const,
   CANCELLED: 'CANCELLED' as const,
   ERROR: 'ERROR' as const,
   FAILURE: 'FAILURE' as const
}

export const enumGiftCardErrorCode = {
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   TAKEN: 'TAKEN' as const,
   INVALID: 'INVALID' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   MISSING_ARGUMENT: 'MISSING_ARGUMENT' as const,
   GREATER_THAN: 'GREATER_THAN' as const
}

export const enumGiftCardSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   CUSTOMER_NAME: 'CUSTOMER_NAME' as const,
   CODE: 'CODE' as const,
   BALANCE: 'BALANCE' as const,
   AMOUNT_SPENT: 'AMOUNT_SPENT' as const,
   INITIAL_VALUE: 'INITIAL_VALUE' as const,
   DISABLED_AT: 'DISABLED_AT' as const,
   EXPIRES_ON: 'EXPIRES_ON' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumImageContentType = {
   PNG: 'PNG' as const,
   JPG: 'JPG' as const,
   WEBP: 'WEBP' as const
}

export const enumInventoryAdjustQuantitiesUserErrorCode = {
   INTERNAL_LEDGER_DOCUMENT: 'INTERNAL_LEDGER_DOCUMENT' as const,
   INVALID_AVAILABLE_DOCUMENT: 'INVALID_AVAILABLE_DOCUMENT' as const,
   INVALID_INVENTORY_ITEM: 'INVALID_INVENTORY_ITEM' as const,
   INVALID_LEDGER_DOCUMENT: 'INVALID_LEDGER_DOCUMENT' as const,
   INVALID_LOCATION: 'INVALID_LOCATION' as const,
   INVALID_QUANTITY_DOCUMENT: 'INVALID_QUANTITY_DOCUMENT' as const,
   INVALID_QUANTITY_NAME: 'INVALID_QUANTITY_NAME' as const,
   INVALID_QUANTITY_TOO_LOW: 'INVALID_QUANTITY_TOO_LOW' as const,
   INVALID_QUANTITY_TOO_HIGH: 'INVALID_QUANTITY_TOO_HIGH' as const,
   INVALID_REASON: 'INVALID_REASON' as const,
   INVALID_REFERENCE_DOCUMENT: 'INVALID_REFERENCE_DOCUMENT' as const,
   ADJUST_QUANTITIES_FAILED: 'ADJUST_QUANTITIES_FAILED' as const,
   MAX_ONE_LEDGER_DOCUMENT: 'MAX_ONE_LEDGER_DOCUMENT' as const,
   ITEM_NOT_STOCKED_AT_LOCATION: 'ITEM_NOT_STOCKED_AT_LOCATION' as const,
   NON_MUTABLE_INVENTORY_ITEM: 'NON_MUTABLE_INVENTORY_ITEM' as const
}

export const enumInventoryBulkToggleActivationUserErrorCode = {
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   CANNOT_DEACTIVATE_FROM_ONLY_LOCATION: 'CANNOT_DEACTIVATE_FROM_ONLY_LOCATION' as const,
   COMMITTED_AND_INCOMING_INVENTORY_AT_LOCATION: 'COMMITTED_AND_INCOMING_INVENTORY_AT_LOCATION' as const,
   INCOMING_INVENTORY_AT_LOCATION: 'INCOMING_INVENTORY_AT_LOCATION' as const,
   COMMITTED_INVENTORY_AT_LOCATION: 'COMMITTED_INVENTORY_AT_LOCATION' as const,
   RESERVED_INVENTORY_AT_LOCATION: 'RESERVED_INVENTORY_AT_LOCATION' as const,
   FAILED_TO_UNSTOCK_FROM_LOCATION: 'FAILED_TO_UNSTOCK_FROM_LOCATION' as const,
   INVENTORY_MANAGED_BY_3RD_PARTY: 'INVENTORY_MANAGED_BY_3RD_PARTY' as const,
   INVENTORY_MANAGED_BY_SHOPIFY: 'INVENTORY_MANAGED_BY_SHOPIFY' as const,
   FAILED_TO_STOCK_AT_LOCATION: 'FAILED_TO_STOCK_AT_LOCATION' as const,
   MISSING_SKU: 'MISSING_SKU' as const,
   LOCATION_NOT_FOUND: 'LOCATION_NOT_FOUND' as const,
   INVENTORY_ITEM_NOT_FOUND: 'INVENTORY_ITEM_NOT_FOUND' as const
}

export const enumInventoryMoveQuantitiesUserErrorCode = {
   INTERNAL_LEDGER_DOCUMENT: 'INTERNAL_LEDGER_DOCUMENT' as const,
   INVALID_AVAILABLE_DOCUMENT: 'INVALID_AVAILABLE_DOCUMENT' as const,
   INVALID_INVENTORY_ITEM: 'INVALID_INVENTORY_ITEM' as const,
   INVALID_LEDGER_DOCUMENT: 'INVALID_LEDGER_DOCUMENT' as const,
   INVALID_LOCATION: 'INVALID_LOCATION' as const,
   INVALID_QUANTITY_DOCUMENT: 'INVALID_QUANTITY_DOCUMENT' as const,
   INVALID_QUANTITY_NAME: 'INVALID_QUANTITY_NAME' as const,
   INVALID_QUANTITY_NEGATIVE: 'INVALID_QUANTITY_NEGATIVE' as const,
   INVALID_QUANTITY_TOO_HIGH: 'INVALID_QUANTITY_TOO_HIGH' as const,
   INVALID_REASON: 'INVALID_REASON' as const,
   INVALID_REFERENCE_DOCUMENT: 'INVALID_REFERENCE_DOCUMENT' as const,
   MOVE_QUANTITIES_FAILED: 'MOVE_QUANTITIES_FAILED' as const,
   DIFFERENT_LOCATIONS: 'DIFFERENT_LOCATIONS' as const,
   SAME_QUANTITY_NAME: 'SAME_QUANTITY_NAME' as const,
   MAXIMUM_LEDGER_DOCUMENT_URIS: 'MAXIMUM_LEDGER_DOCUMENT_URIS' as const,
   ITEM_NOT_STOCKED_AT_LOCATION: 'ITEM_NOT_STOCKED_AT_LOCATION' as const,
   NON_MUTABLE_INVENTORY_ITEM: 'NON_MUTABLE_INVENTORY_ITEM' as const
}

export const enumInventorySetOnHandQuantitiesUserErrorCode = {
   INVALID_INVENTORY_ITEM: 'INVALID_INVENTORY_ITEM' as const,
   INVALID_LOCATION: 'INVALID_LOCATION' as const,
   INVALID_QUANTITY_NEGATIVE: 'INVALID_QUANTITY_NEGATIVE' as const,
   INVALID_REASON: 'INVALID_REASON' as const,
   INVALID_REFERENCE_DOCUMENT: 'INVALID_REFERENCE_DOCUMENT' as const,
   SET_ON_HAND_QUANTITIES_FAILED: 'SET_ON_HAND_QUANTITIES_FAILED' as const,
   ITEM_NOT_STOCKED_AT_LOCATION: 'ITEM_NOT_STOCKED_AT_LOCATION' as const,
   NON_MUTABLE_INVENTORY_ITEM: 'NON_MUTABLE_INVENTORY_ITEM' as const,
   INVALID_QUANTITY_TOO_HIGH: 'INVALID_QUANTITY_TOO_HIGH' as const
}

export const enumLanguageCode = {
   AF: 'AF' as const,
   AK: 'AK' as const,
   AM: 'AM' as const,
   AR: 'AR' as const,
   AS: 'AS' as const,
   AZ: 'AZ' as const,
   BE: 'BE' as const,
   BG: 'BG' as const,
   BM: 'BM' as const,
   BN: 'BN' as const,
   BO: 'BO' as const,
   BR: 'BR' as const,
   BS: 'BS' as const,
   CA: 'CA' as const,
   CE: 'CE' as const,
   CS: 'CS' as const,
   CY: 'CY' as const,
   DA: 'DA' as const,
   DE: 'DE' as const,
   DZ: 'DZ' as const,
   EE: 'EE' as const,
   EL: 'EL' as const,
   EN: 'EN' as const,
   EO: 'EO' as const,
   ES: 'ES' as const,
   ET: 'ET' as const,
   EU: 'EU' as const,
   FA: 'FA' as const,
   FF: 'FF' as const,
   FI: 'FI' as const,
   FO: 'FO' as const,
   FR: 'FR' as const,
   FY: 'FY' as const,
   GA: 'GA' as const,
   GD: 'GD' as const,
   GL: 'GL' as const,
   GU: 'GU' as const,
   GV: 'GV' as const,
   HA: 'HA' as const,
   HE: 'HE' as const,
   HI: 'HI' as const,
   HR: 'HR' as const,
   HU: 'HU' as const,
   HY: 'HY' as const,
   IA: 'IA' as const,
   ID: 'ID' as const,
   IG: 'IG' as const,
   II: 'II' as const,
   IS: 'IS' as const,
   IT: 'IT' as const,
   JA: 'JA' as const,
   JV: 'JV' as const,
   KA: 'KA' as const,
   KI: 'KI' as const,
   KK: 'KK' as const,
   KL: 'KL' as const,
   KM: 'KM' as const,
   KN: 'KN' as const,
   KO: 'KO' as const,
   KS: 'KS' as const,
   KU: 'KU' as const,
   KW: 'KW' as const,
   KY: 'KY' as const,
   LB: 'LB' as const,
   LG: 'LG' as const,
   LN: 'LN' as const,
   LO: 'LO' as const,
   LT: 'LT' as const,
   LU: 'LU' as const,
   LV: 'LV' as const,
   MG: 'MG' as const,
   MI: 'MI' as const,
   MK: 'MK' as const,
   ML: 'ML' as const,
   MN: 'MN' as const,
   MR: 'MR' as const,
   MS: 'MS' as const,
   MT: 'MT' as const,
   MY: 'MY' as const,
   NB: 'NB' as const,
   ND: 'ND' as const,
   NE: 'NE' as const,
   NL: 'NL' as const,
   NN: 'NN' as const,
   NO: 'NO' as const,
   OM: 'OM' as const,
   OR: 'OR' as const,
   OS: 'OS' as const,
   PA: 'PA' as const,
   PL: 'PL' as const,
   PS: 'PS' as const,
   PT_BR: 'PT_BR' as const,
   PT_PT: 'PT_PT' as const,
   QU: 'QU' as const,
   RM: 'RM' as const,
   RN: 'RN' as const,
   RO: 'RO' as const,
   RU: 'RU' as const,
   RW: 'RW' as const,
   SD: 'SD' as const,
   SE: 'SE' as const,
   SG: 'SG' as const,
   SI: 'SI' as const,
   SK: 'SK' as const,
   SL: 'SL' as const,
   SN: 'SN' as const,
   SO: 'SO' as const,
   SQ: 'SQ' as const,
   SR: 'SR' as const,
   SU: 'SU' as const,
   SV: 'SV' as const,
   SW: 'SW' as const,
   TA: 'TA' as const,
   TE: 'TE' as const,
   TG: 'TG' as const,
   TH: 'TH' as const,
   TI: 'TI' as const,
   TK: 'TK' as const,
   TO: 'TO' as const,
   TR: 'TR' as const,
   TT: 'TT' as const,
   UG: 'UG' as const,
   UK: 'UK' as const,
   UR: 'UR' as const,
   UZ: 'UZ' as const,
   VI: 'VI' as const,
   WO: 'WO' as const,
   XH: 'XH' as const,
   YI: 'YI' as const,
   YO: 'YO' as const,
   ZH_CN: 'ZH_CN' as const,
   ZH_TW: 'ZH_TW' as const,
   ZU: 'ZU' as const,
   ZH: 'ZH' as const,
   PT: 'PT' as const,
   CU: 'CU' as const,
   VO: 'VO' as const
}

export const enumLengthUnit = {
   MILLIMETERS: 'MILLIMETERS' as const,
   CENTIMETERS: 'CENTIMETERS' as const,
   METERS: 'METERS' as const,
   INCHES: 'INCHES' as const,
   FEET: 'FEET' as const,
   YARDS: 'YARDS' as const
}

export const enumLocalizableContentType = {
   JSON_STRING: 'JSON_STRING' as const,
   JSON: 'JSON' as const,
   LIST_MULTI_LINE_TEXT_FIELD: 'LIST_MULTI_LINE_TEXT_FIELD' as const,
   LIST_SINGLE_LINE_TEXT_FIELD: 'LIST_SINGLE_LINE_TEXT_FIELD' as const,
   LIST_URL: 'LIST_URL' as const,
   MULTI_LINE_TEXT_FIELD: 'MULTI_LINE_TEXT_FIELD' as const,
   RICH_TEXT_FIELD: 'RICH_TEXT_FIELD' as const,
   SINGLE_LINE_TEXT_FIELD: 'SINGLE_LINE_TEXT_FIELD' as const,
   STRING: 'STRING' as const,
   URL: 'URL' as const,
   FILE_REFERENCE: 'FILE_REFERENCE' as const,
   LIST_FILE_REFERENCE: 'LIST_FILE_REFERENCE' as const,
   HTML: 'HTML' as const,
   URI: 'URI' as const,
   INLINE_RICH_TEXT: 'INLINE_RICH_TEXT' as const
}

export const enumLocalizationExtensionKey = {
   TAX_CREDENTIAL_BR: 'TAX_CREDENTIAL_BR' as const,
   SHIPPING_CREDENTIAL_BR: 'SHIPPING_CREDENTIAL_BR' as const,
   SHIPPING_CREDENTIAL_CN: 'SHIPPING_CREDENTIAL_CN' as const,
   TAX_CREDENTIAL_IT: 'TAX_CREDENTIAL_IT' as const,
   TAX_EMAIL_IT: 'TAX_EMAIL_IT' as const,
   SHIPPING_CREDENTIAL_KR: 'SHIPPING_CREDENTIAL_KR' as const
}

export const enumLocalizationExtensionPurpose = {
   SHIPPING: 'SHIPPING' as const,
   TAX: 'TAX' as const
}

export const enumLocationActivateUserErrorCode = {
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   LOCATION_LIMIT: 'LOCATION_LIMIT' as const,
   HAS_ONGOING_RELOCATION: 'HAS_ONGOING_RELOCATION' as const,
   LOCATION_NOT_FOUND: 'LOCATION_NOT_FOUND' as const,
   HAS_NON_UNIQUE_NAME: 'HAS_NON_UNIQUE_NAME' as const
}

export const enumLocationAddUserErrorCode = {
   INVALID: 'INVALID' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TAKEN: 'TAKEN' as const,
   BLANK: 'BLANK' as const,
   INVALID_US_ZIPCODE: 'INVALID_US_ZIPCODE' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   INVALID_TYPE: 'INVALID_TYPE' as const,
   INVALID_VALUE: 'INVALID_VALUE' as const,
   APP_NOT_AUTHORIZED: 'APP_NOT_AUTHORIZED' as const,
   UNSTRUCTURED_RESERVED_NAMESPACE: 'UNSTRUCTURED_RESERVED_NAMESPACE' as const,
   DISALLOWED_OWNER_TYPE: 'DISALLOWED_OWNER_TYPE' as const,
   INCLUSION: 'INCLUSION' as const,
   PRESENT: 'PRESENT' as const,
   TOO_SHORT: 'TOO_SHORT' as const
}

export const enumLocationDeactivateUserErrorCode = {
   LOCATION_NOT_FOUND: 'LOCATION_NOT_FOUND' as const,
   PERMANENTLY_BLOCKED_FROM_DEACTIVATION_ERROR: 'PERMANENTLY_BLOCKED_FROM_DEACTIVATION_ERROR' as const,
   TEMPORARILY_BLOCKED_FROM_DEACTIVATION_ERROR: 'TEMPORARILY_BLOCKED_FROM_DEACTIVATION_ERROR' as const,
   HAS_ACTIVE_RETAIL_SUBSCRIPTIONS: 'HAS_ACTIVE_RETAIL_SUBSCRIPTIONS' as const,
   DESTINATION_LOCATION_IS_THE_SAME_LOCATION: 'DESTINATION_LOCATION_IS_THE_SAME_LOCATION' as const,
   DESTINATION_LOCATION_NOT_FOUND_OR_INACTIVE: 'DESTINATION_LOCATION_NOT_FOUND_OR_INACTIVE' as const,
   HAS_ACTIVE_INVENTORY_ERROR: 'HAS_ACTIVE_INVENTORY_ERROR' as const,
   HAS_FULFILLMENT_ORDERS_ERROR: 'HAS_FULFILLMENT_ORDERS_ERROR' as const,
   HAS_OPEN_TRANSFERS_ERROR: 'HAS_OPEN_TRANSFERS_ERROR' as const,
   HAS_INCOMING_MOVEMENTS_ERROR: 'HAS_INCOMING_MOVEMENTS_ERROR' as const,
   HAS_OPEN_PURCHASE_ORDERS_ERROR: 'HAS_OPEN_PURCHASE_ORDERS_ERROR' as const,
   FAILED_TO_RELOCATE_ACTIVE_INVENTORIES: 'FAILED_TO_RELOCATE_ACTIVE_INVENTORIES' as const,
   FAILED_TO_RELOCATE_OPEN_TRANSFERS: 'FAILED_TO_RELOCATE_OPEN_TRANSFERS' as const,
   FAILED_TO_RELOCATE_OPEN_PURCHASE_ORDERS: 'FAILED_TO_RELOCATE_OPEN_PURCHASE_ORDERS' as const,
   FAILED_TO_RELOCATE_INCOMING_MOVEMENTS: 'FAILED_TO_RELOCATE_INCOMING_MOVEMENTS' as const,
   CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT: 'CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT' as const
}

export const enumLocationDeleteUserErrorCode = {
   LOCATION_NOT_FOUND: 'LOCATION_NOT_FOUND' as const,
   LOCATION_IS_ACTIVE: 'LOCATION_IS_ACTIVE' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   LOCATION_HAS_INVENTORY: 'LOCATION_HAS_INVENTORY' as const,
   LOCATION_HAS_PENDING_ORDERS: 'LOCATION_HAS_PENDING_ORDERS' as const,
   LOCATION_HAS_ACTIVE_RETAIL_SUBSCRIPTION: 'LOCATION_HAS_ACTIVE_RETAIL_SUBSCRIPTION' as const
}

export const enumLocationEditUserErrorCode = {
   TOO_LONG: 'TOO_LONG' as const,
   BLANK: 'BLANK' as const,
   NOT_FOUND: 'NOT_FOUND' as const,
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const,
   INVALID_US_ZIPCODE: 'INVALID_US_ZIPCODE' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT: 'CANNOT_DISABLE_ONLINE_ORDER_FULFILLMENT' as const,
   INVALID_TYPE: 'INVALID_TYPE' as const,
   INVALID_VALUE: 'INVALID_VALUE' as const,
   APP_NOT_AUTHORIZED: 'APP_NOT_AUTHORIZED' as const,
   UNSTRUCTURED_RESERVED_NAMESPACE: 'UNSTRUCTURED_RESERVED_NAMESPACE' as const,
   DISALLOWED_OWNER_TYPE: 'DISALLOWED_OWNER_TYPE' as const,
   INCLUSION: 'INCLUSION' as const,
   PRESENT: 'PRESENT' as const,
   TOO_SHORT: 'TOO_SHORT' as const
}

export const enumLocationSortKeys = {
   NAME: 'NAME' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumMarketCurrencySettingsUserErrorCode = {
   MARKET_NOT_FOUND: 'MARKET_NOT_FOUND' as const,
   MANAGED_MARKET: 'MANAGED_MARKET' as const,
   MULTIPLE_CURRENCIES_NOT_SUPPORTED: 'MULTIPLE_CURRENCIES_NOT_SUPPORTED' as const,
   NO_LOCAL_CURRENCIES_ON_SINGLE_COUNTRY_MARKET: 'NO_LOCAL_CURRENCIES_ON_SINGLE_COUNTRY_MARKET' as const,
   UNSUPPORTED_CURRENCY: 'UNSUPPORTED_CURRENCY' as const,
   PRIMARY_MARKET_USES_SHOP_CURRENCY: 'PRIMARY_MARKET_USES_SHOP_CURRENCY' as const
}

export const enumMarketLocalizableResourceType = {
   METAFIELD: 'METAFIELD' as const
}

export const enumMarketUserErrorCode = {
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   BLANK: 'BLANK' as const,
   MARKET_NOT_FOUND: 'MARKET_NOT_FOUND' as const,
   REGION_NOT_FOUND: 'REGION_NOT_FOUND' as const,
   WEB_PRESENCE_NOT_FOUND: 'WEB_PRESENCE_NOT_FOUND' as const,
   CANNOT_ADD_REGIONS_TO_PRIMARY_MARKET: 'CANNOT_ADD_REGIONS_TO_PRIMARY_MARKET' as const,
   CANNOT_DELETE_ONLY_REGION: 'CANNOT_DELETE_ONLY_REGION' as const,
   REQUIRES_EXACTLY_ONE_OPTION: 'REQUIRES_EXACTLY_ONE_OPTION' as const,
   CANNOT_DELETE_PRIMARY_MARKET: 'CANNOT_DELETE_PRIMARY_MARKET' as const,
   DOMAIN_NOT_FOUND: 'DOMAIN_NOT_FOUND' as const,
   SUBFOLDER_SUFFIX_MUST_CONTAIN_ONLY_LETTERS: 'SUBFOLDER_SUFFIX_MUST_CONTAIN_ONLY_LETTERS' as const,
   SUBFOLDER_SUFFIX_CANNOT_BE_SCRIPT_CODE: 'SUBFOLDER_SUFFIX_CANNOT_BE_SCRIPT_CODE' as const,
   NO_LANGUAGES: 'NO_LANGUAGES' as const,
   DUPLICATE_LANGUAGES: 'DUPLICATE_LANGUAGES' as const,
   REGION_SPECIFIC_LANGUAGE: 'REGION_SPECIFIC_LANGUAGE' as const,
   CANNOT_HAVE_SUBFOLDER_AND_DOMAIN: 'CANNOT_HAVE_SUBFOLDER_AND_DOMAIN' as const,
   CANNOT_ADD_WEB_PRESENCE_TO_PRIMARY_MARKET: 'CANNOT_ADD_WEB_PRESENCE_TO_PRIMARY_MARKET' as const,
   REQUIRES_DOMAIN_OR_SUBFOLDER: 'REQUIRES_DOMAIN_OR_SUBFOLDER' as const,
   PRIMARY_MARKET_MUST_USE_PRIMARY_DOMAIN: 'PRIMARY_MARKET_MUST_USE_PRIMARY_DOMAIN' as const,
   CANNOT_DELETE_PRIMARY_MARKET_WEB_PRESENCE: 'CANNOT_DELETE_PRIMARY_MARKET_WEB_PRESENCE' as const,
   SHOP_REACHED_MARKETS_LIMIT: 'SHOP_REACHED_MARKETS_LIMIT' as const,
   CANNOT_DISABLE_PRIMARY_MARKET: 'CANNOT_DISABLE_PRIMARY_MARKET' as const,
   UNPUBLISHED_LANGUAGE: 'UNPUBLISHED_LANGUAGE' as const,
   DISABLED_LANGUAGE: 'DISABLED_LANGUAGE' as const,
   CANNOT_SET_DEFAULT_LOCALE_TO_NULL: 'CANNOT_SET_DEFAULT_LOCALE_TO_NULL' as const,
   UNSUPPORTED_COUNTRY_REGION: 'UNSUPPORTED_COUNTRY_REGION' as const,
   CANNOT_ADD_CUSTOMER_DOMAIN: 'CANNOT_ADD_CUSTOMER_DOMAIN' as const
}

export const enumMarketingActivityExtensionAppErrorCode = {
   NOT_ONBOARDED_ERROR: 'NOT_ONBOARDED_ERROR' as const,
   VALIDATION_ERROR: 'VALIDATION_ERROR' as const,
   API_ERROR: 'API_ERROR' as const,
   PLATFORM_ERROR: 'PLATFORM_ERROR' as const,
   INSTALL_REQUIRED_ERROR: 'INSTALL_REQUIRED_ERROR' as const
}

export const enumMarketingActivitySortKeys = {
   TITLE: 'TITLE' as const,
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumMarketingActivityStatus = {
   ACTIVE: 'ACTIVE' as const,
   DELETED: 'DELETED' as const,
   DELETED_EXTERNALLY: 'DELETED_EXTERNALLY' as const,
   DISCONNECTED: 'DISCONNECTED' as const,
   DRAFT: 'DRAFT' as const,
   FAILED: 'FAILED' as const,
   INACTIVE: 'INACTIVE' as const,
   PAUSED: 'PAUSED' as const,
   PENDING: 'PENDING' as const,
   SCHEDULED: 'SCHEDULED' as const,
   UNDEFINED: 'UNDEFINED' as const
}

export const enumMarketingActivityStatusBadgeType = {
   DEFAULT: 'DEFAULT' as const,
   SUCCESS: 'SUCCESS' as const,
   ATTENTION: 'ATTENTION' as const,
   WARNING: 'WARNING' as const,
   INFO: 'INFO' as const
}

export const enumMarketingActivityUserErrorCode = {
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const
}

export const enumMarketingBudgetBudgetType = {
   DAILY: 'DAILY' as const,
   LIFETIME: 'LIFETIME' as const
}

export const enumMarketingChannel = {
   SEARCH: 'SEARCH' as const,
   DISPLAY: 'DISPLAY' as const,
   SOCIAL: 'SOCIAL' as const,
   EMAIL: 'EMAIL' as const,
   REFERRAL: 'REFERRAL' as const
}

export const enumMarketingEventSortKeys = {
   STARTED_AT: 'STARTED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumMarketingTactic = {
   ABANDONED_CART: 'ABANDONED_CART' as const,
   AD: 'AD' as const,
   AFFILIATE: 'AFFILIATE' as const,
   LINK: 'LINK' as const,
   LOYALTY: 'LOYALTY' as const,
   MESSAGE: 'MESSAGE' as const,
   NEWSLETTER: 'NEWSLETTER' as const,
   NOTIFICATION: 'NOTIFICATION' as const,
   POST: 'POST' as const,
   RETARGETING: 'RETARGETING' as const,
   TRANSACTIONAL: 'TRANSACTIONAL' as const,
   SEO: 'SEO' as const,
   DIRECT: 'DIRECT' as const,
   STOREFRONT_APP: 'STOREFRONT_APP' as const,
   DISPLAY: 'DISPLAY' as const,
   SEARCH: 'SEARCH' as const,
   FOLLOW_UP: 'FOLLOW_UP' as const,
   RECEIPT: 'RECEIPT' as const
}

export const enumMediaContentType = {
   VIDEO: 'VIDEO' as const,
   EXTERNAL_VIDEO: 'EXTERNAL_VIDEO' as const,
   MODEL_3D: 'MODEL_3D' as const,
   IMAGE: 'IMAGE' as const
}

export const enumMediaErrorCode = {
   UNKNOWN: 'UNKNOWN' as const,
   INVALID_SIGNED_URL: 'INVALID_SIGNED_URL' as const,
   IMAGE_DOWNLOAD_FAILURE: 'IMAGE_DOWNLOAD_FAILURE' as const,
   IMAGE_PROCESSING_FAILURE: 'IMAGE_PROCESSING_FAILURE' as const,
   MEDIA_TIMEOUT_ERROR: 'MEDIA_TIMEOUT_ERROR' as const,
   EXTERNAL_VIDEO_NOT_FOUND: 'EXTERNAL_VIDEO_NOT_FOUND' as const,
   EXTERNAL_VIDEO_UNLISTED: 'EXTERNAL_VIDEO_UNLISTED' as const,
   EXTERNAL_VIDEO_INVALID_ASPECT_RATIO: 'EXTERNAL_VIDEO_INVALID_ASPECT_RATIO' as const,
   EXTERNAL_VIDEO_EMBED_DISABLED: 'EXTERNAL_VIDEO_EMBED_DISABLED' as const,
   EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING: 'EXTERNAL_VIDEO_EMBED_NOT_FOUND_OR_TRANSCODING' as const,
   GENERIC_FILE_DOWNLOAD_FAILURE: 'GENERIC_FILE_DOWNLOAD_FAILURE' as const,
   GENERIC_FILE_INVALID_SIZE: 'GENERIC_FILE_INVALID_SIZE' as const,
   VIDEO_METADATA_READ_ERROR: 'VIDEO_METADATA_READ_ERROR' as const,
   VIDEO_INVALID_FILETYPE_ERROR: 'VIDEO_INVALID_FILETYPE_ERROR' as const,
   VIDEO_MIN_WIDTH_ERROR: 'VIDEO_MIN_WIDTH_ERROR' as const,
   VIDEO_MAX_WIDTH_ERROR: 'VIDEO_MAX_WIDTH_ERROR' as const,
   VIDEO_MIN_HEIGHT_ERROR: 'VIDEO_MIN_HEIGHT_ERROR' as const,
   VIDEO_MAX_HEIGHT_ERROR: 'VIDEO_MAX_HEIGHT_ERROR' as const,
   VIDEO_MIN_DURATION_ERROR: 'VIDEO_MIN_DURATION_ERROR' as const,
   VIDEO_MAX_DURATION_ERROR: 'VIDEO_MAX_DURATION_ERROR' as const,
   VIDEO_VALIDATION_ERROR: 'VIDEO_VALIDATION_ERROR' as const,
   MODEL3D_VALIDATION_ERROR: 'MODEL3D_VALIDATION_ERROR' as const,
   MODEL3D_THUMBNAIL_GENERATION_ERROR: 'MODEL3D_THUMBNAIL_GENERATION_ERROR' as const,
   MODEL3D_THUMBNAIL_REGENERATION_ERROR: 'MODEL3D_THUMBNAIL_REGENERATION_ERROR' as const,
   MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR: 'MODEL3D_GLB_TO_USDZ_CONVERSION_ERROR' as const,
   MODEL3D_GLB_OUTPUT_CREATION_ERROR: 'MODEL3D_GLB_OUTPUT_CREATION_ERROR' as const,
   MODEL3D_PROCESSING_FAILURE: 'MODEL3D_PROCESSING_FAILURE' as const,
   UNSUPPORTED_IMAGE_FILE_TYPE: 'UNSUPPORTED_IMAGE_FILE_TYPE' as const,
   INVALID_IMAGE_FILE_SIZE: 'INVALID_IMAGE_FILE_SIZE' as const,
   INVALID_IMAGE_ASPECT_RATIO: 'INVALID_IMAGE_ASPECT_RATIO' as const,
   INVALID_IMAGE_RESOLUTION: 'INVALID_IMAGE_RESOLUTION' as const,
   FILE_STORAGE_LIMIT_EXCEEDED: 'FILE_STORAGE_LIMIT_EXCEEDED' as const,
   DUPLICATE_FILENAME_ERROR: 'DUPLICATE_FILENAME_ERROR' as const
}

export const enumMediaHost = {
   YOUTUBE: 'YOUTUBE' as const,
   VIMEO: 'VIMEO' as const
}

export const enumMediaPreviewImageStatus = {
   UPLOADED: 'UPLOADED' as const,
   PROCESSING: 'PROCESSING' as const,
   READY: 'READY' as const,
   FAILED: 'FAILED' as const
}

export const enumMediaStatus = {
   UPLOADED: 'UPLOADED' as const,
   PROCESSING: 'PROCESSING' as const,
   READY: 'READY' as const,
   FAILED: 'FAILED' as const
}

export const enumMediaUserErrorCode = {
   INVALID: 'INVALID' as const,
   BLANK: 'BLANK' as const,
   VIDEO_VALIDATION_ERROR: 'VIDEO_VALIDATION_ERROR' as const,
   MODEL3D_VALIDATION_ERROR: 'MODEL3D_VALIDATION_ERROR' as const,
   VIDEO_THROTTLE_EXCEEDED: 'VIDEO_THROTTLE_EXCEEDED' as const,
   MODEL3D_THROTTLE_EXCEEDED: 'MODEL3D_THROTTLE_EXCEEDED' as const,
   PRODUCT_MEDIA_LIMIT_EXCEEDED: 'PRODUCT_MEDIA_LIMIT_EXCEEDED' as const,
   SHOP_MEDIA_LIMIT_EXCEEDED: 'SHOP_MEDIA_LIMIT_EXCEEDED' as const,
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   MEDIA_DOES_NOT_EXIST: 'MEDIA_DOES_NOT_EXIST' as const,
   MEDIA_DOES_NOT_EXIST_ON_PRODUCT: 'MEDIA_DOES_NOT_EXIST_ON_PRODUCT' as const,
   TOO_MANY_MEDIA_PER_INPUT_PAIR: 'TOO_MANY_MEDIA_PER_INPUT_PAIR' as const,
   MAXIMUM_VARIANT_MEDIA_PAIRS_EXCEEDED: 'MAXIMUM_VARIANT_MEDIA_PAIRS_EXCEEDED' as const,
   INVALID_MEDIA_TYPE: 'INVALID_MEDIA_TYPE' as const,
   PRODUCT_VARIANT_SPECIFIED_MULTIPLE_TIMES: 'PRODUCT_VARIANT_SPECIFIED_MULTIPLE_TIMES' as const,
   PRODUCT_VARIANT_DOES_NOT_EXIST_ON_PRODUCT: 'PRODUCT_VARIANT_DOES_NOT_EXIST_ON_PRODUCT' as const,
   NON_READY_MEDIA: 'NON_READY_MEDIA' as const,
   PRODUCT_VARIANT_ALREADY_HAS_MEDIA: 'PRODUCT_VARIANT_ALREADY_HAS_MEDIA' as const,
   MEDIA_IS_NOT_ATTACHED_TO_VARIANT: 'MEDIA_IS_NOT_ATTACHED_TO_VARIANT' as const,
   MEDIA_CANNOT_BE_MODIFIED: 'MEDIA_CANNOT_BE_MODIFIED' as const
}

export const enumMediaWarningCode = {
   MODEL_SMALL_PHYSICAL_SIZE: 'MODEL_SMALL_PHYSICAL_SIZE' as const,
   MODEL_LARGE_PHYSICAL_SIZE: 'MODEL_LARGE_PHYSICAL_SIZE' as const
}

export const enumMerchandiseDiscountClass = {
   PRODUCT: 'PRODUCT' as const,
   ORDER: 'ORDER' as const
}

export const enumMetafieldAdminAccess = {
   PRIVATE: 'PRIVATE' as const,
   PUBLIC_READ: 'PUBLIC_READ' as const,
   MERCHANT_READ: 'MERCHANT_READ' as const,
   MERCHANT_READ_WRITE: 'MERCHANT_READ_WRITE' as const
}

export const enumMetafieldDefinitionCreateUserErrorCode = {
   INVALID: 'INVALID' as const,
   INCLUSION: 'INCLUSION' as const,
   PRESENT: 'PRESENT' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   RESOURCE_TYPE_LIMIT_EXCEEDED: 'RESOURCE_TYPE_LIMIT_EXCEEDED' as const,
   LIMIT_EXCEEDED: 'LIMIT_EXCEEDED' as const,
   INVALID_OPTION: 'INVALID_OPTION' as const,
   DUPLICATE_OPTION: 'DUPLICATE_OPTION' as const,
   RESERVED_NAMESPACE_KEY: 'RESERVED_NAMESPACE_KEY' as const,
   PINNED_LIMIT_REACHED: 'PINNED_LIMIT_REACHED' as const,
   UNSTRUCTURED_ALREADY_EXISTS: 'UNSTRUCTURED_ALREADY_EXISTS' as const,
   INVALID_CHARACTER: 'INVALID_CHARACTER' as const,
   TYPE_NOT_ALLOWED_FOR_CONDITIONS: 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' as const,
   OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS: 'OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS' as const
}

export const enumMetafieldDefinitionDeleteUserErrorCode = {
   PRESENT: 'PRESENT' as const,
   NOT_FOUND: 'NOT_FOUND' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   REFERENCE_TYPE_DELETION_ERROR: 'REFERENCE_TYPE_DELETION_ERROR' as const,
   METAFIELD_DEFINITION_IN_USE: 'METAFIELD_DEFINITION_IN_USE' as const,
   DISALLOWED_OWNER_TYPE: 'DISALLOWED_OWNER_TYPE' as const
}

export const enumMetafieldDefinitionPinUserErrorCode = {
   NOT_FOUND: 'NOT_FOUND' as const,
   PINNED_LIMIT_REACHED: 'PINNED_LIMIT_REACHED' as const,
   ALREADY_PINNED: 'ALREADY_PINNED' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   DISALLOWED_OWNER_TYPE: 'DISALLOWED_OWNER_TYPE' as const
}

export const enumMetafieldDefinitionPinnedStatus = {
   ANY: 'ANY' as const,
   PINNED: 'PINNED' as const,
   UNPINNED: 'UNPINNED' as const
}

export const enumMetafieldDefinitionSortKeys = {
   ID: 'ID' as const,
   NAME: 'NAME' as const,
   PINNED_POSITION: 'PINNED_POSITION' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumMetafieldDefinitionUnpinUserErrorCode = {
   NOT_FOUND: 'NOT_FOUND' as const,
   NOT_PINNED: 'NOT_PINNED' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   DISALLOWED_OWNER_TYPE: 'DISALLOWED_OWNER_TYPE' as const
}

export const enumMetafieldDefinitionUpdateUserErrorCode = {
   PRESENT: 'PRESENT' as const,
   TOO_LONG: 'TOO_LONG' as const,
   NOT_FOUND: 'NOT_FOUND' as const,
   INVALID_INPUT: 'INVALID_INPUT' as const,
   PINNED_LIMIT_REACHED: 'PINNED_LIMIT_REACHED' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   TYPE_NOT_ALLOWED_FOR_CONDITIONS: 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' as const,
   METAFIELD_DEFINITION_IN_USE: 'METAFIELD_DEFINITION_IN_USE' as const,
   OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS: 'OWNER_TYPE_LIMIT_EXCEEDED_FOR_AUTOMATED_COLLECTIONS' as const
}

export const enumMetafieldDefinitionValidationStatus = {
   ALL_VALID: 'ALL_VALID' as const,
   IN_PROGRESS: 'IN_PROGRESS' as const,
   SOME_INVALID: 'SOME_INVALID' as const
}

export const enumMetafieldOwnerType = {
   API_PERMISSION: 'API_PERMISSION' as const,
   COMPANY: 'COMPANY' as const,
   COMPANY_LOCATION: 'COMPANY_LOCATION' as const,
   PAYMENT_CUSTOMIZATION: 'PAYMENT_CUSTOMIZATION' as const,
   CUSTOMER: 'CUSTOMER' as const,
   DELIVERY_CUSTOMIZATION: 'DELIVERY_CUSTOMIZATION' as const,
   DRAFTORDER: 'DRAFTORDER' as const,
   MARKET: 'MARKET' as const,
   COLLECTION: 'COLLECTION' as const,
   MEDIA_IMAGE: 'MEDIA_IMAGE' as const,
   PRODUCTIMAGE: 'PRODUCTIMAGE' as const,
   PRODUCT: 'PRODUCT' as const,
   PRODUCTVARIANT: 'PRODUCTVARIANT' as const,
   ARTICLE: 'ARTICLE' as const,
   BLOG: 'BLOG' as const,
   PAGE: 'PAGE' as const,
   DISCOUNT: 'DISCOUNT' as const,
   ORDER: 'ORDER' as const,
   LOCATION: 'LOCATION' as const,
   SHOP: 'SHOP' as const
}

export const enumMetafieldValidationStatus = {
   ANY: 'ANY' as const,
   VALID: 'VALID' as const,
   INVALID: 'INVALID' as const
}

export const enumMetafieldValueType = {
   STRING: 'STRING' as const,
   INTEGER: 'INTEGER' as const,
   JSON_STRING: 'JSON_STRING' as const,
   BOOLEAN: 'BOOLEAN' as const
}

export const enumMetafieldsSetUserErrorCode = {
   BLANK: 'BLANK' as const,
   INCLUSION: 'INCLUSION' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const,
   PRESENT: 'PRESENT' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   TOO_LONG: 'TOO_LONG' as const,
   INVALID_VALUE: 'INVALID_VALUE' as const,
   INVALID_TYPE: 'INVALID_TYPE' as const,
   APP_NOT_AUTHORIZED: 'APP_NOT_AUTHORIZED' as const
}

export const enumMetaobjectAdminAccess = {
   PRIVATE: 'PRIVATE' as const,
   MERCHANT_READ: 'MERCHANT_READ' as const,
   MERCHANT_READ_WRITE: 'MERCHANT_READ_WRITE' as const,
   PUBLIC_READ: 'PUBLIC_READ' as const,
   PUBLIC_READ_WRITE: 'PUBLIC_READ_WRITE' as const
}

export const enumMetaobjectStatus = {
   DRAFT: 'DRAFT' as const,
   ACTIVE: 'ACTIVE' as const
}

export const enumMetaobjectStorefrontAccess = {
   NONE: 'NONE' as const,
   PUBLIC_READ: 'PUBLIC_READ' as const
}

export const enumMetaobjectUserErrorCode = {
   INVALID: 'INVALID' as const,
   INCLUSION: 'INCLUSION' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   PRESENT: 'PRESENT' as const,
   BLANK: 'BLANK' as const,
   INVALID_TYPE: 'INVALID_TYPE' as const,
   INVALID_VALUE: 'INVALID_VALUE' as const,
   INVALID_OPTION: 'INVALID_OPTION' as const,
   DUPLICATE_FIELD_INPUT: 'DUPLICATE_FIELD_INPUT' as const,
   UNDEFINED_OBJECT_TYPE: 'UNDEFINED_OBJECT_TYPE' as const,
   UNDEFINED_OBJECT_FIELD: 'UNDEFINED_OBJECT_FIELD' as const,
   OBJECT_FIELD_TAKEN: 'OBJECT_FIELD_TAKEN' as const,
   OBJECT_FIELD_REQUIRED: 'OBJECT_FIELD_REQUIRED' as const,
   RECORD_NOT_FOUND: 'RECORD_NOT_FOUND' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   MAX_DEFINITIONS_EXCEEDED: 'MAX_DEFINITIONS_EXCEEDED' as const,
   MAX_OBJECTS_EXCEEDED: 'MAX_OBJECTS_EXCEEDED' as const,
   IMMUTABLE: 'IMMUTABLE' as const,
   NOT_AUTHORIZED: 'NOT_AUTHORIZED' as const,
   RESERVED_NAME: 'RESERVED_NAME' as const,
   CAPABILITY_NOT_ENABLED: 'CAPABILITY_NOT_ENABLED' as const
}

export const enumMethodDefinitionSortKeys = {
   RATE_PROVIDER_TYPE: 'RATE_PROVIDER_TYPE' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumOrderActionType = {
   ORDER: 'ORDER' as const,
   ORDER_EDIT: 'ORDER_EDIT' as const,
   REFUND: 'REFUND' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumOrderCancelReason = {
   CUSTOMER: 'CUSTOMER' as const,
   DECLINED: 'DECLINED' as const,
   FRAUD: 'FRAUD' as const,
   INVENTORY: 'INVENTORY' as const,
   OTHER: 'OTHER' as const
}

export const enumOrderCreateMandatePaymentUserErrorCode = {
   ORDER_MANDATE_PAYMENT_ERROR_CODE: 'ORDER_MANDATE_PAYMENT_ERROR_CODE' as const
}

export const enumOrderDisplayFinancialStatus = {
   PENDING: 'PENDING' as const,
   AUTHORIZED: 'AUTHORIZED' as const,
   PARTIALLY_PAID: 'PARTIALLY_PAID' as const,
   PARTIALLY_REFUNDED: 'PARTIALLY_REFUNDED' as const,
   VOIDED: 'VOIDED' as const,
   PAID: 'PAID' as const,
   REFUNDED: 'REFUNDED' as const,
   EXPIRED: 'EXPIRED' as const
}

export const enumOrderDisplayFulfillmentStatus = {
   UNFULFILLED: 'UNFULFILLED' as const,
   PARTIALLY_FULFILLED: 'PARTIALLY_FULFILLED' as const,
   FULFILLED: 'FULFILLED' as const,
   RESTOCKED: 'RESTOCKED' as const,
   PENDING_FULFILLMENT: 'PENDING_FULFILLMENT' as const,
   OPEN: 'OPEN' as const,
   IN_PROGRESS: 'IN_PROGRESS' as const,
   ON_HOLD: 'ON_HOLD' as const,
   SCHEDULED: 'SCHEDULED' as const
}

export const enumOrderInvoiceSendUserErrorCode = {
   ORDER_INVOICE_SEND_UNSUCCESSFUL: 'ORDER_INVOICE_SEND_UNSUCCESSFUL' as const
}

export const enumOrderPaymentStatusResult = {
   SUCCESS: 'SUCCESS' as const,
   AUTHORIZED: 'AUTHORIZED' as const,
   VOIDED: 'VOIDED' as const,
   REFUNDED: 'REFUNDED' as const,
   CAPTURED: 'CAPTURED' as const,
   PURCHASED: 'PURCHASED' as const,
   ERROR: 'ERROR' as const,
   PROCESSING: 'PROCESSING' as const,
   REDIRECT_REQUIRED: 'REDIRECT_REQUIRED' as const,
   RETRYABLE: 'RETRYABLE' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumOrderReturnStatus = {
   IN_PROGRESS: 'IN_PROGRESS' as const,
   INSPECTION_COMPLETE: 'INSPECTION_COMPLETE' as const,
   NO_RETURN: 'NO_RETURN' as const,
   RETURNED: 'RETURNED' as const,
   RETURN_FAILED: 'RETURN_FAILED' as const,
   RETURN_REQUESTED: 'RETURN_REQUESTED' as const
}

export const enumOrderRiskLevel = {
   LOW: 'LOW' as const,
   MEDIUM: 'MEDIUM' as const,
   HIGH: 'HIGH' as const
}

export const enumOrderSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   CUSTOMER_NAME: 'CUSTOMER_NAME' as const,
   DESTINATION: 'DESTINATION' as const,
   FINANCIAL_STATUS: 'FINANCIAL_STATUS' as const,
   FULFILLMENT_STATUS: 'FULFILLMENT_STATUS' as const,
   ORDER_NUMBER: 'ORDER_NUMBER' as const,
   PROCESSED_AT: 'PROCESSED_AT' as const,
   TOTAL_ITEMS_QUANTITY: 'TOTAL_ITEMS_QUANTITY' as const,
   TOTAL_PRICE: 'TOTAL_PRICE' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   PO_NUMBER: 'PO_NUMBER' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumOrderTransactionErrorCode = {
   INCORRECT_NUMBER: 'INCORRECT_NUMBER' as const,
   INVALID_NUMBER: 'INVALID_NUMBER' as const,
   INVALID_EXPIRY_DATE: 'INVALID_EXPIRY_DATE' as const,
   INVALID_CVC: 'INVALID_CVC' as const,
   EXPIRED_CARD: 'EXPIRED_CARD' as const,
   INCORRECT_CVC: 'INCORRECT_CVC' as const,
   INCORRECT_ZIP: 'INCORRECT_ZIP' as const,
   INCORRECT_ADDRESS: 'INCORRECT_ADDRESS' as const,
   INCORRECT_PIN: 'INCORRECT_PIN' as const,
   CARD_DECLINED: 'CARD_DECLINED' as const,
   PROCESSING_ERROR: 'PROCESSING_ERROR' as const,
   CALL_ISSUER: 'CALL_ISSUER' as const,
   PICK_UP_CARD: 'PICK_UP_CARD' as const,
   CONFIG_ERROR: 'CONFIG_ERROR' as const,
   TEST_MODE_LIVE_CARD: 'TEST_MODE_LIVE_CARD' as const,
   UNSUPPORTED_FEATURE: 'UNSUPPORTED_FEATURE' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   INVALID_COUNTRY: 'INVALID_COUNTRY' as const,
   INVALID_AMOUNT: 'INVALID_AMOUNT' as const,
   PAYMENT_METHOD_UNAVAILABLE: 'PAYMENT_METHOD_UNAVAILABLE' as const,
   AMAZON_PAYMENTS_INVALID_PAYMENT_METHOD: 'AMAZON_PAYMENTS_INVALID_PAYMENT_METHOD' as const,
   AMAZON_PAYMENTS_MAX_AMOUNT_CHARGED: 'AMAZON_PAYMENTS_MAX_AMOUNT_CHARGED' as const,
   AMAZON_PAYMENTS_MAX_AMOUNT_REFUNDED: 'AMAZON_PAYMENTS_MAX_AMOUNT_REFUNDED' as const,
   AMAZON_PAYMENTS_MAX_AUTHORIZATIONS_CAPTURED: 'AMAZON_PAYMENTS_MAX_AUTHORIZATIONS_CAPTURED' as const,
   AMAZON_PAYMENTS_MAX_REFUNDS_PROCESSED: 'AMAZON_PAYMENTS_MAX_REFUNDS_PROCESSED' as const,
   AMAZON_PAYMENTS_ORDER_REFERENCE_CANCELED: 'AMAZON_PAYMENTS_ORDER_REFERENCE_CANCELED' as const,
   AMAZON_PAYMENTS_STALE: 'AMAZON_PAYMENTS_STALE' as const
}

export const enumOrderTransactionKind = {
   SALE: 'SALE' as const,
   CAPTURE: 'CAPTURE' as const,
   AUTHORIZATION: 'AUTHORIZATION' as const,
   VOID: 'VOID' as const,
   REFUND: 'REFUND' as const,
   CHANGE: 'CHANGE' as const,
   EMV_AUTHORIZATION: 'EMV_AUTHORIZATION' as const,
   SUGGESTED_REFUND: 'SUGGESTED_REFUND' as const
}

export const enumOrderTransactionStatus = {
   SUCCESS: 'SUCCESS' as const,
   FAILURE: 'FAILURE' as const,
   PENDING: 'PENDING' as const,
   ERROR: 'ERROR' as const,
   AWAITING_RESPONSE: 'AWAITING_RESPONSE' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumParseErrorCode = {
   SYNTAX_NOT_RECOGNIZED: 'SYNTAX_NOT_RECOGNIZED' as const,
   SEMANTICALLY_INVALID: 'SEMANTICALLY_INVALID' as const,
   TABLE_NOT_FOUND: 'TABLE_NOT_FOUND' as const,
   COLUMN_NOT_FOUND: 'COLUMN_NOT_FOUND' as const,
   VALUE_NOT_PARSABLE: 'VALUE_NOT_PARSABLE' as const,
   DATE_NOT_PARSABLE: 'DATE_NOT_PARSABLE' as const,
   DATE_TIME_NOT_PARSABLE: 'DATE_TIME_NOT_PARSABLE' as const,
   DATE_INTERVAL_NOT_FOUND: 'DATE_INTERVAL_NOT_FOUND' as const,
   NAMED_DATE_NOT_FOUND: 'NAMED_DATE_NOT_FOUND' as const,
   SORT_FIELD_NOT_FOUND: 'SORT_FIELD_NOT_FOUND' as const,
   LIMIT_INVALID: 'LIMIT_INVALID' as const,
   VISUALIZE_CHART_TYPE_NOT_FOUND: 'VISUALIZE_CHART_TYPE_NOT_FOUND' as const,
   FUNCTION_MODIFIER_NOT_FOUND: 'FUNCTION_MODIFIER_NOT_FOUND' as const,
   FUNCTION_ARGUMENTS_NOT_FOUND: 'FUNCTION_ARGUMENTS_NOT_FOUND' as const,
   FUNCTION_EXCESS_ARGUMENTS: 'FUNCTION_EXCESS_ARGUMENTS' as const,
   FROM_NOT_FOUND: 'FROM_NOT_FOUND' as const,
   PRESENTMENT_NOT_FOUND: 'PRESENTMENT_NOT_FOUND' as const,
   EXCESS_PRESENTMENTS: 'EXCESS_PRESENTMENTS' as const,
   FUNCTION_INCOMPATIBLE_TYPES: 'FUNCTION_INCOMPATIBLE_TYPES' as const,
   VISUALIZE_EXCESS_PROJECTIONS: 'VISUALIZE_EXCESS_PROJECTIONS' as const,
   UNKNOWN: 'UNKNOWN' as const,
   OPERATOR_INCOMPATIBLE_TYPES: 'OPERATOR_INCOMPATIBLE_TYPES' as const,
   VISUALIZE_INCOMPATIBLE_TYPES: 'VISUALIZE_INCOMPATIBLE_TYPES' as const,
   VISUALIZE_GROUP_BY_NOT_FOUND: 'VISUALIZE_GROUP_BY_NOT_FOUND' as const,
   VISUALIZE_GROUP_BY_MIXED_BACKFILL: 'VISUALIZE_GROUP_BY_MIXED_BACKFILL' as const,
   MIXED_AGGREGATE_AND_NON_AGGREGATE: 'MIXED_AGGREGATE_AND_NON_AGGREGATE' as const,
   FUNCTION_NESTED_AGGREGATE: 'FUNCTION_NESTED_AGGREGATE' as const,
   TIME_FUNCTION_NOT_FOUND: 'TIME_FUNCTION_NOT_FOUND' as const,
   LIST_MIXED_ARGUMENT_TYPES: 'LIST_MIXED_ARGUMENT_TYPES' as const,
   EXCESS_PERIODS: 'EXCESS_PERIODS' as const,
   SYNTAX_INVALID_TOKEN: 'SYNTAX_INVALID_TOKEN' as const,
   SYNTAX_NO_VIABLE_ALTERNATIVE: 'SYNTAX_NO_VIABLE_ALTERNATIVE' as const,
   COMPARE_TO_INVALID_PERIOD: 'COMPARE_TO_INVALID_PERIOD' as const,
   COMPARE_TO_INCOMPATIBLE_PERIOD: 'COMPARE_TO_INCOMPATIBLE_PERIOD' as const,
   UNBACKFILLED_TIME_GROUP_BY_COMPARISON: 'UNBACKFILLED_TIME_GROUP_BY_COMPARISON' as const,
   COMPARISON_WITH_NON_AGGREGATE_FIELDS: 'COMPARISON_WITH_NON_AGGREGATE_FIELDS' as const,
   REQUIRED_GROUP_BY_NOT_FOUND: 'REQUIRED_GROUP_BY_NOT_FOUND' as const,
   SYNTAX_INPUT_MISMATCH: 'SYNTAX_INPUT_MISMATCH' as const,
   SYNTAX_UNWANTED_TOKEN: 'SYNTAX_UNWANTED_TOKEN' as const,
   SYNTAX_MISSING_TOKEN: 'SYNTAX_MISSING_TOKEN' as const,
   FUNCTION_NOT_FOUND: 'FUNCTION_NOT_FOUND' as const,
   INVALID_DATE_RANGE: 'INVALID_DATE_RANGE' as const,
   EXCESS_BACKFILL_DIMENSIONS: 'EXCESS_BACKFILL_DIMENSIONS' as const,
   BACKFILL_DATE_RANGE_NOT_FOUND: 'BACKFILL_DATE_RANGE_NOT_FOUND' as const,
   COMPARE_TO_MISSING_PERIOD: 'COMPARE_TO_MISSING_PERIOD' as const,
   EXCESS_DIMENSIONS: 'EXCESS_DIMENSIONS' as const,
   SYNTAX_FAILED_PREDICATE: 'SYNTAX_FAILED_PREDICATE' as const
}

export const enumPaymentCustomizationErrorCode = {
   INVALID: 'INVALID' as const,
   FUNCTION_NOT_FOUND: 'FUNCTION_NOT_FOUND' as const,
   PAYMENT_CUSTOMIZATION_NOT_FOUND: 'PAYMENT_CUSTOMIZATION_NOT_FOUND' as const,
   PAYMENT_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE: 'PAYMENT_CUSTOMIZATION_FUNCTION_NOT_ELIGIBLE' as const,
   MAXIMUM_ACTIVE_PAYMENT_CUSTOMIZATIONS: 'MAXIMUM_ACTIVE_PAYMENT_CUSTOMIZATIONS' as const,
   CUSTOM_APP_FUNCTION_NOT_ELIGIBLE: 'CUSTOM_APP_FUNCTION_NOT_ELIGIBLE' as const,
   FUNCTION_DOES_NOT_IMPLEMENT: 'FUNCTION_DOES_NOT_IMPLEMENT' as const,
   FUNCTION_PENDING_DELETION: 'FUNCTION_PENDING_DELETION' as const,
   FUNCTION_ID_CANNOT_BE_CHANGED: 'FUNCTION_ID_CANNOT_BE_CHANGED' as const,
   REQUIRED_INPUT_FIELD: 'REQUIRED_INPUT_FIELD' as const,
   INVALID_METAFIELDS: 'INVALID_METAFIELDS' as const
}

export const enumPaymentMethods = {
   VISA: 'VISA' as const,
   MASTERCARD: 'MASTERCARD' as const,
   DISCOVER: 'DISCOVER' as const,
   AMERICAN_EXPRESS: 'AMERICAN_EXPRESS' as const,
   DINERS_CLUB: 'DINERS_CLUB' as const,
   JCB: 'JCB' as const,
   UNIONPAY: 'UNIONPAY' as const,
   ELO: 'ELO' as const,
   DANKORT: 'DANKORT' as const,
   MAESTRO: 'MAESTRO' as const,
   FORBRUGSFORENINGEN: 'FORBRUGSFORENINGEN' as const,
   PAYPAL: 'PAYPAL' as const,
   BOGUS: 'BOGUS' as const,
   BITCOIN: 'BITCOIN' as const,
   LITECOIN: 'LITECOIN' as const,
   DOGECOIN: 'DOGECOIN' as const,
   INTERAC: 'INTERAC' as const,
   EFTPOS: 'EFTPOS' as const
}

export const enumPaymentReminderSendUserErrorCode = {
   PAYMENT_REMINDER_SEND_UNSUCCESSFUL: 'PAYMENT_REMINDER_SEND_UNSUCCESSFUL' as const
}

export const enumPaymentTermsCreateUserErrorCode = {
   PAYMENT_TERMS_CREATION_UNSUCCESSFUL: 'PAYMENT_TERMS_CREATION_UNSUCCESSFUL' as const
}

export const enumPaymentTermsDeleteUserErrorCode = {
   PAYMENT_TERMS_DELETE_UNSUCCESSFUL: 'PAYMENT_TERMS_DELETE_UNSUCCESSFUL' as const
}

export const enumPaymentTermsType = {
   RECEIPT: 'RECEIPT' as const,
   NET: 'NET' as const,
   FIXED: 'FIXED' as const,
   FULFILLMENT: 'FULFILLMENT' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumPaymentTermsUpdateUserErrorCode = {
   PAYMENT_TERMS_UPDATE_UNSUCCESSFUL: 'PAYMENT_TERMS_UPDATE_UNSUCCESSFUL' as const
}

export const enumPaypalExpressSubscriptionsGatewayStatus = {
   ENABLED: 'ENABLED' as const,
   DISABLED: 'DISABLED' as const,
   PENDING: 'PENDING' as const
}

export const enumPriceCalculationType = {
   COMPONENTS_SUM: 'COMPONENTS_SUM' as const,
   FIXED: 'FIXED' as const,
   NONE: 'NONE' as const
}

export const enumPriceListAdjustmentType = {
   PERCENTAGE_DECREASE: 'PERCENTAGE_DECREASE' as const,
   PERCENTAGE_INCREASE: 'PERCENTAGE_INCREASE' as const
}

export const enumPriceListCompareAtMode = {
   ADJUSTED: 'ADJUSTED' as const,
   NULLIFY: 'NULLIFY' as const
}

export const enumPriceListFixedPricesByProductBulkUpdateUserErrorCode = {
   NO_UPDATE_OPERATIONS_SPECIFIED: 'NO_UPDATE_OPERATIONS_SPECIFIED' as const,
   PRICES_TO_ADD_CURRENCY_MISMATCH: 'PRICES_TO_ADD_CURRENCY_MISMATCH' as const,
   PRICE_LIST_DOES_NOT_EXIST: 'PRICE_LIST_DOES_NOT_EXIST' as const,
   DUPLICATE_ID_IN_INPUT: 'DUPLICATE_ID_IN_INPUT' as const,
   ID_MUST_BE_MUTUALLY_EXCLUSIVE: 'ID_MUST_BE_MUTUALLY_EXCLUSIVE' as const,
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   PRICE_LIMIT_EXCEEDED: 'PRICE_LIMIT_EXCEEDED' as const
}

export const enumPriceListPriceOriginType = {
   FIXED: 'FIXED' as const,
   RELATIVE: 'RELATIVE' as const
}

export const enumPriceListPriceUserErrorCode = {
   BLANK: 'BLANK' as const,
   PRICE_LIST_NOT_FOUND: 'PRICE_LIST_NOT_FOUND' as const,
   PRICE_LIST_CURRENCY_MISMATCH: 'PRICE_LIST_CURRENCY_MISMATCH' as const,
   VARIANT_NOT_FOUND: 'VARIANT_NOT_FOUND' as const,
   PRICE_NOT_FIXED: 'PRICE_NOT_FIXED' as const
}

export const enumPriceListSortKeys = {
   NAME: 'NAME' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumPriceListUserErrorCode = {
   TAKEN: 'TAKEN' as const,
   BLANK: 'BLANK' as const,
   INCLUSION: 'INCLUSION' as const,
   TOO_LONG: 'TOO_LONG' as const,
   PRICE_LIST_NOT_FOUND: 'PRICE_LIST_NOT_FOUND' as const,
   PRICE_LIST_LOCKED: 'PRICE_LIST_LOCKED' as const,
   CONTEXT_RULE_LIMIT_REACHED: 'CONTEXT_RULE_LIMIT_REACHED' as const,
   CONTEXT_RULE_COUNTRIES_LIMIT: 'CONTEXT_RULE_COUNTRIES_LIMIT' as const,
   CURRENCY_COUNTRY_MISMATCH: 'CURRENCY_COUNTRY_MISMATCH' as const,
   COUNTRY_CURRENCY_MISMATCH: 'COUNTRY_CURRENCY_MISMATCH' as const,
   CURRENCY_MARKET_MISMATCH: 'CURRENCY_MARKET_MISMATCH' as const,
   MARKET_CURRENCY_MISMATCH: 'MARKET_CURRENCY_MISMATCH' as const,
   INVALID_ADJUSTMENT_VALUE: 'INVALID_ADJUSTMENT_VALUE' as const,
   INVALID_ADJUSTMENT_MIN_VALUE: 'INVALID_ADJUSTMENT_MIN_VALUE' as const,
   INVALID_ADJUSTMENT_MAX_VALUE: 'INVALID_ADJUSTMENT_MAX_VALUE' as const,
   CONTEXT_RULE_COUNTRY_TAKEN: 'CONTEXT_RULE_COUNTRY_TAKEN' as const,
   CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES: 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' as const,
   CONTEXT_RULE_LIMIT_ONE_OPTION: 'CONTEXT_RULE_LIMIT_ONE_OPTION' as const,
   CONTEXT_RULE_MARKET_NOT_FOUND: 'CONTEXT_RULE_MARKET_NOT_FOUND' as const,
   CONTEXT_RULE_MARKET_TAKEN: 'CONTEXT_RULE_MARKET_TAKEN' as const,
   CURRENCY_NOT_SUPPORTED: 'CURRENCY_NOT_SUPPORTED' as const,
   PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET: 'PRICE_LIST_NOT_ALLOWED_FOR_PRIMARY_MARKET' as const,
   CATALOG_ASSIGNMENT_NOT_ALLOWED: 'CATALOG_ASSIGNMENT_NOT_ALLOWED' as const,
   CATALOG_DOES_NOT_EXIST: 'CATALOG_DOES_NOT_EXIST' as const,
   CATALOG_CANNOT_CHANGE_CONTEXT_TYPE: 'CATALOG_CANNOT_CHANGE_CONTEXT_TYPE' as const,
   CATALOG_MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH: 'CATALOG_MARKET_AND_PRICE_LIST_CURRENCY_MISMATCH' as const,
   CATALOG_TAKEN: 'CATALOG_TAKEN' as const,
   COUNTRY_PRICE_LIST_ASSIGNMENT: 'COUNTRY_PRICE_LIST_ASSIGNMENT' as const,
   APP_CATALOG_PRICE_LIST_ASSIGNMENT: 'APP_CATALOG_PRICE_LIST_ASSIGNMENT' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumPriceRuleAllocationMethod = {
   EACH: 'EACH' as const,
   ACROSS: 'ACROSS' as const
}

export const enumPriceRuleErrorCode = {
   BLANK: 'BLANK' as const,
   EQUAL_TO: 'EQUAL_TO' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   INVALID: 'INVALID' as const,
   LESS_THAN: 'LESS_THAN' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   TOO_MANY_ARGUMENTS: 'TOO_MANY_ARGUMENTS' as const,
   MISSING_ARGUMENT: 'MISSING_ARGUMENT' as const,
   EXCEEDED_MAX: 'EXCEEDED_MAX' as const,
   PRICE_RULE_ALLOCATION_LIMIT_ON_NON_BOGO: 'PRICE_RULE_ALLOCATION_LIMIT_ON_NON_BOGO' as const,
   PRICE_RULE_ALLOCATION_LIMIT_IS_ZERO: 'PRICE_RULE_ALLOCATION_LIMIT_IS_ZERO' as const,
   PRICE_RULE_EXCEEDED_MAX_DISCOUNT_CODE: 'PRICE_RULE_EXCEEDED_MAX_DISCOUNT_CODE' as const,
   SHOP_EXCEEDED_MAX_PRICE_RULES: 'SHOP_EXCEEDED_MAX_PRICE_RULES' as const,
   END_DATE_BEFORE_START_DATE: 'END_DATE_BEFORE_START_DATE' as const,
   PRICE_RULE_PERCENTAGE_VALUE_OUTSIDE_RANGE: 'PRICE_RULE_PERCENTAGE_VALUE_OUTSIDE_RANGE' as const,
   PREREQUISITE_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT: 'PREREQUISITE_SUBTOTAL_AND_QUANTITY_RANGE_BOTH_PRESENT' as const,
   ALLOCATION_METHOD_MUST_BE_ACROSS_FOR_GIVEN_TARGET_SELECTION: 'ALLOCATION_METHOD_MUST_BE_ACROSS_FOR_GIVEN_TARGET_SELECTION' as const,
   APPLIES_ON_NOTHING: 'APPLIES_ON_NOTHING' as const,
   MULTIPLE_RECURRING_CYCLE_LIMIT_FOR_NON_SUBSCRIPTION_ITEMS: 'MULTIPLE_RECURRING_CYCLE_LIMIT_FOR_NON_SUBSCRIPTION_ITEMS' as const,
   BOGO_INVALID_TARGET_SELECTION: 'BOGO_INVALID_TARGET_SELECTION' as const,
   BOGO_INVALID_TARGET_TYPE: 'BOGO_INVALID_TARGET_TYPE' as const,
   BOGO_INVALID_VALUE_TYPE: 'BOGO_INVALID_VALUE_TYPE' as const,
   DISCOUNT_CODE_DUPLICATE: 'DISCOUNT_CODE_DUPLICATE' as const,
   BOTH_CUSTOMER_AND_SAVED_SEARCH_PREREQUISITES_SELECTED: 'BOTH_CUSTOMER_AND_SAVED_SEARCH_PREREQUISITES_SELECTED' as const,
   CUSTOMER_SAVED_SEARCH_DUPLICATE: 'CUSTOMER_SAVED_SEARCH_DUPLICATE' as const,
   CUSTOMER_SAVED_SEARCH_EXCEEDED_MAX: 'CUSTOMER_SAVED_SEARCH_EXCEEDED_MAX' as const,
   CUSTOMER_SAVED_SEARCH_INVALID: 'CUSTOMER_SAVED_SEARCH_INVALID' as const,
   CUSTOMER_PREREQUISITES_EXCEEDED_MAX: 'CUSTOMER_PREREQUISITES_EXCEEDED_MAX' as const,
   CUSTOMER_PREREQUISITES_INVALID_SELECTION: 'CUSTOMER_PREREQUISITES_INVALID_SELECTION' as const,
   CUSTOMER_PREREQUISITE_DUPLICATE: 'CUSTOMER_PREREQUISITE_DUPLICATE' as const,
   CUSTOMER_PREREQUISITES_MISSING: 'CUSTOMER_PREREQUISITES_MISSING' as const,
   BOTH_CUSTOMER_AND_SEGMENT_PREREQUISITES_SELECTED: 'BOTH_CUSTOMER_AND_SEGMENT_PREREQUISITES_SELECTED' as const,
   BOTH_SAVED_SEARCH_AND_SEGMENT_PREREQUISITES_SELECTED: 'BOTH_SAVED_SEARCH_AND_SEGMENT_PREREQUISITES_SELECTED' as const,
   CUSTOMER_SEGMENT_EXCEEDED_MAX: 'CUSTOMER_SEGMENT_EXCEEDED_MAX' as const,
   CUSTOMER_SEGMENT_INVALID: 'CUSTOMER_SEGMENT_INVALID' as const,
   CUSTOMER_SEGMENT_PREREQUISITE_DUPLICATE: 'CUSTOMER_SEGMENT_PREREQUISITE_DUPLICATE' as const,
   CANNOT_PREREQUISITE_COLLECTION_WITH_PRODUCT_OR_VARIANTS: 'CANNOT_PREREQUISITE_COLLECTION_WITH_PRODUCT_OR_VARIANTS' as const,
   ITEM_PREREQUISITES_DUPLICATE_COLLECTION: 'ITEM_PREREQUISITES_DUPLICATE_COLLECTION' as const,
   ITEM_PREREQUISITES_DUPLICATE_PRODUCT: 'ITEM_PREREQUISITES_DUPLICATE_PRODUCT' as const,
   ITEM_PREREQUISITES_DUPLICATE_VARIANT: 'ITEM_PREREQUISITES_DUPLICATE_VARIANT' as const,
   ITEM_PREREQUISITES_EXCEEDED_MAX: 'ITEM_PREREQUISITES_EXCEEDED_MAX' as const,
   ITEM_PREREQUISITES_INVALID_COLLECTION: 'ITEM_PREREQUISITES_INVALID_COLLECTION' as const,
   ITEM_PREREQUISITES_INVALID_TYPE: 'ITEM_PREREQUISITES_INVALID_TYPE' as const,
   ITEM_PREREQUISITES_INVALID_PRODUCT: 'ITEM_PREREQUISITES_INVALID_PRODUCT' as const,
   ITEM_PREREQUISITES_INVALID_VARIANT: 'ITEM_PREREQUISITES_INVALID_VARIANT' as const,
   ITEM_PREREQUISITES_MUST_BE_EMPTY: 'ITEM_PREREQUISITES_MUST_BE_EMPTY' as const,
   ITEM_PREREQUISITES_MISSING: 'ITEM_PREREQUISITES_MISSING' as const,
   CANNOT_ENTITLE_COLLECTIONS_WITH_PRODUCTS_OR_VARIANTS: 'CANNOT_ENTITLE_COLLECTIONS_WITH_PRODUCTS_OR_VARIANTS' as const,
   ITEM_ENTITLEMENTS_DUPLICATE_COLLECTION: 'ITEM_ENTITLEMENTS_DUPLICATE_COLLECTION' as const,
   ITEM_ENTITLEMENTS_DUPLICATE_PRODUCT: 'ITEM_ENTITLEMENTS_DUPLICATE_PRODUCT' as const,
   ITEM_ENTITLEMENTS_DUPLICATE_VARIANT: 'ITEM_ENTITLEMENTS_DUPLICATE_VARIANT' as const,
   ITEM_ENTITLEMENTS_EXCEEDED_MAX_COLLECTION: 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_COLLECTION' as const,
   ITEM_ENTITLEMENTS_EXCEEDED_MAX_PRODUCT: 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_PRODUCT' as const,
   ITEM_ENTITLEMENTS_EXCEEDED_MAX_VARIANT: 'ITEM_ENTITLEMENTS_EXCEEDED_MAX_VARIANT' as const,
   ITEM_ENTITLEMENT_INVALID_TYPE: 'ITEM_ENTITLEMENT_INVALID_TYPE' as const,
   ITEM_ENTITLEMENTS_INVALID_COLLECTION: 'ITEM_ENTITLEMENTS_INVALID_COLLECTION' as const,
   ITEM_ENTITLEMENTS_INVALID_PRODUCT: 'ITEM_ENTITLEMENTS_INVALID_PRODUCT' as const,
   ITEM_ENTITLEMENTS_INVALID_VARIANT: 'ITEM_ENTITLEMENTS_INVALID_VARIANT' as const,
   ITEM_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION: 'ITEM_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION' as const,
   ITEM_ENTITLEMENTS_MISSING: 'ITEM_ENTITLEMENTS_MISSING' as const,
   VARIANT_ALREADY_ENTITLED_THROUGH_PRODUCT: 'VARIANT_ALREADY_ENTITLED_THROUGH_PRODUCT' as const,
   SHIPPING_ENTITLEMENTS_DUPLICATE_COUNTRY: 'SHIPPING_ENTITLEMENTS_DUPLICATE_COUNTRY' as const,
   SHIPPING_ENTITLEMENTS_EXCEEDED_MAX: 'SHIPPING_ENTITLEMENTS_EXCEEDED_MAX' as const,
   SHIPPING_ENTITLEMENTS_INVALID_COUNTRY: 'SHIPPING_ENTITLEMENTS_INVALID_COUNTRY' as const,
   SHIPPING_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION: 'SHIPPING_ENTITLEMENTS_INVALID_TARGET_TYPE_OR_SELECTION' as const,
   SHIPPING_ENTITLEMENTS_MISSING: 'SHIPPING_ENTITLEMENTS_MISSING' as const,
   SHIPPING_ENTITLEMENTS_UNSUPPORTED_DESTINATION_TYPE: 'SHIPPING_ENTITLEMENTS_UNSUPPORTED_DESTINATION_TYPE' as const,
   INVALID_TARGET_TYPE_PREREQUISITE_SHIPPING_PRICE_RANGE: 'INVALID_TARGET_TYPE_PREREQUISITE_SHIPPING_PRICE_RANGE' as const,
   INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS: 'INVALID_COMBINES_WITH_FOR_DISCOUNT_CLASS' as const,
   INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE: 'INVALID_DISCOUNT_CLASS_FOR_PRICE_RULE' as const
}

export const enumPriceRuleFeature = {
   BUY_ONE_GET_ONE: 'BUY_ONE_GET_ONE' as const,
   BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT: 'BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT' as const,
   BULK: 'BULK' as const,
   SPECIFIC_CUSTOMERS: 'SPECIFIC_CUSTOMERS' as const,
   QUANTITY_DISCOUNTS: 'QUANTITY_DISCOUNTS' as const
}

export const enumPriceRuleShareableUrlTargetType = {
   HOME: 'HOME' as const,
   PRODUCT: 'PRODUCT' as const,
   COLLECTION: 'COLLECTION' as const
}

export const enumPriceRuleSortKeys = {
   STARTS_AT: 'STARTS_AT' as const,
   ENDS_AT: 'ENDS_AT' as const,
   TITLE: 'TITLE' as const,
   CREATED_AT: 'CREATED_AT' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumPriceRuleStatus = {
   ACTIVE: 'ACTIVE' as const,
   EXPIRED: 'EXPIRED' as const,
   SCHEDULED: 'SCHEDULED' as const
}

export const enumPriceRuleTarget = {
   LINE_ITEM: 'LINE_ITEM' as const,
   SHIPPING_LINE: 'SHIPPING_LINE' as const
}

export const enumPriceRuleTrait = {
   BUY_ONE_GET_ONE: 'BUY_ONE_GET_ONE' as const,
   BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT: 'BUY_ONE_GET_ONE_WITH_ALLOCATION_LIMIT' as const,
   BULK: 'BULK' as const,
   SPECIFIC_CUSTOMERS: 'SPECIFIC_CUSTOMERS' as const,
   QUANTITY_DISCOUNTS: 'QUANTITY_DISCOUNTS' as const
}

export const enumPrivateMetafieldValueType = {
   STRING: 'STRING' as const,
   INTEGER: 'INTEGER' as const,
   JSON_STRING: 'JSON_STRING' as const
}

export const enumProductChangeStatusUserErrorCode = {
   PRODUCT_NOT_FOUND: 'PRODUCT_NOT_FOUND' as const
}

export const enumProductCollectionSortKeys = {
   TITLE: 'TITLE' as const,
   PRICE: 'PRICE' as const,
   BEST_SELLING: 'BEST_SELLING' as const,
   CREATED: 'CREATED' as const,
   ID: 'ID' as const,
   MANUAL: 'MANUAL' as const,
   COLLECTION_DEFAULT: 'COLLECTION_DEFAULT' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumProductDeleteUserErrorCode = {
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumProductDuplicateUserErrorCode = {
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   EMPTY_VARIANT: 'EMPTY_VARIANT' as const,
   EMPTY_TITLE: 'EMPTY_TITLE' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const,
   FAILED_TO_SAVE: 'FAILED_TO_SAVE' as const
}

export const enumProductFeedCreateUserErrorCode = {
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const
}

export const enumProductFeedDeleteUserErrorCode = {
   INVALID: 'INVALID' as const
}

export const enumProductFeedStatus = {
   ACTIVE: 'ACTIVE' as const,
   INACTIVE: 'INACTIVE' as const
}

export const enumProductFullSyncUserErrorCode = {
   INVALID: 'INVALID' as const
}

export const enumProductImageSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   POSITION: 'POSITION' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumProductMediaSortKeys = {
   POSITION: 'POSITION' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumProductSortKeys = {
   TITLE: 'TITLE' as const,
   PRODUCT_TYPE: 'PRODUCT_TYPE' as const,
   VENDOR: 'VENDOR' as const,
   INVENTORY_TOTAL: 'INVENTORY_TOTAL' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   CREATED_AT: 'CREATED_AT' as const,
   PUBLISHED_AT: 'PUBLISHED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumProductStatus = {
   ACTIVE: 'ACTIVE' as const,
   ARCHIVED: 'ARCHIVED' as const,
   DRAFT: 'DRAFT' as const
}

export const enumProductVariantInventoryManagement = {
   SHOPIFY: 'SHOPIFY' as const,
   NOT_MANAGED: 'NOT_MANAGED' as const,
   FULFILLMENT_SERVICE: 'FULFILLMENT_SERVICE' as const
}

export const enumProductVariantInventoryPolicy = {
   DENY: 'DENY' as const,
   CONTINUE: 'CONTINUE' as const
}

export const enumProductVariantRelationshipBulkUpdateUserErrorCode = {
   PARENT_REQUIRED: 'PARENT_REQUIRED' as const,
   FAILED_TO_CREATE: 'FAILED_TO_CREATE' as const,
   PRODUCT_VARIANTS_NOT_FOUND: 'PRODUCT_VARIANTS_NOT_FOUND' as const,
   CIRCULAR_REFERENCE: 'CIRCULAR_REFERENCE' as const,
   NESTED_PARENT_PRODUCT_VARIANT: 'NESTED_PARENT_PRODUCT_VARIANT' as const,
   INVALID_QUANTITY: 'INVALID_QUANTITY' as const,
   DUPLICATE_PRODUCT_VARIANT_RELATIONSHIP: 'DUPLICATE_PRODUCT_VARIANT_RELATIONSHIP' as const,
   EXCEEDED_PRODUCT_VARIANT_RELATIONSHIP_LIMIT: 'EXCEEDED_PRODUCT_VARIANT_RELATIONSHIP_LIMIT' as const,
   PRODUCT_VARIANT_RELATIONSHIP_TYPE_CONFLICT: 'PRODUCT_VARIANT_RELATIONSHIP_TYPE_CONFLICT' as const,
   UNEXPECTED_ERROR: 'UNEXPECTED_ERROR' as const,
   FAILED_TO_REMOVE: 'FAILED_TO_REMOVE' as const,
   MUST_SPECIFY_COMPONENTS: 'MUST_SPECIFY_COMPONENTS' as const,
   FAILED_TO_UPDATE: 'FAILED_TO_UPDATE' as const,
   FAILED_TO_UPDATE_PARENT_PRODUCT_VARIANT_PRICE: 'FAILED_TO_UPDATE_PARENT_PRODUCT_VARIANT_PRICE' as const,
   UPDATE_PARENT_VARIANT_PRICE_REQUIRED: 'UPDATE_PARENT_VARIANT_PRICE_REQUIRED' as const,
   PRODUCT_VARIANTS_NOT_COMPONENTS: 'PRODUCT_VARIANTS_NOT_COMPONENTS' as const,
   PRODUCT_EXPANDER_APP_OWNERSHIP_ALREADY_EXISTS: 'PRODUCT_EXPANDER_APP_OWNERSHIP_ALREADY_EXISTS' as const,
   UNSUPPORTED_MULTIPACK_RELATIONSHIP: 'UNSUPPORTED_MULTIPACK_RELATIONSHIP' as const,
   PARENT_PRODUCT_VARIANT_CANNOT_BE_GIFT_CARD: 'PARENT_PRODUCT_VARIANT_CANNOT_BE_GIFT_CARD' as const,
   PARENT_PRODUCT_VARIANT_CANNOT_REQUIRE_SELLING_PLAN: 'PARENT_PRODUCT_VARIANT_CANNOT_REQUIRE_SELLING_PLAN' as const
}

export const enumProductVariantSortKeys = {
   TITLE: 'TITLE' as const,
   NAME: 'NAME' as const,
   SKU: 'SKU' as const,
   INVENTORY_QUANTITY: 'INVENTORY_QUANTITY' as const,
   INVENTORY_MANAGEMENT: 'INVENTORY_MANAGEMENT' as const,
   INVENTORY_LEVELS_AVAILABLE: 'INVENTORY_LEVELS_AVAILABLE' as const,
   INVENTORY_POLICY: 'INVENTORY_POLICY' as const,
   FULL_TITLE: 'FULL_TITLE' as const,
   POPULAR: 'POPULAR' as const,
   POSITION: 'POSITION' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumProductVariantsBulkCreateUserErrorCode = {
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   NO_KEY_ON_CREATE: 'NO_KEY_ON_CREATE' as const,
   VARIANT_ALREADY_EXISTS: 'VARIANT_ALREADY_EXISTS' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   NEED_TO_ADD_OPTION_VALUES: 'NEED_TO_ADD_OPTION_VALUES' as const,
   OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS: 'OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS' as const,
   TOO_MANY_INVENTORY_LOCATIONS: 'TOO_MANY_INVENTORY_LOCATIONS' as const,
   SUBSCRIPTION_VIOLATION: 'SUBSCRIPTION_VIOLATION' as const,
   VARIANT_ALREADY_EXISTS_CHANGE_OPTION_VALUE: 'VARIANT_ALREADY_EXISTS_CHANGE_OPTION_VALUE' as const,
   TRACKED_VARIANT_LOCATION_NOT_FOUND: 'TRACKED_VARIANT_LOCATION_NOT_FOUND' as const,
   MUST_BE_FOR_THIS_PRODUCT: 'MUST_BE_FOR_THIS_PRODUCT' as const,
   NOT_DEFINED_FOR_SHOP: 'NOT_DEFINED_FOR_SHOP' as const,
   INVALID: 'INVALID' as const,
   NEGATIVE_PRICE_VALUE: 'NEGATIVE_PRICE_VALUE' as const
}

export const enumProductVariantsBulkDeleteUserErrorCode = {
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   CANNOT_DELETE_LAST_VARIANT: 'CANNOT_DELETE_LAST_VARIANT' as const,
   AT_LEAST_ONE_VARIANT_DOES_NOT_BELONG_TO_THE_PRODUCT: 'AT_LEAST_ONE_VARIANT_DOES_NOT_BELONG_TO_THE_PRODUCT' as const
}

export const enumProductVariantsBulkReorderUserErrorCode = {
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   MISSING_VARIANT: 'MISSING_VARIANT' as const,
   INVALID_POSITION: 'INVALID_POSITION' as const,
   DUPLICATED_VARIANT_ID: 'DUPLICATED_VARIANT_ID' as const
}

export const enumProductVariantsBulkUpdateUserErrorCode = {
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   PRODUCT_VARIANT_ID_MISSING: 'PRODUCT_VARIANT_ID_MISSING' as const,
   PRODUCT_VARIANT_DOES_NOT_EXIST: 'PRODUCT_VARIANT_DOES_NOT_EXIST' as const,
   NO_INVENTORY_QUANTITIES_ON_VARIANTS_UPDATE: 'NO_INVENTORY_QUANTITIES_ON_VARIANTS_UPDATE' as const,
   VARIANT_ALREADY_EXISTS: 'VARIANT_ALREADY_EXISTS' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   NEED_TO_ADD_OPTION_VALUES: 'NEED_TO_ADD_OPTION_VALUES' as const,
   OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS: 'OPTION_VALUES_FOR_NUMBER_OF_UNKNOWN_OPTIONS' as const,
   SUBSCRIPTION_VIOLATION: 'SUBSCRIPTION_VIOLATION' as const,
   NO_INVENTORY_QUANTITES_DURING_UPDATE: 'NO_INVENTORY_QUANTITES_DURING_UPDATE' as const,
   NEGATIVE_PRICE_VALUE: 'NEGATIVE_PRICE_VALUE' as const
}

export const enumProfileItemSortKeys = {
   TITLE: 'TITLE' as const,
   PRODUCT_TYPE: 'PRODUCT_TYPE' as const,
   VENDOR: 'VENDOR' as const,
   INVENTORY_TOTAL: 'INVENTORY_TOTAL' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   CREATED_AT: 'CREATED_AT' as const,
   PUBLISHED_AT: 'PUBLISHED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumPubSubWebhookSubscriptionCreateUserErrorCode = {
   INVALID_PARAMETERS: 'INVALID_PARAMETERS' as const
}

export const enumPubSubWebhookSubscriptionUpdateUserErrorCode = {
   INVALID_PARAMETERS: 'INVALID_PARAMETERS' as const
}

export const enumPublicationCreateInputPublicationDefaultState = {
   EMPTY: 'EMPTY' as const,
   ALL_PRODUCTS: 'ALL_PRODUCTS' as const
}

export const enumPublicationUserErrorCode = {
   UNSUPPORTED_PUBLICATION_ACTION: 'UNSUPPORTED_PUBLICATION_ACTION' as const,
   PUBLICATION_NOT_FOUND: 'PUBLICATION_NOT_FOUND' as const,
   PUBLICATION_LOCKED: 'PUBLICATION_LOCKED' as const,
   UNSUPPORTED_PUBLISHABLE_TYPE: 'UNSUPPORTED_PUBLISHABLE_TYPE' as const,
   INVALID_PUBLISHABLE_ID: 'INVALID_PUBLISHABLE_ID' as const,
   MARKET_NOT_FOUND: 'MARKET_NOT_FOUND' as const,
   CATALOG_NOT_FOUND: 'CATALOG_NOT_FOUND' as const,
   CANNOT_MODIFY_APP_CATALOG_PUBLICATION: 'CANNOT_MODIFY_APP_CATALOG_PUBLICATION' as const,
   CANNOT_MODIFY_MARKET_CATALOG_PUBLICATION: 'CANNOT_MODIFY_MARKET_CATALOG_PUBLICATION' as const,
   CANNOT_MODIFY_APP_CATALOG: 'CANNOT_MODIFY_APP_CATALOG' as const,
   CANNOT_MODIFY_MARKET_CATALOG: 'CANNOT_MODIFY_MARKET_CATALOG' as const,
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   BLANK: 'BLANK' as const,
   PRODUCT_TYPE_INCOMPATIBLE_WITH_CATALOG_TYPE: 'PRODUCT_TYPE_INCOMPATIBLE_WITH_CATALOG_TYPE' as const,
   PUBLICATION_UPDATE_LIMIT_EXCEEDED: 'PUBLICATION_UPDATE_LIMIT_EXCEEDED' as const
}

export const enumQuantityRuleOriginType = {
   FIXED: 'FIXED' as const,
   RELATIVE: 'RELATIVE' as const
}

export const enumQuantityRuleUserErrorCode = {
   BLANK: 'BLANK' as const,
   PRODUCT_VARIANT_DOES_NOT_EXIST: 'PRODUCT_VARIANT_DOES_NOT_EXIST' as const,
   PRICE_LIST_DOES_NOT_EXIST: 'PRICE_LIST_DOES_NOT_EXIST' as const,
   VARIANT_QUANTITY_RULE_DOES_NOT_EXIST: 'VARIANT_QUANTITY_RULE_DOES_NOT_EXIST' as const,
   MINIMUM_IS_GREATER_THAN_MAXIMUM: 'MINIMUM_IS_GREATER_THAN_MAXIMUM' as const,
   INCREMENT_IS_GREATER_THAN_MINIMUM: 'INCREMENT_IS_GREATER_THAN_MINIMUM' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   MAXIMUM_NOT_MULTIPLE_OF_INCREMENT: 'MAXIMUM_NOT_MULTIPLE_OF_INCREMENT' as const,
   MINIMUM_NOT_MULTIPLE_OF_INCREMENT: 'MINIMUM_NOT_MULTIPLE_OF_INCREMENT' as const,
   CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES: 'CATALOG_CONTEXT_DOES_NOT_SUPPORT_QUANTITY_RULES' as const,
   GENERIC_ERROR: 'GENERIC_ERROR' as const
}

export const enumRefundDutyRefundType = {
   PROPORTIONAL: 'PROPORTIONAL' as const,
   FULL: 'FULL' as const
}

export const enumRefundLineItemRestockType = {
   RETURN: 'RETURN' as const,
   CANCEL: 'CANCEL' as const,
   LEGACY_RESTOCK: 'LEGACY_RESTOCK' as const,
   NO_RESTOCK: 'NO_RESTOCK' as const
}

export const enumResourceAlertIcon = {
   CHECKMARK_CIRCLE: 'CHECKMARK_CIRCLE' as const,
   INFORMATION_CIRCLE: 'INFORMATION_CIRCLE' as const
}

export const enumResourceAlertSeverity = {
   DEFAULT: 'DEFAULT' as const,
   INFO: 'INFO' as const,
   WARNING: 'WARNING' as const,
   SUCCESS: 'SUCCESS' as const,
   CRITICAL: 'CRITICAL' as const,
   ERROR: 'ERROR' as const
}

export const enumResourceFeedbackState = {
   ACCEPTED: 'ACCEPTED' as const,
   REQUIRES_ACTION: 'REQUIRES_ACTION' as const
}

export const enumResourceOperationStatus = {
   CREATED: 'CREATED' as const,
   ACTIVE: 'ACTIVE' as const,
   COMPLETE: 'COMPLETE' as const
}

export const enumReturnDeclineReason = {
   RETURN_PERIOD_ENDED: 'RETURN_PERIOD_ENDED' as const,
   FINAL_SALE: 'FINAL_SALE' as const,
   OTHER: 'OTHER' as const
}

export const enumReturnErrorCode = {
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const,
   TOO_MANY_ARGUMENTS: 'TOO_MANY_ARGUMENTS' as const,
   BLANK: 'BLANK' as const,
   EQUAL_TO: 'EQUAL_TO' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   INCLUSION: 'INCLUSION' as const,
   INVALID: 'INVALID' as const,
   LESS_THAN: 'LESS_THAN' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const,
   NOT_A_NUMBER: 'NOT_A_NUMBER' as const,
   PRESENT: 'PRESENT' as const,
   TAKEN: 'TAKEN' as const,
   TOO_BIG: 'TOO_BIG' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   WRONG_LENGTH: 'WRONG_LENGTH' as const,
   ALREADY_EXISTS: 'ALREADY_EXISTS' as const,
   CREATION_FAILED: 'CREATION_FAILED' as const,
   FEATURE_NOT_ENABLED: 'FEATURE_NOT_ENABLED' as const,
   INVALID_STATE: 'INVALID_STATE' as const,
   NOTIFICATION_FAILED: 'NOTIFICATION_FAILED' as const,
   NOT_EDITABLE: 'NOT_EDITABLE' as const,
   NOT_FOUND: 'NOT_FOUND' as const
}

export const enumReturnReason = {
   SIZE_TOO_SMALL: 'SIZE_TOO_SMALL' as const,
   SIZE_TOO_LARGE: 'SIZE_TOO_LARGE' as const,
   UNWANTED: 'UNWANTED' as const,
   NOT_AS_DESCRIBED: 'NOT_AS_DESCRIBED' as const,
   WRONG_ITEM: 'WRONG_ITEM' as const,
   DEFECTIVE: 'DEFECTIVE' as const,
   STYLE: 'STYLE' as const,
   COLOR: 'COLOR' as const,
   OTHER: 'OTHER' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumReturnStatus = {
   CANCELED: 'CANCELED' as const,
   CLOSED: 'CLOSED' as const,
   OPEN: 'OPEN' as const,
   REQUESTED: 'REQUESTED' as const,
   DECLINED: 'DECLINED' as const
}

export const enumReverseFulfillmentOrderDispositionType = {
   RESTOCKED: 'RESTOCKED' as const,
   PROCESSING_REQUIRED: 'PROCESSING_REQUIRED' as const,
   NOT_RESTOCKED: 'NOT_RESTOCKED' as const,
   MISSING: 'MISSING' as const
}

export const enumReverseFulfillmentOrderStatus = {
   CANCELED: 'CANCELED' as const,
   CLOSED: 'CLOSED' as const,
   OPEN: 'OPEN' as const
}

export const enumReverseFulfillmentOrderThirdPartyConfirmationStatus = {
   ACCEPTED: 'ACCEPTED' as const,
   CANCEL_ACCEPTED: 'CANCEL_ACCEPTED' as const,
   CANCEL_REJECTED: 'CANCEL_REJECTED' as const,
   PENDING_ACCEPTANCE: 'PENDING_ACCEPTANCE' as const,
   PENDING_CANCELATION: 'PENDING_CANCELATION' as const,
   REJECTED: 'REJECTED' as const
}

export const enumSaleActionType = {
   ORDER: 'ORDER' as const,
   RETURN: 'RETURN' as const,
   UPDATE: 'UPDATE' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumSaleLineType = {
   PRODUCT: 'PRODUCT' as const,
   TIP: 'TIP' as const,
   GIFT_CARD: 'GIFT_CARD' as const,
   SHIPPING: 'SHIPPING' as const,
   DUTY: 'DUTY' as const,
   ADDITIONAL_FEE: 'ADDITIONAL_FEE' as const,
   UNKNOWN: 'UNKNOWN' as const,
   ADJUSTMENT: 'ADJUSTMENT' as const
}

export const enumScriptTagDisplayScope = {
   ALL: 'ALL' as const,
   ORDER_STATUS: 'ORDER_STATUS' as const,
   ONLINE_STORE: 'ONLINE_STORE' as const
}

export const enumSearchResultType = {
   CUSTOMER: 'CUSTOMER' as const,
   DRAFT_ORDER: 'DRAFT_ORDER' as const,
   PRODUCT: 'PRODUCT' as const,
   COLLECTION: 'COLLECTION' as const,
   FILE: 'FILE' as const,
   ONLINE_STORE_PAGE: 'ONLINE_STORE_PAGE' as const,
   ONLINE_STORE_BLOG: 'ONLINE_STORE_BLOG' as const,
   ONLINE_STORE_ARTICLE: 'ONLINE_STORE_ARTICLE' as const,
   URL_REDIRECT: 'URL_REDIRECT' as const,
   PRICE_RULE: 'PRICE_RULE' as const,
   DISCOUNT_REDEEM_CODE: 'DISCOUNT_REDEEM_CODE' as const,
   ORDER: 'ORDER' as const
}

export const enumSegmentSortKeys = {
   CREATION_DATE: 'CREATION_DATE' as const,
   LAST_EDIT_DATE: 'LAST_EDIT_DATE' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumSellingPlanAnchorType = {
   WEEKDAY: 'WEEKDAY' as const,
   MONTHDAY: 'MONTHDAY' as const,
   YEARDAY: 'YEARDAY' as const
}

export const enumSellingPlanCategory = {
   OTHER: 'OTHER' as const,
   PRE_ORDER: 'PRE_ORDER' as const,
   SUBSCRIPTION: 'SUBSCRIPTION' as const,
   TRY_BEFORE_YOU_BUY: 'TRY_BEFORE_YOU_BUY' as const
}

export const enumSellingPlanCheckoutChargeType = {
   PERCENTAGE: 'PERCENTAGE' as const,
   PRICE: 'PRICE' as const
}

export const enumSellingPlanFixedDeliveryPolicyIntent = {
   FULFILLMENT_BEGIN: 'FULFILLMENT_BEGIN' as const
}

export const enumSellingPlanFixedDeliveryPolicyPreAnchorBehavior = {
   ASAP: 'ASAP' as const,
   NEXT: 'NEXT' as const
}

export const enumSellingPlanFulfillmentTrigger = {
   ANCHOR: 'ANCHOR' as const,
   ASAP: 'ASAP' as const,
   EXACT_TIME: 'EXACT_TIME' as const,
   UNKNOWN: 'UNKNOWN' as const
}

export const enumSellingPlanGroupSortKeys = {
   NAME: 'NAME' as const,
   UPDATED_AT: 'UPDATED_AT' as const,
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumSellingPlanGroupUserErrorCode = {
   BLANK: 'BLANK' as const,
   EQUAL_TO: 'EQUAL_TO' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   INCLUSION: 'INCLUSION' as const,
   INVALID: 'INVALID' as const,
   LESS_THAN: 'LESS_THAN' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const,
   NOT_A_NUMBER: 'NOT_A_NUMBER' as const,
   NOT_FOUND: 'NOT_FOUND' as const,
   PRESENT: 'PRESENT' as const,
   TAKEN: 'TAKEN' as const,
   TOO_BIG: 'TOO_BIG' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const,
   WRONG_LENGTH: 'WRONG_LENGTH' as const,
   SELLING_PLAN_COUNT_UPPER_BOUND: 'SELLING_PLAN_COUNT_UPPER_BOUND' as const,
   SELLING_PLAN_COUNT_LOWER_BOUND: 'SELLING_PLAN_COUNT_LOWER_BOUND' as const,
   SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES: 'SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES' as const,
   SELLING_PLAN_BILLING_AND_DELIVERY_POLICY_ANCHORS_MUST_BE_EQUAL: 'SELLING_PLAN_BILLING_AND_DELIVERY_POLICY_ANCHORS_MUST_BE_EQUAL' as const,
   SELLING_PLAN_BILLING_CYCLE_MUST_BE_A_MULTIPLE_OF_DELIVERY_CYCLE: 'SELLING_PLAN_BILLING_CYCLE_MUST_BE_A_MULTIPLE_OF_DELIVERY_CYCLE' as const,
   SELLING_PLAN_PRICING_POLICIES_MUST_CONTAIN_A_FIXED_PRICING_POLICY: 'SELLING_PLAN_PRICING_POLICIES_MUST_CONTAIN_A_FIXED_PRICING_POLICY' as const,
   SELLING_PLAN_MISSING_OPTION2_LABEL_ON_PARENT_GROUP: 'SELLING_PLAN_MISSING_OPTION2_LABEL_ON_PARENT_GROUP' as const,
   SELLING_PLAN_MISSING_OPTION3_LABEL_ON_PARENT_GROUP: 'SELLING_PLAN_MISSING_OPTION3_LABEL_ON_PARENT_GROUP' as const,
   SELLING_PLAN_OPTION2_REQUIRED_AS_DEFINED_ON_PARENT_GROUP: 'SELLING_PLAN_OPTION2_REQUIRED_AS_DEFINED_ON_PARENT_GROUP' as const,
   SELLING_PLAN_OPTION3_REQUIRED_AS_DEFINED_ON_PARENT_GROUP: 'SELLING_PLAN_OPTION3_REQUIRED_AS_DEFINED_ON_PARENT_GROUP' as const,
   SELLING_PLAN_PRICING_POLICIES_LIMIT: 'SELLING_PLAN_PRICING_POLICIES_LIMIT' as const,
   RESOURCE_LIST_CONTAINS_INVALID_IDS: 'RESOURCE_LIST_CONTAINS_INVALID_IDS' as const,
   PRODUCT_VARIANT_DOES_NOT_EXIST: 'PRODUCT_VARIANT_DOES_NOT_EXIST' as const,
   PRODUCT_DOES_NOT_EXIST: 'PRODUCT_DOES_NOT_EXIST' as const,
   GROUP_DOES_NOT_EXIST: 'GROUP_DOES_NOT_EXIST' as const,
   GROUP_COULD_NOT_BE_DELETED: 'GROUP_COULD_NOT_BE_DELETED' as const,
   ERROR_ADDING_RESOURCE_TO_GROUP: 'ERROR_ADDING_RESOURCE_TO_GROUP' as const,
   SELLING_PLAN_DELIVERY_POLICY_MISSING: 'SELLING_PLAN_DELIVERY_POLICY_MISSING' as const,
   SELLING_PLAN_BILLING_POLICY_MISSING: 'SELLING_PLAN_BILLING_POLICY_MISSING' as const,
   PLAN_DOES_NOT_EXIST: 'PLAN_DOES_NOT_EXIST' as const,
   PLAN_ID_MUST_BE_SPECIFIED_TO_UPDATE: 'PLAN_ID_MUST_BE_SPECIFIED_TO_UPDATE' as const,
   ONLY_NEED_ONE_BILLING_POLICY_TYPE: 'ONLY_NEED_ONE_BILLING_POLICY_TYPE' as const,
   ONLY_NEED_ONE_DELIVERY_POLICY_TYPE: 'ONLY_NEED_ONE_DELIVERY_POLICY_TYPE' as const,
   ONLY_NEED_ONE_PRICING_POLICY_TYPE: 'ONLY_NEED_ONE_PRICING_POLICY_TYPE' as const,
   BILLING_AND_DELIVERY_POLICY_TYPES_MUST_BE_THE_SAME: 'BILLING_AND_DELIVERY_POLICY_TYPES_MUST_BE_THE_SAME' as const,
   ONLY_NEED_ONE_PRICING_POLICY_VALUE: 'ONLY_NEED_ONE_PRICING_POLICY_VALUE' as const,
   PRICING_POLICY_ADJUSTMENT_VALUE_AND_TYPE_MUST_MATCH: 'PRICING_POLICY_ADJUSTMENT_VALUE_AND_TYPE_MUST_MATCH' as const,
   SELLING_PLAN_DUPLICATE_NAME: 'SELLING_PLAN_DUPLICATE_NAME' as const,
   SELLING_PLAN_DUPLICATE_OPTIONS: 'SELLING_PLAN_DUPLICATE_OPTIONS' as const,
   SELLING_PLAN_FIXED_PRICING_POLICIES_LIMIT: 'SELLING_PLAN_FIXED_PRICING_POLICIES_LIMIT' as const,
   REMAINING_BALANCE_CHARGE_EXACT_TIME_REQUIRED: 'REMAINING_BALANCE_CHARGE_EXACT_TIME_REQUIRED' as const,
   CHECKOUT_CHARGE_VALUE_AND_TYPE_MUST_MATCH: 'CHECKOUT_CHARGE_VALUE_AND_TYPE_MUST_MATCH' as const,
   ONLY_NEED_ONE_CHECKOUT_CHARGE_VALUE: 'ONLY_NEED_ONE_CHECKOUT_CHARGE_VALUE' as const,
   REMAINING_BALANCE_CHARGE_EXACT_TIME_NOT_ALLOWED: 'REMAINING_BALANCE_CHARGE_EXACT_TIME_NOT_ALLOWED' as const,
   REMAINING_BALANCE_CHARGE_TIME_AFTER_CHECKOUT_MUST_BE_GREATER_THAN_ZERO: 'REMAINING_BALANCE_CHARGE_TIME_AFTER_CHECKOUT_MUST_BE_GREATER_THAN_ZERO' as const,
   REMAINING_BALANCE_CHARGE_TRIGGER_ON_FULL_CHECKOUT: 'REMAINING_BALANCE_CHARGE_TRIGGER_ON_FULL_CHECKOUT' as const,
   REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PARTIAL_PERCENTAGE_CHECKOUT_CHARGE: 'REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PARTIAL_PERCENTAGE_CHECKOUT_CHARGE' as const,
   REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PRICE_CHECKOUT_CHARGE: 'REMAINING_BALANCE_CHARGE_TRIGGER_NO_REMAINING_BALANCE_ON_PRICE_CHECKOUT_CHARGE' as const,
   FULFILLMENT_EXACT_TIME_REQUIRED: 'FULFILLMENT_EXACT_TIME_REQUIRED' as const,
   FULFILLMENT_EXACT_TIME_NOT_ALLOWED: 'FULFILLMENT_EXACT_TIME_NOT_ALLOWED' as const,
   SELLING_PLAN_ANCHORS_NOT_ALLOWED: 'SELLING_PLAN_ANCHORS_NOT_ALLOWED' as const,
   SELLING_PLAN_ANCHORS_REQUIRED: 'SELLING_PLAN_ANCHORS_REQUIRED' as const,
   ONLY_ONE_OF_FIXED_OR_RECURRING_BILLING: 'ONLY_ONE_OF_FIXED_OR_RECURRING_BILLING' as const,
   ONLY_ONE_OF_FIXED_OR_RECURRING_DELIVERY: 'ONLY_ONE_OF_FIXED_OR_RECURRING_DELIVERY' as const
}

export const enumSellingPlanInterval = {
   DAY: 'DAY' as const,
   WEEK: 'WEEK' as const,
   MONTH: 'MONTH' as const,
   YEAR: 'YEAR' as const
}

export const enumSellingPlanPricingPolicyAdjustmentType = {
   PERCENTAGE: 'PERCENTAGE' as const,
   FIXED_AMOUNT: 'FIXED_AMOUNT' as const,
   PRICE: 'PRICE' as const
}

export const enumSellingPlanRecurringDeliveryPolicyIntent = {
   FULFILLMENT_BEGIN: 'FULFILLMENT_BEGIN' as const
}

export const enumSellingPlanRecurringDeliveryPolicyPreAnchorBehavior = {
   ASAP: 'ASAP' as const,
   NEXT: 'NEXT' as const
}

export const enumSellingPlanRemainingBalanceChargeTrigger = {
   NO_REMAINING_BALANCE: 'NO_REMAINING_BALANCE' as const,
   EXACT_TIME: 'EXACT_TIME' as const,
   TIME_AFTER_CHECKOUT: 'TIME_AFTER_CHECKOUT' as const
}

export const enumSellingPlanReserve = {
   ON_FULFILLMENT: 'ON_FULFILLMENT' as const,
   ON_SALE: 'ON_SALE' as const
}

export const enumServerPixelStatus = {
   CONNECTED: 'CONNECTED' as const,
   DISCONNECTED_UNCONFIGURED: 'DISCONNECTED_UNCONFIGURED' as const,
   DISCONNECTED_CONFIGURED: 'DISCONNECTED_CONFIGURED' as const
}

export const enumShippingDiscountClass = {
   SHIPPING: 'SHIPPING' as const
}

export const enumShippingPackageType = {
   BOX: 'BOX' as const,
   FLAT_RATE: 'FLAT_RATE' as const,
   ENVELOPE: 'ENVELOPE' as const,
   SOFT_PACK: 'SOFT_PACK' as const
}

export const enumShopBranding = {
   SHOPIFY_GOLD: 'SHOPIFY_GOLD' as const,
   SHOPIFY_PLUS: 'SHOPIFY_PLUS' as const,
   ROGERS: 'ROGERS' as const,
   SHOPIFY: 'SHOPIFY' as const
}

export const enumShopCustomerAccountsSetting = {
   REQUIRED: 'REQUIRED' as const,
   OPTIONAL: 'OPTIONAL' as const,
   DISABLED: 'DISABLED' as const
}

export const enumShopPolicyErrorCode = {
   TOO_BIG: 'TOO_BIG' as const
}

export const enumShopPolicyType = {
   REFUND_POLICY: 'REFUND_POLICY' as const,
   SHIPPING_POLICY: 'SHIPPING_POLICY' as const,
   PRIVACY_POLICY: 'PRIVACY_POLICY' as const,
   TERMS_OF_SERVICE: 'TERMS_OF_SERVICE' as const,
   TERMS_OF_SALE: 'TERMS_OF_SALE' as const,
   LEGAL_NOTICE: 'LEGAL_NOTICE' as const,
   SUBSCRIPTION_POLICY: 'SUBSCRIPTION_POLICY' as const,
   CONTACT_INFORMATION: 'CONTACT_INFORMATION' as const
}

export const enumShopResourceFeedbackCreateUserErrorCode = {
   OUTDATED_FEEDBACK: 'OUTDATED_FEEDBACK' as const,
   INVALID: 'INVALID' as const,
   BLANK: 'BLANK' as const,
   PRESENT: 'PRESENT' as const
}

export const enumShopTagSort = {
   ALPHABETICAL: 'ALPHABETICAL' as const,
   POPULAR: 'POPULAR' as const
}

export const enumShopifyPaymentsBankAccountStatus = {
   NEW: 'NEW' as const,
   VALIDATED: 'VALIDATED' as const,
   VERIFIED: 'VERIFIED' as const,
   ERRORED: 'ERRORED' as const
}

export const enumShopifyPaymentsDisputeEvidenceFileType = {
   CUSTOMER_COMMUNICATION_FILE: 'CUSTOMER_COMMUNICATION_FILE' as const,
   REFUND_POLICY_FILE: 'REFUND_POLICY_FILE' as const,
   CANCELLATION_POLICY_FILE: 'CANCELLATION_POLICY_FILE' as const,
   UNCATEGORIZED_FILE: 'UNCATEGORIZED_FILE' as const,
   SHIPPING_DOCUMENTATION_FILE: 'SHIPPING_DOCUMENTATION_FILE' as const,
   SERVICE_DOCUMENTATION_FILE: 'SERVICE_DOCUMENTATION_FILE' as const
}

export const enumShopifyPaymentsDisputeReason = {
   FRAUDULENT: 'FRAUDULENT' as const,
   GENERAL: 'GENERAL' as const,
   UNRECOGNIZED: 'UNRECOGNIZED' as const,
   DUPLICATE: 'DUPLICATE' as const,
   SUBSCRIPTION_CANCELLED: 'SUBSCRIPTION_CANCELLED' as const,
   PRODUCT_UNACCEPTABLE: 'PRODUCT_UNACCEPTABLE' as const,
   PRODUCT_NOT_RECEIVED: 'PRODUCT_NOT_RECEIVED' as const,
   CREDIT_NOT_PROCESSED: 'CREDIT_NOT_PROCESSED' as const,
   INCORRECT_ACCOUNT_DETAILS: 'INCORRECT_ACCOUNT_DETAILS' as const,
   INSUFFICIENT_FUNDS: 'INSUFFICIENT_FUNDS' as const,
   BANK_CANNOT_PROCESS: 'BANK_CANNOT_PROCESS' as const,
   DEBIT_NOT_AUTHORIZED: 'DEBIT_NOT_AUTHORIZED' as const,
   CUSTOMER_INITIATED: 'CUSTOMER_INITIATED' as const
}

export const enumShopifyPaymentsPayoutInterval = {
   DAILY: 'DAILY' as const,
   WEEKLY: 'WEEKLY' as const,
   MONTHLY: 'MONTHLY' as const,
   MANUAL: 'MANUAL' as const
}

export const enumShopifyPaymentsPayoutStatus = {
   SCHEDULED: 'SCHEDULED' as const,
   IN_TRANSIT: 'IN_TRANSIT' as const,
   PAID: 'PAID' as const,
   FAILED: 'FAILED' as const,
   CANCELED: 'CANCELED' as const
}

export const enumShopifyPaymentsPayoutTransactionType = {
   DEPOSIT: 'DEPOSIT' as const,
   WITHDRAWAL: 'WITHDRAWAL' as const
}

export const enumShopifyPaymentsVerificationDocumentType = {
   DRIVERS_LICENSE: 'DRIVERS_LICENSE' as const,
   GOVERNMENT_IDENTIFICATION: 'GOVERNMENT_IDENTIFICATION' as const,
   PASSPORT: 'PASSPORT' as const
}

export const enumShopifyPaymentsVerificationStatus = {
   VERIFIED: 'VERIFIED' as const,
   UNVERIFIED: 'UNVERIFIED' as const,
   PENDING: 'PENDING' as const
}

export const enumStaffMemberDefaultImage = {
   DEFAULT: 'DEFAULT' as const,
   TRANSPARENT: 'TRANSPARENT' as const,
   NOT_FOUND: 'NOT_FOUND' as const
}

export const enumStaffMemberPermission = {
   APPLICATIONS: 'APPLICATIONS' as const,
   CHANNELS: 'CHANNELS' as const,
   CUSTOMERS: 'CUSTOMERS' as const,
   DASHBOARD: 'DASHBOARD' as const,
   DOMAINS: 'DOMAINS' as const,
   DRAFT_ORDERS: 'DRAFT_ORDERS' as const,
   EDIT_ORDERS: 'EDIT_ORDERS' as const,
   FULL: 'FULL' as const,
   GIFT_CARDS: 'GIFT_CARDS' as const,
   LINKS: 'LINKS' as const,
   LOCATIONS: 'LOCATIONS' as const,
   MARKETING: 'MARKETING' as const,
   MARKETING_SECTION: 'MARKETING_SECTION' as const,
   ORDERS: 'ORDERS' as const,
   OVERVIEWS: 'OVERVIEWS' as const,
   PAGES: 'PAGES' as const,
   PAY_ORDERS_BY_VAULTED_CARD: 'PAY_ORDERS_BY_VAULTED_CARD' as const,
   PREFERENCES: 'PREFERENCES' as const,
   PRODUCTS: 'PRODUCTS' as const,
   REPORTS: 'REPORTS' as const,
   THEMES: 'THEMES' as const,
   TRANSLATIONS: 'TRANSLATIONS' as const
}

export const enumStagedUploadHttpMethodType = {
   POST: 'POST' as const,
   PUT: 'PUT' as const
}

export const enumStagedUploadTargetGenerateUploadResource = {
   COLLECTION_IMAGE: 'COLLECTION_IMAGE' as const,
   FILE: 'FILE' as const,
   IMAGE: 'IMAGE' as const,
   MODEL_3D: 'MODEL_3D' as const,
   PRODUCT_IMAGE: 'PRODUCT_IMAGE' as const,
   SHOP_IMAGE: 'SHOP_IMAGE' as const,
   VIDEO: 'VIDEO' as const,
   BULK_MUTATION_VARIABLES: 'BULK_MUTATION_VARIABLES' as const,
   RETURN_LABEL: 'RETURN_LABEL' as const,
   URL_REDIRECT_IMPORT: 'URL_REDIRECT_IMPORT' as const
}

export const enumStandardMetafieldDefinitionEnableUserErrorCode = {
   INVALID: 'INVALID' as const,
   TAKEN: 'TAKEN' as const,
   TEMPLATE_NOT_FOUND: 'TEMPLATE_NOT_FOUND' as const,
   LIMIT_EXCEEDED: 'LIMIT_EXCEEDED' as const,
   UNSTRUCTURED_ALREADY_EXISTS: 'UNSTRUCTURED_ALREADY_EXISTS' as const,
   TYPE_NOT_ALLOWED_FOR_CONDITIONS: 'TYPE_NOT_ALLOWED_FOR_CONDITIONS' as const
}

export const enumSubscriptionBillingAttemptErrorCode = {
   PAYMENT_METHOD_NOT_FOUND: 'PAYMENT_METHOD_NOT_FOUND' as const,
   PAYMENT_PROVIDER_IS_NOT_ENABLED: 'PAYMENT_PROVIDER_IS_NOT_ENABLED' as const,
   INVALID_PAYMENT_METHOD: 'INVALID_PAYMENT_METHOD' as const,
   UNEXPECTED_ERROR: 'UNEXPECTED_ERROR' as const,
   EXPIRED_PAYMENT_METHOD: 'EXPIRED_PAYMENT_METHOD' as const,
   PAYMENT_METHOD_DECLINED: 'PAYMENT_METHOD_DECLINED' as const,
   AUTHENTICATION_ERROR: 'AUTHENTICATION_ERROR' as const,
   TEST_MODE: 'TEST_MODE' as const,
   BUYER_CANCELED_PAYMENT_METHOD: 'BUYER_CANCELED_PAYMENT_METHOD' as const,
   CUSTOMER_NOT_FOUND: 'CUSTOMER_NOT_FOUND' as const,
   CUSTOMER_INVALID: 'CUSTOMER_INVALID' as const,
   INVALID_SHIPPING_ADDRESS: 'INVALID_SHIPPING_ADDRESS' as const,
   INVALID_CUSTOMER_BILLING_AGREEMENT: 'INVALID_CUSTOMER_BILLING_AGREEMENT' as const,
   INVOICE_ALREADY_PAID: 'INVOICE_ALREADY_PAID' as const,
   PAYMENT_METHOD_INCOMPATIBLE_WITH_GATEWAY_CONFIG: 'PAYMENT_METHOD_INCOMPATIBLE_WITH_GATEWAY_CONFIG' as const,
   AMOUNT_TOO_SMALL: 'AMOUNT_TOO_SMALL' as const,
   INVENTORY_ALLOCATIONS_NOT_FOUND: 'INVENTORY_ALLOCATIONS_NOT_FOUND' as const,
   TRANSIENT_ERROR: 'TRANSIENT_ERROR' as const
}

export const enumSubscriptionBillingAttemptsSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumSubscriptionBillingCycleBillingCycleStatus = {
   BILLED: 'BILLED' as const,
   UNBILLED: 'UNBILLED' as const
}

export const enumSubscriptionBillingCycleErrorCode = {
   INVALID: 'INVALID' as const,
   CYCLE_NOT_FOUND: 'CYCLE_NOT_FOUND' as const,
   NO_CYCLE_EDITS: 'NO_CYCLE_EDITS' as const,
   INVALID_CYCLE_INDEX: 'INVALID_CYCLE_INDEX' as const,
   INVALID_DATE: 'INVALID_DATE' as const,
   EMPTY_BILLING_CYCLE_EDIT_SCHEDULE_INPUT: 'EMPTY_BILLING_CYCLE_EDIT_SCHEDULE_INPUT' as const,
   BILLING_DATE_SET_ON_SKIPPED: 'BILLING_DATE_SET_ON_SKIPPED' as const,
   OUT_OF_BOUNDS: 'OUT_OF_BOUNDS' as const,
   UPCOMING_CYCLE_LIMIT_EXCEEDED: 'UPCOMING_CYCLE_LIMIT_EXCEEDED' as const,
   CYCLE_INDEX_OUT_OF_RANGE: 'CYCLE_INDEX_OUT_OF_RANGE' as const,
   CYCLE_START_DATE_OUT_OF_RANGE: 'CYCLE_START_DATE_OUT_OF_RANGE' as const,
   INCOMPLETE_BILLING_ATTEMPTS: 'INCOMPLETE_BILLING_ATTEMPTS' as const
}

export const enumSubscriptionBillingCycleScheduleEditInputScheduleEditReason = {
   BUYER_INITIATED: 'BUYER_INITIATED' as const,
   MERCHANT_INITIATED: 'MERCHANT_INITIATED' as const,
   DEV_INITIATED: 'DEV_INITIATED' as const
}

export const enumSubscriptionBillingCyclesSortKeys = {
   CYCLE_INDEX: 'CYCLE_INDEX' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumSubscriptionBillingCyclesTargetSelection = {
   ALL: 'ALL' as const
}

export const enumSubscriptionContractErrorCode = {
   INVALID: 'INVALID' as const
}

export const enumSubscriptionContractLastPaymentStatus = {
   SUCCEEDED: 'SUCCEEDED' as const,
   FAILED: 'FAILED' as const
}

export const enumSubscriptionContractSubscriptionStatus = {
   ACTIVE: 'ACTIVE' as const,
   PAUSED: 'PAUSED' as const,
   CANCELLED: 'CANCELLED' as const,
   EXPIRED: 'EXPIRED' as const,
   FAILED: 'FAILED' as const,
   STALE: 'STALE' as const
}

export const enumSubscriptionDiscountRejectionReason = {
   NOT_FOUND: 'NOT_FOUND' as const,
   NO_ENTITLED_LINE_ITEMS: 'NO_ENTITLED_LINE_ITEMS' as const,
   QUANTITY_NOT_IN_RANGE: 'QUANTITY_NOT_IN_RANGE' as const,
   PURCHASE_NOT_IN_RANGE: 'PURCHASE_NOT_IN_RANGE' as const,
   CUSTOMER_NOT_ELIGIBLE: 'CUSTOMER_NOT_ELIGIBLE' as const,
   USAGE_LIMIT_REACHED: 'USAGE_LIMIT_REACHED' as const,
   CUSTOMER_USAGE_LIMIT_REACHED: 'CUSTOMER_USAGE_LIMIT_REACHED' as const,
   CURRENTLY_INACTIVE: 'CURRENTLY_INACTIVE' as const,
   NO_ENTITLED_SHIPPING_LINES: 'NO_ENTITLED_SHIPPING_LINES' as const,
   INCOMPATIBLE_PURCHASE_TYPE: 'INCOMPATIBLE_PURCHASE_TYPE' as const,
   INTERNAL_ERROR: 'INTERNAL_ERROR' as const
}

export const enumSubscriptionDraftErrorCode = {
   ALREADY_REMOVED: 'ALREADY_REMOVED' as const,
   PRESENCE: 'PRESENCE' as const,
   COMMITTED: 'COMMITTED' as const,
   NOT_IN_RANGE: 'NOT_IN_RANGE' as const,
   NOT_AN_INTEGER: 'NOT_AN_INTEGER' as const,
   SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES: 'SELLING_PLAN_MAX_CYCLES_MUST_BE_GREATER_THAN_MIN_CYCLES' as const,
   DELIVERY_MUST_BE_MULTIPLE_OF_BILLING: 'DELIVERY_MUST_BE_MULTIPLE_OF_BILLING' as const,
   INVALID_BILLING_DATE: 'INVALID_BILLING_DATE' as const,
   INVALID_NOTE_LENGTH: 'INVALID_NOTE_LENGTH' as const,
   INVALID_LINES: 'INVALID_LINES' as const,
   NO_ENTITLED_LINES: 'NO_ENTITLED_LINES' as const,
   CUSTOMER_DOES_NOT_EXIST: 'CUSTOMER_DOES_NOT_EXIST' as const,
   CUSTOMER_MISMATCH: 'CUSTOMER_MISMATCH' as const,
   DELIVERY_METHOD_REQUIRED: 'DELIVERY_METHOD_REQUIRED' as const,
   MISSING_LOCAL_DELIVERY_OPTIONS: 'MISSING_LOCAL_DELIVERY_OPTIONS' as const,
   CYCLE_DISCOUNTS_UNIQUE_AFTER_CYCLE: 'CYCLE_DISCOUNTS_UNIQUE_AFTER_CYCLE' as const,
   INVALID_ADJUSTMENT_TYPE: 'INVALID_ADJUSTMENT_TYPE' as const,
   INVALID_ADJUSTMENT_VALUE: 'INVALID_ADJUSTMENT_VALUE' as const,
   STALE_CONTRACT: 'STALE_CONTRACT' as const,
   CURRENCY_NOT_ENABLED: 'CURRENCY_NOT_ENABLED' as const,
   HAS_FUTURE_EDITS: 'HAS_FUTURE_EDITS' as const,
   BILLING_CYCLE_PRESENT: 'BILLING_CYCLE_PRESENT' as const,
   BILLING_CYCLE_ABSENT: 'BILLING_CYCLE_ABSENT' as const,
   BILLING_CYCLE_CONTRACT_DRAFT_DELIVERY_POLICY_INVALID: 'BILLING_CYCLE_CONTRACT_DRAFT_DELIVERY_POLICY_INVALID' as const,
   BILLING_CYCLE_CONTRACT_DRAFT_BILLING_POLICY_INVALID: 'BILLING_CYCLE_CONTRACT_DRAFT_BILLING_POLICY_INVALID' as const,
   CONCATENATION_BILLING_CYCLE_CONTRACT_DRAFT_REQUIRED: 'CONCATENATION_BILLING_CYCLE_CONTRACT_DRAFT_REQUIRED' as const,
   DUPLICATE_CONCATENATED_CONTRACTS: 'DUPLICATE_CONCATENATED_CONTRACTS' as const,
   UPCOMING_CYCLE_LIMIT_EXCEEDED: 'UPCOMING_CYCLE_LIMIT_EXCEEDED' as const,
   CYCLE_INDEX_OUT_OF_RANGE: 'CYCLE_INDEX_OUT_OF_RANGE' as const,
   CYCLE_START_DATE_OUT_OF_RANGE: 'CYCLE_START_DATE_OUT_OF_RANGE' as const,
   CYCLE_SELECTOR_VALIDATE_ONE_OF: 'CYCLE_SELECTOR_VALIDATE_ONE_OF' as const,
   EXCEEDED_MAX_CONCATENATED_CONTRACTS: 'EXCEEDED_MAX_CONCATENATED_CONTRACTS' as const,
   INVALID: 'INVALID' as const,
   BLANK: 'BLANK' as const,
   GREATER_THAN: 'GREATER_THAN' as const,
   GREATER_THAN_OR_EQUAL_TO: 'GREATER_THAN_OR_EQUAL_TO' as const,
   LESS_THAN: 'LESS_THAN' as const,
   LESS_THAN_OR_EQUAL_TO: 'LESS_THAN_OR_EQUAL_TO' as const,
   TOO_LONG: 'TOO_LONG' as const,
   TOO_SHORT: 'TOO_SHORT' as const
}

export const enumSuggestedOrderTransactionKind = {
   SUGGESTED_REFUND: 'SUGGESTED_REFUND' as const
}

export const enumTaxAppConfigureUserErrorCode = {
   TAX_PARTNER_NOT_FOUND: 'TAX_PARTNER_NOT_FOUND' as const,
   TAX_PARTNER_STATE_UPDATE_FAILED: 'TAX_PARTNER_STATE_UPDATE_FAILED' as const,
   TAX_PARTNER_ALREADY_ACTIVE: 'TAX_PARTNER_ALREADY_ACTIVE' as const
}

export const enumTaxExemption = {
   CA_STATUS_CARD_EXEMPTION: 'CA_STATUS_CARD_EXEMPTION' as const,
   CA_BC_RESELLER_EXEMPTION: 'CA_BC_RESELLER_EXEMPTION' as const,
   CA_MB_RESELLER_EXEMPTION: 'CA_MB_RESELLER_EXEMPTION' as const,
   CA_SK_RESELLER_EXEMPTION: 'CA_SK_RESELLER_EXEMPTION' as const,
   CA_DIPLOMAT_EXEMPTION: 'CA_DIPLOMAT_EXEMPTION' as const,
   CA_BC_COMMERCIAL_FISHERY_EXEMPTION: 'CA_BC_COMMERCIAL_FISHERY_EXEMPTION' as const,
   CA_MB_COMMERCIAL_FISHERY_EXEMPTION: 'CA_MB_COMMERCIAL_FISHERY_EXEMPTION' as const,
   CA_NS_COMMERCIAL_FISHERY_EXEMPTION: 'CA_NS_COMMERCIAL_FISHERY_EXEMPTION' as const,
   CA_PE_COMMERCIAL_FISHERY_EXEMPTION: 'CA_PE_COMMERCIAL_FISHERY_EXEMPTION' as const,
   CA_SK_COMMERCIAL_FISHERY_EXEMPTION: 'CA_SK_COMMERCIAL_FISHERY_EXEMPTION' as const,
   CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION: 'CA_BC_PRODUCTION_AND_MACHINERY_EXEMPTION' as const,
   CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION: 'CA_SK_PRODUCTION_AND_MACHINERY_EXEMPTION' as const,
   CA_BC_SUB_CONTRACTOR_EXEMPTION: 'CA_BC_SUB_CONTRACTOR_EXEMPTION' as const,
   CA_SK_SUB_CONTRACTOR_EXEMPTION: 'CA_SK_SUB_CONTRACTOR_EXEMPTION' as const,
   CA_BC_CONTRACTOR_EXEMPTION: 'CA_BC_CONTRACTOR_EXEMPTION' as const,
   CA_SK_CONTRACTOR_EXEMPTION: 'CA_SK_CONTRACTOR_EXEMPTION' as const,
   CA_ON_PURCHASE_EXEMPTION: 'CA_ON_PURCHASE_EXEMPTION' as const,
   CA_MB_FARMER_EXEMPTION: 'CA_MB_FARMER_EXEMPTION' as const,
   CA_NS_FARMER_EXEMPTION: 'CA_NS_FARMER_EXEMPTION' as const,
   CA_SK_FARMER_EXEMPTION: 'CA_SK_FARMER_EXEMPTION' as const,
   EU_REVERSE_CHARGE_EXEMPTION_RULE: 'EU_REVERSE_CHARGE_EXEMPTION_RULE' as const,
   US_AL_RESELLER_EXEMPTION: 'US_AL_RESELLER_EXEMPTION' as const,
   US_AK_RESELLER_EXEMPTION: 'US_AK_RESELLER_EXEMPTION' as const,
   US_AZ_RESELLER_EXEMPTION: 'US_AZ_RESELLER_EXEMPTION' as const,
   US_AR_RESELLER_EXEMPTION: 'US_AR_RESELLER_EXEMPTION' as const,
   US_CA_RESELLER_EXEMPTION: 'US_CA_RESELLER_EXEMPTION' as const,
   US_CO_RESELLER_EXEMPTION: 'US_CO_RESELLER_EXEMPTION' as const,
   US_CT_RESELLER_EXEMPTION: 'US_CT_RESELLER_EXEMPTION' as const,
   US_DE_RESELLER_EXEMPTION: 'US_DE_RESELLER_EXEMPTION' as const,
   US_FL_RESELLER_EXEMPTION: 'US_FL_RESELLER_EXEMPTION' as const,
   US_GA_RESELLER_EXEMPTION: 'US_GA_RESELLER_EXEMPTION' as const,
   US_HI_RESELLER_EXEMPTION: 'US_HI_RESELLER_EXEMPTION' as const,
   US_ID_RESELLER_EXEMPTION: 'US_ID_RESELLER_EXEMPTION' as const,
   US_IL_RESELLER_EXEMPTION: 'US_IL_RESELLER_EXEMPTION' as const,
   US_IN_RESELLER_EXEMPTION: 'US_IN_RESELLER_EXEMPTION' as const,
   US_IA_RESELLER_EXEMPTION: 'US_IA_RESELLER_EXEMPTION' as const,
   US_KS_RESELLER_EXEMPTION: 'US_KS_RESELLER_EXEMPTION' as const,
   US_KY_RESELLER_EXEMPTION: 'US_KY_RESELLER_EXEMPTION' as const,
   US_LA_RESELLER_EXEMPTION: 'US_LA_RESELLER_EXEMPTION' as const,
   US_ME_RESELLER_EXEMPTION: 'US_ME_RESELLER_EXEMPTION' as const,
   US_MD_RESELLER_EXEMPTION: 'US_MD_RESELLER_EXEMPTION' as const,
   US_MA_RESELLER_EXEMPTION: 'US_MA_RESELLER_EXEMPTION' as const,
   US_MI_RESELLER_EXEMPTION: 'US_MI_RESELLER_EXEMPTION' as const,
   US_MN_RESELLER_EXEMPTION: 'US_MN_RESELLER_EXEMPTION' as const,
   US_MS_RESELLER_EXEMPTION: 'US_MS_RESELLER_EXEMPTION' as const,
   US_MO_RESELLER_EXEMPTION: 'US_MO_RESELLER_EXEMPTION' as const,
   US_MT_RESELLER_EXEMPTION: 'US_MT_RESELLER_EXEMPTION' as const,
   US_NE_RESELLER_EXEMPTION: 'US_NE_RESELLER_EXEMPTION' as const,
   US_NV_RESELLER_EXEMPTION: 'US_NV_RESELLER_EXEMPTION' as const,
   US_NH_RESELLER_EXEMPTION: 'US_NH_RESELLER_EXEMPTION' as const,
   US_NJ_RESELLER_EXEMPTION: 'US_NJ_RESELLER_EXEMPTION' as const,
   US_NM_RESELLER_EXEMPTION: 'US_NM_RESELLER_EXEMPTION' as const,
   US_NY_RESELLER_EXEMPTION: 'US_NY_RESELLER_EXEMPTION' as const,
   US_NC_RESELLER_EXEMPTION: 'US_NC_RESELLER_EXEMPTION' as const,
   US_ND_RESELLER_EXEMPTION: 'US_ND_RESELLER_EXEMPTION' as const,
   US_OH_RESELLER_EXEMPTION: 'US_OH_RESELLER_EXEMPTION' as const,
   US_OK_RESELLER_EXEMPTION: 'US_OK_RESELLER_EXEMPTION' as const,
   US_OR_RESELLER_EXEMPTION: 'US_OR_RESELLER_EXEMPTION' as const,
   US_PA_RESELLER_EXEMPTION: 'US_PA_RESELLER_EXEMPTION' as const,
   US_RI_RESELLER_EXEMPTION: 'US_RI_RESELLER_EXEMPTION' as const,
   US_SC_RESELLER_EXEMPTION: 'US_SC_RESELLER_EXEMPTION' as const,
   US_SD_RESELLER_EXEMPTION: 'US_SD_RESELLER_EXEMPTION' as const,
   US_TN_RESELLER_EXEMPTION: 'US_TN_RESELLER_EXEMPTION' as const,
   US_TX_RESELLER_EXEMPTION: 'US_TX_RESELLER_EXEMPTION' as const,
   US_UT_RESELLER_EXEMPTION: 'US_UT_RESELLER_EXEMPTION' as const,
   US_VT_RESELLER_EXEMPTION: 'US_VT_RESELLER_EXEMPTION' as const,
   US_VA_RESELLER_EXEMPTION: 'US_VA_RESELLER_EXEMPTION' as const,
   US_WA_RESELLER_EXEMPTION: 'US_WA_RESELLER_EXEMPTION' as const,
   US_WV_RESELLER_EXEMPTION: 'US_WV_RESELLER_EXEMPTION' as const,
   US_WI_RESELLER_EXEMPTION: 'US_WI_RESELLER_EXEMPTION' as const,
   US_WY_RESELLER_EXEMPTION: 'US_WY_RESELLER_EXEMPTION' as const,
   US_DC_RESELLER_EXEMPTION: 'US_DC_RESELLER_EXEMPTION' as const
}

export const enumTaxPartnerState = {
   PENDING: 'PENDING' as const,
   READY: 'READY' as const,
   ACTIVE: 'ACTIVE' as const
}

export const enumTranslatableResourceType = {
   COLLECTION: 'COLLECTION' as const,
   DELIVERY_METHOD_DEFINITION: 'DELIVERY_METHOD_DEFINITION' as const,
   EMAIL_TEMPLATE: 'EMAIL_TEMPLATE' as const,
   FILTER: 'FILTER' as const,
   LINK: 'LINK' as const,
   METAFIELD: 'METAFIELD' as const,
   METAOBJECT: 'METAOBJECT' as const,
   ONLINE_STORE_ARTICLE: 'ONLINE_STORE_ARTICLE' as const,
   ONLINE_STORE_BLOG: 'ONLINE_STORE_BLOG' as const,
   ONLINE_STORE_MENU: 'ONLINE_STORE_MENU' as const,
   ONLINE_STORE_PAGE: 'ONLINE_STORE_PAGE' as const,
   ONLINE_STORE_THEME: 'ONLINE_STORE_THEME' as const,
   PACKING_SLIP_TEMPLATE: 'PACKING_SLIP_TEMPLATE' as const,
   PAYMENT_GATEWAY: 'PAYMENT_GATEWAY' as const,
   PRODUCT: 'PRODUCT' as const,
   PRODUCT_OPTION: 'PRODUCT_OPTION' as const,
   PRODUCT_VARIANT: 'PRODUCT_VARIANT' as const,
   SELLING_PLAN: 'SELLING_PLAN' as const,
   SELLING_PLAN_GROUP: 'SELLING_PLAN_GROUP' as const,
   SHOP: 'SHOP' as const,
   SHOP_POLICY: 'SHOP_POLICY' as const
}

export const enumTranslationErrorCode = {
   BLANK: 'BLANK' as const,
   INVALID: 'INVALID' as const,
   RESOURCE_NOT_FOUND: 'RESOURCE_NOT_FOUND' as const,
   RESOURCE_NOT_TRANSLATABLE: 'RESOURCE_NOT_TRANSLATABLE' as const,
   TOO_MANY_KEYS_FOR_RESOURCE: 'TOO_MANY_KEYS_FOR_RESOURCE' as const,
   INVALID_KEY_FOR_MODEL: 'INVALID_KEY_FOR_MODEL' as const,
   FAILS_RESOURCE_VALIDATION: 'FAILS_RESOURCE_VALIDATION' as const,
   INVALID_TRANSLATABLE_CONTENT: 'INVALID_TRANSLATABLE_CONTENT' as const,
   INVALID_MARKET_LOCALIZABLE_CONTENT: 'INVALID_MARKET_LOCALIZABLE_CONTENT' as const,
   INVALID_LOCALE_FOR_SHOP: 'INVALID_LOCALE_FOR_SHOP' as const,
   INVALID_CODE: 'INVALID_CODE' as const,
   INVALID_FORMAT: 'INVALID_FORMAT' as const,
   MARKET_CUSTOM_CONTENT_NOT_ALLOWED: 'MARKET_CUSTOM_CONTENT_NOT_ALLOWED' as const,
   MARKET_DOES_NOT_EXIST: 'MARKET_DOES_NOT_EXIST' as const,
   MARKET_LOCALE_CREATION_FAILED: 'MARKET_LOCALE_CREATION_FAILED' as const,
   RESOURCE_NOT_MARKET_CUSTOMIZABLE: 'RESOURCE_NOT_MARKET_CUSTOMIZABLE' as const,
   INVALID_LOCALE_FOR_MARKET: 'INVALID_LOCALE_FOR_MARKET' as const,
   INVALID_VALUE_FOR_HANDLE_TRANSLATION: 'INVALID_VALUE_FOR_HANDLE_TRANSLATION' as const
}

export const enumUnitSystem = {
   IMPERIAL_SYSTEM: 'IMPERIAL_SYSTEM' as const,
   METRIC_SYSTEM: 'METRIC_SYSTEM' as const
}

export const enumUrlRedirectBulkDeleteByIdsUserErrorCode = {
   IDS_EMPTY: 'IDS_EMPTY' as const
}

export const enumUrlRedirectBulkDeleteBySavedSearchUserErrorCode = {
   SAVED_SEARCH_NOT_FOUND: 'SAVED_SEARCH_NOT_FOUND' as const,
   INVALID_SAVED_SEARCH_QUERY: 'INVALID_SAVED_SEARCH_QUERY' as const
}

export const enumUrlRedirectBulkDeleteBySearchUserErrorCode = {
   INVALID_SEARCH_ARGUMENT: 'INVALID_SEARCH_ARGUMENT' as const
}

export const enumUrlRedirectErrorCode = {
   DOES_NOT_EXIST: 'DOES_NOT_EXIST' as const,
   CREATE_FAILED: 'CREATE_FAILED' as const,
   UPDATE_FAILED: 'UPDATE_FAILED' as const,
   DELETE_FAILED: 'DELETE_FAILED' as const
}

export const enumUrlRedirectImportErrorCode = {
   FILE_DOES_NOT_EXIST: 'FILE_DOES_NOT_EXIST' as const,
   NOT_FOUND: 'NOT_FOUND' as const,
   ALREADY_IMPORTED: 'ALREADY_IMPORTED' as const,
   IN_PROGRESS: 'IN_PROGRESS' as const
}

export const enumUrlRedirectSortKeys = {
   RELEVANCE: 'RELEVANCE' as const,
   PATH: 'PATH' as const,
   ID: 'ID' as const
}

export const enumVisualizationType = {
   LINE: 'LINE' as const,
   BAR: 'BAR' as const
}

export const enumWebhookSubscriptionFormat = {
   JSON: 'JSON' as const,
   XML: 'XML' as const
}

export const enumWebhookSubscriptionSortKeys = {
   CREATED_AT: 'CREATED_AT' as const,
   ID: 'ID' as const,
   RELEVANCE: 'RELEVANCE' as const
}

export const enumWebhookSubscriptionTopic = {
   APP_UNINSTALLED: 'APP_UNINSTALLED' as const,
   CARTS_CREATE: 'CARTS_CREATE' as const,
   CARTS_UPDATE: 'CARTS_UPDATE' as const,
   CHANNELS_DELETE: 'CHANNELS_DELETE' as const,
   CHECKOUTS_CREATE: 'CHECKOUTS_CREATE' as const,
   CHECKOUTS_DELETE: 'CHECKOUTS_DELETE' as const,
   CHECKOUTS_UPDATE: 'CHECKOUTS_UPDATE' as const,
   CUSTOMER_PAYMENT_METHODS_CREATE: 'CUSTOMER_PAYMENT_METHODS_CREATE' as const,
   CUSTOMER_PAYMENT_METHODS_UPDATE: 'CUSTOMER_PAYMENT_METHODS_UPDATE' as const,
   CUSTOMER_PAYMENT_METHODS_REVOKE: 'CUSTOMER_PAYMENT_METHODS_REVOKE' as const,
   COLLECTION_LISTINGS_ADD: 'COLLECTION_LISTINGS_ADD' as const,
   COLLECTION_LISTINGS_REMOVE: 'COLLECTION_LISTINGS_REMOVE' as const,
   COLLECTION_LISTINGS_UPDATE: 'COLLECTION_LISTINGS_UPDATE' as const,
   COLLECTION_PUBLICATIONS_CREATE: 'COLLECTION_PUBLICATIONS_CREATE' as const,
   COLLECTION_PUBLICATIONS_DELETE: 'COLLECTION_PUBLICATIONS_DELETE' as const,
   COLLECTION_PUBLICATIONS_UPDATE: 'COLLECTION_PUBLICATIONS_UPDATE' as const,
   COLLECTIONS_CREATE: 'COLLECTIONS_CREATE' as const,
   COLLECTIONS_DELETE: 'COLLECTIONS_DELETE' as const,
   COLLECTIONS_UPDATE: 'COLLECTIONS_UPDATE' as const,
   CUSTOMER_GROUPS_CREATE: 'CUSTOMER_GROUPS_CREATE' as const,
   CUSTOMER_GROUPS_DELETE: 'CUSTOMER_GROUPS_DELETE' as const,
   CUSTOMER_GROUPS_UPDATE: 'CUSTOMER_GROUPS_UPDATE' as const,
   CUSTOMERS_CREATE: 'CUSTOMERS_CREATE' as const,
   CUSTOMERS_DELETE: 'CUSTOMERS_DELETE' as const,
   CUSTOMERS_DISABLE: 'CUSTOMERS_DISABLE' as const,
   CUSTOMERS_ENABLE: 'CUSTOMERS_ENABLE' as const,
   CUSTOMERS_UPDATE: 'CUSTOMERS_UPDATE' as const,
   CUSTOMERS_MARKETING_CONSENT_UPDATE: 'CUSTOMERS_MARKETING_CONSENT_UPDATE' as const,
   CUSTOMER_TAGS_ADDED: 'CUSTOMER_TAGS_ADDED' as const,
   CUSTOMER_TAGS_REMOVED: 'CUSTOMER_TAGS_REMOVED' as const,
   CUSTOMERS_EMAIL_MARKETING_CONSENT_UPDATE: 'CUSTOMERS_EMAIL_MARKETING_CONSENT_UPDATE' as const,
   DISPUTES_CREATE: 'DISPUTES_CREATE' as const,
   DISPUTES_UPDATE: 'DISPUTES_UPDATE' as const,
   DRAFT_ORDERS_CREATE: 'DRAFT_ORDERS_CREATE' as const,
   DRAFT_ORDERS_DELETE: 'DRAFT_ORDERS_DELETE' as const,
   DRAFT_ORDERS_UPDATE: 'DRAFT_ORDERS_UPDATE' as const,
   FULFILLMENT_EVENTS_CREATE: 'FULFILLMENT_EVENTS_CREATE' as const,
   FULFILLMENT_EVENTS_DELETE: 'FULFILLMENT_EVENTS_DELETE' as const,
   FULFILLMENTS_CREATE: 'FULFILLMENTS_CREATE' as const,
   FULFILLMENTS_UPDATE: 'FULFILLMENTS_UPDATE' as const,
   ATTRIBUTED_SESSIONS_FIRST: 'ATTRIBUTED_SESSIONS_FIRST' as const,
   ATTRIBUTED_SESSIONS_LAST: 'ATTRIBUTED_SESSIONS_LAST' as const,
   ORDER_TRANSACTIONS_CREATE: 'ORDER_TRANSACTIONS_CREATE' as const,
   ORDERS_CANCELLED: 'ORDERS_CANCELLED' as const,
   ORDERS_CREATE: 'ORDERS_CREATE' as const,
   ORDERS_DELETE: 'ORDERS_DELETE' as const,
   ORDERS_EDITED: 'ORDERS_EDITED' as const,
   ORDERS_FULFILLED: 'ORDERS_FULFILLED' as const,
   ORDERS_PAID: 'ORDERS_PAID' as const,
   ORDERS_PARTIALLY_FULFILLED: 'ORDERS_PARTIALLY_FULFILLED' as const,
   ORDERS_UPDATED: 'ORDERS_UPDATED' as const,
   FULFILLMENT_ORDERS_MOVED: 'FULFILLMENT_ORDERS_MOVED' as const,
   FULFILLMENT_ORDERS_HOLD_RELEASED: 'FULFILLMENT_ORDERS_HOLD_RELEASED' as const,
   FULFILLMENT_ORDERS_SCHEDULED_FULFILLMENT_ORDER_READY: 'FULFILLMENT_ORDERS_SCHEDULED_FULFILLMENT_ORDER_READY' as const,
   FULFILLMENT_ORDERS_ORDER_ROUTING_COMPLETE: 'FULFILLMENT_ORDERS_ORDER_ROUTING_COMPLETE' as const,
   FULFILLMENT_ORDERS_CANCELLED: 'FULFILLMENT_ORDERS_CANCELLED' as const,
   FULFILLMENT_ORDERS_FULFILLMENT_SERVICE_FAILED_TO_COMPLETE: 'FULFILLMENT_ORDERS_FULFILLMENT_SERVICE_FAILED_TO_COMPLETE' as const,
   FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_REJECTED: 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_REJECTED' as const,
   FULFILLMENT_ORDERS_CANCELLATION_REQUEST_SUBMITTED: 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_SUBMITTED' as const,
   FULFILLMENT_ORDERS_CANCELLATION_REQUEST_ACCEPTED: 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_ACCEPTED' as const,
   FULFILLMENT_ORDERS_CANCELLATION_REQUEST_REJECTED: 'FULFILLMENT_ORDERS_CANCELLATION_REQUEST_REJECTED' as const,
   FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_SUBMITTED: 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_SUBMITTED' as const,
   FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_ACCEPTED: 'FULFILLMENT_ORDERS_FULFILLMENT_REQUEST_ACCEPTED' as const,
   FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_LOCAL_DELIVERY: 'FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_LOCAL_DELIVERY' as const,
   FULFILLMENT_ORDERS_PLACED_ON_HOLD: 'FULFILLMENT_ORDERS_PLACED_ON_HOLD' as const,
   PRODUCT_LISTINGS_ADD: 'PRODUCT_LISTINGS_ADD' as const,
   PRODUCT_LISTINGS_REMOVE: 'PRODUCT_LISTINGS_REMOVE' as const,
   PRODUCT_LISTINGS_UPDATE: 'PRODUCT_LISTINGS_UPDATE' as const,
   SCHEDULED_PRODUCT_LISTINGS_ADD: 'SCHEDULED_PRODUCT_LISTINGS_ADD' as const,
   SCHEDULED_PRODUCT_LISTINGS_UPDATE: 'SCHEDULED_PRODUCT_LISTINGS_UPDATE' as const,
   SCHEDULED_PRODUCT_LISTINGS_REMOVE: 'SCHEDULED_PRODUCT_LISTINGS_REMOVE' as const,
   PRODUCT_PUBLICATIONS_CREATE: 'PRODUCT_PUBLICATIONS_CREATE' as const,
   PRODUCT_PUBLICATIONS_DELETE: 'PRODUCT_PUBLICATIONS_DELETE' as const,
   PRODUCT_PUBLICATIONS_UPDATE: 'PRODUCT_PUBLICATIONS_UPDATE' as const,
   PRODUCTS_CREATE: 'PRODUCTS_CREATE' as const,
   PRODUCTS_DELETE: 'PRODUCTS_DELETE' as const,
   PRODUCTS_UPDATE: 'PRODUCTS_UPDATE' as const,
   REFUNDS_CREATE: 'REFUNDS_CREATE' as const,
   SEGMENTS_CREATE: 'SEGMENTS_CREATE' as const,
   SEGMENTS_DELETE: 'SEGMENTS_DELETE' as const,
   SEGMENTS_UPDATE: 'SEGMENTS_UPDATE' as const,
   SHIPPING_ADDRESSES_CREATE: 'SHIPPING_ADDRESSES_CREATE' as const,
   SHIPPING_ADDRESSES_UPDATE: 'SHIPPING_ADDRESSES_UPDATE' as const,
   SHOP_UPDATE: 'SHOP_UPDATE' as const,
   TAX_PARTNERS_UPDATE: 'TAX_PARTNERS_UPDATE' as const,
   TAX_SERVICES_CREATE: 'TAX_SERVICES_CREATE' as const,
   TAX_SERVICES_UPDATE: 'TAX_SERVICES_UPDATE' as const,
   THEMES_CREATE: 'THEMES_CREATE' as const,
   THEMES_DELETE: 'THEMES_DELETE' as const,
   THEMES_PUBLISH: 'THEMES_PUBLISH' as const,
   THEMES_UPDATE: 'THEMES_UPDATE' as const,
   VARIANTS_IN_STOCK: 'VARIANTS_IN_STOCK' as const,
   VARIANTS_OUT_OF_STOCK: 'VARIANTS_OUT_OF_STOCK' as const,
   INVENTORY_LEVELS_CONNECT: 'INVENTORY_LEVELS_CONNECT' as const,
   INVENTORY_LEVELS_UPDATE: 'INVENTORY_LEVELS_UPDATE' as const,
   INVENTORY_LEVELS_DISCONNECT: 'INVENTORY_LEVELS_DISCONNECT' as const,
   INVENTORY_ITEMS_CREATE: 'INVENTORY_ITEMS_CREATE' as const,
   INVENTORY_ITEMS_UPDATE: 'INVENTORY_ITEMS_UPDATE' as const,
   INVENTORY_ITEMS_DELETE: 'INVENTORY_ITEMS_DELETE' as const,
   LOCATIONS_ACTIVATE: 'LOCATIONS_ACTIVATE' as const,
   LOCATIONS_DEACTIVATE: 'LOCATIONS_DEACTIVATE' as const,
   LOCATIONS_CREATE: 'LOCATIONS_CREATE' as const,
   LOCATIONS_UPDATE: 'LOCATIONS_UPDATE' as const,
   LOCATIONS_DELETE: 'LOCATIONS_DELETE' as const,
   TENDER_TRANSACTIONS_CREATE: 'TENDER_TRANSACTIONS_CREATE' as const,
   APP_PURCHASES_ONE_TIME_UPDATE: 'APP_PURCHASES_ONE_TIME_UPDATE' as const,
   APP_SUBSCRIPTIONS_APPROACHING_CAPPED_AMOUNT: 'APP_SUBSCRIPTIONS_APPROACHING_CAPPED_AMOUNT' as const,
   APP_SUBSCRIPTIONS_UPDATE: 'APP_SUBSCRIPTIONS_UPDATE' as const,
   LOCALES_CREATE: 'LOCALES_CREATE' as const,
   LOCALES_UPDATE: 'LOCALES_UPDATE' as const,
   DOMAINS_CREATE: 'DOMAINS_CREATE' as const,
   DOMAINS_UPDATE: 'DOMAINS_UPDATE' as const,
   DOMAINS_DESTROY: 'DOMAINS_DESTROY' as const,
   SUBSCRIPTION_CONTRACTS_CREATE: 'SUBSCRIPTION_CONTRACTS_CREATE' as const,
   SUBSCRIPTION_CONTRACTS_UPDATE: 'SUBSCRIPTION_CONTRACTS_UPDATE' as const,
   SUBSCRIPTION_BILLING_CYCLE_EDITS_CREATE: 'SUBSCRIPTION_BILLING_CYCLE_EDITS_CREATE' as const,
   SUBSCRIPTION_BILLING_CYCLE_EDITS_UPDATE: 'SUBSCRIPTION_BILLING_CYCLE_EDITS_UPDATE' as const,
   SUBSCRIPTION_BILLING_CYCLE_EDITS_DELETE: 'SUBSCRIPTION_BILLING_CYCLE_EDITS_DELETE' as const,
   PROFILES_CREATE: 'PROFILES_CREATE' as const,
   PROFILES_UPDATE: 'PROFILES_UPDATE' as const,
   PROFILES_DELETE: 'PROFILES_DELETE' as const,
   SUBSCRIPTION_BILLING_ATTEMPTS_SUCCESS: 'SUBSCRIPTION_BILLING_ATTEMPTS_SUCCESS' as const,
   SUBSCRIPTION_BILLING_ATTEMPTS_FAILURE: 'SUBSCRIPTION_BILLING_ATTEMPTS_FAILURE' as const,
   SUBSCRIPTION_BILLING_ATTEMPTS_CHALLENGED: 'SUBSCRIPTION_BILLING_ATTEMPTS_CHALLENGED' as const,
   RETURNS_CANCEL: 'RETURNS_CANCEL' as const,
   RETURNS_CLOSE: 'RETURNS_CLOSE' as const,
   RETURNS_REOPEN: 'RETURNS_REOPEN' as const,
   RETURNS_REQUEST: 'RETURNS_REQUEST' as const,
   RETURNS_APPROVE: 'RETURNS_APPROVE' as const,
   RETURNS_DECLINE: 'RETURNS_DECLINE' as const,
   REVERSE_DELIVERIES_ATTACH_DELIVERABLE: 'REVERSE_DELIVERIES_ATTACH_DELIVERABLE' as const,
   REVERSE_FULFILLMENT_ORDERS_DISPOSE: 'REVERSE_FULFILLMENT_ORDERS_DISPOSE' as const,
   PAYMENT_TERMS_CREATE: 'PAYMENT_TERMS_CREATE' as const,
   PAYMENT_TERMS_DELETE: 'PAYMENT_TERMS_DELETE' as const,
   PAYMENT_TERMS_UPDATE: 'PAYMENT_TERMS_UPDATE' as const,
   PAYMENT_SCHEDULES_DUE: 'PAYMENT_SCHEDULES_DUE' as const,
   SELLING_PLAN_GROUPS_CREATE: 'SELLING_PLAN_GROUPS_CREATE' as const,
   SELLING_PLAN_GROUPS_UPDATE: 'SELLING_PLAN_GROUPS_UPDATE' as const,
   SELLING_PLAN_GROUPS_DELETE: 'SELLING_PLAN_GROUPS_DELETE' as const,
   BULK_OPERATIONS_FINISH: 'BULK_OPERATIONS_FINISH' as const,
   PRODUCT_FEEDS_CREATE: 'PRODUCT_FEEDS_CREATE' as const,
   PRODUCT_FEEDS_UPDATE: 'PRODUCT_FEEDS_UPDATE' as const,
   PRODUCT_FEEDS_INCREMENTAL_SYNC: 'PRODUCT_FEEDS_INCREMENTAL_SYNC' as const,
   PRODUCT_FEEDS_FULL_SYNC: 'PRODUCT_FEEDS_FULL_SYNC' as const,
   MARKETS_CREATE: 'MARKETS_CREATE' as const,
   MARKETS_UPDATE: 'MARKETS_UPDATE' as const,
   MARKETS_DELETE: 'MARKETS_DELETE' as const,
   FULFILLMENT_ORDERS_RESCHEDULED: 'FULFILLMENT_ORDERS_RESCHEDULED' as const,
   AUDIT_EVENTS_ADMIN_API_ACTIVITY: 'AUDIT_EVENTS_ADMIN_API_ACTIVITY' as const,
   FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_PICKUP: 'FULFILLMENT_ORDERS_LINE_ITEMS_PREPARED_FOR_PICKUP' as const,
   COMPANIES_CREATE: 'COMPANIES_CREATE' as const,
   COMPANIES_UPDATE: 'COMPANIES_UPDATE' as const,
   COMPANIES_DELETE: 'COMPANIES_DELETE' as const,
   COMPANY_LOCATIONS_CREATE: 'COMPANY_LOCATIONS_CREATE' as const,
   COMPANY_LOCATIONS_UPDATE: 'COMPANY_LOCATIONS_UPDATE' as const,
   COMPANY_LOCATIONS_DELETE: 'COMPANY_LOCATIONS_DELETE' as const,
   COMPANY_CONTACTS_CREATE: 'COMPANY_CONTACTS_CREATE' as const,
   COMPANY_CONTACTS_UPDATE: 'COMPANY_CONTACTS_UPDATE' as const,
   COMPANY_CONTACTS_DELETE: 'COMPANY_CONTACTS_DELETE' as const,
   CUSTOMERS_MERGE: 'CUSTOMERS_MERGE' as const,
   COMPANY_CONTACT_ROLES_ASSIGN: 'COMPANY_CONTACT_ROLES_ASSIGN' as const,
   COMPANY_CONTACT_ROLES_REVOKE: 'COMPANY_CONTACT_ROLES_REVOKE' as const
}

export const enumWeightUnit = {
   KILOGRAMS: 'KILOGRAMS' as const,
   GRAMS: 'GRAMS' as const,
   POUNDS: 'POUNDS' as const,
   OUNCES: 'OUNCES' as const
}
